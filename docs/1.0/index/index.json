{"interfaceLanguages":{"swift":[{"children":[{"title":"User Guides","type":"groupMarker"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequestdecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: HBRequest) throws -> T","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequestdecoder","title":"HBRequestDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponseencoder\/encode(_:from:)","title":"func encode<T>(T, from: HBRequest) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponseencoder","title":"HBResponseEncoder","type":"protocol"}],"path":"\/documentation\/hummingbird\/encodinganddecoding","title":"Encoding and Decoding","type":"symbol"},{"path":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","type":"article"},{"path":"\/documentation\/hummingbird\/extendinghummingbird","title":"Extending Hummingbird","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hblogrequestsmiddleware\/init(_:includeheaders:)","title":"init(Logger.Level, includeHeaders: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hblogrequestsmiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hblogrequestsmiddleware","title":"HBLogRequestsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmetricsmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmetricsmiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbmetricsmiddleware","title":"HBMetricsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbtracingmiddleware\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbtracingmiddleware\/init(recordingheaders:)","title":"init<C>(recordingHeaders: C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbtracingmiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbtracingmiddleware","title":"HBTracingMiddleware","type":"struct"}],"path":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/create(key:value:expires:request:)-3m0mo","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"children":[{"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/get(key:as:request:)-75a9i","title":"func get<Object>(key: String, as: Object.Type, request: HBRequest) -> EventLoopFuture<Object?>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/remove(key:request:)-4ypic","title":"func remove(key: String, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/remove(key:request:)-4ypic","title":"func remove(key: String, request: HBRequest) async throws","type":"method"}],"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/remove(key:request:)-8qc2n","title":"func remove(key: String, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/set(key:value:expires:request:)-9yq7y","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/set(key:value:expires:request:)-9yq7y","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"}],"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/set(key:value:expires:request:)-2nhv","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"children":[{"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/shutdown()-8gjyt","title":"func shutdown()","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver","title":"HBPersistDriver","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/init(create:)","title":"init(create: (HBApplication) -> HBPersistDriver)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/create","title":"let create: (HBApplication) -> HBPersistDriver","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/fluent","title":"static var fluent: HBPersistDriverFactory","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/memory","title":"static var memory: HBPersistDriverFactory","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/redis","title":"static var redis: HBPersistDriverFactory","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/fluent(_:)","title":"static func fluent(DatabaseID?) -> HBPersistDriverFactory","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/redis(id:)","title":"static func redis(id: RedisConnectionPoolGroupIdentifier) -> HBPersistDriverFactory","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory","title":"HBPersistDriverFactory","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror","title":"HBPersistError","type":"struct"}],"path":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/middlewares","title":"let middlewares: HBMiddlewareGroup","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/add(_:method:responder:)","title":"func add(String, method: HTTPMethod, responder: HBResponder)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/buildrouter()","title":"func buildRouter() -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/group(_:)","title":"func group(String) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-3277t","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-4t19t","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-2ae9a","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-3kd25","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-3vv1c","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-8lcdc","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-piwf","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-326e5","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-33vun","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-3e4ny","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-3gdk9","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-96ynq","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-1jf15","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-1jgko","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-1m180","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-2bsdv","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-6f85h","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-5n2kl","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-mr5j","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-17vf1","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-2tvuv","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-30xlk","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-3u9o4","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-71l1s","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-1qeef","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-1uvzy","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-3rhz5","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-4lh1p","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-6m3su","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-1xu68","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-3dtts","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-3oy8p","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-6a3o8","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-71xiv","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/constructresponder(options:use:)-2abjy","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/constructresponder(options:use:)-6h5kd","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/constructresponder(options:use:)-9eh84","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBResponder","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder","title":"HBRouterBuilder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/add(middleware:)","title":"func add(middleware: HBMiddleware) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/group(_:)","title":"func group(String) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-3r0lk","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-xc8l","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBRouterGroup","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-5jdiw","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-5jwwc","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-7pg7u","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-f89z","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-n1cp","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-3adx0","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-5qsft","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-7ndj6","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-84ds1","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-8oipj","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-2i944","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-53c7j","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-5vf11","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-71h8s","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-9x2yc","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-2628e","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-6azj7","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-2wf6k","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-4s93j","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-5rw5v","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-90zht","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-9q0ya","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-15kto","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-1yp8y","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-2yre8","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-3i1g2","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-723ko","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-197sx","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-3wqre","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-4hu0l","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-74fg9","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-s9l","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/constructresponder(options:use:)-2c9zb","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/constructresponder(options:use:)-3igox","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/constructresponder(options:use:)-61uaq","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBResponder","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup","title":"HBRouterGroup","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-3ic9o","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-5gzcx","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-5x22s","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-74uf8","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-8gurb","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-3kg91","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-50wai","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-7g21","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-86u5y","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-9jm74","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/group(_:)","title":"func group(String) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-40dtg","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-7niyc","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-88cag","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-9x5r8","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-ds6","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-q9gs","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-q9gs","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"}],"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-3uco","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-q9gs","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-q9gs","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"}],"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-4r81r","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"children":[{"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-6fajk","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-12p1l","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-3gi4u","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-5qglv","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-663sj","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-we6j","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-16d3s","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-3y1zn","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-75fgq","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-7ntwy","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-92rp","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-28ous","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-49wvb","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-549yy","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-5hceh","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-97j9q","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/constructresponder(options:use:)-3kmxy","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/constructresponder(options:use:)-69xk3","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/constructresponder(options:use:)-lhp0","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBResponder","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods","title":"HBRouterMethods","type":"protocol"}],"path":"\/documentation\/hummingbird\/router","title":"Router","type":"symbol"}],"path":"\/documentation\/index","title":"Hummingbird","type":"module"},{"children":[{"title":"Articles","type":"groupMarker"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequestdecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: HBRequest) throws -> T","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequestdecoder","title":"HBRequestDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponseencoder\/encode(_:from:)","title":"func encode<T>(T, from: HBRequest) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponseencoder","title":"HBResponseEncoder","type":"protocol"}],"path":"\/documentation\/hummingbird\/encodinganddecoding","title":"Encoding and Decoding","type":"symbol"},{"path":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","type":"article"},{"path":"\/documentation\/hummingbird\/extendinghummingbird","title":"Extending Hummingbird","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hblogrequestsmiddleware\/init(_:includeheaders:)","title":"init(Logger.Level, includeHeaders: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hblogrequestsmiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hblogrequestsmiddleware","title":"HBLogRequestsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmetricsmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmetricsmiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbmetricsmiddleware","title":"HBMetricsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbtracingmiddleware\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbtracingmiddleware\/init(recordingheaders:)","title":"init<C>(recordingHeaders: C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbtracingmiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbtracingmiddleware","title":"HBTracingMiddleware","type":"struct"}],"path":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/create(key:value:expires:request:)-3m0mo","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"children":[{"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/get(key:as:request:)-75a9i","title":"func get<Object>(key: String, as: Object.Type, request: HBRequest) -> EventLoopFuture<Object?>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/remove(key:request:)-4ypic","title":"func remove(key: String, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/remove(key:request:)-4ypic","title":"func remove(key: String, request: HBRequest) async throws","type":"method"}],"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/remove(key:request:)-8qc2n","title":"func remove(key: String, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/set(key:value:expires:request:)-9yq7y","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/set(key:value:expires:request:)-9yq7y","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"}],"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/set(key:value:expires:request:)-2nhv","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"children":[{"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/shutdown()-8gjyt","title":"func shutdown()","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver","title":"HBPersistDriver","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/init(create:)","title":"init(create: (HBApplication) -> HBPersistDriver)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/create","title":"let create: (HBApplication) -> HBPersistDriver","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/fluent","title":"static var fluent: HBPersistDriverFactory","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/memory","title":"static var memory: HBPersistDriverFactory","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/redis","title":"static var redis: HBPersistDriverFactory","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/fluent(_:)","title":"static func fluent(DatabaseID?) -> HBPersistDriverFactory","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/redis(id:)","title":"static func redis(id: RedisConnectionPoolGroupIdentifier) -> HBPersistDriverFactory","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory","title":"HBPersistDriverFactory","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror","title":"HBPersistError","type":"struct"}],"path":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/middlewares","title":"let middlewares: HBMiddlewareGroup","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/add(_:method:responder:)","title":"func add(String, method: HTTPMethod, responder: HBResponder)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/buildrouter()","title":"func buildRouter() -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/group(_:)","title":"func group(String) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-3277t","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-4t19t","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-2ae9a","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-3kd25","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-3vv1c","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-8lcdc","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-piwf","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-326e5","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-33vun","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-3e4ny","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-3gdk9","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-96ynq","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-1jf15","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-1jgko","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-1m180","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-2bsdv","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-6f85h","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-5n2kl","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-mr5j","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-17vf1","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-2tvuv","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-30xlk","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-3u9o4","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-71l1s","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-1qeef","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-1uvzy","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-3rhz5","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-4lh1p","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-6m3su","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-1xu68","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-3dtts","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-3oy8p","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-6a3o8","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-71xiv","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/constructresponder(options:use:)-2abjy","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/constructresponder(options:use:)-6h5kd","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/constructresponder(options:use:)-9eh84","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBResponder","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder","title":"HBRouterBuilder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/add(middleware:)","title":"func add(middleware: HBMiddleware) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/group(_:)","title":"func group(String) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-3r0lk","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-xc8l","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBRouterGroup","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-5jdiw","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-5jwwc","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-7pg7u","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-f89z","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-n1cp","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-3adx0","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-5qsft","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-7ndj6","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-84ds1","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-8oipj","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-2i944","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-53c7j","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-5vf11","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-71h8s","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-9x2yc","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-2628e","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-6azj7","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-2wf6k","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-4s93j","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-5rw5v","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-90zht","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-9q0ya","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-15kto","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-1yp8y","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-2yre8","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-3i1g2","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-723ko","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-197sx","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-3wqre","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-4hu0l","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-74fg9","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-s9l","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/constructresponder(options:use:)-2c9zb","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/constructresponder(options:use:)-3igox","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/constructresponder(options:use:)-61uaq","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBResponder","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup","title":"HBRouterGroup","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-3ic9o","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-5gzcx","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-5x22s","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-74uf8","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-8gurb","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-3kg91","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-50wai","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-7g21","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-86u5y","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-9jm74","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/group(_:)","title":"func group(String) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-40dtg","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-7niyc","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-88cag","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-9x5r8","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-ds6","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-q9gs","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-q9gs","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"}],"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-3uco","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"children":[{"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-4r81r","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"children":[{"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-6fajk","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-12p1l","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-3gi4u","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-5qglv","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-663sj","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-we6j","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-16d3s","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-3y1zn","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-75fgq","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-7ntwy","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-92rp","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-28ous","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-49wvb","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-549yy","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-5hceh","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-97j9q","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/constructresponder(options:use:)-3kmxy","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/constructresponder(options:use:)-69xk3","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/constructresponder(options:use:)-lhp0","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBResponder","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods","title":"HBRouterMethods","type":"protocol"}],"path":"\/documentation\/hummingbird\/router","title":"Router","type":"symbol"},{"title":"Application","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/jobqueuehandler\/queue","title":"var queue: HBJobQueue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/jobqueuehandler\/queues(_:)","title":"func queues(QueueKey) -> HBJobQueue","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/jobqueuehandler\/registerqueue(_:queue:numworkers:)","title":"func registerQueue(QueueKey, queue: HBJobQueueFactory, numWorkers: Int)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/jobqueuehandler\/queuekey","title":"HBApplication.JobQueueHandler.QueueKey","type":"typealias"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/jobqueuehandler","title":"HBApplication.JobQueueHandler","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/init(address:servername:maxuploadsize:maxstreameduploadsize:maxstreamingbuffersize:backlog:reuseaddress:tcpnodelay:enablehttppipelining:idletimeoutconfiguration:threadpoolsize:loglevel:nohttpserver:)","title":"init(address: HBBindAddress, serverName: String?, maxUploadSize: Int, maxStreamedUploadSize: Int, maxStreamingBufferSize: Int, backlog: Int, reuseAddress: Bool, tcpNoDelay: Bool, enableHttpPipelining: Bool, idleTimeoutConfiguration: HBHTTPServer.IdleStateHandlerConfiguration?, threadPoolSize: Int, logLevel: Logger.Level?, noHTTPServer: Bool)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/init(address:servername:maxuploadsize:maxstreamingbuffersize:backlog:reuseaddress:tcpnodelay:enablehttppipelining:idletimeoutconfiguration:threadpoolsize:loglevel:nohttpserver:)","title":"init(address: HBBindAddress, serverName: String?, maxUploadSize: Int, maxStreamingBufferSize: Int, backlog: Int, reuseAddress: Bool, tcpNoDelay: Bool, enableHttpPipelining: Bool, idleTimeoutConfiguration: HBHTTPServer.IdleStateHandlerConfiguration?, threadPoolSize: Int, logLevel: Logger.Level?, noHTTPServer: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/address","title":"let address: HBBindAddress","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/backlog","title":"let backlog: Int","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/enablehttppipelining","title":"let enableHttpPipelining: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/idletimeoutconfiguration","title":"let idleTimeoutConfiguration: HBHTTPServer.IdleStateHandlerConfiguration?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/loglevel","title":"let logLevel: Logger.Level","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/maxstreameduploadsize","title":"let maxStreamedUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/maxstreamingbuffersize","title":"let maxStreamingBufferSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/maxuploadsize","title":"let maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/nohttpserver","title":"let noHTTPServer: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/reuseaddress","title":"let reuseAddress: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/servername","title":"let serverName: String?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/tcpnodelay","title":"let tcpNoDelay: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/threadpoolsize","title":"let threadPoolSize: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct\/with(address:servername:maxuploadsize:maxstreamingbuffersize:backlog:reuseaddress:tcpnodelay:enablehttppipelining:idletimeoutconfiguration:threadpoolsize:loglevel:)","title":"func with(address: HBBindAddress?, serverName: String?, maxUploadSize: Int?, maxStreamingBufferSize: Int?, backlog: Int?, reuseAddress: Bool?, tcpNoDelay: Bool?, enableHttpPipelining: Bool?, idleTimeoutConfiguration: HBHTTPServer.IdleStateHandlerConfiguration?, threadPoolSize: Int?, logLevel: Logger.Level?) -> HBApplication.Configuration","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.struct","title":"HBApplication.Configuration","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/eventloopgroupprovider\/singleton","title":"static var singleton: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/eventloopgroupprovider\/shared(_:)","title":"static func shared(EventLoopGroup) -> HBApplication.EventLoopGroupProvider","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/eventloopgroupprovider","title":"HBApplication.EventLoopGroupProvider","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/httpresponder\/init(application:)","title":"init(application: HBApplication)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/httpresponder\/logger","title":"var logger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/httpresponder\/respond(to:context:oncomplete:)","title":"func respond(to: HBHTTPRequest, context: ChannelHandlerContext, onComplete: (Result<HBHTTPResponse, Error>) -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/httpresponder\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/httpresponder\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/httpresponder\/hbhttpresponder-implementations","title":"HBHTTPResponder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/httpresponder","title":"HBApplication.HTTPResponder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/persist-swift.struct\/init(_:application:)","title":"init(HBPersistDriverFactory, application: HBApplication)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/persist-swift.struct\/driver","title":"let driver: HBPersistDriver","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/persist-swift.struct","title":"HBApplication.Persist","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-8fsw8","title":"init(configuration: HBApplication.Configuration, eventLoopGroupProvider: NIOEventLoopGroupProvider, serviceLifecycleProvider: ServiceLifecycleProvider)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-9vwer","title":"init(configuration: HBApplication.Configuration, eventLoopGroupProvider: EventLoopGroupProvider, serviceLifecycleProvider: ServiceLifecycleProvider)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/init(testing:configuration:timeout:)","title":"init(testing: XCTTestingSetup, configuration: HBApplication.Configuration, timeout: TimeAmount)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/configuration-swift.property","title":"var configuration: Configuration","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/db","title":"var db: Database","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/decoder","title":"var decoder: HBRequestDecoder","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/encoder","title":"var encoder: HBResponseEncoder","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/eventloopgroup","title":"let eventLoopGroup: EventLoopGroup","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/extensions","title":"var extensions: HBExtensions<HBApplication>","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/fluent","title":"var fluent: HBFluent","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/jobs","title":"var jobs: JobQueueHandler","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/lifecycle","title":"let lifecycle: ServiceLifecycle","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/middleware","title":"var middleware: HBMiddlewareGroup","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/persist-swift.property","title":"var persist: Persist","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/redis","title":"var redis: RedisConnectionPoolGroup","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/redisconnectionpools","title":"var redisConnectionPools: RedisConnectionPoolGroupArray","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/router","title":"var router: HBRouterBuilder","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/server","title":"var server: HBHTTPServer","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/sessionstorage","title":"var sessionStorage: Persist","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/threadpool","title":"let threadPool: NIOThreadPool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/ws","title":"var ws: HBWebSocketBuilder","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/xct","title":"var xct: HBXCT","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/xctexecute(uri:method:headers:body:testcallback:)","title":"func XCTExecute<Return>(uri: String, method: HTTPMethod, headers: HTTPHeaders, body: ByteBuffer?, testCallback: (HBXCTResponse) throws -> Return) throws -> Return","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/xctstart()","title":"func XCTStart() throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/xctstop()","title":"func XCTStop()","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/addfluent()","title":"func addFluent()","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/addjobs(using:numworkers:)","title":"func addJobs(using: HBJobQueueFactory, numWorkers: Int)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/addpersist(using:)","title":"func addPersist(using: HBPersistDriverFactory)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/addredis(configuration:)","title":"func addRedis(configuration: HBRedisConfiguration)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/addredis(id:configuration:)","title":"func addRedis(id: RedisConnectionPoolGroupIdentifier, configuration: HBRedisConfiguration)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/addrequestdecompression(execute:limit:)","title":"func addRequestDecompression(execute: RequestCompressionExecutionPreference, limit: HTTPDecompressionLimit)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/addresponsecompression(execute:)","title":"func addResponseCompression(execute: ResponseCompressionExecutionPreference)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/addsessions(sessionid:)","title":"func addSessions(sessionID: SessionManager.SessionIDStorage)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/addsessions(using:sessionid:)","title":"func addSessions(using: HBPersistDriverFactory, sessionID: SessionManager.SessionIDStorage)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/asyncrun()","title":"func asyncRun() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/asyncwait()","title":"func asyncWait() async","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/constructresponder()","title":"func constructResponder() -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/db(_:)","title":"func db(DatabaseID?) -> Database","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/redis(id:)","title":"func redis(id: RedisConnectionPoolGroupIdentifier) -> RedisConnectionPoolGroup?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/run()","title":"func run() throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/shutdownapplication()","title":"func shutdownApplication() throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/start()","title":"func start() throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/stop()","title":"func stop()","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/wait()","title":"func wait()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/requestcompressionexecutionpreference\/oneventloop","title":"case onEventLoop","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/requestcompressionexecutionpreference\/onthreadpool","title":"case onThreadPool","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/requestcompressionexecutionpreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/requestcompressionexecutionpreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/requestcompressionexecutionpreference","title":"HBApplication.RequestCompressionExecutionPreference","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/responsecompressionexecutionpreference\/oneventloop","title":"case onEventLoop","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/responsecompressionexecutionpreference\/onthreadpool(threshold:)","title":"case onThreadPool(threshold: Int)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/responsecompressionexecutionpreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/responsecompressionexecutionpreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication\/responsecompressionexecutionpreference","title":"HBApplication.ResponseCompressionExecutionPreference","type":"enum"}],"path":"\/documentation\/hummingbirdfoundation\/hbapplication","title":"HBApplication","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/servicelifecycleprovider\/createnew","title":"case createNew","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/servicelifecycleprovider\/shared(_:)","title":"case shared(ServiceLifecycle)","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/servicelifecycleprovider","title":"ServiceLifecycleProvider","type":"enum"},{"title":"Router","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/middlewares","title":"let middlewares: HBMiddlewareGroup","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/add(_:method:responder:)","title":"func add(String, method: HTTPMethod, responder: HBResponder)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/buildrouter()","title":"func buildRouter() -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/group(_:)","title":"func group(String) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-3277t","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-4t19t","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-2ae9a","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-3kd25","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-3vv1c","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-8lcdc","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/delete(_:options:use:)-piwf","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-326e5","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-33vun","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-3e4ny","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-3gdk9","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/get(_:options:use:)-96ynq","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-1jf15","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-1jgko","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-1m180","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-2bsdv","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/head(_:options:use:)-6f85h","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-5n2kl","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/on(_:method:options:use:)-mr5j","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-17vf1","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-2tvuv","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-30xlk","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-3u9o4","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/patch(_:options:use:)-71l1s","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-1qeef","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-1uvzy","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-3rhz5","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-4lh1p","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/post(_:options:use:)-6m3su","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-1xu68","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-3dtts","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-3oy8p","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-6a3o8","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/put(_:options:use:)-71xiv","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/constructresponder(options:use:)-2abjy","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/constructresponder(options:use:)-6h5kd","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/constructresponder(options:use:)-9eh84","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBResponder","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder","title":"HBRouterBuilder","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/add(middleware:)","title":"func add(middleware: HBMiddleware) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/group(_:)","title":"func group(String) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-3r0lk","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-xc8l","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBRouterGroup","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-5jdiw","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-5jwwc","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-7pg7u","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-f89z","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/delete(_:options:use:)-n1cp","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-3adx0","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-5qsft","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-7ndj6","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-84ds1","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/get(_:options:use:)-8oipj","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-2i944","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-53c7j","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-5vf11","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-71h8s","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/head(_:options:use:)-9x2yc","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-2628e","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/on(_:method:options:use:)-6azj7","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-2wf6k","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-4s93j","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-5rw5v","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-90zht","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/patch(_:options:use:)-9q0ya","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-15kto","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-1yp8y","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-2yre8","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-3i1g2","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/post(_:options:use:)-723ko","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-197sx","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-3wqre","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-4hu0l","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-74fg9","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/put(_:options:use:)-s9l","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/constructresponder(options:use:)-2c9zb","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/constructresponder(options:use:)-3igox","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/constructresponder(options:use:)-61uaq","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBResponder","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutergroup","title":"HBRouterGroup","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-3ic9o","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-5gzcx","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-5x22s","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-74uf8","title":"func delete<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/delete(_:options:use:)-8gurb","title":"func delete<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-3kg91","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-50wai","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-7g21","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-86u5y","title":"func get<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/get(_:options:use:)-9jm74","title":"func get<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/group(_:)","title":"func group(String) -> HBRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-40dtg","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-7niyc","title":"func head<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-88cag","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-9x5r8","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/head(_:options:use:)-ds6","title":"func head<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-q9gs","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-q9gs","title":"func on<Handler, _Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"}],"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-3uco","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"children":[{"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-4r81r","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"children":[{"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/on(_:method:options:use:)-6fajk","title":"func on<Output>(String, method: HTTPMethod, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-12p1l","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-3gi4u","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-5qglv","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-663sj","title":"func patch<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/patch(_:options:use:)-we6j","title":"func patch<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-16d3s","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-3y1zn","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-75fgq","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-7ntwy","title":"func post<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/post(_:options:use:)-92rp","title":"func post<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-28ous","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-49wvb","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-549yy","title":"func put<Handler, _Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-5hceh","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/put(_:options:use:)-97j9q","title":"func put<Output>(String, options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> Self","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/constructresponder(options:use:)-3kmxy","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) throws -> Output) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/constructresponder(options:use:)-69xk3","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) -> EventLoopFuture<Output>) -> HBResponder","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods\/constructresponder(options:use:)-lhp0","title":"static func constructResponder<Output>(options: HBRouterMethodOptions, use: (HBRequest) async throws -> Output) -> HBResponder","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethods","title":"HBRouterMethods","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/editresponse","title":"static var editResponse: HBRouterMethodOptions","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/streambody","title":"static var streamBody: HBRouterMethodOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions","title":"HBRouterMethodOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbrequestdecodable\/init(from:)","title":"init(from: HBRequest) throws","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequestdecodable\/init(from:)","title":"init(from: HBRequest) throws","type":"init"}],"title":"HBRequestDecodable Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutehandler\/init(from:)-9q5p0","title":"init(from: HBRequest) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler\/handle(request:)-51433","title":"func handle(request: HBRequest) throws -> EventLoopFuture<_Output2>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler\/handle(request:)-51433","title":"func handle(request: HBRequest) throws -> EventLoopFuture<_Output2>","type":"method"}],"title":"HBAsyncRouteHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutehandler\/handle(request:)-4ebzc","title":"func handle(request: HBRequest) throws -> _Output","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbroutehandler","title":"HBRouteHandler","type":"protocol"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequestdecodable","title":"HBRequestDecodable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler\/init(from:)","title":"init(from: HBRequest) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler\/handle(request:)-51433","title":"func handle(request: HBRequest) throws -> EventLoopFuture<_Output2>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler\/handle(request:)-51433","title":"func handle(request: HBRequest) throws -> EventLoopFuture<_Output2>","type":"method"}],"title":"HBAsyncRouteHandler Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler\/handle(request:)-9isdg","title":"func handle(request: HBRequest) async throws -> _Output2","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler","title":"HBAsyncRouteHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbresponder\/respond(to:)-1q5gt","title":"func respond(to: HBRequest) async throws -> HBResponse","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponder\/respond(to:)-1q5gt","title":"func respond(to: HBRequest) async throws -> HBResponse","type":"method"}],"title":"HBResponder Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponder\/respond(to:)-877la","title":"func respond(to: HBRequest) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponder","title":"HBResponder","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcallbackresponder\/init(callback:)","title":"init(callback: (HBRequest) -> EventLoopFuture<HBResponse>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcallbackresponder\/respond(to:)","title":"func respond(to: HBRequest) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbcallbackresponder","title":"HBCallbackResponder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbasynccallbackresponder\/init(callback:)","title":"init(callback: (HBRequest) async throws -> HBResponse)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbasynccallbackresponder\/respond(to:)","title":"func respond(to: HBRequest) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbasynccallbackresponder","title":"HBAsyncCallbackResponder","type":"struct"},{"title":"Request\/Response","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/responsepatch\/headers","title":"var headers: HTTPHeadersPatch","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/responsepatch\/status","title":"var status: HTTPResponseStatus?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/responsepatch\/setcookie(_:)","title":"func setCookie(HBCookie)","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/responsepatch","title":"HBRequest.ResponsePatch","type":"class"},{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/fluent-swift.struct","title":"HBRequest.Fluent","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/jobs-swift.struct\/enqueue(job:on:)","title":"func enqueue(job: HBJob, on: HBApplication.JobQueueHandler.QueueKey) -> EventLoopFuture<JobIdentifier>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/jobs-swift.struct","title":"HBRequest.Jobs","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/persist-swift.struct\/create(key:value:expires:)-8dqp7","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/persist-swift.struct\/create(key:value:expires:)-96a3k","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/persist-swift.struct\/get(key:as:)-105gn","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/persist-swift.struct\/get(key:as:)-1lp7h","title":"func get<Object>(key: String, as: Object.Type) -> EventLoopFuture<Object?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/persist-swift.struct\/remove(key:)-1jw2j","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/persist-swift.struct\/remove(key:)-3xh8m","title":"func remove(key: String) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/persist-swift.struct\/set(key:value:expires:)-76edy","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/persist-swift.struct\/set(key:value:expires:)-8ynk5","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/persist-swift.struct","title":"HBRequest.Persist","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/eventloop","title":"let eventLoop: EventLoop","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/activechannels(matching:)","title":"func activeChannels(matching: String?) -> EventLoopFuture<[RedisChannelName]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/append(_:to:)","title":"func append<Value>(Value, to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/authorize(username:password:)","title":"func authorize(username: String, password: String) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/authorize(with:)","title":"func authorize(with: String) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/blpop(from:as:timeout:)","title":"func blpop<Value>(from: RedisKey, as: Value.Type, timeout: TimeAmount) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/blpop(from:timeout:)-6rjw4","title":"func blpop(from: RedisKey..., timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/blpop(from:timeout:)-8k711","title":"func blpop(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/blpop(from:timeout:)-jhm9","title":"func blpop(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/blpop(from:timeout:valuetype:)-2csm3","title":"func blpop<Value>(from: RedisKey..., timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/blpop(from:timeout:valuetype:)-6w6ij","title":"func blpop<Value>(from: [RedisKey], timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/brpop(from:as:timeout:)","title":"func brpop<Value>(from: RedisKey, as: Value.Type, timeout: TimeAmount) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/brpop(from:timeout:)-14g6b","title":"func brpop(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/brpop(from:timeout:)-3ketz","title":"func brpop(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/brpop(from:timeout:)-44wkm","title":"func brpop(from: RedisKey..., timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/brpop(from:timeout:valuetype:)-4742u","title":"func brpop<Value>(from: [RedisKey], timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/brpop(from:timeout:valuetype:)-5h1xv","title":"func brpop<Value>(from: RedisKey..., timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/brpoplpush(from:to:timeout:)","title":"func brpoplpush(from: RedisKey, to: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/brpoplpush(from:to:timeout:valuetype:)","title":"func brpoplpush<Value>(from: RedisKey, to: RedisKey, timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/bzpopmax(from:timeout:)-2tv35","title":"func bzpopmax(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(String, Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/bzpopmax(from:timeout:)-9trfg","title":"func bzpopmax(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<(Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/bzpopmin(from:timeout:)-5l4kw","title":"func bzpopmin(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<(Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/bzpopmin(from:timeout:)-7v85a","title":"func bzpopmin(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(String, Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/decrement(_:)","title":"func decrement(RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/decrement(_:by:)","title":"func decrement<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/delete(_:)","title":"func delete([RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/echo(_:)","title":"func echo(String) -> EventLoopFuture<String>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/exists(_:)","title":"func exists([RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/expire(_:after:)","title":"func expire(RedisKey, after: TimeAmount) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/get(_:)","title":"func get(RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/get(_:as:)","title":"func get<StoredType>(RedisKey, as: StoredType.Type) -> EventLoopFuture<StoredType?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/get(_:asjson:)","title":"func get<D>(RedisKey, asJSON: D.Type) -> EventLoopFuture<D?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hdel(_:from:)","title":"func hdel([String], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hexists(_:in:)","title":"func hexists(String, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hget(_:from:)","title":"func hget(String, from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hget(_:from:as:)","title":"func hget<Value>(String, from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hgetall(from:)","title":"func hgetall(from: RedisKey) -> EventLoopFuture<[String : RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hgetall(from:as:)","title":"func hgetall<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<[String : Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hincrby(_:field:in:)","title":"func hincrby<Value>(Value, field: String, in: RedisKey) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hincrbyfloat(_:field:in:)","title":"func hincrbyfloat<Value>(Value, field: String, in: RedisKey) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hkeys(in:)","title":"func hkeys(in: RedisKey) -> EventLoopFuture<[String]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hlen(of:)","title":"func hlen(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hmget(_:from:)","title":"func hmget([String], from: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hmget(_:from:as:)-4r47h","title":"func hmget<Value>([String], from: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hmget(_:from:as:)-9kpsy","title":"func hmget<Value>(String..., from: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hmset(_:in:)","title":"func hmset<Value>([String : Value], in: RedisKey) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hscan(_:startingfrom:matching:count:)","title":"func hscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [String : RESPValue])>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hscan(_:startingfrom:matching:count:valuetype:)","title":"func hscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [String : Value?])>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hset(_:to:in:)","title":"func hset<Value>(String, to: Value, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hsetnx(_:to:in:)","title":"func hsetnx<Value>(String, to: Value, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hstrlen(of:in:)","title":"func hstrlen(of: String, in: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hvals(in:)","title":"func hvals(in: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/hvals(in:as:)","title":"func hvals<Value>(in: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/increment(_:)","title":"func increment(RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/increment(_:by:)-65hig","title":"func increment<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/increment(_:by:)-8lul6","title":"func increment<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lindex(_:from:)","title":"func lindex(Int, from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lindex(_:from:as:)","title":"func lindex<Value>(Int, from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/linsert(_:into:after:)","title":"func linsert<Value>(Value, into: RedisKey, after: Value) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/linsert(_:into:before:)","title":"func linsert<Value>(Value, into: RedisKey, before: Value) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/llen(of:)","title":"func llen(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/logging(to:)","title":"func logging(to: Logger) -> RedisClient","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lpop(from:)","title":"func lpop(from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lpop(from:as:)","title":"func lpop<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lpush(_:into:)-5h9h1","title":"func lpush<Value>([Value], into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lpush(_:into:)-5kfof","title":"func lpush<Value>(Value..., into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lpushx(_:into:)","title":"func lpushx<Value>(Value, into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:firstindex:lastindex:)","title":"func lrange(from: RedisKey, firstIndex: Int, lastIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:firstindex:lastindex:as:)","title":"func lrange<Value>(from: RedisKey, firstIndex: Int, lastIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:fromindex:)","title":"func lrange(from: RedisKey, fromIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:fromindex:as:)","title":"func lrange<Value>(from: RedisKey, fromIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:indices:)-4ytj0","title":"func lrange(from: RedisKey, indices: ClosedRange<Int>) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:indices:)-7840x","title":"func lrange(from: RedisKey, indices: Range<Int>) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:indices:as:)-32j6c","title":"func lrange<Value>(from: RedisKey, indices: Range<Int>, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:indices:as:)-van4","title":"func lrange<Value>(from: RedisKey, indices: ClosedRange<Int>, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:throughindex:)","title":"func lrange(from: RedisKey, throughIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:throughindex:as:)","title":"func lrange<Value>(from: RedisKey, throughIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:uptoindex:)","title":"func lrange(from: RedisKey, upToIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrange(from:uptoindex:as:)","title":"func lrange<Value>(from: RedisKey, upToIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lrem(_:from:count:)","title":"func lrem<Value>(Value, from: RedisKey, count: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/lset(index:to:in:)","title":"func lset<Value>(index: Int, to: Value, in: RedisKey) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/ltrim(_:before:after:)","title":"func ltrim(RedisKey, before: Int, after: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/ltrim(_:keepingindices:)-1378z","title":"func ltrim(RedisKey, keepingIndices: Range<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/ltrim(_:keepingindices:)-5iecz","title":"func ltrim(RedisKey, keepingIndices: ClosedRange<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/ltrim(_:keepingindices:)-7evhn","title":"func ltrim(RedisKey, keepingIndices: PartialRangeUpTo<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/ltrim(_:keepingindices:)-7nw0a","title":"func ltrim(RedisKey, keepingIndices: PartialRangeThrough<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/ltrim(_:keepingindices:)-8jjqv","title":"func ltrim(RedisKey, keepingIndices: PartialRangeFrom<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/mget(_:)","title":"func mget([RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/mget(_:as:)-10vkq","title":"func mget<Value>([RedisKey], as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/mget(_:as:)-87la9","title":"func mget<Value>(RedisKey..., as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/mset(_:)","title":"func mset<Value>([RedisKey : Value]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/msetnx(_:)","title":"func msetnx<Value>([RedisKey : Value]) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/patternsubscribercount()","title":"func patternSubscriberCount() -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/ping(with:)","title":"func ping(with: String?) -> EventLoopFuture<String>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/psetex(_:to:expirationinmilliseconds:)","title":"func psetex<Value>(RedisKey, to: Value, expirationInMilliseconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/psetex(_:tojson:expirationinmilliseconds:)","title":"func psetex<Value>(RedisKey, toJSON: Value, expirationInMilliseconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/psubscribe(to:messagereceiver:onsubscribe:onunsubscribe:)","title":"func psubscribe(to: [String], messageReceiver: RedisSubscriptionMessageReceiver, onSubscribe: RedisSubscriptionChangeHandler?, onUnsubscribe: RedisSubscriptionChangeHandler?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/pttl(_:)","title":"func pttl(RedisKey) -> EventLoopFuture<RedisKey.Lifetime>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/publish(_:to:)","title":"func publish<Message>(Message, to: RedisChannelName) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/punsubscribe()","title":"func punsubscribe() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/punsubscribe(from:)","title":"func punsubscribe(from: [String]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/rpop(from:)","title":"func rpop(from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/rpop(from:as:)","title":"func rpop<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/rpoplpush(from:to:)","title":"func rpoplpush(from: RedisKey, to: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/rpoplpush(from:to:valuetype:)","title":"func rpoplpush<Value>(from: RedisKey, to: RedisKey, valueType: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/rpush(_:into:)-2apo8","title":"func rpush<Value>([Value], into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/rpush(_:into:)-8sj7j","title":"func rpush<Value>(Value..., into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/rpushx(_:into:)","title":"func rpushx<Value>(Value, into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sadd(_:to:)-2mu5f","title":"func sadd<Value>([Value], to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sadd(_:to:)-9qcq5","title":"func sadd<Value>(Value..., to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/scan(startingfrom:matching:count:)","title":"func scan(startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [String])>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/scard(of:)","title":"func scard(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sdiff(of:)","title":"func sdiff(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sdiff(of:valuetype:)-9eb9i","title":"func sdiff<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sdiff(of:valuetype:)-9xep9","title":"func sdiff<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sdiffstore(as:sources:)","title":"func sdiffstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/select(database:)","title":"func select(database: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/send(command:)","title":"func send(command: String) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/send(command:with:)","title":"func send(command: String, with: [RESPValue]) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/set(_:to:)","title":"func set<Value>(RedisKey, to: Value) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/set(_:to:oncondition:expiration:)","title":"func set<Value>(RedisKey, to: Value, onCondition: RedisSetCommandCondition, expiration: RedisSetCommandExpiration?) -> EventLoopFuture<RedisSetCommandResult>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/set(_:tojson:)","title":"func set<Value>(RedisKey, toJSON: Value) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/set(_:tojson:oncondition:expiration:)","title":"func set<Value>(RedisKey, toJSON: Value, onCondition: RedisSetCommandCondition, expiration: RedisSetCommandExpiration?) -> EventLoopFuture<RedisSetCommandResult>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/setex(_:to:expirationinseconds:)","title":"func setex<Value>(RedisKey, to: Value, expirationInSeconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/setex(_:tojson:expirationinseconds:)","title":"func setex<Value>(RedisKey, toJSON: Value, expirationInSeconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/setnx(_:to:)","title":"func setnx<Value>(RedisKey, to: Value) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/setnx(_:tojson:)","title":"func setnx<Value>(RedisKey, toJSON: Value) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sinter(of:)","title":"func sinter(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sinter(of:valuetype:)-1q4h9","title":"func sinter<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sinter(of:valuetype:)-5b3r1","title":"func sinter<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sinterstore(as:sources:)","title":"func sinterstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sismember(_:of:)","title":"func sismember<Value>(Value, of: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/smembers(of:)","title":"func smembers(of: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/smembers(of:as:)","title":"func smembers<Value>(of: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/smove(_:from:to:)","title":"func smove<Value>(Value, from: RedisKey, to: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/spop(from:as:max:)","title":"func spop<Value>(from: RedisKey, as: Value.Type, max: Int) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/spop(from:max:)","title":"func spop(from: RedisKey, max: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/srandmember(from:as:max:)","title":"func srandmember<Value>(from: RedisKey, as: Value.Type, max: Int) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/srandmember(from:max:)","title":"func srandmember(from: RedisKey, max: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/srem(_:from:)-3za6j","title":"func srem<Value>(Value..., from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/srem(_:from:)-5qf9w","title":"func srem<Value>([Value], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sscan(_:startingfrom:matching:count:)","title":"func sscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [RESPValue])>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sscan(_:startingfrom:matching:count:valuetype:)","title":"func sscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [Value?])>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/subscribe(to:messagereceiver:onsubscribe:onunsubscribe:)","title":"func subscribe(to: [RedisChannelName], messageReceiver: RedisSubscriptionMessageReceiver, onSubscribe: RedisSubscriptionChangeHandler?, onUnsubscribe: RedisSubscriptionChangeHandler?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/subscribercount(forchannels:)","title":"func subscriberCount(forChannels: [RedisChannelName]) -> EventLoopFuture<[RedisChannelName : Int]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sunion(of:)","title":"func sunion(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sunion(of:valuetype:)-9uw8q","title":"func sunion<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sunion(of:valuetype:)-kq6n","title":"func sunion<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/sunionstore(as:sources:)","title":"func sunionstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/swapdatabase(_:with:)","title":"func swapDatabase(Int, with: Int) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/ttl(_:)","title":"func ttl(RedisKey) -> EventLoopFuture<RedisKey.Lifetime>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/unsubscribe()","title":"func unsubscribe() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/unsubscribe(from:)","title":"func unsubscribe(from: [RedisChannelName]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zadd(_:to:inserting:returning:)-1a0g6","title":"func zadd<Value>((element: Value, score: Double), to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zadd(_:to:inserting:returning:)-2euhd","title":"func zadd<Value>([(element: Value, score: Double)], to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zadd(_:to:inserting:returning:)-9hzj5","title":"func zadd<Value>((element: Value, score: Double)..., to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zcard(of:)","title":"func zcard(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zcount(of:withmaximumscoreof:)","title":"func zcount(of: RedisKey, withMaximumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zcount(of:withminimumscoreof:)","title":"func zcount(of: RedisKey, withMinimumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zcount(of:withscores:)-5sevq","title":"func zcount(of: RedisKey, withScores: Range<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zcount(of:withscores:)-79l1f","title":"func zcount(of: RedisKey, withScores: ClosedRange<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zcount(of:withscoresbetween:)","title":"func zcount(of: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zincrby(_:element:in:)","title":"func zincrby<Value>(Double, element: Value, in: RedisKey) -> EventLoopFuture<Double>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zinterstore(as:sources:weights:aggregatemethod:)","title":"func zinterstore(as: RedisKey, sources: [RedisKey], weights: [Int]?, aggregateMethod: RedisSortedSetAggregateMethod?) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zlexcount(of:withmaximumvalueof:)","title":"func zlexcount<Value>(of: RedisKey, withMaximumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zlexcount(of:withminimumvalueof:)","title":"func zlexcount<Value>(of: RedisKey, withMinimumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zlexcount(of:withvaluesbetween:)","title":"func zlexcount<Value>(of: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zpopmax(from:)","title":"func zpopmax(from: RedisKey) -> EventLoopFuture<(RESPValue, Double)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zpopmax(from:max:)","title":"func zpopmax(from: RedisKey, max: Int) -> EventLoopFuture<[(RESPValue, Double)]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zpopmin(from:)","title":"func zpopmin(from: RedisKey) -> EventLoopFuture<(RESPValue, Double)?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zpopmin(from:max:)","title":"func zpopmin(from: RedisKey, max: Int) -> EventLoopFuture<[(RESPValue, Double)]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrange(from:firstindex:lastindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, firstIndex: Int, lastIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrange(from:fromindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, fromIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrange(from:indices:includescoresinresponse:)-5ecdq","title":"func zrange(from: RedisKey, indices: ClosedRange<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrange(from:indices:includescoresinresponse:)-e3ru","title":"func zrange(from: RedisKey, indices: Range<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrange(from:throughindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, throughIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrange(from:uptoindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, upToIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrangebylex(from:withmaximumvalueof:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrangebylex(from:withminimumvalueof:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrangebylex(from:withvaluesbetween:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>), limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrangebyscore(from:withmaximumscoreof:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrangebyscore(from:withminimumscoreof:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrangebyscore(from:withscores:limitby:includescoresinresponse:)-80rgu","title":"func zrangebyscore(from: RedisKey, withScores: Range<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrangebyscore(from:withscores:limitby:includescoresinresponse:)-90m05","title":"func zrangebyscore(from: RedisKey, withScores: ClosedRange<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrangebyscore(from:withscoresbetween:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound), limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrank(of:in:)","title":"func zrank<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Int?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrem(_:from:)-33gaj","title":"func zrem<Value>([Value], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrem(_:from:)-rfyw","title":"func zrem<Value>(Value..., from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebylex(from:withmaximumvalueof:)","title":"func zremrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebylex(from:withminimumvalueof:)","title":"func zremrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebylex(from:withvaluesbetween:)","title":"func zremrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyrank(from:firstindex:lastindex:)","title":"func zremrangebyrank(from: RedisKey, firstIndex: Int, lastIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyrank(from:fromindex:)","title":"func zremrangebyrank(from: RedisKey, fromIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyrank(from:indices:)-248n5","title":"func zremrangebyrank(from: RedisKey, indices: Range<Int>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyrank(from:indices:)-5ong","title":"func zremrangebyrank(from: RedisKey, indices: ClosedRange<Int>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyrank(from:throughindex:)","title":"func zremrangebyrank(from: RedisKey, throughIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyrank(from:uptoindex:)","title":"func zremrangebyrank(from: RedisKey, upToIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyscore(from:withmaximumscoreof:)","title":"func zremrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyscore(from:withminimumscoreof:)","title":"func zremrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyscore(from:withscores:)-4w148","title":"func zremrangebyscore(from: RedisKey, withScores: Range<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyscore(from:withscores:)-6e0da","title":"func zremrangebyscore(from: RedisKey, withScores: ClosedRange<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zremrangebyscore(from:withscoresbetween:)","title":"func zremrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrange(from:firstindex:lastindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, firstIndex: Int, lastIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrange(from:fromindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, fromIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrange(from:indices:includescoresinresponse:)-3vyzr","title":"func zrevrange(from: RedisKey, indices: Range<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrange(from:indices:includescoresinresponse:)-80ttn","title":"func zrevrange(from: RedisKey, indices: ClosedRange<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrange(from:throughindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, throughIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrange(from:uptoindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, upToIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrangebylex(from:withmaximumvalueof:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrangebylex(from:withminimumvalueof:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrangebylex(from:withvaluesbetween:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>), limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrangebyscore(from:withmaximumscoreof:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrangebyscore(from:withminimumscoreof:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrangebyscore(from:withscores:limitby:includescoresinresponse:)-1z19g","title":"func zrevrangebyscore(from: RedisKey, withScores: ClosedRange<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrangebyscore(from:withscores:limitby:includescoresinresponse:)-5yyw8","title":"func zrevrangebyscore(from: RedisKey, withScores: Range<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrangebyscore(from:withscoresbetween:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound), limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zrevrank(of:in:)","title":"func zrevrank<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Int?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zscan(_:startingfrom:matching:count:)","title":"func zscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [(RESPValue, Double)])>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zscan(_:startingfrom:matching:count:valuetype:)","title":"func zscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [(Value, Double)?])>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zscore(of:in:)","title":"func zscore<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Double?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/zunionstore(as:sources:weights:aggregatemethod:)","title":"func zunionstore(as: RedisKey, sources: [RedisKey], weights: [Int]?, aggregateMethod: RedisSortedSetAggregateMethod?) -> EventLoopFuture<Int>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct\/redisclient-implementations","title":"RedisClient Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.struct","title":"HBRequest.Redis","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/init(head:body:application:context:)","title":"init(head: HTTPRequestHead, body: HBRequestBody, application: HBApplication, context: HBRequestContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/apigatewayrequest","title":"var apiGatewayRequest: APIGatewayRequest","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/apigatewayv2request","title":"var apiGatewayV2Request: APIGatewayV2Request","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/application","title":"var application: HBApplication","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/authbasic","title":"var authBasic: BasicAuthentication?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/authbearer","title":"var authBearer: BearerAuthentication?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/body","title":"var body: HBRequestBody","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/context","title":"var context: HBRequestContext","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/cookies","title":"var cookies: HBCookies","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/db","title":"var db: Database","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/eventloop","title":"var eventLoop: EventLoop","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/extensions","title":"var extensions: HBSendableExtensions<HBRequest>","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/fluent-swift.property","title":"var fluent: Fluent","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/jobs-swift.property","title":"var jobs: Jobs","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/method","title":"var method: HTTPMethod","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/parameters","title":"var parameters: HBParameters","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/persist-swift.property","title":"var persist: HBRequest.Persist","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis-swift.property","title":"var redis: Redis","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/remoteaddress","title":"var remoteAddress: SocketAddress?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/response","title":"var response: ResponsePatch","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/servicecontext","title":"var serviceContext: ServiceContext","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/session","title":"var session: SessionManager","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/uri","title":"var uri: HBURL","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/version","title":"var version: HTTPVersion","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/authget(_:)","title":"func authGet<Auth>(Auth.Type) -> Auth?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/authhas(_:)","title":"func authHas<Auth>(Auth.Type) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/authlogin(_:)","title":"func authLogin<Auth>(Auth)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/authlogout(_:)","title":"func authLogout<Auth>(Auth.Type)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/authrequire(_:)","title":"func authRequire<Auth>(Auth.Type) throws -> Auth","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/collatebody()","title":"func collateBody() -> EventLoopFuture<HBRequest>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/collatebody(maxsize:)","title":"func collateBody(maxSize: Int) -> EventLoopFuture<HBRequest>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/db(_:)","title":"func db(DatabaseID?) -> Database","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/decode(as:)","title":"func decode<Type>(as: Type.Type) throws -> Type","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/failure(_:)-34tp6","title":"func failure<T>(HTTPResponseStatus) -> EventLoopFuture<T>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/failure(_:)-8vehc","title":"func failure<T>(Error) -> EventLoopFuture<T>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/failure(_:message:)","title":"func failure<T>(HTTPResponseStatus, message: String) -> EventLoopFuture<T>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/redis(id:)","title":"func redis(id: RedisConnectionPoolGroupIdentifier) -> Redis","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/success(_:)","title":"func success<T>(T) -> EventLoopFuture<T>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/withservicecontext(_:_:)","title":"func withServiceContext<Return>(ServiceContext, (HBRequest) throws -> Return) rethrows -> Return","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/withspan(_:context:ofkind:_:)-7r3k8","title":"func withSpan<Return>(String, context: ServiceContext, ofKind: SpanKind, (HBRequest, Span) -> EventLoopFuture<Return>) -> EventLoopFuture<Return>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/withspan(_:context:ofkind:_:)-m3y9","title":"func withSpan<Return>(String, context: ServiceContext, ofKind: SpanKind, (HBRequest, Span) throws -> Return) rethrows -> Return","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/withspan(_:ofkind:_:)-198d8","title":"func withSpan<Return>(String, ofKind: SpanKind, (HBRequest, Span) -> EventLoopFuture<Return>) -> EventLoopFuture<Return>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/withspan(_:ofkind:_:)-4bxhf","title":"func withSpan<Return>(String, ofKind: SpanKind, (HBRequest, Span) throws -> Return) rethrows -> Return","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequest\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequest","title":"HBRequest","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/http","title":"static var http: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/http_unix","title":"static var http_unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/https","title":"static var https: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/https_unix","title":"static var https_unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/unix","title":"static var unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/ws","title":"static var ws: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/wss","title":"static var wss: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.struct","title":"HBURL.Scheme","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/host","title":"var host: String?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/port","title":"var port: Int?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/queryparameters","title":"var queryParameters: HBParameters","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/scheme-swift.property","title":"var scheme: Scheme?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/string","title":"let string: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdfoundation\/hburl\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hburl\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdfoundation\/hburl\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hburl","title":"HBURL","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/get(_:)","title":"func get(String) -> String?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/get(_:as:)","title":"func get<T>(String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/getall(_:)","title":"func getAll(String) -> [String]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/getall(_:as:)","title":"func getAll<T>(String, as: T.Type) -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/getcatchall()","title":"func getCatchAll() -> [Substring]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/has(_:)","title":"func has(Substring) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/require(_:)","title":"func require(String) throws -> String","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/require(_:as:)","title":"func require<T>(String, as: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/requireall(_:as:)","title":"func requireAll<T>(String, as: T.Type) throws -> [T]","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/subscript(_:)-10i62","title":"subscript(String) -> String?","type":"subscript"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/subscript(_:)-5j7en","title":"subscript(Substring) -> String?","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/collection","title":"HBParameters.Collection","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/map(_:)-3rxvz","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/subscript(_:)-3wu50","title":"subscript(Index) -> Collection.Element","type":"subscript"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/subscript(_:)-5zpw2","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/subscript(_:)-6tkf2","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/subscript(_:)-7td5g","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/index","title":"HBParameters.Index","type":"typealias"}],"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/flatmap(_:)-4eve8","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/flatmap(_:)-82oy1","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/map(_:)-2541h","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbparameters\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbparameters","title":"HBParameters","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/~=(_:_:)","title":"static func ~= (`Self`, `Self`) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/init(from:)","title":"init?(from: String)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/init(type:subtype:parameter:)","title":"init(type: Category, subType: String, parameter: (String, String)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/parameter","title":"let parameter: (name: String, value: String)?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/subtype","title":"let subType: String","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/type","title":"let type: Category","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/istype(_:)","title":"func isType(HBMediaType) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/withparameter(name:value:)","title":"func withParameter(name: String, value: String) -> HBMediaType","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/application","title":"static var application: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/application7z","title":"static var application7z: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationabiword","title":"static var applicationAbiWord: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationamzkindleebook","title":"static var applicationAmzKindleEBook: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationarc","title":"static var applicationArc: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationbinary","title":"static var applicationBinary: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationbzip","title":"static var applicationBzip: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationbzip2","title":"static var applicationBzip2: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationcsh","title":"static var applicationCsh: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationdocx","title":"static var applicationDocx: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationeot","title":"static var applicationEot: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationepub","title":"static var applicationEpub: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationgzip","title":"static var applicationGzip: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationjar","title":"static var applicationJar: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationjson","title":"static var applicationJson: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationjsonld","title":"static var applicationJsonLD: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationmpkg","title":"static var applicationMpkg: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationmsword","title":"static var applicationMsword: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationodp","title":"static var applicationOdp: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationods","title":"static var applicationOds: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationodt","title":"static var applicationOdt: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationogg","title":"static var applicationOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationpdf","title":"static var applicationPdf: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationphp","title":"static var applicationPhp: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationppt","title":"static var applicationPpt: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationpptx","title":"static var applicationPptx: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationrar","title":"static var applicationRar: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationrtf","title":"static var applicationRtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationsh","title":"static var applicationSh: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationswf","title":"static var applicationSwf: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationtar","title":"static var applicationTar: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationurlencoded","title":"static var applicationUrlEncoded: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationvsd","title":"static var applicationVsd: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationxhtml","title":"static var applicationXhtml: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationxls","title":"static var applicationXls: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationxlsx","title":"static var applicationXlsx: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationxml","title":"static var applicationXml: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/applicationzip","title":"static var applicationZip: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/audio","title":"static var audio: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/audio3g2","title":"static var audio3g2: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/audio3gp","title":"static var audio3gp: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/audioaac","title":"static var audioAac: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/audiomidi","title":"static var audioMidi: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/audiompeg","title":"static var audioMpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/audioogg","title":"static var audioOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/audioopus","title":"static var audioOpus: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/audiowave","title":"static var audioWave: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/audiowebm","title":"static var audioWebm: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/example","title":"static var example: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/font","title":"static var font: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/fontotf","title":"static var fontOtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/fontttf","title":"static var fontTtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/fontwoff","title":"static var fontWoff: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/fontwoff2","title":"static var fontWoff2: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/image","title":"static var image: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/imagebmp","title":"static var imageBmp: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/imagegif","title":"static var imageGif: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/imageico","title":"static var imageIco: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/imagejpeg","title":"static var imageJpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/imagepng","title":"static var imagePng: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/imagesvg","title":"static var imageSvg: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/imagetiff","title":"static var imageTiff: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/imagewebp","title":"static var imageWebp: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/message","title":"static var message: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/model","title":"static var model: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/multipart","title":"static var multipart: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/multipartform","title":"static var multipartForm: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/text","title":"static var text: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/textcss","title":"static var textCss: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/textcsv","title":"static var textCsv: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/texthtml","title":"static var textHtml: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/texticalendar","title":"static var textICalendar: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/textjavascript","title":"static var textJavascript: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/textplain","title":"static var textPlain: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/video","title":"static var video: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/video3g2","title":"static var video3g2: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/video3gp","title":"static var video3gp: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/videomp4","title":"static var videoMp4: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/videompeg","title":"static var videoMpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/videoogg","title":"static var videoOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/videots","title":"static var videoTs: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/videowebm","title":"static var videoWebm: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/getmediatype(forextension:)","title":"static func getMediaType(forExtension: String) -> HBMediaType?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/==(_:_:)","title":"static func == (Category, Category) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/any","title":"case any","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/application","title":"case application","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/audio","title":"case audio","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/example","title":"case example","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/font","title":"case font","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/image","title":"case image","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/message","title":"case message","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/model","title":"case model","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/multipart","title":"case multipart","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/text","title":"case text","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbmediatype\/category","title":"HBMediaType.Category","type":"enum"}],"path":"\/documentation\/hummingbirdfoundation\/hbmediatype","title":"HBMediaType","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequestcontext\/eventloop","title":"var eventLoop: EventLoop","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequestcontext\/remoteaddress","title":"var remoteAddress: SocketAddress?","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequestcontext","title":"HBRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/httpheaderspatch\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, String)...)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/httpheaderspatch\/add(contentsof:)","title":"func add<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/httpheaderspatch\/add(name:value:)","title":"func add(name: String, value: String)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/httpheaderspatch\/remove(name:)","title":"func remove(name: String)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/httpheaderspatch\/replaceoradd(name:value:)","title":"func replaceOrAdd(name: String, value: String)","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/httpheaderspatch","title":"HTTPHeadersPatch","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/init(status:headers:body:)","title":"init(status: HTTPResponseStatus, headers: HTTPHeaders, body: HBResponseBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/body","title":"var body: HBResponseBody","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/extensions","title":"var extensions: HBSendableExtensions<HBResponse>","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/status","title":"var status: HTTPResponseStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/setcookie(_:)","title":"func setCookie(HBCookie)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/redirect(to:type:)","title":"static func redirect(to: String, type: RedirectType) -> HBResponse","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/redirecttype\/found","title":"case found","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/redirecttype\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/redirecttype\/permanent","title":"case permanent","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/redirecttype\/temporary","title":"case temporary","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/redirecttype\/status","title":"var status: HTTPResponseStatus","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/redirecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/redirecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/redirecttype","title":"HBResponse.RedirectType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/response(from:)","title":"func response(from: HBRequest) -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponse\/hbresponsegenerator-implementations","title":"HBResponseGenerator Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponse","title":"HBResponse","type":"struct"},{"title":"Encoding\/Decoding","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbrequestdecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: HBRequest) throws -> T","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbrequestdecoder","title":"HBRequestDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponseencoder\/encode(_:from:)","title":"func encode<T>(T, from: HBRequest) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponseencoder","title":"HBResponseEncoder","type":"protocol"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponseencodable","title":"HBResponseEncodable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbresponsegenerator\/response(from:)-6wb6i","title":"func response(from: HBRequest) throws -> HBResponse","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponsegenerator\/response(from:)-6wb6i","title":"func response(from: HBRequest) throws -> HBResponse","type":"method"}],"title":"HBResponseGenerator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponsegenerator\/response(from:)-4uxbo","title":"func response(from: HBRequest) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbresponsegenerator","title":"HBResponseGenerator","type":"protocol"},{"path":"\/documentation\/hummingbirdfoundation\/hbresponsecodable","title":"HBResponseCodable","type":"protocol"},{"title":"Middleware","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbasyncmiddleware\/apply(to:next:)-5ph3o","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbasyncmiddleware\/apply(to:next:)-5ph3o","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"title":"HBAsyncMiddleware Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbmiddleware\/apply(to:next:)-4evzs","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"title":"HBMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbmiddleware\/apply(to:next:)-ixu0","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbmiddleware","title":"HBMiddleware","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbasyncmiddleware\/apply(to:next:)-5ph3o","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbasyncmiddleware\/apply(to:next:)-5ph3o","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"title":"HBAsyncMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbasyncmiddleware\/apply(to:next:)-55q7c","title":"func apply(to: HBRequest, next: HBResponder) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbasyncmiddleware","title":"HBAsyncMiddleware","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmiddlewaregroup\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmiddlewaregroup\/add(_:)","title":"func add(HBMiddleware)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbmiddlewaregroup\/constructresponder(finalresponder:)","title":"func constructResponder(finalResponder: HBResponder) -> HBResponder","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbmiddlewaregroup","title":"HBMiddlewareGroup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcorsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","title":"init(allowOrigin: AllowOrigin, allowHeaders: [String], allowMethods: [HTTPMethod], allowCredentials: Bool, exposedHeaders: [String]?, maxAge: TimeAmount?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcorsmiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcorsmiddleware\/alloworigin\/all","title":"case all","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcorsmiddleware\/alloworigin\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcorsmiddleware\/alloworigin\/none","title":"case none","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcorsmiddleware\/alloworigin\/originbased","title":"case originBased","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/hbcorsmiddleware\/alloworigin","title":"HBCORSMiddleware.AllowOrigin","type":"enum"}],"path":"\/documentation\/hummingbirdfoundation\/hbcorsmiddleware","title":"HBCORSMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hblogrequestsmiddleware\/init(_:includeheaders:)","title":"init(Logger.Level, includeHeaders: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hblogrequestsmiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hblogrequestsmiddleware","title":"HBLogRequestsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmetricsmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmetricsmiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbmetricsmiddleware","title":"HBMetricsMiddleware","type":"struct"},{"title":"Extending the Application","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbextensible\/extensions","title":"var extensions: HBExtensions<Self>","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbextensible","title":"HBExtensible","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbextensions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbextensions\/exists(_:)","title":"func exists<Type>(KeyPath<ParentObject, Type>) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbextensions\/get(_:)-63nyk","title":"func get<Type>(KeyPath<ParentObject, Type>) -> Type?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbextensions\/get(_:)-7gsg7","title":"func get<Type>(KeyPath<ParentObject, Type?>) -> Type?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbextensions\/get(_:error:)","title":"func get<Type>(KeyPath<ParentObject, Type>, error: StaticString?) -> Type","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbextensions\/set(_:value:shutdowncallback:)","title":"func set<Type>(KeyPath<ParentObject, Type>, value: Type, shutdownCallback: ((Type) throws -> Void)?)","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbextensions","title":"HBExtensions","type":"struct"},{"title":"Connection Pool","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/init(source:maxconnections:eventloop:)","title":"init(source: Source, maxConnections: Int, eventLoop: EventLoop)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/eventloop","title":"let eventLoop: EventLoop","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/isclosed","title":"var isClosed: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/maxconnections","title":"let maxConnections: Int","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/numconnections","title":"var numConnections: Int","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/source","title":"let source: Source","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/close(logger:)-84c38","title":"func close(logger: Logger) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/close(logger:)-8eps7","title":"func close(logger: Logger) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/lease(logger:process:)-5jfq6","title":"func lease<NewValue>(logger: Logger, process: (Source.Connection) async throws -> NewValue) async throws -> NewValue","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/lease(logger:process:)-92yrt","title":"func lease<NewValue>(logger: Logger, process: (Source.Connection) -> EventLoopFuture<NewValue>) -> EventLoopFuture<NewValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/release(connection:logger:)","title":"func release(connection: Source.Connection, logger: Logger)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/request(logger:)-1u5lk","title":"func request(logger: Logger) async throws -> Source.Connection","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool\/request(logger:)-hcfg","title":"func request(logger: Logger) -> EventLoopFuture<Source.Connection>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpool","title":"HBConnectionPool","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnection\/isclosed","title":"var isClosed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbconnection\/close(on:)-3of7e","title":"func close(on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnection\/close(on:)-3of7e","title":"func close(on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"title":"HBConnection Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbconnection\/close(on:)-83o3o","title":"func close(on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbconnection","title":"HBConnection","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionsource\/connection","title":"Connection","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionsource\/makeconnection(on:logger:)-9bn5r","title":"func makeConnection(on: EventLoop, logger: Logger) -> EventLoopFuture<Connection>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionsource\/makeconnection(on:logger:)-9bn5r","title":"func makeConnection(on: EventLoop, logger: Logger) -> EventLoopFuture<Connection>","type":"method"}],"title":"HBConnectionSource Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbconnectionsource\/makeconnection(on:logger:)-4horn","title":"func makeConnection(on: EventLoop, logger: Logger) -> EventLoopFuture<Connection>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbconnectionsource","title":"HBConnectionSource","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbasyncconnection\/close()","title":"func close() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbasyncconnection","title":"HBAsyncConnection","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionsource\/makeconnection(on:logger:)-9bn5r","title":"func makeConnection(on: EventLoop, logger: Logger) -> EventLoopFuture<Connection>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionsource\/makeconnection(on:logger:)-9bn5r","title":"func makeConnection(on: EventLoop, logger: Logger) -> EventLoopFuture<Connection>","type":"method"}],"title":"HBConnectionSource Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbasyncconnectionsource\/makeconnection(on:logger:)-2ihgb","title":"func makeConnection(on: EventLoop, logger: Logger) async throws -> Connection","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbasyncconnectionsource","title":"HBAsyncConnectionSource","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup\/init(source:maxconnections:eventloopgroup:logger:)","title":"init(source: Source, maxConnections: Int, eventLoopGroup: EventLoopGroup, logger: Logger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup\/close()-5bcc8","title":"func close() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup\/close()-92vxp","title":"func close() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup\/getconnectionpool(on:)","title":"func getConnectionPool(on: EventLoop) -> HBConnectionPool<Source>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup\/lease(on:logger:process:)-3hdyx","title":"func lease<NewValue>(on: EventLoop, logger: Logger, process: (Source.Connection) async throws -> NewValue) async throws -> NewValue","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup\/lease(on:logger:process:)-4jt09","title":"func lease<NewValue>(on: EventLoop, logger: Logger, process: (Source.Connection) -> EventLoopFuture<NewValue>) -> EventLoopFuture<NewValue>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup\/release(connection:on:logger:)","title":"func release(connection: Source.Connection, on: EventLoop, logger: Logger)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup\/request(on:logger:)-5hfeq","title":"func request(on: EventLoop, logger: Logger) -> EventLoopFuture<Source.Connection>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup\/request(on:logger:)-6sxjk","title":"func request(on: EventLoop, logger: Logger) async throws -> Source.Connection","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup","title":"HBConnectionPoolGroup","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolerror\/poolclosed","title":"case poolClosed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolerror","title":"HBConnectionPoolError","type":"enum"},{"title":"Storage","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/create(key:value:expires:request:)-3m0mo","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"children":[{"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/get(key:as:request:)-75a9i","title":"func get<Object>(key: String, as: Object.Type, request: HBRequest) -> EventLoopFuture<Object?>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/remove(key:request:)-4ypic","title":"func remove(key: String, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/remove(key:request:)-4ypic","title":"func remove(key: String, request: HBRequest) async throws","type":"method"}],"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/remove(key:request:)-8qc2n","title":"func remove(key: String, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/set(key:value:expires:request:)-9yq7y","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/set(key:value:expires:request:)-9yq7y","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"}],"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/set(key:value:expires:request:)-2nhv","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"children":[{"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver\/shutdown()-8gjyt","title":"func shutdown()","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriver","title":"HBPersistDriver","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/init(create:)","title":"init(create: (HBApplication) -> HBPersistDriver)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/create","title":"let create: (HBApplication) -> HBPersistDriver","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/fluent","title":"static var fluent: HBPersistDriverFactory","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/memory","title":"static var memory: HBPersistDriverFactory","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/redis","title":"static var redis: HBPersistDriverFactory","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/fluent(_:)","title":"static func fluent(DatabaseID?) -> HBPersistDriverFactory","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory\/redis(id:)","title":"static func redis(id: RedisConnectionPoolGroupIdentifier) -> HBPersistDriverFactory","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory","title":"HBPersistDriverFactory","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbpersisterror","title":"HBPersistError","type":"struct"},{"title":"Miscellaneous","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/init(_:)","title":"init([Element])","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (Key, Value)...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/startindex","title":"var startIndex: Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/append(key:value:)","title":"func append(key: Key, value: Value)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/getall(for:)","title":"func getAll(for: Key) -> [Value]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/has(_:)","title":"func has(Key) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/subscript(_:)-8noau","title":"subscript(Index) -> Element","type":"subscript"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/subscript(_:)-pw02","title":"subscript(Key) -> Value?","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/element","title":"FlatDictionary.Element","type":"typealias"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/index","title":"FlatDictionary.Index","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/map(_:)-50v4d","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/subscript(_:)-2d4tj","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/subscript(_:)-6qlfr","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/subscript(_:)-8t493","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/flatmap(_:)-1ygb6","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/flatmap(_:)-557vp","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/map(_:)-2ru26","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/flatdictionary\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/flatdictionary","title":"FlatDictionary","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, String)...)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/init(values:)","title":"init(values: [String : String])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/get(_:)","title":"func get(String) -> String?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/get(_:as:)","title":"func get<T>(String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/merging(with:)","title":"func merging(with: HBEnvironment) -> HBEnvironment","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/set(_:value:)","title":"func set(String, value: String?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/shared","title":"static let shared: HBEnvironment","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/dotenv(_:)","title":"static func dotEnv(String) throws -> HBEnvironment","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbenvironment\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbenvironment","title":"HBEnvironment","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbdatecache\/currentdate","title":"var currentDate: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbdatecache\/formatrfc1123date(_:)","title":"static func formatRFC1123Date(Int) -> String","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbdatecache\/getdatecache(on:)","title":"static func getDateCache(on: EventLoop) -> HBDateCache","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbdatecache","title":"HBDateCache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/init(_:validateutf8:)","title":"init?<Bytes>(Bytes, validateUTF8: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/advance()","title":"func advance() throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/advance(by:)","title":"func advance(by: Int) throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/character()","title":"func character() throws -> Unicode.Scalar","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/current()","title":"func current() -> Unicode.Scalar","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/movetoend()","title":"func moveToEnd()","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/movetostart()","title":"func moveToStart()","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/percentdecode()","title":"func percentDecode() -> String?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/reachedend()","title":"func reachedEnd() -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(_:)-3ddyp","title":"func read(Unicode.Scalar) throws -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(_:)-3jot2","title":"func read(Set<Unicode.Scalar>) throws -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(_:)-46502","title":"func read(String) throws -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(count:)","title":"func read(count: Int) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(until:throwonoverflow:)-4fsmu","title":"func read(until: Set<Unicode.Scalar>, throwOnOverflow: Bool) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(until:throwonoverflow:)-4qwvq","title":"func read(until: (Unicode.Scalar) -> Bool, throwOnOverflow: Bool) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(until:throwonoverflow:)-9o9x7","title":"func read(until: Unicode.Scalar, throwOnOverflow: Bool) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(until:throwonoverflow:)-9xtym","title":"func read(until: KeyPath<Unicode.Scalar, Bool>, throwOnOverflow: Bool) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(untilstring:throwonoverflow:skiptoend:)","title":"func read(untilString: String, throwOnOverflow: Bool, skipToEnd: Bool) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(while:)-2mu8n","title":"func read(while: (Unicode.Scalar) -> Bool) -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(while:)-2tzbd","title":"func read(while: KeyPath<Unicode.Scalar, Bool>) -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(while:)-2zxuj","title":"func read(while: Set<Unicode.Scalar>) -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/read(while:)-4p0fs","title":"func read(while: Unicode.Scalar) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/readuntiltheend()","title":"func readUntilTheEnd() -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/retreat()","title":"func retreat() throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/retreat(by:)","title":"func retreat(by: Int) throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/split(separator:)","title":"func split(separator: Unicode.Scalar) -> [HBParser]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/unsafeadvance()","title":"func unsafeAdvance()","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/unsafeadvance(by:)","title":"func unsafeAdvance(by: Int)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/error\/emptystring","title":"case emptyString","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/error\/invalidutf8","title":"case invalidUTF8","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/error\/overflow","title":"case overflow","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/error\/unexpected","title":"case unexpected","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbparser\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbparser\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbparser\/error","title":"HBParser.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/iterator\/next()","title":"func next() -> Unicode.Scalar?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/iterator\/element","title":"HBParser.Iterator.Element","type":"typealias"}],"path":"\/documentation\/hummingbirdfoundation\/hbparser\/iterator","title":"HBParser.Iterator","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/flatmap(_:)-50vol","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/flatmap(_:)-6dduv","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/makeiterator()","title":"func makeIterator() -> Iterator","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbparser\/element","title":"HBParser.Element","type":"typealias"}],"path":"\/documentation\/hummingbirdfoundation\/hbparser\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbparser","title":"HBParser","type":"struct"}],"path":"\/documentation\/hummingbird","title":"Hummingbird","type":"module"},{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/authenticators","title":"Authenticators","type":"article"},{"path":"\/documentation\/hummingbird\/sessions","title":"Sessions","type":"article"},{"path":"\/documentation\/hummingbird\/onetimepasswords","title":"One Time Passwords","type":"article"},{"title":"Authenticators","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdauth\/hbasyncauthenticator\/authenticate(request:)-5cacx","title":"func authenticate(request: HBRequest) -> EventLoopFuture<Value?>","type":"method"}],"title":"HBAsyncAuthenticator Implementations","type":"groupMarker"},{"children":[{"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:)-3hx96","title":"func authenticate(request: HBRequest) -> EventLoopFuture<Value?>","type":"method"}],"title":"HBAuthenticator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:)-5hn4s","title":"func authenticate(request: HBRequest) -> EventLoopFuture<Value?>","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbauthenticator","title":"HBAuthenticator","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbasyncauthenticator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdauth\/hbasyncauthenticator\/authenticate(request:)-11jwi","title":"func authenticate(request: HBRequest) async throws -> Value?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbasyncauthenticator\/authenticate(request:)-5cacx","title":"func authenticate(request: HBRequest) -> EventLoopFuture<Value?>","type":"method"}],"title":"HBAsyncAuthenticator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdauth\/hbasyncauthenticator\/authenticate(request:)-39uup","title":"func authenticate(request: HBRequest) async throws -> Value?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbasyncauthenticator","title":"HBAsyncAuthenticator","type":"protocol"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticatable","title":"HBAuthenticatable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/init(_:)","title":"init(Auth.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","title":"IsAuthenticatedMiddleware","type":"struct"},{"title":"Header Authentication","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthentication\/password","title":"let password: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthentication\/username","title":"let username: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/basicauthentication","title":"BasicAuthentication","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/bearerauthentication\/token","title":"let token: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/bearerauthentication","title":"BearerAuthentication","type":"struct"},{"title":"Encryption","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/bcrypt\/hash(_:cost:)","title":"static func hash(String, cost: UInt8) -> String","type":"method"},{"path":"\/documentation\/hummingbirdauth\/bcrypt\/hash(_:cost:for:)","title":"static func hash(String, cost: UInt8, for: HBRequest) -> EventLoopFuture<String>","type":"method"},{"path":"\/documentation\/hummingbirdauth\/bcrypt\/verify(_:hash:)","title":"static func verify(String, hash: String) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdauth\/bcrypt\/verify(_:hash:for:)","title":"static func verify(String, hash: String, for: HBRequest) -> EventLoopFuture<Bool>","type":"method"}],"path":"\/documentation\/hummingbirdauth\/bcrypt","title":"Bcrypt","type":"enum"},{"title":"Sessions","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/error\/sessiondoesnotexist","title":"static var sessionDoesNotExist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/sessionmanager\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/sessionmanager\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/sessionmanager\/error","title":"SessionManager.Error","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/delete()-678qm","title":"func delete() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/delete()-9t0kv","title":"func delete() async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/load(as:)-4xrjm","title":"func load<Session>(as: Session.Type) async throws -> Session?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/load(as:)-578pt","title":"func load<Session>(as: Session.Type) -> EventLoopFuture<Session?>","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/save(session:expiresin:)-71gid","title":"func save<Session>(session: Session, expiresIn: TimeAmount) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/save(session:expiresin:)-7vqpb","title":"func save<Session>(session: Session, expiresIn: TimeAmount) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/update(session:expiresin:)-1jvm4","title":"func update<Session>(session: Session, expiresIn: TimeAmount) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/update(session:expiresin:)-7y9ap","title":"func update<Session>(session: Session, expiresIn: TimeAmount) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmanager\/sessionidstorage","title":"SessionManager.SessionIDStorage","type":"typealias"}],"path":"\/documentation\/hummingbirdauth\/sessionmanager","title":"SessionManager","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/session","title":"Session","type":"associatedtype"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/getsession(request:)-1k0a7","title":"func getSession(request: HBRequest) -> EventLoopFuture<Session?>","type":"method"}],"title":"HBSessionAuthenticator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/getsession(request:)-4xtyf","title":"func getSession(request: HBRequest) -> EventLoopFuture<Session?>","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/getvalue(from:request:)","title":"func getValue(from: Session, request: HBRequest) -> EventLoopFuture<Value?>","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","title":"HBSessionAuthenticator","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator\/session","title":"Session","type":"associatedtype"},{"path":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator\/getsession(request:)-xt45","title":"func getSession(request: HBRequest) async throws -> Session?","type":"method"}],"title":"HBAsyncSessionAuthenticator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator\/getsession(request:)-5vu8k","title":"func getSession(request: HBRequest) async throws -> Session?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator\/getvalue(from:request:)","title":"func getValue(from: Session, request: HBRequest) async throws -> Value?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator","title":"HBAsyncSessionAuthenticator","type":"protocol"},{"title":"OTP","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/init(secret:length:hashfunction:)","title":"init(secret: String, length: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/secret","title":"let secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/compute(counter:)","title":"func compute(counter: UInt64) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hotp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hotp","title":"HOTP","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/init(secret:length:timestep:hashfunction:)","title":"init(secret: String, length: Int, timeStep: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/secret","title":"let secret: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/timestep","title":"let timeStep: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/compute(date:)","title":"func compute(date: Date) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/totp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/totp","title":"TOTP","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/sha1","title":"case sha1","type":"case"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/sha256","title":"case sha256","type":"case"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/sha512","title":"case sha512","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/otphashfunction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdauth\/otphashfunction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/otphashfunction","title":"OTPHashFunction","type":"enum"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/asyncsequenceresponsebodystreamer\/init(_:)","title":"init(ByteBufferSequence)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/asyncsequenceresponsebodystreamer\/read(on:)","title":"func read(on: EventLoop) -> EventLoopFuture<HBStreamerOutput>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/asyncsequenceresponsebodystreamer","title":"AsyncSequenceResponseBodyStreamer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver\/init(eventloopgroup:)","title":"init(eventLoopGroup: EventLoopGroup)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver\/create(key:value:expires:request:)-3qfgj","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver\/get(key:as:request:)-8rz6e","title":"func get<Object>(key: String, as: Object.Type, request: HBRequest) -> EventLoopFuture<Object?>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver\/remove(key:request:)","title":"func remove(key: String, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver\/set(key:value:expires:request:)-58edz","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver\/shutdown()","title":"func shutdown()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver\/create(key:value:expires:request:)-431hm","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver\/get(key:as:request:)-5whgx","title":"func get<Object>(key: String, as: Object.Type, request: HBRequest) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver\/set(key:value:expires:request:)-vzvg","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver","title":"HBMemoryPersistDriver","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbsendableextensible\/extensions","title":"var extensions: HBSendableExtensions<Self>","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbsendableextensible","title":"HBSendableExtensible","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/sessiondoesnotexist","title":"static var sessionDoesNotExist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error","title":"HBSessionStorage.Error","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/init(_:sessionid:)","title":"init(HBPersistDriver, sessionID: SessionIDStorage)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/delete(request:)-9aycx","title":"func delete(request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/delete(request:)-9ysop","title":"func delete(request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/load(as:request:)-5to2v","title":"func load<Session>(as: Session.Type, request: HBRequest) async throws -> Session?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/load(as:request:)-7hvkp","title":"func load<Session>(as: Session.Type, request: HBRequest) -> EventLoopFuture<Session?>","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/save(session:expiresin:request:)-3xyrl","title":"func save<Session>(session: Session, expiresIn: TimeAmount, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/save(session:expiresin:request:)-7qouz","title":"func save<Session>(session: Session, expiresIn: TimeAmount, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/update(session:expiresin:request:)-9uzr","title":"func update<Session>(session: Session, expiresIn: TimeAmount, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/update(session:expiresin:request:)-u6vk","title":"func update<Session>(session: Session, expiresIn: TimeAmount, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/sessionidstorage\/cookie(_:)","title":"case cookie(String)","type":"case"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/sessionidstorage\/header(_:)","title":"case header(String)","type":"case"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/sessionidstorage","title":"HBSessionStorage.SessionIDStorage","type":"enum"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage","title":"HBSessionStorage","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/asyncsequenceresponsegenerator\/response(from:)","title":"func response(from: HBRequest) -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/asyncsequenceresponsegenerator","title":"AsyncSequenceResponseGenerator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbsendableextensions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbsendableextensions\/exists(_:)","title":"func exists<Type>(KeyPath<ParentObject, Type>) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbsendableextensions\/get(_:)-a367","title":"func get<Type>(KeyPath<ParentObject, Type?>) -> Type?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbsendableextensions\/get(_:)-vcwg","title":"func get<Type>(KeyPath<ParentObject, Type>) -> Type?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbsendableextensions\/get(_:error:)","title":"func get<Type>(KeyPath<ParentObject, Type>, error: StaticString?) -> Type","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbsendableextensions\/set(_:value:)","title":"func set<Type>(KeyPath<ParentObject, Type>, value: Type)","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbsendableextensions","title":"HBSendableExtensions","type":"struct"}],"path":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcompression\/httpdecompressionlimit\/none","title":"static var none: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcompression\/httpdecompressionlimit\/ratio(_:)","title":"static func ratio(Double) -> HTTPDecompressionLimit","type":"method"},{"path":"\/documentation\/hummingbirdcompression\/httpdecompressionlimit\/size(_:)","title":"static func size(Int) -> HTTPDecompressionLimit","type":"method"}],"path":"\/documentation\/hummingbirdcompression\/httpdecompressionlimit","title":"HTTPDecompressionLimit","type":"struct"}],"path":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression","type":"module"},{"children":[{"title":"Server","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct\/init(address:servername:maxuploadsize:maxstreamingbuffersize:backlog:reuseaddress:tcpnodelay:withpipeliningassistance:idletimeoutconfiguration:)","title":"init(address: HBBindAddress, serverName: String?, maxUploadSize: Int, maxStreamingBufferSize: Int, backlog: Int, reuseAddress: Bool, tcpNoDelay: Bool, withPipeliningAssistance: Bool, idleTimeoutConfiguration: IdleStateHandlerConfiguration?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct\/address","title":"let address: HBBindAddress","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct\/backlog","title":"let backlog: Int","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct\/idletimeoutconfiguration","title":"let idleTimeoutConfiguration: IdleStateHandlerConfiguration?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct\/maxstreamingbuffersize","title":"let maxStreamingBufferSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct\/maxuploadsize","title":"let maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct\/reuseaddress","title":"let reuseAddress: Bool","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct\/servername","title":"let serverName: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct\/tcpnodelay","title":"let tcpNoDelay: Bool","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct\/withpipeliningassistance","title":"let withPipeliningAssistance: Bool","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.struct","title":"HBHTTPServer.Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/idlestatehandlerconfiguration\/init(readtimeout:writetimeout:)","title":"init(readTimeout: TimeAmount, writeTimeout: TimeAmount)","type":"init"}],"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/idlestatehandlerconfiguration","title":"HBHTTPServer.IdleStateHandlerConfiguration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/init(group:configuration:)","title":"init(group: EventLoopGroup, configuration: Configuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/channel","title":"var channel: Channel?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/configuration-swift.property","title":"let configuration: Configuration","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/eventloopgroup","title":"let eventLoopGroup: EventLoopGroup","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/httpchannelinitializer","title":"var httpChannelInitializer: HBChannelInitializer","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/port","title":"var port: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/addchannelhandler(_:)","title":"func addChannelHandler(() -> RemovableChannelHandler) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/addhttp2upgrade(tlsconfiguration:)","title":"func addHTTP2Upgrade(tlsConfiguration: TLSConfiguration) throws -> HBHTTPServer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/addhttp2upgrade(tlsconfiguration:idlereadtimeout:)","title":"func addHTTP2Upgrade(tlsConfiguration: TLSConfiguration, idleReadTimeout: TimeAmount) throws -> HBHTTPServer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/addrequestdecompression(limit:threadpool:)","title":"func addRequestDecompression(limit: HTTPDecompressionLimit, threadPool: NIOThreadPool?) -> HBHTTPServer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/addresponsecompression(threadpool:threadpoolthreshold:)","title":"func addResponseCompression(threadPool: NIOThreadPool?, threadPoolThreshold: Int) -> HBHTTPServer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/addtls(tlsconfiguration:)","title":"func addTLS(tlsConfiguration: TLSConfiguration) throws -> HBHTTPServer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/addtlschannelhandler(_:)","title":"func addTLSChannelHandler(() -> RemovableChannelHandler) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/addwebsocketupgrade(maxframesize:extensions:logger:shouldupgrade:onupgrade:)","title":"func addWebSocketUpgrade(maxFrameSize: Int, extensions: [HBWebSocketExtensionFactory], logger: Logger, shouldUpgrade: (Channel, HTTPRequestHead) -> EventLoopFuture<HTTPHeaders?>, onUpgrade: (HBWebSocket, HTTPRequestHead) -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/getchildchannelhandlers(responder:)","title":"func getChildChannelHandlers(responder: HBHTTPResponder) -> [RemovableChannelHandler]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/start(responder:)","title":"func start(responder: HBHTTPResponder) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/stop()","title":"func stop() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/wait()","title":"func wait() throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/error\/connectionclosing","title":"case connectionClosing","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/error\/servernotrunning","title":"case serverNotRunning","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbhttpserver\/error","title":"HBHTTPServer.Error","type":"enum"}],"path":"\/documentation\/hummingbirdcore\/hbhttpserver","title":"HBHTTPServer","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-7sdyn","title":"var logger: Logger","type":"property"}],"title":"HBHTTPResponder Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-9ouqb","title":"var logger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-22q9a","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"}],"title":"HBHTTPResponder Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-8f1ye","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-7wx29","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"title":"HBHTTPResponder Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-65gds","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpresponder\/respond(to:context:oncomplete:)","title":"func respond(to: HBHTTPRequest, context: ChannelHandlerContext, onComplete: (Result<HBHTTPResponse, Error>) -> Void)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbhttpresponder","title":"HBHTTPResponder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdcore\/hbchannelinitializer\/addprotocolupgrader(_:)-5kbqw","title":"func addProtocolUpgrader(HTTPServerProtocolUpgrader)","type":"method"}],"title":"HBChannelInitializer Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdcore\/hbchannelinitializer\/addprotocolupgrader(_:)-7f151","title":"func addProtocolUpgrader(HTTPServerProtocolUpgrader)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbchannelinitializer\/initialize(channel:childhandlers:configuration:)","title":"func initialize(channel: Channel, childHandlers: [RemovableChannelHandler], configuration: HBHTTPServer.Configuration) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbchannelinitializer","title":"HBChannelInitializer","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channelinitializer\/init(upgraders:)","title":"init(upgraders: [HTTPServerProtocolUpgrader])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channelinitializer\/addprotocolupgrader(_:)-8qrze","title":"func addProtocolUpgrader(HTTPServerProtocolUpgrader)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/http1channelinitializer\/initialize(channel:childhandlers:configuration:)","title":"func initialize(channel: Channel, childHandlers: [RemovableChannelHandler], configuration: HBHTTPServer.Configuration) -> EventLoopFuture<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channelinitializer\/addprotocolupgrader(_:)-9mhyy","title":"func addProtocolUpgrader(HTTPServerProtocolUpgrader)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/http1channelinitializer\/hbchannelinitializer-implementations","title":"HBChannelInitializer Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/http1channelinitializer","title":"HTTP1ChannelInitializer","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbbindaddress\/custom(_:)","title":"case custom((HTTPServerBootstrap) -> EventLoopFuture<Channel>)","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbbindaddress\/hostname(_:port:)","title":"case hostname(String, port: Int)","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbbindaddress\/unixdomainsocket(path:)","title":"case unixDomainSocket(path: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbbindaddress\/host","title":"var host: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbbindaddress\/port","title":"var port: Int?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbbindaddress\/unixdomainsocketpath","title":"var unixDomainSocketPath: String?","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbbindaddress","title":"HBBindAddress","type":"enum"},{"title":"Request","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttprequest\/body","title":"var body: HBRequestBody","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttprequest\/head","title":"var head: HTTPRequestHead","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttprequest\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbhttprequest\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbhttprequest","title":"HBHTTPRequest","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbody\/bytebuffer(_:)","title":"case byteBuffer(ByteBuffer?)","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbody\/stream(_:)","title":"case stream(HBByteBufferStreamer)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbody\/buffer","title":"var buffer: ByteBuffer?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbody\/stream","title":"var stream: HBStreamerProtocol?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(maxsize:)","title":"func consumeBody(maxSize: Int) async throws -> ByteBuffer?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(maxsize:on:)","title":"func consumeBody(maxSize: Int, on: EventLoop) -> EventLoopFuture<ByteBuffer?>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(on:)","title":"func consumeBody(on: EventLoop) -> EventLoopFuture<ByteBuffer?>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbody\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbrequestbody\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbrequestbody","title":"HBRequestBody","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/init(eventloop:maxsize:maxstreamingbuffersize:)","title":"init(eventLoop: EventLoop, maxSize: Int, maxStreamingBufferSize: Int?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/consume()-y5w0","title":"func consume() -> EventLoopFuture<HBStreamerOutput>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/consume(on:)","title":"func consume(on: EventLoop) -> EventLoopFuture<HBStreamerOutput>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/consumeall(_:)","title":"func consumeAll((ByteBuffer) -> EventLoopFuture<Void>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/consumeall(on:_:)","title":"func consumeAll(on: EventLoop, (ByteBuffer) -> EventLoopFuture<Void>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/feed(_:)","title":"func feed(FeedInput)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/feed(buffer:)","title":"func feed(buffer: ByteBuffer) -> EventLoopFuture<Void>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/feedinput\/bytebuffer(_:)","title":"case byteBuffer(ByteBuffer)","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/feedinput\/end","title":"case end","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/feedinput\/error(_:)","title":"case error(Error)","type":"case"}],"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/feedinput","title":"HBByteBufferStreamer.FeedInput","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/streamererror\/bodydropped","title":"case bodyDropped","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/streamererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/streamererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/streamererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/streamererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/streamererror","title":"HBByteBufferStreamer.StreamerError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/sequence","title":"var sequence: HBRequestBodyStreamerSequence","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/consume()-64tlf","title":"func consume() async throws -> HBStreamerOutput","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/hbstreamerprotocol-implementations","title":"HBStreamerProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer","title":"HBByteBufferStreamer","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbstreamerprotocol\/sequence","title":"var sequence: HBRequestBodyStreamerSequence","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbstreamerprotocol\/consume()","title":"func consume() async throws -> HBStreamerOutput","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamerprotocol\/consume(on:)","title":"func consume(on: EventLoop) -> EventLoopFuture<HBStreamerOutput>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamerprotocol\/consumeall(on:_:)","title":"func consumeAll(on: EventLoop, (ByteBuffer) -> EventLoopFuture<Void>) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbstreamerprotocol","title":"HBStreamerProtocol","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/asynciterator\/next()","title":"func next() async throws -> ByteBuffer?","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/asynciterator","title":"HBRequestBodyStreamerSequence.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/element","title":"HBRequestBodyStreamerSequence.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/collect(upto:)","title":"func collect(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/collect(upto:into:)","title":"func collect(upTo: Int, into: inout ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/compactmap(_:)-71hsq","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/compactmap(_:)-77zt9","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/flatmap(_:)-4n6c6","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/flatmap(_:)-6ynpa","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/map(_:)-4p6zd","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/map(_:)-9rev8","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence","title":"HBRequestBodyStreamerSequence","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbstreameroutput\/bytebuffer(_:)","title":"case byteBuffer(ByteBuffer)","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbstreameroutput\/end","title":"case end","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbstreameroutput\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/hbstreameroutput\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbstreameroutput","title":"HBStreamerOutput","type":"enum"},{"title":"Response","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpresponse\/init(head:body:)","title":"init(head: HTTPResponseHead, body: HBResponseBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpresponse\/body","title":"var body: HBResponseBody","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpresponse\/head","title":"var head: HTTPResponseHead","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpresponse\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbhttpresponse\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbhttpresponse","title":"HBHTTPResponse","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbresponsebody\/bytebuffer(_:)","title":"case byteBuffer(ByteBuffer)","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbresponsebody\/empty","title":"case empty","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbresponsebody\/stream(_:)-swift.enum.case","title":"case stream(HBResponseBodyStreamer)","type":"case"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbresponsebody\/stream(_:)-swift.type.method","title":"static func stream(HBStreamerProtocol) -> HBResponseBody","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbresponsebody\/streamcallback(_:)","title":"static func streamCallback(HBStreamCallback) -> HBResponseBody","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbresponsebody\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbresponsebody\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbresponsebody","title":"HBResponseBody","type":"enum"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbresponsebodystreamer\/read(on:)","title":"func read(on: EventLoop) -> EventLoopFuture<HBStreamerOutput>","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbresponsebodystreamer","title":"HBResponseBodyStreamer","type":"protocol"},{"path":"\/documentation\/hummingbirdcore\/hbstreamcallback","title":"HBStreamCallback","type":"typealias"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttperror\/init(_:)","title":"init(HTTPResponseStatus)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/hbhttperror\/init(_:message:)","title":"init(HTTPResponseStatus, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttperror\/body","title":"let body: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttperror\/headers","title":"let headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttperror\/status","title":"let status: HTTPResponseStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttperror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttperror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> HBResponse","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttperror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbhttperror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbhttperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttperror\/response(version:allocator:)","title":"func response(version: HTTPVersion, allocator: ByteBufferAllocator) -> HBHTTPResponse","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbhttperror\/hbhttpresponseerror-implementations","title":"HBHTTPResponseError Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbhttperror","title":"HBHTTPError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpresponseerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbhttpresponseerror\/status","title":"var status: HTTPResponseStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpresponseerror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpresponseerror\/response(version:allocator:)","title":"func response(version: HTTPVersion, allocator: ByteBufferAllocator) -> HBHTTPResponse","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbhttpresponseerror","title":"HBHTTPResponseError","type":"protocol"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbootstrap\/bind(host:port:)","title":"func bind(host: String, port: Int) -> EventLoopFuture<Channel>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbootstrap\/bind(unixdomainsocketpath:)","title":"func bind(unixDomainSocketPath: String) -> EventLoopFuture<Channel>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbootstrap\/childchanneloption(_:value:)","title":"func childChannelOption<Option>(Option, value: Option.Value) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbootstrap\/serverchanneloption(_:value:)","title":"func serverChannelOption<Option>(Option, value: Option.Value) -> Self","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpserverbootstrap","title":"HTTPServerBootstrap","type":"protocol"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbsendable","title":"HBSendable","type":"typealias"}],"path":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","type":"module"},{"path":"\/documentation\/hummingbirdcorexct","title":"HummingbirdCoreXCT","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/init(fluent:databaseid:)","title":"init(fluent: HBFluent, databaseID: DatabaseID?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/create(key:value:expires:request:)-8yso0","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/get(key:as:request:)-5ei7e","title":"func get<Object>(key: String, as: Object.Type, request: HBRequest) -> EventLoopFuture<Object?>","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/remove(key:request:)","title":"func remove(key: String, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/set(key:value:expires:request:)-1vn3p","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/shutdown()","title":"func shutdown()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/create(key:value:expires:request:)-7tsl2","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/get(key:as:request:)-3huz6","title":"func get<Object>(key: String, as: Object.Type, request: HBRequest) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/set(key:value:expires:request:)-7jter","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver","title":"HBFluentPersistDriver","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/history-swift.class\/enabled","title":"var enabled: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/history-swift.class\/history","title":"var history: QueryHistory?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/history-swift.class\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/history-swift.class\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/history-swift.class\/stop()","title":"func stop()","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/hbfluent\/history-swift.class","title":"HBFluent.History","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/init(eventloopgroup:threadpool:logger:)","title":"init(eventLoopGroup: EventLoopGroup, threadPool: NIOThreadPool, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/databases","title":"let databases: Databases","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/eventloopgroup","title":"let eventLoopGroup: EventLoopGroup","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/history-swift.property","title":"let history: History","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/migrations","title":"let migrations: Migrations","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/migrator","title":"var migrator: Migrator","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/db(_:on:)","title":"func db(DatabaseID?, on: EventLoop) -> Database","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/migrate()-6ox0a","title":"func migrate() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/migrate()-8w5cy","title":"func migrate() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/revert()-1escp","title":"func revert() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/revert()-40yss","title":"func revert() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/shutdown()","title":"func shutdown()","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/hbfluent","title":"HBFluent","type":"struct"}],"path":"\/documentation\/hummingbirdfluent","title":"HummingbirdFluent","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.property","title":"var dataDecodingStrategy: JSONDecoder.DataDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.property","title":"var dateDecodingStrategy: JSONDecoder.DateDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.property","title":"var keyDecodingStrategy: JSONDecoder.KeyDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","title":"var nonConformingFloatDecodingStrategy: JSONDecoder.NonConformingFloatDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:)-1fi5j","title":"func decode<T>(T.Type, from: Data) throws -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/base64","title":"case base64","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/custom(_:)","title":"case custom((Decoder) throws -> Data)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/deferredtodata","title":"case deferredToData","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum","title":"JSONDecoder.DataDecodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/custom(_:)","title":"case custom((Decoder) throws -> Date)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum","title":"JSONDecoder.DateDecodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","title":"case convertFromSnakeCase","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum\/custom(_:)","title":"case custom(([CodingKey]) -> CodingKey)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum\/usedefaultkeys","title":"case useDefaultKeys","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum","title":"JSONDecoder.KeyDecodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/convertfromstring(positiveinfinity:negativeinfinity:nan:)","title":"case convertFromString(positiveInfinity: String, negativeInfinity: String, nan: String)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/throw","title":"case `throw`","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","title":"JSONDecoder.NonConformingFloatDecodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:)-2u0lt","title":"func decode<T>(T.Type, from: HBRequest) throws -> T","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/hbrequestdecoder-implementations","title":"HBRequestDecoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder","title":"JSONDecoder","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/prettyprinted","title":"static let prettyPrinted: JSONEncoder.OutputFormatting","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/sortedkeys","title":"static let sortedKeys: JSONEncoder.OutputFormatting","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/withoutescapingslashes","title":"static let withoutEscapingSlashes: JSONEncoder.OutputFormatting","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct","title":"JSONEncoder.OutputFormatting","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.property","title":"var dataEncodingStrategy: JSONEncoder.DataEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.property","title":"var dateEncodingStrategy: JSONEncoder.DateEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.property","title":"var keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.property","title":"var nonConformingFloatEncodingStrategy: JSONEncoder.NonConformingFloatEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.property","title":"var outputFormatting: JSONEncoder.OutputFormatting","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/encode(_:)","title":"func encode<T>(T) throws -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum\/base64","title":"case base64","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum\/custom(_:)","title":"case custom((Data, Encoder) throws -> Void)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum\/deferredtodata","title":"case deferredToData","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum","title":"JSONEncoder.DataEncodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/custom(_:)","title":"case custom((Date, Encoder) throws -> Void)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum","title":"JSONEncoder.DateEncodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/converttosnakecase","title":"case convertToSnakeCase","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/custom(_:)","title":"case custom(([CodingKey]) -> CodingKey)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/usedefaultkeys","title":"case useDefaultKeys","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum","title":"JSONEncoder.KeyEncodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/converttostring(positiveinfinity:negativeinfinity:nan:)","title":"case convertToString(positiveInfinity: String, negativeInfinity: String, nan: String)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw","title":"case `throw`","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","title":"JSONEncoder.NonConformingFloatEncodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/encode(_:from:)","title":"func encode<T>(T, from: HBRequest) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/hbresponseencoder-implementations","title":"HBResponseEncoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder","title":"JSONEncoder","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol\/init(_:)","title":"init([(HBMediaType, [Value])])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol\/getcachecontrolheader(for:)","title":"func getCacheControlHeader(for: String) -> String?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol\/value\/maxage(_:)","title":"case maxAge(Int)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol\/value\/mustrevalidate","title":"case mustRevalidate","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol\/value\/nocache","title":"case noCache","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol\/value\/nostore","title":"case noStore","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol\/value\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol\/value\/public","title":"case `public`","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol\/value\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol\/value","title":"HBCacheControl.Value","type":"enum"}],"path":"\/documentation\/hummingbirdfoundation\/hbcachecontrol","title":"HBCacheControl","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/properties-swift.struct\/subscript(_:)","title":"subscript(Substring) -> String?","type":"subscript"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/properties-swift.struct","title":"HBCookie.Properties","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/init(name:value:expires:maxage:domain:path:secure:httponly:)","title":"init(name: String, value: String, expires: Date?, maxAge: Int?, domain: String?, path: String?, secure: Bool, httpOnly: Bool)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/init(name:value:expires:maxage:domain:path:secure:httponly:samesite:)","title":"init(name: String, value: String, expires: Date?, maxAge: Int?, domain: String?, path: String?, secure: Bool, httpOnly: Bool, sameSite: SameSite)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/domain","title":"var domain: String?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/expires","title":"var expires: Date?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/httponly","title":"var httpOnly: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/maxage","title":"var maxAge: Int?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/path","title":"var path: String?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/properties-swift.property","title":"let properties: Properties","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.property","title":"var sameSite: SameSite?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/secure","title":"var secure: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/value","title":"let value: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/lax","title":"case lax","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/secure","title":"case secure","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum","title":"HBCookie.SameSite","type":"enum"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookie","title":"HBCookie","type":"struct"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookies\/subscript(_:)","title":"subscript(String) -> HBCookie?","type":"subscript"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookies","title":"HBCookies","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbfileio\/init(application:)","title":"init(application: HBApplication)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbfileio\/loadfile(path:context:logger:)-2jbrr","title":"func loadFile(path: String, context: HBRequestContext, logger: Logger) -> EventLoopFuture<HBResponseBody>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbfileio\/loadfile(path:context:logger:)-2jkbd","title":"func loadFile(path: String, context: HBRequestContext, logger: Logger) async throws -> HBResponseBody","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbfileio\/loadfile(path:range:context:logger:)-4t72x","title":"func loadFile(path: String, range: ClosedRange<Int>, context: HBRequestContext, logger: Logger) -> EventLoopFuture<(HBResponseBody, Int)>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbfileio\/loadfile(path:range:context:logger:)-7npaa","title":"func loadFile(path: String, range: ClosedRange<Int>, context: HBRequestContext, logger: Logger) async throws -> (HBResponseBody, Int)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbfileio\/writefile(contents:path:context:logger:)-1736n","title":"func writeFile(contents: HBRequestBody, path: String, context: HBRequestContext, logger: Logger) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/hbfileio\/writefile(contents:path:context:logger:)-xu70","title":"func writeFile(contents: HBRequestBody, path: String, context: HBRequestContext, logger: Logger) async throws","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbfileio","title":"HBFileIO","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware\/init(_:cachecontrol:searchforindexhtml:application:)","title":"init(String, cacheControl: HBCacheControl, searchForIndexHtml: Bool, application: HBApplication)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware\/apply(to:next:)","title":"func apply(to: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse>","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware","title":"HBFileMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/init(datedecodingstrategy:userinfo:)","title":"init(dateDecodingStrategy: URLEncodedFormDecoder.DateDecodingStrategy, userInfo: [CodingUserInfoKey : Any])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.property","title":"var dateDecodingStrategy: DateDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/decode(_:from:)-93yp9","title":"func decode<T>(T.Type, from: String) throws -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/custom(_:)","title":"case custom((_ decoder: Decoder) throws -> Date)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum","title":"URLEncodedFormDecoder.DateDecodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/decode(_:from:)-48zjn","title":"func decode<T>(T.Type, from: HBRequest) throws -> T","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/hbrequestdecoder-implementations","title":"HBRequestDecoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder","title":"URLEncodedFormDecoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/init(dateencodingstrategy:userinfo:additionalkeys:)","title":"init(dateEncodingStrategy: URLEncodedFormEncoder.DateEncodingStrategy, userInfo: [CodingUserInfoKey : Any], additionalKeys: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.property","title":"var dateEncodingStrategy: DateEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/encode(_:)","title":"func encode<T>(T) throws -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/custom(_:)","title":"case custom((Date, Encoder) throws -> Void)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum","title":"URLEncodedFormEncoder.DateEncodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/encode(_:from:)","title":"func encode<T>(T, from: HBRequest) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/hbresponseencoder-implementations","title":"HBResponseEncoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder","title":"URLEncodedFormEncoder","type":"struct"}],"path":"\/documentation\/hummingbirdfoundation","title":"HummingbirdFoundation","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channelinitializer\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdhttp2\/http2channelinitializer\/init(idlereadtimeout:)","title":"init(idleReadTimeout: TimeAmount?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channelinitializer\/initialize(channel:childhandlers:configuration:)","title":"func initialize(channel: Channel, childHandlers: [RemovableChannelHandler], configuration: HBHTTPServer.Configuration) -> EventLoopFuture<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channelinitializer\/addprotocolupgrader(_:)","title":"func addProtocolUpgrader(HTTPServerProtocolUpgrader)","type":"method"}],"path":"\/documentation\/hummingbirdhttp2\/http2channelinitializer\/hbchannelinitializer-implementations","title":"HBChannelInitializer Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdhttp2\/http2channelinitializer","title":"HTTP2ChannelInitializer","type":"struct"}],"path":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","type":"module"},{"children":[{"title":"Jobs","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjob\/execute(on:logger:)","title":"func execute(on: EventLoop, logger: Logger) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdjobs\/hbjob\/maxretrycount-5xtww","title":"static var maxRetryCount: Int","type":"property"}],"title":"HBJob Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdjobs\/hbjob\/maxretrycount-7lh34","title":"static var maxRetryCount: Int","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/hbjob\/name","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjob\/register()","title":"static func register()","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbjob","title":"HBJob","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbasyncjob\/execute(logger:)","title":"func execute(logger: Logger) async throws","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbasyncjob","title":"HBAsyncJob","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobcontainer\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobcontainer\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/hbjobcontainer\/job","title":"let job: HBJob","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobcontainer\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbjobcontainer","title":"HBJobContainer","type":"struct"},{"title":"Queues","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/polltime-5jojl","title":"var pollTime: TimeAmount","type":"property"}],"title":"HBJobQueue Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/polltime-5iwf1","title":"var pollTime: TimeAmount","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/shutdownerror","title":"var shutdownError: Error","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/enqueue(_:on:)-7yik0","title":"func enqueue(HBJob, on: EventLoop) -> EventLoopFuture<JobIdentifier>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/enqueue(_:on:)-emuu","title":"func enqueue(HBJob, on: EventLoop) async throws -> JobIdentifier","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/finished(jobid:on:)-8il1v","title":"func finished(jobId: JobIdentifier, on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"title":"HBJobQueue Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/finished(jobid:on:)-140m1","title":"func finished(jobId: JobIdentifier, on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/oninit(on:)-7rpr","title":"func onInit(on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"title":"HBJobQueue Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/oninit(on:)-5ltev","title":"func onInit(on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/pop(on:)","title":"func pop(on: EventLoop) -> EventLoopFuture<HBQueuedJob?>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/push(_:on:)","title":"func push(HBJob, on: EventLoop) -> EventLoopFuture<HBQueuedJob>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/shutdown(on:)-72oge","title":"func shutdown(on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"title":"HBJobQueue Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/shutdown(on:)-37fd5","title":"func shutdown(on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueue","title":"HBJobQueue","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuefactory\/init(create:)","title":"init(create: (HBApplication) -> HBJobQueue)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuefactory\/memory","title":"static var memory: HBJobQueueFactory","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuefactory\/redis(configuration:)","title":"static func redis(configuration: HBRedisJobQueue.Configuration) -> HBJobQueueFactory","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuefactory\/redis(id:configuration:)","title":"static func redis(id: RedisConnectionPoolGroupIdentifier, configuration: HBRedisJobQueue.Configuration) -> HBJobQueueFactory","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueuefactory","title":"HBJobQueueFactory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid\/id","title":"let id: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid\/default","title":"static var `default`: HBJobQueueId","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueueid","title":"HBJobQueueId","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob\/init(_:)","title":"init(HBJob)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob\/init(id:job:)","title":"init(id: JobIdentifier, job: HBJobContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob\/id","title":"let id: JobIdentifier","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob\/job","title":"let job: HBJobContainer","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob","title":"HBQueuedJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/init(eventloop:)","title":"init(eventLoop: EventLoop)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/eventloop","title":"let eventLoop: EventLoop","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/pop(on:)","title":"func pop(on: EventLoop) -> EventLoopFuture<HBQueuedJob?>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/push(_:on:)","title":"func push(HBJob, on: EventLoop) -> EventLoopFuture<HBQueuedJob>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/shutdown(on:)","title":"func shutdown(on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/polltime","title":"var pollTime: TimeAmount","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/shutdownerror","title":"var shutdownError: Error","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/enqueue(_:on:)","title":"func enqueue(HBJob, on: EventLoop) -> EventLoopFuture<JobIdentifier>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/finished(jobid:on:)","title":"func finished(jobId: JobIdentifier, on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/oninit(on:)","title":"func onInit(on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/hbjobqueue-implementations","title":"HBJobQueue Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","title":"HBMemoryJobQueue","type":"class"},{"title":"Error","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/decodejobfailed","title":"static var decodeJobFailed: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobqueueerror","title":"JobQueueError","type":"struct"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler\/init(queue:numworkers:eventloopgroup:logger:)","title":"init(queue: HBJobQueue, numWorkers: Int, eventLoopGroup: EventLoopGroup, logger: Logger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler\/enqueue(_:on:)-61rn2","title":"func enqueue(HBJob, on: EventLoop) -> EventLoopFuture<JobIdentifier>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler\/enqueue(_:on:)-85292","title":"func enqueue(HBJob, on: EventLoop) async throws -> JobIdentifier","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler\/shutdown()-1aaza","title":"func shutdown() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler\/shutdown()-5krp","title":"func shutdown() async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler\/start()","title":"func start()","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","title":"HBJobQueueHandler","type":"class"}],"path":"\/documentation\/hummingbirdjobs","title":"HummingbirdJobs","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/configuration\/init(queuekey:polltime:rerunprocessing:)","title":"init(queueKey: String, pollTime: TimeAmount, rerunProcessing: Bool)","type":"init"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/configuration","title":"HBRedisJobQueue.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/init(_:configuration:)-11htu","title":"init(HBApplication, configuration: Configuration)","type":"init"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/init(_:configuration:)-8qlgg","title":"init(RedisConnectionPoolGroup, configuration: Configuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/polltime","title":"var pollTime: TimeAmount","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/finished(jobid:on:)","title":"func finished(jobId: JobIdentifier, on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/oninit(on:)","title":"func onInit(on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/pop(on:)","title":"func pop(on: EventLoop) -> EventLoopFuture<HBQueuedJob?>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/push(_:on:)","title":"func push(HBJob, on: EventLoop) -> EventLoopFuture<HBQueuedJob>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/rerunprocessing(on:)","title":"func rerunProcessing(on: EventLoop) -> EventLoopFuture<Void>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror\/jobmissing(_:)","title":"case jobMissing(JobIdentifier)","type":"case"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror\/unexpectedrediskeytype","title":"case unexpectedRedisKeyType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror","title":"HBRedisJobQueue.RedisQueueError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/shutdownerror","title":"var shutdownError: Error","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/enqueue(_:on:)","title":"func enqueue(HBJob, on: EventLoop) -> EventLoopFuture<JobIdentifier>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/shutdown(on:)","title":"func shutdown(on: EventLoop) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/hbjobqueue-implementations","title":"HBJobQueue Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue","title":"HBRedisJobQueue","type":"class"}],"path":"\/documentation\/hummingbirdjobsredis","title":"HummingbirdJobsRedis","type":"module"},{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/hblambda\/event","title":"Event","type":"associatedtype"},{"path":"\/documentation\/hummingbirdlambda\/hblambda\/output","title":"Output","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/hblambda\/init(_:)","title":"init(HBApplication) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-50i4f","title":"func output(from: HBResponse) -> Output","type":"method"},{"path":"\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-50vf3","title":"func output(from: HBResponse) -> Output","type":"method"}],"title":"HBLambda Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-3o008","title":"func output(from: HBResponse) -> Output","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdlambda\/hblambda\/request(context:application:from:)-9q8wl","title":"func request(context: LambdaContext, application: HBApplication, from: Event) throws -> HBRequest","type":"method"},{"path":"\/documentation\/hummingbirdlambda\/hblambda\/request(context:application:from:)-tsx4","title":"func request(context: LambdaContext, application: HBApplication, from: Event) throws -> HBRequest","type":"method"}],"title":"HBLambda Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdlambda\/hblambda\/request(context:application:from:)-43t8b","title":"func request(context: LambdaContext, application: HBApplication, from: Event) throws -> HBRequest","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/hblambda\/main()","title":"static func main() throws","type":"method"}],"path":"\/documentation\/hummingbirdlambda\/hblambda","title":"HBLambda","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/hblambdahandler\/handle(_:context:)","title":"func handle(Event, context: LambdaContext) -> EventLoopFuture<Output>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/hblambdahandler\/event","title":"HBLambdaHandler.Event","type":"typealias"},{"path":"\/documentation\/hummingbirdlambda\/hblambdahandler\/output","title":"HBLambdaHandler.Output","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/hblambdahandler\/makehandler(context:)","title":"static func makeHandler(context: LambdaInitializationContext) -> EventLoopFuture<`Self`>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/hblambdahandler\/decoder","title":"var decoder: LambdaCodableDecoder","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/hblambdahandler\/encoder","title":"var encoder: LambdaCodableEncoder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/hblambdahandler\/decode(buffer:)","title":"func decode(buffer: ByteBuffer) throws -> Self.Event","type":"method"},{"path":"\/documentation\/hummingbirdlambda\/hblambdahandler\/encode(value:into:)","title":"func encode(value: Self.Output, into: inout ByteBuffer) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/hblambdahandler\/main()","title":"static func main()","type":"method"}],"path":"\/documentation\/hummingbirdlambda\/hblambdahandler\/eventlooplambdahandler-implementations","title":"EventLoopLambdaHandler Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdlambda\/hblambdahandler","title":"HBLambdaHandler","type":"struct"}],"path":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","type":"module"},{"children":[{"title":"Additional Features","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/lambdas","title":"Lambdas","type":"article"},{"path":"\/documentation\/hummingbird\/pragmas","title":"Pragmas\/Configuration variables","type":"article"},{"path":"\/documentation\/hummingbird\/transforms","title":"Transforms","type":"article"},{"title":"Template Library","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror\/context","title":"let context: HBParser.Context","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror\/error","title":"let error: Error","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror\/filename","title":"let filename: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror","title":"HBMustacheLibrary.ParserError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/init(directory:withextension:)","title":"init(directory: String, withExtension: String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/gettemplate(named:)","title":"func getTemplate(named: String) -> HBMustacheTemplate?","type":"method"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/register(_:named:)-7rcdq","title":"func register(String, named: String) throws","type":"method"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/register(_:named:)-n0oe","title":"func register(HBMustacheTemplate, named: String)","type":"method"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/render(_:withtemplate:)","title":"func render(Any, withTemplate: String) -> String?","type":"method"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary","title":"HBMustacheLibrary","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/parsererror\/context","title":"let context: HBParser.Context","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/parsererror\/error","title":"let error: Swift.Error","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/parsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/parsererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/parsererror","title":"HBMustacheTemplate.ParserError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/init(string:)","title":"init(string: String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/render(_:)","title":"func render(Any) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/expectedsectionend","title":"case expectedSectionEnd","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/illegaltokeninsideinheritsection","title":"case illegalTokenInsideInheritSection","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/invalidconfigvariablesyntax","title":"case invalidConfigVariableSyntax","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/invalidsetdelimiter","title":"case invalidSetDelimiter","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/sectionclosenameincorrect","title":"case sectionCloseNameIncorrect","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/textinsideinheritsection","title":"case textInsideInheritSection","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/transformappliedtoinheritancesection","title":"case transformAppliedToInheritanceSection","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/unfinishedname","title":"case unfinishedName","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/unrecognisedconfigvariable","title":"case unrecognisedConfigVariable","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error","title":"HBMustacheTemplate.Error","type":"enum"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate","title":"HBMustacheTemplate","type":"class"},{"title":"Rendering","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable\/isnull","title":"var isNull: Bool","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable\/rendertext","title":"var renderText: String","type":"property"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable","title":"HBMustacheCustomRenderable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustacheparent\/child(named:)","title":"func child(named: String) -> Any?","type":"method"}],"path":"\/documentation\/hummingbirdmustache\/hbmustacheparent","title":"HBMustacheParent","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetransformable\/transform(_:)","title":"func transform(String) -> Any?","type":"method"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetransformable","title":"HBMustacheTransformable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelambda\/init(_:)","title":"init(Callback)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelambda\/callback","title":"HBMustacheLambda.Callback","type":"typealias"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachelambda","title":"HBMustacheLambda","type":"struct"},{"title":"Content Types","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachecontenttype\/escapetext(_:)","title":"func escapeText(String) -> String","type":"method"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachecontenttype","title":"HBMustacheContentType","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachecontenttypes\/register(_:named:)","title":"static func register(HBMustacheContentType, named: String)","type":"method"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachecontenttypes","title":"HBMustacheContentTypes","type":"enum"},{"title":"Miscellaneous","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbparser\/context\/columnnumber","title":"let columnNumber: Int","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbparser\/context\/line","title":"let line: String","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbparser\/context\/linenumber","title":"let lineNumber: Int","type":"property"}],"path":"\/documentation\/hummingbirdmustache\/hbparser\/context","title":"HBParser.Context","type":"struct"}],"path":"\/documentation\/hummingbirdmustache\/hbparser","title":"HBParser","type":"struct"}],"path":"\/documentation\/hummingbirdmustache","title":"HummingbirdMustache","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgrouparray\/default","title":"let `default`: RedisConnectionPoolGroup","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgrouparray\/addconnectionpool(id:configuration:logger:)","title":"func addConnectionPool(id: RedisConnectionPoolGroupIdentifier, configuration: HBRedisConfiguration, logger: Logger)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgrouparray\/subscript(_:)","title":"subscript(RedisConnectionPoolGroupIdentifier) -> RedisConnectionPoolGroup?","type":"subscript"}],"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgrouparray","title":"RedisConnectionPoolGroupArray","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/init(maximumconnectioncount:minimumconnectioncount:connectionbackofffactor:initialconnectionbackoffdelay:connectionretrytimeout:)","title":"init(maximumConnectionCount: RedisConnectionPoolSize, minimumConnectionCount: Int, connectionBackoffFactor: Float32, initialConnectionBackoffDelay: TimeAmount, connectionRetryTimeout: TimeAmount?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/connectionbackofffactor","title":"var connectionBackoffFactor: Float32","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/connectionretrytimeout","title":"var connectionRetryTimeout: TimeAmount?","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/initialconnectionbackoffdelay","title":"var initialConnectionBackoffDelay: TimeAmount","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/maximumconnectioncount","title":"var maximumConnectionCount: RedisConnectionPoolSize","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/minimumconnectioncount","title":"var minimumConnectionCount: Int","type":"property"}],"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions","title":"HBRedisConfiguration.PoolOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/init(hostname:port:password:database:pool:)","title":"init(hostname: String, port: Int, password: String?, database: Int?, pool: PoolOptions) throws","type":"init"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/init(serveraddresses:password:database:pool:)","title":"init(serverAddresses: [SocketAddress], password: String?, database: Int?, pool: PoolOptions) throws","type":"init"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/init(url:pool:)-5y2mz","title":"init(url: URL, pool: PoolOptions) throws","type":"init"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/init(url:pool:)-6wkm4","title":"init(url: String, pool: PoolOptions) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/database","title":"var database: Int?","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/password","title":"var password: String?","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pool","title":"var pool: PoolOptions","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/serveraddresses","title":"var serverAddresses: [SocketAddress]","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/validationerror","title":"HBRedisConfiguration.ValidationError","type":"typealias"}],"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration","title":"HBRedisConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/init(redisconnectionpoolgroup:)","title":"init(redisConnectionPoolGroup: RedisConnectionPoolGroup)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/create(key:value:expires:request:)-7tpmc","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/get(key:as:request:)-5olkv","title":"func get<Object>(key: String, as: Object.Type, request: HBRequest) -> EventLoopFuture<Object?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/remove(key:request:)","title":"func remove(key: String, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/set(key:value:expires:request:)-8pqv6","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) -> EventLoopFuture<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/create(key:value:expires:request:)-2eovl","title":"func create<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/get(key:as:request:)-49mrj","title":"func get<Object>(key: String, as: Object.Type, request: HBRequest) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/set(key:value:expires:request:)-8fu0","title":"func set<Object>(key: String, value: Object, expires: TimeAmount?, request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/shutdown()","title":"func shutdown()","type":"method"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver","title":"HBRedisPersistDriver","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/init(configuration:eventloopgroup:logger:)","title":"init(configuration: HBRedisConfiguration, eventLoopGroup: EventLoopGroup, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/pubsubclient","title":"var pubsubClient: RedisClient","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/pool(for:)","title":"func pool(for: EventLoop) -> RedisConnectionPool","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/shutdown()","title":"func shutdown() -> EventLoopFuture<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/eventloop","title":"var eventLoop: EventLoop","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/activechannels(matching:)","title":"func activeChannels(matching: String?) -> EventLoopFuture<[RedisChannelName]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/append(_:to:)","title":"func append<Value>(Value, to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/authorize(username:password:)","title":"func authorize(username: String, password: String) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/authorize(with:)","title":"func authorize(with: String) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/blpop(from:as:timeout:)","title":"func blpop<Value>(from: RedisKey, as: Value.Type, timeout: TimeAmount) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/blpop(from:timeout:)-2ving","title":"func blpop(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/blpop(from:timeout:)-73yw1","title":"func blpop(from: RedisKey..., timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/blpop(from:timeout:)-infz","title":"func blpop(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/blpop(from:timeout:valuetype:)-3ll07","title":"func blpop<Value>(from: [RedisKey], timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/blpop(from:timeout:valuetype:)-70j9h","title":"func blpop<Value>(from: RedisKey..., timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/brpop(from:as:timeout:)","title":"func brpop<Value>(from: RedisKey, as: Value.Type, timeout: TimeAmount) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/brpop(from:timeout:)-57h4a","title":"func brpop(from: RedisKey..., timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/brpop(from:timeout:)-5p6er","title":"func brpop(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/brpop(from:timeout:)-5pt91","title":"func brpop(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/brpop(from:timeout:valuetype:)-3waxg","title":"func brpop<Value>(from: RedisKey..., timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/brpop(from:timeout:valuetype:)-5pkpj","title":"func brpop<Value>(from: [RedisKey], timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/brpoplpush(from:to:timeout:)","title":"func brpoplpush(from: RedisKey, to: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/brpoplpush(from:to:timeout:valuetype:)","title":"func brpoplpush<Value>(from: RedisKey, to: RedisKey, timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/bzpopmax(from:timeout:)-5cdbm","title":"func bzpopmax(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(String, Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/bzpopmax(from:timeout:)-9n2go","title":"func bzpopmax(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<(Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/bzpopmin(from:timeout:)-31p1p","title":"func bzpopmin(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<(Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/bzpopmin(from:timeout:)-8ikz1","title":"func bzpopmin(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(String, Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/decrement(_:)","title":"func decrement(RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/decrement(_:by:)","title":"func decrement<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/delete(_:)","title":"func delete([RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/echo(_:)","title":"func echo(String) -> EventLoopFuture<String>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/exists(_:)","title":"func exists([RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/expire(_:after:)","title":"func expire(RedisKey, after: TimeAmount) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/get(_:)","title":"func get(RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/get(_:as:)","title":"func get<StoredType>(RedisKey, as: StoredType.Type) -> EventLoopFuture<StoredType?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/get(_:asjson:)","title":"func get<D>(RedisKey, asJSON: D.Type) -> EventLoopFuture<D?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hdel(_:from:)","title":"func hdel([String], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hexists(_:in:)","title":"func hexists(String, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hget(_:from:)","title":"func hget(String, from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hget(_:from:as:)","title":"func hget<Value>(String, from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hgetall(from:)","title":"func hgetall(from: RedisKey) -> EventLoopFuture<[String : RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hgetall(from:as:)","title":"func hgetall<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<[String : Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hincrby(_:field:in:)","title":"func hincrby<Value>(Value, field: String, in: RedisKey) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hincrbyfloat(_:field:in:)","title":"func hincrbyfloat<Value>(Value, field: String, in: RedisKey) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hkeys(in:)","title":"func hkeys(in: RedisKey) -> EventLoopFuture<[String]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hlen(of:)","title":"func hlen(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hmget(_:from:)","title":"func hmget([String], from: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hmget(_:from:as:)-5xwi8","title":"func hmget<Value>([String], from: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hmget(_:from:as:)-qf48","title":"func hmget<Value>(String..., from: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hmset(_:in:)","title":"func hmset<Value>([String : Value], in: RedisKey) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hscan(_:startingfrom:matching:count:)","title":"func hscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [String : RESPValue])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hscan(_:startingfrom:matching:count:valuetype:)","title":"func hscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [String : Value?])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hset(_:to:in:)","title":"func hset<Value>(String, to: Value, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hsetnx(_:to:in:)","title":"func hsetnx<Value>(String, to: Value, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hstrlen(of:in:)","title":"func hstrlen(of: String, in: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hvals(in:)","title":"func hvals(in: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/hvals(in:as:)","title":"func hvals<Value>(in: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/increment(_:)","title":"func increment(RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/increment(_:by:)-36hoy","title":"func increment<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/increment(_:by:)-7oke8","title":"func increment<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lindex(_:from:)","title":"func lindex(Int, from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lindex(_:from:as:)","title":"func lindex<Value>(Int, from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/linsert(_:into:after:)","title":"func linsert<Value>(Value, into: RedisKey, after: Value) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/linsert(_:into:before:)","title":"func linsert<Value>(Value, into: RedisKey, before: Value) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/llen(of:)","title":"func llen(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/logging(to:)","title":"func logging(to: Logger) -> RedisClient","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lpop(from:)","title":"func lpop(from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lpop(from:as:)","title":"func lpop<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lpush(_:into:)-1bkge","title":"func lpush<Value>([Value], into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lpush(_:into:)-4lm3g","title":"func lpush<Value>(Value..., into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lpushx(_:into:)","title":"func lpushx<Value>(Value, into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:firstindex:lastindex:)","title":"func lrange(from: RedisKey, firstIndex: Int, lastIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:firstindex:lastindex:as:)","title":"func lrange<Value>(from: RedisKey, firstIndex: Int, lastIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:fromindex:)","title":"func lrange(from: RedisKey, fromIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:fromindex:as:)","title":"func lrange<Value>(from: RedisKey, fromIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:indices:)-3kn1f","title":"func lrange(from: RedisKey, indices: ClosedRange<Int>) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:indices:)-5ztoa","title":"func lrange(from: RedisKey, indices: Range<Int>) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:indices:as:)-8ui8f","title":"func lrange<Value>(from: RedisKey, indices: Range<Int>, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:indices:as:)-9u2y1","title":"func lrange<Value>(from: RedisKey, indices: ClosedRange<Int>, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:throughindex:)","title":"func lrange(from: RedisKey, throughIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:throughindex:as:)","title":"func lrange<Value>(from: RedisKey, throughIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:uptoindex:)","title":"func lrange(from: RedisKey, upToIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrange(from:uptoindex:as:)","title":"func lrange<Value>(from: RedisKey, upToIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lrem(_:from:count:)","title":"func lrem<Value>(Value, from: RedisKey, count: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/lset(index:to:in:)","title":"func lset<Value>(index: Int, to: Value, in: RedisKey) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/ltrim(_:before:after:)","title":"func ltrim(RedisKey, before: Int, after: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/ltrim(_:keepingindices:)-1dye0","title":"func ltrim(RedisKey, keepingIndices: ClosedRange<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/ltrim(_:keepingindices:)-1m89g","title":"func ltrim(RedisKey, keepingIndices: Range<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/ltrim(_:keepingindices:)-5hpop","title":"func ltrim(RedisKey, keepingIndices: PartialRangeFrom<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/ltrim(_:keepingindices:)-63e0j","title":"func ltrim(RedisKey, keepingIndices: PartialRangeUpTo<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/ltrim(_:keepingindices:)-8yvja","title":"func ltrim(RedisKey, keepingIndices: PartialRangeThrough<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/mget(_:)","title":"func mget([RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/mget(_:as:)-4omia","title":"func mget<Value>([RedisKey], as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/mget(_:as:)-7yd4w","title":"func mget<Value>(RedisKey..., as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/mset(_:)","title":"func mset<Value>([RedisKey : Value]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/msetnx(_:)","title":"func msetnx<Value>([RedisKey : Value]) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/patternsubscribercount()","title":"func patternSubscriberCount() -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/ping(with:)","title":"func ping(with: String?) -> EventLoopFuture<String>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/psetex(_:to:expirationinmilliseconds:)","title":"func psetex<Value>(RedisKey, to: Value, expirationInMilliseconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/psetex(_:tojson:expirationinmilliseconds:)","title":"func psetex<Value>(RedisKey, toJSON: Value, expirationInMilliseconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/psubscribe(to:messagereceiver:onsubscribe:onunsubscribe:)","title":"func psubscribe(to: [String], messageReceiver: RedisSubscriptionMessageReceiver, onSubscribe: RedisSubscriptionChangeHandler?, onUnsubscribe: RedisSubscriptionChangeHandler?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/pttl(_:)","title":"func pttl(RedisKey) -> EventLoopFuture<RedisKey.Lifetime>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/publish(_:to:)","title":"func publish<Message>(Message, to: RedisChannelName) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/punsubscribe()","title":"func punsubscribe() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/punsubscribe(from:)","title":"func punsubscribe(from: [String]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/rpop(from:)","title":"func rpop(from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/rpop(from:as:)","title":"func rpop<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/rpoplpush(from:to:)","title":"func rpoplpush(from: RedisKey, to: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/rpoplpush(from:to:valuetype:)","title":"func rpoplpush<Value>(from: RedisKey, to: RedisKey, valueType: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/rpush(_:into:)-30o58","title":"func rpush<Value>(Value..., into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/rpush(_:into:)-7lj9g","title":"func rpush<Value>([Value], into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/rpushx(_:into:)","title":"func rpushx<Value>(Value, into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sadd(_:to:)-19h29","title":"func sadd<Value>(Value..., to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sadd(_:to:)-6ccsn","title":"func sadd<Value>([Value], to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/scan(startingfrom:matching:count:)","title":"func scan(startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [String])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/scard(of:)","title":"func scard(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sdiff(of:)","title":"func sdiff(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sdiff(of:valuetype:)-2g1ua","title":"func sdiff<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sdiff(of:valuetype:)-9jghq","title":"func sdiff<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sdiffstore(as:sources:)","title":"func sdiffstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/select(database:)","title":"func select(database: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/send(command:)","title":"func send(command: String) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/send(command:with:)","title":"func send(command: String, with: [RESPValue]) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/set(_:to:)","title":"func set<Value>(RedisKey, to: Value) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/set(_:to:oncondition:expiration:)","title":"func set<Value>(RedisKey, to: Value, onCondition: RedisSetCommandCondition, expiration: RedisSetCommandExpiration?) -> EventLoopFuture<RedisSetCommandResult>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/set(_:tojson:)","title":"func set<Value>(RedisKey, toJSON: Value) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/set(_:tojson:oncondition:expiration:)","title":"func set<Value>(RedisKey, toJSON: Value, onCondition: RedisSetCommandCondition, expiration: RedisSetCommandExpiration?) -> EventLoopFuture<RedisSetCommandResult>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/setex(_:to:expirationinseconds:)","title":"func setex<Value>(RedisKey, to: Value, expirationInSeconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/setex(_:tojson:expirationinseconds:)","title":"func setex<Value>(RedisKey, toJSON: Value, expirationInSeconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/setnx(_:to:)","title":"func setnx<Value>(RedisKey, to: Value) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/setnx(_:tojson:)","title":"func setnx<Value>(RedisKey, toJSON: Value) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sinter(of:)","title":"func sinter(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sinter(of:valuetype:)-4sbki","title":"func sinter<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sinter(of:valuetype:)-6k6xz","title":"func sinter<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sinterstore(as:sources:)","title":"func sinterstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sismember(_:of:)","title":"func sismember<Value>(Value, of: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/smembers(of:)","title":"func smembers(of: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/smembers(of:as:)","title":"func smembers<Value>(of: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/smove(_:from:to:)","title":"func smove<Value>(Value, from: RedisKey, to: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/spop(from:as:max:)","title":"func spop<Value>(from: RedisKey, as: Value.Type, max: Int) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/spop(from:max:)","title":"func spop(from: RedisKey, max: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/srandmember(from:as:max:)","title":"func srandmember<Value>(from: RedisKey, as: Value.Type, max: Int) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/srandmember(from:max:)","title":"func srandmember(from: RedisKey, max: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/srem(_:from:)-10lgs","title":"func srem<Value>(Value..., from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/srem(_:from:)-y3cg","title":"func srem<Value>([Value], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sscan(_:startingfrom:matching:count:)","title":"func sscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [RESPValue])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sscan(_:startingfrom:matching:count:valuetype:)","title":"func sscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [Value?])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/subscribe(to:messagereceiver:onsubscribe:onunsubscribe:)","title":"func subscribe(to: [RedisChannelName], messageReceiver: RedisSubscriptionMessageReceiver, onSubscribe: RedisSubscriptionChangeHandler?, onUnsubscribe: RedisSubscriptionChangeHandler?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/subscribercount(forchannels:)","title":"func subscriberCount(forChannels: [RedisChannelName]) -> EventLoopFuture<[RedisChannelName : Int]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sunion(of:)","title":"func sunion(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sunion(of:valuetype:)-356np","title":"func sunion<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sunion(of:valuetype:)-6gayh","title":"func sunion<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/sunionstore(as:sources:)","title":"func sunionstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/swapdatabase(_:with:)","title":"func swapDatabase(Int, with: Int) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/ttl(_:)","title":"func ttl(RedisKey) -> EventLoopFuture<RedisKey.Lifetime>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/unsubscribe()","title":"func unsubscribe() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/unsubscribe(from:)","title":"func unsubscribe(from: [RedisChannelName]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zadd(_:to:inserting:returning:)-24lle","title":"func zadd<Value>([(element: Value, score: Double)], to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zadd(_:to:inserting:returning:)-3z3ea","title":"func zadd<Value>((element: Value, score: Double), to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zadd(_:to:inserting:returning:)-5xoak","title":"func zadd<Value>((element: Value, score: Double)..., to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zcard(of:)","title":"func zcard(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zcount(of:withmaximumscoreof:)","title":"func zcount(of: RedisKey, withMaximumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zcount(of:withminimumscoreof:)","title":"func zcount(of: RedisKey, withMinimumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zcount(of:withscores:)-5if9v","title":"func zcount(of: RedisKey, withScores: ClosedRange<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zcount(of:withscores:)-7sq8w","title":"func zcount(of: RedisKey, withScores: Range<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zcount(of:withscoresbetween:)","title":"func zcount(of: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zincrby(_:element:in:)","title":"func zincrby<Value>(Double, element: Value, in: RedisKey) -> EventLoopFuture<Double>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zinterstore(as:sources:weights:aggregatemethod:)","title":"func zinterstore(as: RedisKey, sources: [RedisKey], weights: [Int]?, aggregateMethod: RedisSortedSetAggregateMethod?) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zlexcount(of:withmaximumvalueof:)","title":"func zlexcount<Value>(of: RedisKey, withMaximumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zlexcount(of:withminimumvalueof:)","title":"func zlexcount<Value>(of: RedisKey, withMinimumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zlexcount(of:withvaluesbetween:)","title":"func zlexcount<Value>(of: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zpopmax(from:)","title":"func zpopmax(from: RedisKey) -> EventLoopFuture<(RESPValue, Double)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zpopmax(from:max:)","title":"func zpopmax(from: RedisKey, max: Int) -> EventLoopFuture<[(RESPValue, Double)]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zpopmin(from:)","title":"func zpopmin(from: RedisKey) -> EventLoopFuture<(RESPValue, Double)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zpopmin(from:max:)","title":"func zpopmin(from: RedisKey, max: Int) -> EventLoopFuture<[(RESPValue, Double)]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrange(from:firstindex:lastindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, firstIndex: Int, lastIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrange(from:fromindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, fromIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrange(from:indices:includescoresinresponse:)-6d57o","title":"func zrange(from: RedisKey, indices: Range<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrange(from:indices:includescoresinresponse:)-944eg","title":"func zrange(from: RedisKey, indices: ClosedRange<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrange(from:throughindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, throughIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrange(from:uptoindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, upToIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrangebylex(from:withmaximumvalueof:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrangebylex(from:withminimumvalueof:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrangebylex(from:withvaluesbetween:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>), limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrangebyscore(from:withmaximumscoreof:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrangebyscore(from:withminimumscoreof:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrangebyscore(from:withscores:limitby:includescoresinresponse:)-1yfix","title":"func zrangebyscore(from: RedisKey, withScores: Range<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrangebyscore(from:withscores:limitby:includescoresinresponse:)-8o5u","title":"func zrangebyscore(from: RedisKey, withScores: ClosedRange<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrangebyscore(from:withscoresbetween:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound), limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrank(of:in:)","title":"func zrank<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Int?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrem(_:from:)-3snvf","title":"func zrem<Value>(Value..., from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrem(_:from:)-42pdw","title":"func zrem<Value>([Value], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebylex(from:withmaximumvalueof:)","title":"func zremrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebylex(from:withminimumvalueof:)","title":"func zremrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebylex(from:withvaluesbetween:)","title":"func zremrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyrank(from:firstindex:lastindex:)","title":"func zremrangebyrank(from: RedisKey, firstIndex: Int, lastIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyrank(from:fromindex:)","title":"func zremrangebyrank(from: RedisKey, fromIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyrank(from:indices:)-3v6xy","title":"func zremrangebyrank(from: RedisKey, indices: ClosedRange<Int>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyrank(from:indices:)-93ztr","title":"func zremrangebyrank(from: RedisKey, indices: Range<Int>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyrank(from:throughindex:)","title":"func zremrangebyrank(from: RedisKey, throughIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyrank(from:uptoindex:)","title":"func zremrangebyrank(from: RedisKey, upToIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyscore(from:withmaximumscoreof:)","title":"func zremrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyscore(from:withminimumscoreof:)","title":"func zremrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyscore(from:withscores:)-2lje3","title":"func zremrangebyscore(from: RedisKey, withScores: Range<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyscore(from:withscores:)-6yjwl","title":"func zremrangebyscore(from: RedisKey, withScores: ClosedRange<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zremrangebyscore(from:withscoresbetween:)","title":"func zremrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrange(from:firstindex:lastindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, firstIndex: Int, lastIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrange(from:fromindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, fromIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrange(from:indices:includescoresinresponse:)-5dgz8","title":"func zrevrange(from: RedisKey, indices: Range<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrange(from:indices:includescoresinresponse:)-62s1i","title":"func zrevrange(from: RedisKey, indices: ClosedRange<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrange(from:throughindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, throughIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrange(from:uptoindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, upToIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrangebylex(from:withmaximumvalueof:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrangebylex(from:withminimumvalueof:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrangebylex(from:withvaluesbetween:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>), limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrangebyscore(from:withmaximumscoreof:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrangebyscore(from:withminimumscoreof:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrangebyscore(from:withscores:limitby:includescoresinresponse:)-4z9o7","title":"func zrevrangebyscore(from: RedisKey, withScores: ClosedRange<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrangebyscore(from:withscores:limitby:includescoresinresponse:)-95o23","title":"func zrevrangebyscore(from: RedisKey, withScores: Range<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrangebyscore(from:withscoresbetween:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound), limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zrevrank(of:in:)","title":"func zrevrank<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Int?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zscan(_:startingfrom:matching:count:)","title":"func zscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [(RESPValue, Double)])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zscan(_:startingfrom:matching:count:valuetype:)","title":"func zscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [(Value, Double)?])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zscore(of:in:)","title":"func zscore<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Double?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/zunionstore(as:sources:weights:aggregatemethod:)","title":"func zunionstore(as: RedisKey, sources: [RedisKey], weights: [Int]?, aggregateMethod: RedisSortedSetAggregateMethod?) -> EventLoopFuture<Int>","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/redisclient-implementations","title":"RedisClient Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup","title":"RedisConnectionPoolGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier\/init(id:)","title":"init(id: String)","type":"init"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier","title":"RedisConnectionPoolGroupIdentifier","type":"struct"}],"path":"\/documentation\/hummingbirdredis","title":"HummingbirdRedis","type":"module"},{"path":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websockethandler\/init(websocket:)","title":"init(webSocket: HBWebSocket)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websockethandler\/channelinactive(context:)","title":"func channelInactive(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/websockethandler\/channelread(context:data:)","title":"func channelRead(context: ChannelHandlerContext, data: NIOAny)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/websockethandler\/errorcaught(context:error:)","title":"func errorCaught(context: ChannelHandlerContext, error: Error)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/websockethandler\/userinboundeventtriggered(context:event:)","title":"func userInboundEventTriggered(context: ChannelHandlerContext, event: Any)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websockethandler\/inboundin","title":"WebSocketHandler.InboundIn","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websockethandler\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/websockethandler\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/hummingbirdwscore\/websockethandler\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websockethandler\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/websockethandler\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/hummingbirdwscore\/websockethandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwscore\/websockethandler","title":"WebSocketHandler","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextension\/processframetosend(_:ws:)","title":"func processFrameToSend(WebSocketFrame, ws: HBWebSocket) throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextension\/processreceivedframe(_:ws:)","title":"func processReceivedFrame(WebSocketFrame, ws: HBWebSocket) throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextension\/shutdown()","title":"func shutdown()","type":"method"}],"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextension","title":"HBWebSocketExtension","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionbuilder\/clientextension(from:eventloop:)-7uejk","title":"func clientExtension(from: [WebSocketExtensionHTTPParameters], eventLoop: EventLoop) throws -> (any HBWebSocketExtension)?","type":"method"}],"title":"HBWebSocketExtensionBuilder Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionbuilder\/clientextension(from:eventloop:)-76sp4","title":"func clientExtension(from: WebSocketExtensionHTTPParameters, eventLoop: EventLoop) throws -> (any HBWebSocketExtension)?","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionbuilder\/clientrequestheader()","title":"func clientRequestHeader() -> String","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionbuilder\/serverextension(from:eventloop:)-7ohyl","title":"func serverExtension(from: [WebSocketExtensionHTTPParameters], eventLoop: EventLoop) throws -> (any HBWebSocketExtension)?","type":"method"}],"title":"HBWebSocketExtensionBuilder Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionbuilder\/serverextension(from:eventloop:)-1gdro","title":"func serverExtension(from: WebSocketExtensionHTTPParameters, eventLoop: EventLoop) throws -> (any HBWebSocketExtension)?","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionbuilder\/serverreponseheader(to:)","title":"func serverReponseHeader(to: WebSocketExtensionHTTPParameters) -> String?","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionbuilder\/serverresponseheader(to:)","title":"func serverResponseHeader(to: [WebSocketExtensionHTTPParameters]) -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionbuilder\/name","title":"static var name: String","type":"property"}],"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionbuilder","title":"HBWebSocketExtensionBuilder","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionfactory\/init(_:)","title":"init(() -> any HBWebSocketExtensionBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionfactory\/build","title":"let build: () -> any HBWebSocketExtensionBuilder","type":"property"}],"path":"\/documentation\/hummingbirdwscore\/hbwebsocketextensionfactory","title":"HBWebSocketExtensionFactory","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/parameters","title":"let parameters: [String : Parameter]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/parseheaders(_:)","title":"static func parseHeaders(HTTPHeaders) -> [WebSocketExtensionHTTPParameters]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/parameter\/null","title":"case null","type":"case"},{"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/parameter\/value(_:)","title":"case value(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/parameter\/integer","title":"var integer: Int?","type":"property"},{"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/parameter\/optional","title":"var optional: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/parameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/parameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/parameter","title":"WebSocketExtensionHTTPParameters.Parameter","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwscore\/websocketextensionhttpparameters","title":"WebSocketExtensionHTTPParameters","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websocketdata\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/hummingbirdwscore\/websocketdata\/text(_:)","title":"case text(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websocketdata\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/hummingbirdwscore\/websocketdata\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/websocketdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwscore\/websocketdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwscore\/websocketdata","title":"WebSocketData","type":"enum"}],"path":"\/documentation\/hummingbirdwscore","title":"HummingbirdWSCore","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/init(channel:type:maxframesize:extensions:logger:)","title":"init(channel: Channel, type: HBWebSocket.SocketType, maxFrameSize: Int, extensions: [HBWebSocketExtension], logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/channel","title":"let channel: Channel","type":"property"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/eventloop","title":"var eventLoop: EventLoop","type":"property"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/maxframesize","title":"let maxFrameSize: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/close(code:)-1puco","title":"func close(code: WebSocketErrorCode) async throws","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/close(code:)-chsu","title":"func close(code: WebSocketErrorCode) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/close(code:promise:)","title":"func close(code: WebSocketErrorCode, promise: EventLoopPromise<Void>?)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/initiateautoping(interval:)","title":"func initiateAutoPing(interval: TimeAmount)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/onclose(_:)","title":"func onClose(HBWebSocket.CloseCallback)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/onpong(_:)","title":"func onPong(HBWebSocket.PongCallback)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/onread(_:)","title":"func onRead(HBWebSocket.ReadCallback)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/readstream()","title":"func readStream() -> AsyncStream<WebSocketData>","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/sendping()-32p4f","title":"func sendPing() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/sendping()-3v8le","title":"func sendPing() async throws","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/sendping(promise:)","title":"func sendPing(promise: EventLoopPromise<Void>?)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/sendpong(_:promise:)","title":"func sendPong(ByteBuffer, promise: EventLoopPromise<Void>?)","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/write(_:)-6wrc6","title":"func write(WebSocketData) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/write(_:)-7bvwv","title":"func write(WebSocketData) async throws","type":"method"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/write(_:promise:)","title":"func write(WebSocketData, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/closecallback","title":"HBWebSocket.CloseCallback","type":"typealias"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/pongcallback","title":"HBWebSocket.PongCallback","type":"typealias"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/readcallback","title":"HBWebSocket.ReadCallback","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/sockettype\/client","title":"case client","type":"case"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/sockettype\/server","title":"case server","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/sockettype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/sockettype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwscore\/hbwebsocket\/sockettype","title":"HBWebSocket.SocketType","type":"enum"}],"path":"\/documentation\/hummingbirdwscore\/hbwebsocket","title":"HBWebSocket","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/hbwebsocketbuilder\/add(middleware:)","title":"func add(middleware: HBMiddleware) -> HBWebSocketRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdwebsocket\/hbwebsocketbuilder\/addupgrade(maxframesize:extensions:)","title":"func addUpgrade(maxFrameSize: Int, extensions: [HBWebSocketExtensionFactory])","type":"method"},{"path":"\/documentation\/hummingbirdwebsocket\/hbwebsocketbuilder\/on(_:shouldupgrade:onupgrade:)-2pbue","title":"func on(String, shouldUpgrade: (HBRequest) async throws -> HTTPHeaders?, onUpgrade: (HBRequest, HBWebSocket) async throws -> HTTPResponseStatus) -> HBWebSocketRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdwebsocket\/hbwebsocketbuilder\/on(_:shouldupgrade:onupgrade:)-59kqa","title":"func on(String, shouldUpgrade: (HBRequest) -> EventLoopFuture<HTTPHeaders?>, onUpgrade: (HBRequest, HBWebSocket) -> Void) -> HBWebSocketRouterGroup","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/hbwebsocketbuilder","title":"HBWebSocketBuilder","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/hbwebsocketroutergroup\/add(middleware:)","title":"func add(middleware: HBMiddleware) -> HBWebSocketRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdwebsocket\/hbwebsocketroutergroup\/on(_:shouldupgrade:onupgrade:)-2ejdx","title":"func on(String, shouldUpgrade: (HBRequest) async throws -> HTTPHeaders?, onUpgrade: (HBRequest, HBWebSocket) async throws -> HTTPResponseStatus) -> HBWebSocketRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdwebsocket\/hbwebsocketroutergroup\/on(_:shouldupgrade:onupgrade:)-6xsz3","title":"func on(String, shouldUpgrade: (HBRequest) -> EventLoopFuture<HTTPHeaders?>, onUpgrade: (HBRequest, HBWebSocket) -> EventLoopFuture<HTTPResponseStatus>) -> HBWebSocketRouterGroup","type":"method"},{"path":"\/documentation\/hummingbirdwebsocket\/hbwebsocketroutergroup\/on(_:shouldupgrade:onupgrade:)-7td6x","title":"func on(String, shouldUpgrade: (HBRequest) -> EventLoopFuture<HTTPHeaders?>, onUpgrade: (HBRequest, HBWebSocket) throws -> Void) -> HBWebSocketRouterGroup","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/hbwebsocketroutergroup","title":"HBWebSocketRouterGroup","type":"struct"}],"path":"\/documentation\/hummingbirdwebsocket","title":"HummingbirdWebSocket","type":"module"},{"children":[{"title":"Test Setup","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/xcttestingsetup\/asynctest","title":"case asyncTest","type":"case"},{"path":"\/documentation\/hummingbirdxct\/xcttestingsetup\/embedded","title":"case embedded","type":"case"},{"path":"\/documentation\/hummingbirdxct\/xcttestingsetup\/live","title":"case live","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/xcttestingsetup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdxct\/xcttestingsetup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdxct\/xcttestingsetup","title":"XCTTestingSetup","type":"enum"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/configuration\/init(tlsconfiguration:timeout:servername:)","title":"init(tlsConfiguration: TLSConfiguration?, timeout: TimeAmount, serverName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/configuration\/servername","title":"let serverName: String?","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/configuration\/timeout","title":"let timeout: TimeAmount","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/configuration\/tlsconfiguration","title":"let tlsConfiguration: TLSConfiguration?","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/configuration","title":"HBXCTClient.Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request\/init(_:method:headers:body:)","title":"init(String, method: HTTPMethod, headers: HTTPHeaders, body: ByteBuffer?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request\/body","title":"var body: ByteBuffer?","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request\/method","title":"var method: HTTPMethod","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request\/uri","title":"var uri: String","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request","title":"HBXCTClient.Request","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response\/body","title":"let body: ByteBuffer?","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response\/headers","title":"let headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response\/status","title":"let status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response","title":"HBXCTClient.Response","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/init(host:port:configuration:eventloopgroupprovider:)","title":"init(host: String, port: Int, configuration: HBXCTClient.Configuration, eventLoopGroupProvider: NIOEventLoopGroupProvider)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/channelpromise","title":"let channelPromise: EventLoopPromise<Channel>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/close()","title":"func close() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/connect()","title":"func connect()","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/delete(_:headers:body:)","title":"func delete(String, headers: HTTPHeaders, body: ByteBuffer) -> EventLoopFuture<HBXCTClient.Response>","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/execute(_:)","title":"func execute(HBXCTClient.Request) -> EventLoopFuture<HBXCTClient.Response>","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/get(_:headers:)","title":"func get(String, headers: HTTPHeaders) -> EventLoopFuture<HBXCTClient.Response>","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/head(_:headers:)","title":"func head(String, headers: HTTPHeaders) -> EventLoopFuture<HBXCTClient.Response>","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/post(_:headers:body:)","title":"func post(String, headers: HTTPHeaders, body: ByteBuffer) -> EventLoopFuture<HBXCTClient.Response>","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/put(_:headers:body:)","title":"func put(String, headers: HTTPHeaders, body: ByteBuffer) -> EventLoopFuture<HBXCTClient.Response>","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/syncshutdown()","title":"func syncShutdown() throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/connectionnotopen","title":"case connectionNotOpen","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/invalidurl","title":"case invalidURL","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/malformedresponse","title":"case malformedResponse","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/noresponse","title":"case noResponse","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/readtimeout","title":"case readTimeout","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/tlssetupfailed","title":"case tlsSetupFailed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error","title":"HBXCTClient.Error","type":"enum"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient","title":"HBXCTClient","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxct\/eventloopgroup","title":"var eventLoopGroup: EventLoopGroup","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxct\/execute(uri:method:headers:body:)","title":"func execute(uri: String, method: HTTPMethod, headers: HTTPHeaders, body: ByteBuffer?) -> EventLoopFuture<HBXCTResponse>","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxct\/start(application:)","title":"func start(application: HBApplication) throws","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxct\/stop(application:)","title":"func stop(application: HBApplication)","type":"method"}],"path":"\/documentation\/hummingbirdxct\/hbxct","title":"HBXCT","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxcterror\/illegalbody","title":"static var illegalBody: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxcterror\/noend","title":"static var noEnd: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxcterror\/nohead","title":"static var noHead: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxcterror\/notstarted","title":"static var notStarted: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxcterror\/timeout","title":"static var timeout: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxcterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdxct\/hbxcterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxcterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxcterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdxct\/hbxcterror","title":"HBXCTError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctresponse\/init(status:headers:body:)","title":"init(status: HTTPResponseStatus, headers: HTTPHeaders, body: ByteBuffer?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctresponse\/body","title":"let body: ByteBuffer?","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctresponse\/headers","title":"let headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctresponse\/status","title":"let status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxctresponse","title":"HBXCTResponse","type":"struct"}],"path":"\/documentation\/hummingbirdxct","title":"HummingbirdXCT","type":"module"},{"path":"\/documentation\/hummingbird\/mustache-syntax","title":"Mustache Syntax","type":"article"},{"path":"\/documentation\/hummingbird\/template-inheritance","title":"Template Inheritance","type":"article"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}