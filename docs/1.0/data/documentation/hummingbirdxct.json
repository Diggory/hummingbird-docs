{"metadata":{"modules":[{"name":"HummingbirdXCT"}],"role":"collection","symbolKind":"module","title":"HummingbirdXCT","roleHeading":"Framework","externalID":"HummingbirdXCT"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"},"kind":"symbol","primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"Provides methods for easy setup of unit tests using XCTest framework.","type":"text"}],"type":"paragraph"},{"anchor":"Usage","text":"Usage","level":3,"type":"heading"},{"inlineContent":[{"text":"Setup your server and add features you want to test.","type":"text"}],"type":"paragraph"},{"code":["let app = HBApplication(testing: .embedded)","app.router.get(\"test\") { _ in","    return \"testing\"","}","try app.XCTStart()","defer { app.XCTStop() }"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"And then test those features work as expected.","type":"text"}],"type":"paragraph"},{"code":["app.XCTExecute(uri: \"test\", method: .GET) { response in","    XCTAssertEqual(response.status, .ok)","    XCTAssertEqual(String(buffer: body), \"testing\")","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"topicSections":[{"title":"Test Setup","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup"]},{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"]}],"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"variants":[{"paths":["\/documentation\/hummingbirdxct"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTError":{"title":"HBXCTError","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTError"}],"abstract":[{"type":"text","text":"Errors thrown by XCT framework."}],"kind":"symbol","url":"\/documentation\/hummingbirdxct\/hbxcterror","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBXCTError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCTResponse"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBXCTResponse","kind":"identifier"}],"title":"HBXCTResponse","abstract":[{"text":"Response structure returned by XCT testing framework","type":"text"}],"url":"\/documentation\/hummingbirdxct\/hbxctresponse","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCT":{"abstract":[{"type":"text","text":"Protocol for XCT framework."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT","title":"HBXCT","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCT"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCT"}],"type":"topic","url":"\/documentation\/hummingbirdxct\/hbxct"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"XCTTestingSetup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","title":"XCTTestingSetup","type":"topic","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Type of test framework"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient":{"title":"HBXCTClient","url":"\/documentation\/hummingbirdxct\/hbxctclient","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBXCTClient","kind":"identifier"}],"type":"topic","abstract":[{"text":"Bare bones HTTP client that connects to one Server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClient","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"title":"HummingbirdXCT","url":"\/documentation\/hummingbirdxct","kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"}}}