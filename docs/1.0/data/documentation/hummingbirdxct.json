{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup"],"title":"Test Setup"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCoreXCT\/HBXCTClient"],"title":"Classes"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"],"title":"Structures"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides methods for easy setup of unit tests using XCTest framework."}]},{"level":3,"anchor":"Usage","type":"heading","text":"Usage"},{"type":"paragraph","inlineContent":[{"text":"Setup your server and add features you want to test.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let app = HBApplication(testing: .embedded)","app.router.get(\"test\") { _ in","    return \"testing\"","}","try app.XCTStart()","defer { app.XCTStop() }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And then test those features work as expected."}]},{"syntax":"swift","type":"codeListing","code":["app.XCTExecute(uri: \"test\", method: .GET) { response in","    XCTAssertEqual(response.status, .ok)","    XCTAssertEqual(String(buffer: body), \"testing\")","}"]}]}],"variants":[{"paths":["\/documentation\/hummingbirdxct"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"metadata":{"externalID":"HummingbirdXCT","modules":[{"name":"HummingbirdXCT"}],"roleHeading":"Framework","symbolKind":"module","title":"HummingbirdXCT","role":"collection"},"abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCT":{"kind":"symbol","navigatorTitle":[{"text":"HBXCT","kind":"identifier"}],"title":"HBXCT","url":"\/documentation\/hummingbirdxct\/hbxct","abstract":[{"text":"Protocol for XCT framework.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBXCT"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XCTTestingSetup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","title":"XCTTestingSetup","abstract":[{"text":"Type of test framework","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","navigatorTitle":[{"kind":"identifier","text":"XCTTestingSetup"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTError":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTError","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Errors thrown by XCT framework."}],"type":"topic","url":"\/documentation\/hummingbirdxct\/hbxcterror","title":"HBXCTError","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTError","kind":"identifier"}],"navigatorTitle":[{"text":"HBXCTError","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"title":"HBXCTResponse","url":"\/documentation\/hummingbirdxct\/hbxctresponse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBXCTResponse","kind":"identifier"}],"abstract":[{"type":"text","text":"Response structure returned by XCT testing framework"}],"navigatorTitle":[{"text":"HBXCTResponse","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCoreXCT/HBXCTClient":{"title":"HBXCTClient","navigatorTitle":[{"kind":"identifier","text":"HBXCTClient"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClient","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCoreXCT\/HBXCTClient","kind":"symbol","role":"symbol","abstract":[{"text":"Bare bones HTTP client that connects to one Server.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcorexct\/hbxctclient"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"title":"HummingbirdXCT","url":"\/documentation\/hummingbirdxct","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"kind":"symbol"}}}