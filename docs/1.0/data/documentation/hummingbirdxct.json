{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Provides methods for easy setup of unit tests using XCTest framework."}],"type":"paragraph"},{"level":3,"anchor":"Usage","type":"heading","text":"Usage"},{"inlineContent":[{"type":"text","text":"Setup your server and add features you want to test."}],"type":"paragraph"},{"code":["let app = HBApplication(testing: .embedded)","app.router.get(\"test\") { _ in","    return \"testing\"","}","try app.XCTStart()","defer { app.XCTStop() }"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"And then test those features work as expected."}],"type":"paragraph"},{"code":["app.XCTExecute(uri: \"test\", method: .GET) { response in","    XCTAssertEqual(response.status, .ok)","    XCTAssertEqual(String(buffer: body), \"testing\")","}"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/hummingbirdxct"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"roleHeading":"Framework","symbolKind":"module","modules":[{"name":"HummingbirdXCT"}],"externalID":"HummingbirdXCT","role":"collection","title":"HummingbirdXCT"},"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup"],"title":"Test Setup"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient"],"title":"Classes"},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"abstract":[{"text":"Response structure returned by XCT testing framework","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","url":"\/documentation\/hummingbirdxct\/hbxctresponse","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBXCTResponse","kind":"identifier"}],"title":"HBXCTResponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTResponse","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"title":"XCTTestingSetup","navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","abstract":[{"text":"Type of test framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient":{"title":"HBXCTClient","role":"symbol","abstract":[{"type":"text","text":"Bare bones HTTP client that connects to one Server."}],"navigatorTitle":[{"text":"HBXCTClient","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClient","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","url":"\/documentation\/hummingbirdxct\/hbxctclient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"type":"topic","kind":"symbol","title":"HummingbirdXCT","abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"url":"\/documentation\/hummingbirdxct","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTError":{"navigatorTitle":[{"text":"HBXCTError","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTError","title":"HBXCTError","url":"\/documentation\/hummingbirdxct\/hbxcterror","abstract":[{"text":"Errors thrown by XCT framework.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCT":{"url":"\/documentation\/hummingbirdxct\/hbxct","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCT"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCT"}],"abstract":[{"type":"text","text":"Protocol for XCT framework."}],"title":"HBXCT"}}}