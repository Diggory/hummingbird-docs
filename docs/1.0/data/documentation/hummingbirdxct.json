{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"hierarchy":{"paths":[[]]},"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup"],"title":"Test Setup"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient"],"title":"Classes"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"],"title":"Structures"}],"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"metadata":{"roleHeading":"Framework","externalID":"HummingbirdXCT","modules":[{"name":"HummingbirdXCT"}],"symbolKind":"module","role":"collection","title":"HummingbirdXCT"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Provides methods for easy setup of unit tests using XCTest framework.","type":"text"}]},{"level":3,"anchor":"Usage","type":"heading","text":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Setup your server and add features you want to test."}]},{"syntax":"swift","type":"codeListing","code":["let app = HBApplication(testing: .embedded)","app.router.get(\"test\") { _ in","    return \"testing\"","}","try app.XCTStart()","defer { app.XCTStop() }"]},{"type":"paragraph","inlineContent":[{"text":"And then test those features work as expected.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["app.XCTExecute(uri: \"test\", method: .GET) { response in","    XCTAssertEqual(response.status, .ok)","    XCTAssertEqual(String(buffer: body), \"testing\")","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/hummingbirdxct"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"type":"topic","kind":"symbol","title":"HBXCTResponse","navigatorTitle":[{"kind":"identifier","text":"HBXCTResponse"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTResponse"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","url":"\/documentation\/hummingbirdxct\/hbxctresponse","abstract":[{"type":"text","text":"Response structure returned by XCT testing framework"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"title":"HummingbirdXCT","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"url":"\/documentation\/hummingbirdxct"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCT":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCT"}],"type":"topic","role":"symbol","title":"HBXCT","url":"\/documentation\/hummingbirdxct\/hbxct","abstract":[{"type":"text","text":"Protocol for XCT framework."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT","navigatorTitle":[{"kind":"identifier","text":"HBXCT"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTClient"}],"title":"HBXCTClient","url":"\/documentation\/hummingbirdxct\/hbxctclient","abstract":[{"type":"text","text":"Bare bones HTTP client that connects to one Server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCTClient"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTError":{"abstract":[{"type":"text","text":"Errors thrown by XCT framework."}],"type":"topic","title":"HBXCTError","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdxct\/hbxcterror","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTError","navigatorTitle":[{"kind":"identifier","text":"HBXCTError"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTError"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","title":"XCTTestingSetup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","abstract":[{"text":"Type of test framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"}}}