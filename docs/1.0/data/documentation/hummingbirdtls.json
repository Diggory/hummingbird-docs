{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","interfaceLanguage":"swift"},"metadata":{"symbolKind":"module","externalID":"HummingbirdTLS","role":"collection","roleHeading":"Framework","modules":[{"name":"HummingbirdTLS"}],"title":"HummingbirdTLS"},"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"],"title":"Related Documentation"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/NIOSSLCertificate","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/NIOSSLPrivateKey"],"title":"Classes"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/TLSConfiguration"],"title":"Structures"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"HummingbirdTLS adds a single function ","type":"text"},{"code":"addTLS(tlsConfiguration:)","type":"codeVoice"},{"text":" to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer"},{"text":". Setting up a server with TLS is simple as passing a NIOSSL ","type":"text"},{"code":"TLSConfiguration","type":"codeVoice"},{"text":" struct to the server.","type":"text"}],"type":"paragraph"},{"code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Add TLS support to server","app.server.addTLSConfiguration(tlsConfiguration: tlsConfiguration)"],"syntax":"swift","type":"codeListing"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","role":"collection","kind":"symbol","title":"HummingbirdHTTP2","type":"topic","url":"\/documentation\/hummingbirdhttp2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2/NIOSSLCertificate":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/NIOSSLCertificate","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOSSLCertificate"}],"abstract":[{"type":"text","text":"A reference to a BoringSSL Certificate object ("},{"code":"X509 *","type":"codeVoice"},{"type":"text","text":")."}],"role":"symbol","url":"\/documentation\/hummingbirdhttp2\/niosslcertificate","title":"NIOSSLCertificate","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCertificate"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","abstract":[{"text":"HTTP server class","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpserver","title":"HBHTTPServer","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","kind":"symbol","title":"HummingbirdTLS","type":"topic","url":"\/documentation\/hummingbirdtls","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2/TLSConfiguration":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/TLSConfiguration","role":"symbol","navigatorTitle":[{"text":"TLSConfiguration","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSConfiguration","kind":"identifier"}],"title":"TLSConfiguration","type":"topic","url":"\/documentation\/hummingbirdhttp2\/tlsconfiguration","abstract":[{"text":"Manages configuration of TLS for SwiftNIO programs.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2/NIOSSLPrivateKey":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/NIOSSLPrivateKey","role":"symbol","navigatorTitle":[{"text":"NIOSSLPrivateKey","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLPrivateKey","kind":"identifier"}],"title":"NIOSSLPrivateKey","type":"topic","url":"\/documentation\/hummingbirdhttp2\/niosslprivatekey","abstract":[{"text":"A reference to an BoringSSL private key object in the form of an ","type":"text"},{"code":"EVP_PKEY *","type":"codeVoice"},{"text":".","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"}}}