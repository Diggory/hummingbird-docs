{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single function "},{"type":"codeVoice","code":"addTLS(tlsConfiguration:)"},{"type":"text","text":" to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer"},{"type":"text","text":". Setting up a server with TLS is simple as passing a NIOSSL "},{"type":"codeVoice","code":"TLSConfiguration"},{"type":"text","text":" struct to the server."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Add TLS support to server","app.server.addTLSConfiguration(tlsConfiguration: tlsConfiguration)"]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"module","modules":[{"name":"HummingbirdTLS"}],"title":"HummingbirdTLS","roleHeading":"Framework","role":"collection","externalID":"HummingbirdTLS"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","title":"HummingbirdHTTP2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","kind":"symbol","type":"topic","title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","role":"collection","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"title":"HBHTTPServer","url":"\/documentation\/hummingbirdcore\/hbhttpserver","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP server class"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"role":"symbol"}}}