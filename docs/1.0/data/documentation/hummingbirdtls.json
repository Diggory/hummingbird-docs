{"variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"],"title":"Related Documentation"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single function "},{"type":"codeVoice","code":"addTLS(tlsConfiguration:)"},{"type":"text","text":" to "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","isActive":true,"type":"reference"},{"type":"text","text":". Setting up a server with TLS is simple as passing a NIOSSL "},{"type":"codeVoice","code":"TLSConfiguration"},{"type":"text","text":" struct to the server."}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Add TLS support to server","app.server.addTLSConfiguration(tlsConfiguration: tlsConfiguration)"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"collection","symbolKind":"module","modules":[{"name":"HummingbirdTLS"}],"externalID":"HummingbirdTLS","roleHeading":"Framework","title":"HummingbirdTLS"},"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"kind":"symbol","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"url":"\/documentation\/hummingbirdtls","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","type":"topic","title":"HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection","url":"\/documentation\/hummingbirdcore","kind":"symbol","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"type":"topic","title":"HBHTTPServer","url":"\/documentation\/hummingbirdcore\/hbhttpserver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP server class"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","role":"collection","type":"topic","title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"}}}