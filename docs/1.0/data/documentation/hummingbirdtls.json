{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"HummingbirdTLS","role":"collection","title":"HummingbirdTLS","roleHeading":"Framework","symbolKind":"module","modules":[{"name":"HummingbirdTLS"}]},"sections":[],"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single function "},{"code":"addTLS(tlsConfiguration:)","type":"codeVoice"},{"type":"text","text":" to "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","type":"reference","isActive":true},{"type":"text","text":". Setting up a server with TLS is simple as passing a NIOSSL "},{"code":"TLSConfiguration","type":"codeVoice"},{"type":"text","text":" struct to the server."}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Add TLS support to server","app.server.addTLSConfiguration(tlsConfiguration: tlsConfiguration)"],"type":"codeListing"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"kind":"symbol","hierarchy":{"paths":[[]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"role":"collection","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"url":"\/documentation\/hummingbirdtls","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","type":"topic","title":"HummingbirdTLS","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"url":"\/documentation\/hummingbirdcore\/hbhttpserver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP server class"}],"title":"HBHTTPServer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","title":"HummingbirdHTTP2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"type":"topic","role":"collection","url":"\/documentation\/hummingbirdhttp2","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore"}}}