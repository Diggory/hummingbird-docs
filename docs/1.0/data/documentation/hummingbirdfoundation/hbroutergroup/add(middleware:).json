{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup\/add(middleware:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"middleware","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","text":"HBMiddleware","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddleware"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBRouterGroupV","text":"HBRouterGroup","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup"}],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/hbroutergroup\/add(middleware:)"]}],"metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middleware"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","text":"HBMiddleware"},{"text":") -> ","kind":"text"},{"text":"HBRouterGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV"}],"externalID":"s:11Hummingbird13HBRouterGroupV3add10middlewareAcA12HBMiddleware_p_tF","title":"add(middleware:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup"]]},"abstract":[{"text":"Add middleware to RouterEndpoint","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","kind":"symbol","title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterGroup":{"type":"topic","title":"HBRouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/hbroutergroup","role":"symbol","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup","kind":"symbol","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterGroup/add(middleware:)":{"title":"add(middleware:)","type":"topic","url":"\/documentation\/hummingbirdfoundation\/hbroutergroup\/add(middleware:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup\/add(middleware:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middleware"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","text":"HBMiddleware"},{"text":") -> ","kind":"text"},{"text":"HBRouterGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV"}],"role":"symbol","abstract":[{"type":"text","text":"Add middleware to RouterEndpoint"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBMiddleware":{"title":"HBMiddleware","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddleware","url":"\/documentation\/hummingbirdfoundation\/hbmiddleware","type":"topic","navigatorTitle":[{"text":"HBMiddleware","kind":"identifier"}],"abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"type":"topic","title":"Router","url":"\/documentation\/hummingbird\/router","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","kind":"article","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","kind":"article","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]}}}