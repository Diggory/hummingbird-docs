{"metadata":{"title":"intersection(_:)","extendedModule":"Swift","modules":[{"name":"HummingbirdFoundation","relatedModules":["Swift"]}],"role":"symbol","externalID":"s:s9OptionSetPsE12intersectionyxxF::SYNTHESIZED::s:11Hummingbird21HBRouterMethodOptionsV","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"intersection","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Instance Method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/intersection(_:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/OptionSet-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"intersection"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}]}],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"OptionSet.intersection(_:)"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/intersection(_:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"title":"HBRouterMethodOptions","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Options available to routes","type":"text"}],"url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions/OptionSet-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/OptionSet-Implementations","abstract":[],"type":"topic","title":"OptionSet Implementations","kind":"article","url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/optionset-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions/intersection(_:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"intersection"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"intersection(_:)","abstract":[],"url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/intersection(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/intersection(_:)","role":"symbol"}}}