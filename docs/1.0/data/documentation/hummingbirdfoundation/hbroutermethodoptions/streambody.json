{"abstract":[{"type":"text","text":"don’t collate the request body, expect handler to stream it"}],"metadata":{"externalID":"s:11Hummingbird21HBRouterMethodOptionsV10streamBodyACvpZ","roleHeading":"Type Property","modules":[{"name":"Hummingbird"}],"title":"streamBody","symbolKind":"property","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"streamBody","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions","kind":"typeIdentifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/streambody"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/streamBody","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"streamBody"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","kind":"typeIdentifier","text":"HBRouterMethodOptions"}],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","kind":"symbol","title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions","abstract":[{"type":"text","text":"Options available to routes"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"kind":"symbol","title":"HBRouterMethodOptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions/streamBody":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/streamBody","abstract":[{"type":"text","text":"don’t collate the request body, expect handler to stream it"}],"kind":"symbol","title":"streamBody","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"streamBody"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"}],"url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/streambody","type":"topic"}}}