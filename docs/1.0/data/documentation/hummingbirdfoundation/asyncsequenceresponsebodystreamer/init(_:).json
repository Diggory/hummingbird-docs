{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"asyncSequence"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBufferSequence"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/AsyncSequenceResponseBodyStreamer\/init(_:)"},"metadata":{"externalID":"s:11Hummingbird33AsyncSequenceResponseBodyStreamerCyACyxGxcfc","role":"symbol","title":"init(_:)","roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"HummingbirdFoundation"}],"platforms":[{"unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false,"name":"iOS"},{"unavailable":false,"introducedAt":"10.15","deprecated":false,"beta":false,"name":"macOS"},{"unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false,"name":"tvOS"},{"unavailable":false,"introducedAt":"6.0","deprecated":false,"beta":false,"name":"watchOS"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ByteBufferSequence","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/AsyncSequenceResponseBodyStreamer"]]},"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/asyncsequenceresponsebodystreamer\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/AsyncSequenceResponseBodyStreamer/init(_:)":{"url":"\/documentation\/hummingbirdfoundation\/asyncsequenceresponsebodystreamer\/init(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/AsyncSequenceResponseBodyStreamer\/init(_:)","title":"init(_:)","abstract":[],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ByteBufferSequence","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/AsyncSequenceResponseBodyStreamer":{"navigatorTitle":[{"text":"AsyncSequenceResponseBodyStreamer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/AsyncSequenceResponseBodyStreamer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceResponseBodyStreamer","kind":"identifier"}],"abstract":[{"text":"Response body streamer which uses an AsyncSequence as its input.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/asyncsequenceresponsebodystreamer","role":"symbol","title":"AsyncSequenceResponseBodyStreamer"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"}}}