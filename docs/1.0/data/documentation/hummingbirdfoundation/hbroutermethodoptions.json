{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncCallbackResponder"],"title":"Router"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","interfaceLanguage":"swift"},"abstract":[{"text":"Options available to routes","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/rawValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/editResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/streamBody"],"title":"Type Properties"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/SetAlgebra-Implementations"],"title":"Default Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"metadata":{"modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird21HBRouterMethodOptionsV","roleHeading":"Structure","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"role":"symbol","title":"HBRouterMethodOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"symbolKind":"struct"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/hbroutermethodoptions"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions/init(rawValue:)":{"title":"init(rawValue:)","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/init(rawvalue:)","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/init(rawValue:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponder":{"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponder","url":"\/documentation\/hummingbirdfoundation\/hbresponder","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"title":"HBResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterBuilder":{"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterBuilder","url":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"title":"HBRouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethods":{"abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethods","url":"\/documentation\/hummingbirdfoundation\/hbroutermethods","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"title":"HBRouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions/rawValue":{"title":"rawValue","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/rawValue","url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/rawvalue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions/SetAlgebra-Implementations":{"abstract":[],"title":"SetAlgebra Implementations","url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/setalgebra-implementations","type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/SetAlgebra-Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions/Equatable-Implementations":{"kind":"article","url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/equatable-implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/Equatable-Implementations","title":"Equatable Implementations","role":"collectionGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterGroup":{"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup","url":"\/documentation\/hummingbirdfoundation\/hbroutergroup","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"title":"HBRouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions/OptionSet-Implementations":{"title":"OptionSet Implementations","abstract":[],"url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/optionset-implementations","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/OptionSet-Implementations"},"doc://com.opticalaberration.hummingbird/SQ":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","title":"Swift.Equatable"},"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","title":"Swift.OptionSet"},"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP","title":"Swift.SetAlgebra"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncRouteHandler":{"abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncRouteHandler","url":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler","type":"topic","role":"symbol","navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"title":"HBAsyncRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncCallbackResponder":{"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncCallbackResponder","url":"\/documentation\/hummingbirdfoundation\/hbasynccallbackresponder","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"title":"HBAsyncCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions/editResponse":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/editresponse","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/editResponse","abstract":[{"text":"allow handler to edit response via ","type":"text"},{"type":"codeVoice","code":"request.response"}],"title":"editResponse","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"editResponse","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions":{"abstract":[{"type":"text","text":"Options available to routes"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions","type":"topic","role":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"title":"HBRouterMethodOptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBCallbackResponder":{"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder","url":"\/documentation\/hummingbirdfoundation\/hbcallbackresponder","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"title":"HBCallbackResponder"},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","title":"Swift.ExpressibleByArrayLiteral"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouteHandler":{"abstract":[{"type":"text","text":"Object for handling requests."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouteHandler","url":"\/documentation\/hummingbirdfoundation\/hbroutehandler","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"title":"HBRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRequestDecodable":{"abstract":[{"type":"codeVoice","code":"HBRouteHandler"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecodable","url":"\/documentation\/hummingbirdfoundation\/hbrequestdecodable","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestDecodable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecodable"}],"title":"HBRequestDecodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions/streamBody":{"title":"streamBody","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions\/streambody","role":"symbol","abstract":[{"text":"donâ€™t collate the request body, expect handler to stream it","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions\/streamBody","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"streamBody","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"}]},"doc://com.opticalaberration.hummingbird/SY":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY","title":"Swift.RawRepresentable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","role":"collection","title":"Hummingbird"}}}