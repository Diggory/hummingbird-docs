{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions"},"abstract":[{"type":"text","text":"Extend objects with additional member variables"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensible"],"generated":true,"title":"Extending the Application"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"ParentObject"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"If you have only one instance of a type to attach you can extend it to conform to "},{"code":"StorageKey","type":"codeVoice"}],"type":"paragraph"},{"type":"codeListing","code":["struct Object {","    var extensions: Extensions<Object>","}","","extension Object {","    var extra: Extra? {","        get { return extensions.get(\\.extra) }","        set { extensions.set(\\.extra, value: newValue) }","    }","}"],"syntax":null}]}],"metadata":{"externalID":"s:11Hummingbird12HBExtensionsV","navigatorTitle":[{"text":"HBExtensions","kind":"identifier"}],"role":"symbol","modules":[{"name":"HummingbirdFoundation"}],"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"}],"title":"HBExtensions","roleHeading":"Structure"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/hbextensions"]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/exists(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/get(_:)-63nyk","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/get(_:)-7gsg7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/get(_:error:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/set(_:value:shutdownCallback:)"],"title":"Instance Methods"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBExtensions":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions","url":"\/documentation\/hummingbirdfoundation\/hbextensions","role":"symbol","abstract":[{"type":"text","text":"Extend objects with additional member variables"}],"navigatorTitle":[{"kind":"identifier","text":"HBExtensions"}],"type":"topic","title":"HBExtensions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBExtensions/get(_:error:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/get(_:error:)","abstract":[{"type":"text","text":"Get extension from a "},{"type":"codeVoice","code":"KeyPath"}],"title":"get(_:error:)","url":"\/documentation\/hummingbirdfoundation\/hbextensions\/get(_:error:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Type","kind":"typeIdentifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBExtensions/init()":{"title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/init()","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbextensions\/init()","abstract":[{"type":"text","text":"Initialize extensions"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBExtensible":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}],"title":"HBExtensible","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbextensible","role":"symbol","abstract":[{"text":"Protocol for extensible classes","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensible","navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBExtensions/get(_:)-63nyk":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/get(_:)-63nyk","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbextensions\/get(_:)-63nyk","abstract":[{"text":"Get optional extension from a ","type":"text"},{"type":"codeVoice","code":"KeyPath"}],"role":"symbol","title":"get(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBExtensions/get(_:)-7gsg7":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/get(_:)-7gsg7","url":"\/documentation\/hummingbirdfoundation\/hbextensions\/get(_:)-7gsg7","role":"symbol","abstract":[{"type":"text","text":"Get optional extension from a "},{"type":"codeVoice","code":"KeyPath"},{"type":"text","text":" that returns an optional"}],"type":"topic","title":"get(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBExtensions/set(_:value:shutdownCallback:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/set(_:value:shutdownCallback:)","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbextensions\/set(_:value:shutdowncallback:)","abstract":[{"text":"Set extension for a ","type":"text"},{"type":"codeVoice","code":"KeyPath"}],"role":"symbol","title":"set(_:value:shutdownCallback:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"shutdownCallback","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBExtensions/exists(_:)":{"title":"exists(_:)","abstract":[{"text":"Return if extension has been set","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions\/exists(_:)","url":"\/documentation\/hummingbirdfoundation\/hbextensions\/exists(_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exists","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"}}}