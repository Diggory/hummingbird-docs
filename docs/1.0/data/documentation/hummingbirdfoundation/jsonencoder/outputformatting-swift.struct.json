{"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes"],"title":"Type Properties"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"],"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"type":"text","text":"The formatting of the output JSON data."}],"metadata":{"modules":[{"name":"HummingbirdFoundation"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputFormatting"}],"role":"symbol","externalID":"s:10Foundation11JSONEncoderC16OutputFormattingV","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"title":"JSONEncoder.OutputFormatting"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]}],"references":{"doc://com.opticalaberration.hummingbird/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/sortedKeys":{"abstract":[{"text":"Produce JSON with dictionary keys sorted in lexicographic order.","type":"text"}],"role":"symbol","title":"sortedKeys","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"sortedKeys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputFormatting","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/sortedkeys","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","title":"HummingbirdFoundation","url":"\/documentation\/hummingbirdfoundation","type":"topic","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"title":"Swift.OptionSet","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP","type":"unresolvable","title":"Swift.SetAlgebra"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/prettyPrinted":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prettyPrinted","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","text":"OutputFormatting","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/prettyprinted","role":"symbol","kind":"symbol","title":"prettyPrinted","abstract":[{"text":"Produce human-readable JSON with indented output.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct","title":"JSONEncoder.OutputFormatting","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct","type":"topic","abstract":[{"text":"The formatting of the output JSON data.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/Equatable-Implementations":{"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/equatable-implementations","abstract":[],"title":"Equatable Implementations","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","type":"topic","kind":"article"},"doc://com.opticalaberration.hummingbird/SY":{"title":"Swift.RawRepresentable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","title":"JSONEncoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder","type":"topic","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" values into JSON.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/OptionSet-Implementations":{"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations","abstract":[],"title":"OptionSet Implementations","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","type":"topic","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/withoutEscapingSlashes":{"title":"withoutEscapingSlashes","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/withoutescapingslashes","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withoutEscapingSlashes","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"OutputFormatting","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes","abstract":[{"text":"By default slashes get escaped (”\/” → “\/”, “http:\/\/apple.com\/” → “http:\/\/apple.com\/”)","type":"text"},{"text":" ","type":"text"},{"text":"for security reasons, allowing outputted JSON to be safely embedded within HTML\/XML.","type":"text"},{"text":" ","type":"text"},{"text":"In contexts where this escaping is unnecessary, the JSON is known to not be embedded,","type":"text"},{"text":" ","type":"text"},{"text":"or is intended only for display, this option avoids this escaping.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/init(rawValue:)":{"kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(rawvalue:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)","abstract":[],"role":"symbol","type":"topic","title":"init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/rawValue":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue","type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/rawvalue","role":"symbol","kind":"symbol","title":"rawValue","abstract":[]}}}