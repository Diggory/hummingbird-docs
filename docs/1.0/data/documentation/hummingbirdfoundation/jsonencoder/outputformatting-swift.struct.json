{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes"],"title":"Type Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"],"title":"Default Implementations","generated":true}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"],"title":"Conforms To"}],"abstract":[{"text":"The formatting of the output JSON data.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder"]]},"metadata":{"externalID":"s:10Foundation11JSONEncoderC16OutputFormattingV","title":"JSONEncoder.OutputFormatting","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"symbolKind":"struct","roleHeading":"Structure","modules":[{"name":"HummingbirdFoundation"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/rawValue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/rawvalue","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"}],"type":"topic","kind":"symbol","role":"symbol","title":"rawValue","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/Equatable-Implementations":{"kind":"article","title":"Equatable Implementations","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/equatable-implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"title":"Swift.OptionSet","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"title":"JSONEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder","type":"topic","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" values into JSON.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/SY":{"title":"Swift.RawRepresentable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY"},"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP","title":"Swift.SetAlgebra"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct":{"title":"JSONEncoder.OutputFormatting","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"abstract":[{"type":"text","text":"The formatting of the output JSON data."}],"navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/OptionSet-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations","abstract":[],"title":"OptionSet Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ"},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/withoutEscapingSlashes":{"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/withoutescapingslashes","abstract":[{"type":"text","text":"By default slashes get escaped (”\/” → “\/”, “http:\/\/apple.com\/” → “http:\/\/apple.com\/”)"},{"type":"text","text":" "},{"type":"text","text":"for security reasons, allowing outputted JSON to be safely embedded within HTML\/XML."},{"type":"text","text":" "},{"type":"text","text":"In contexts where this escaping is unnecessary, the JSON is known to not be embedded,"},{"type":"text","text":" "},{"type":"text","text":"or is intended only for display, this option avoids this escaping."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes","title":"withoutEscapingSlashes","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withoutEscapingSlashes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutputFormatting","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/sortedKeys":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","abstract":[{"text":"Produce JSON with dictionary keys sorted in lexicographic order.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sortedKeys","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONEncoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC"},{"text":".","kind":"text"},{"text":"OutputFormatting","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/sortedkeys","kind":"symbol","title":"sortedKeys"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"title":"HummingbirdFoundation","url":"\/documentation\/hummingbirdfoundation","type":"topic","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/prettyPrinted":{"kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/prettyprinted","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"prettyPrinted","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","text":"OutputFormatting","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Produce human-readable JSON with indented output."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","title":"prettyPrinted"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/init(rawValue:)":{"kind":"symbol","title":"init(rawValue:)","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(rawvalue:)","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","kind":"article","abstract":[]}}}