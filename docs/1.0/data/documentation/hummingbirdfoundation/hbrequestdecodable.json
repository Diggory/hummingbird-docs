{"metadata":{"title":"HBRequestDecodable","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird18HBRequestDecodableP","roleHeading":"Protocol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"seeAlsoSections":[{"title":"Router","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncCallbackResponder"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecodable"},"abstract":[{"type":"codeVoice","code":"HBRouteHandler"},{"type":"text","text":" which uses "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" to initialize it"}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/Se"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird14HBRouteHandlerP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouteHandler","kind":"typeIdentifier","text":"HBRouteHandler"},{"kind":"text","text":", "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"An example","type":"text"}]},{"code":["struct CreateUser: HBRequestDecodable {","    let username: String","    let password: String","    func handle(request: HBRequest) -> EventLoopFuture<HTTPResponseStatus> {","        return addUserToDatabase(","            name: self.username,","            password: self.password","        ).map { _ in .ok }","}","application.router.put(\"user\", use: CreateUser.self)"],"syntax":null,"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/hbrequestdecodable"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterGroup":{"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup","url":"\/documentation\/hummingbirdfoundation\/hbroutergroup","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"title":"HBRouterGroup"},"doc://com.opticalaberration.hummingbird/Se":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/Se","title":"Swift.Decodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","role":"collection","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions":{"abstract":[{"type":"text","text":"Options available to routes"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions","type":"topic","role":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"title":"HBRouterMethodOptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethods":{"abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethods","url":"\/documentation\/hummingbirdfoundation\/hbroutermethods","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"title":"HBRouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterBuilder":{"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterBuilder","url":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"title":"HBRouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncRouteHandler":{"abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncRouteHandler","url":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler","type":"topic","role":"symbol","navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"title":"HBAsyncRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncCallbackResponder":{"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncCallbackResponder","url":"\/documentation\/hummingbirdfoundation\/hbasynccallbackresponder","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"title":"HBAsyncCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRequestDecodable":{"abstract":[{"type":"codeVoice","code":"HBRouteHandler"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecodable","url":"\/documentation\/hummingbirdfoundation\/hbrequestdecodable","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestDecodable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecodable"}],"title":"HBRequestDecodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponder":{"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponder","url":"\/documentation\/hummingbirdfoundation\/hbresponder","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"title":"HBResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBCallbackResponder":{"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder","url":"\/documentation\/hummingbirdfoundation\/hbcallbackresponder","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"title":"HBCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouteHandler":{"abstract":[{"type":"text","text":"Object for handling requests."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouteHandler","url":"\/documentation\/hummingbirdfoundation\/hbroutehandler","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"title":"HBRouteHandler"}}}