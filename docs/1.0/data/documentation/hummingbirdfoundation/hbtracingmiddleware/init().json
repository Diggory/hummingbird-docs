{"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBTracingMiddleware\/init()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBTracingMiddleware"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBTracingMiddleware"]]},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Intialize a new HBTracingMiddleware."}],"metadata":{"platforms":[{"beta":false,"name":"iOS","deprecated":false,"unavailable":false,"introducedAt":"13.0"},{"beta":false,"name":"macOS","deprecated":false,"unavailable":false,"introducedAt":"10.15"},{"beta":false,"name":"tvOS","deprecated":false,"unavailable":false,"introducedAt":"13.0"},{"beta":false,"name":"watchOS","deprecated":false,"unavailable":false,"introducedAt":"6.0"}],"title":"init()","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"Hummingbird"}],"role":"symbol","externalID":"s:11Hummingbird19HBTracingMiddlewareVACycfc"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}]}],"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/hbtracingmiddleware\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBTracingMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBTracingMiddleware"}],"url":"\/documentation\/hummingbirdfoundation\/hbtracingmiddleware","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBTracingMiddleware","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}],"title":"HBTracingMiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBTracingMiddleware/init()":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBTracingMiddleware\/init()","role":"symbol","title":"init()","abstract":[{"text":"Intialize a new HBTracingMiddleware.","type":"text"}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/hummingbirdfoundation\/hbtracingmiddleware\/init()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","role":"collection","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","type":"topic","role":"collectionGroup","title":"Logging, Metrics and Tracing"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","kind":"article","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"}}}