{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","title":"read(_:)","roleHeading":"Instance Method","externalID":"s:11Hummingbird8HBParserV4readySbs7UnicodeO6ScalarVKF","symbolKind":"method","extendedModule":"Hummingbird","modules":[{"name":"Hummingbird"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParser"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParser\/read(_:)-3ddyp"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Read the current character and return if it is as intended. If character test returns true then move forward 1","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"char","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"languages":["swift"]}]},{"parameters":[{"name":"char","content":[{"type":"paragraph","inlineContent":[{"text":"character to compare against","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"If current character was the one we expected"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":".overflow","type":"text"}]}],"name":"Throws"}]}],"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/hbparser\/read(_:)-3ddyp"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","kind":"symbol","title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBParser":{"abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"url":"\/documentation\/hummingbirdfoundation\/hbparser","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"type":"topic","title":"HBParser","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParser"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBParser/read(_:)-3ddyp":{"url":"\/documentation\/hummingbirdfoundation\/hbparser\/read(_:)-3ddyp","title":"read(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","abstract":[{"type":"text","text":"Read the current character and return if it is as intended. If character test returns true then move forward 1"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParser\/read(_:)-3ddyp"}}}