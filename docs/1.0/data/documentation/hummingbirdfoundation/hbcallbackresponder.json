{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncCallbackResponder"],"title":"Router"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder\/init(callback:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder\/respond(to:)"],"title":"Instance Methods"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"sections":[],"kind":"symbol","relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponder"],"kind":"relationships","title":"Conforms To"}],"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/hbcallbackresponder"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","externalID":"s:11Hummingbird19HBCallbackResponderV","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"symbolKind":"struct","modules":[{"name":"HummingbirdFoundation"}],"navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"title":"HBCallbackResponder"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncCallbackResponder":{"url":"\/documentation\/hummingbirdfoundation\/hbasynccallbackresponder","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncCallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"title":"HBAsyncCallbackResponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBCallbackResponder":{"url":"\/documentation\/hummingbirdfoundation\/hbcallbackresponder","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"title":"HBCallbackResponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"title":"HBRouterMethodOptions","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Options available to routes","type":"text"}],"url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterGroup":{"url":"\/documentation\/hummingbirdfoundation\/hbroutergroup","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"title":"HBRouterGroup","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBCallbackResponder/respond(to:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:11Hummingbird10HBResponseV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Return EventLoopFuture that will be fulfilled with response to the request supplied","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbcallbackresponder\/respond(to:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder\/respond(to:)","title":"respond(to:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRequestDecodable":{"url":"\/documentation\/hummingbirdfoundation\/hbrequestdecodable","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBRequestDecodable","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecodable","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"type":"text","text":" which uses "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to initialize it"}],"navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"title":"HBRequestDecodable","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncRouteHandler":{"url":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler","role":"symbol","kind":"symbol","title":"HBAsyncRouteHandler","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"abstract":[{"text":"Route Handler using async\/await methods","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethods":{"url":"\/documentation\/hummingbirdfoundation\/hbroutermethods","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethods","abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post â€¦) methods"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"title":"HBRouterMethods","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponder":{"url":"\/documentation\/hummingbirdfoundation\/hbresponder","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponder","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"title":"HBResponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBCallbackResponder/init(callback:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder\/init(callback:)","title":"init(callback:)","abstract":[],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"HBResponse","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10HBResponseV"},{"text":">)","kind":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbcallbackresponder\/init(callback:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterBuilder","title":"HBRouterBuilder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouteHandler":{"url":"\/documentation\/hummingbirdfoundation\/hbroutehandler","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouteHandler","abstract":[{"type":"text","text":"Object for handling requests."}],"navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"title":"HBRouteHandler","kind":"symbol"}}}