{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/decode(_:from:)-1fi5j"},"abstract":[{"text":"Decodes a top-level value of the given type from the given JSON representation.","type":"text"}],"kind":"symbol","metadata":{"title":"decode(_:from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","symbolKind":"method","externalID":"s:10Foundation11JSONDecoderC6decode_4fromxxm_AA4DataVtKSeRzlF","modules":[{"name":"HummingbirdFoundation"}],"roleHeading":"Instance Method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:)-1fi5j"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The type of the value to decode."}],"type":"paragraph"}],"name":"type"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The data to decode from.","type":"text"}]}],"name":"data"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A value of the requested type."}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"code":"DecodingError.dataCorrupted","type":"codeVoice"},{"text":" if values requested from the payload are corrupted, or if the given data is not valid JSON.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Throws"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if any value throws an error during decoding."}]}],"type":"aside","style":"note","name":"Throws"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/decode(_:from:)-1fi5j":{"title":"decode(_:from:)","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:)-1fi5j","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/decode(_:from:)-1fi5j","role":"symbol","abstract":[{"text":"Decodes a top-level value of the given type from the given JSON representation.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"type":"topic","kind":"symbol","title":"JSONDecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","url":"\/documentation\/hummingbirdfoundation\/jsondecoder","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"title":"HummingbirdFoundation","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"url":"\/documentation\/hummingbirdfoundation"}}}