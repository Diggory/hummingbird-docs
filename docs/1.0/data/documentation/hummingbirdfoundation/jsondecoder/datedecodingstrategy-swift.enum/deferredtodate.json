{"kind":"symbol","abstract":[{"text":"Defer to ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" for decoding. This is the default strategy.","type":"text"}],"metadata":{"symbolKind":"case","modules":[{"name":"HummingbirdFoundation"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToDate","kind":"identifier"}],"role":"symbol","roleHeading":"Case","externalID":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO010deferredToC0yA2EmF","title":"JSONDecoder.DateDecodingStrategy.deferredToDate"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DateDecodingStrategy-swift.enum\/deferredToDate","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToDate","kind":"identifier"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/deferredtodate"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DateDecodingStrategy-swift.enum"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DateDecodingStrategy-swift.enum":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DateDecodingStrategy-swift.enum","title":"JSONDecoder.DateDecodingStrategy","navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateDecodingStrategy"}],"type":"topic","abstract":[{"type":"text","text":"The strategy to use for decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" values."}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DateDecodingStrategy-swift.enum/deferredToDate":{"kind":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToDate","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/deferredtodate","abstract":[{"text":"Defer to ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" for decoding. This is the default strategy.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DateDecodingStrategy-swift.enum\/deferredToDate","role":"symbol","title":"JSONDecoder.DateDecodingStrategy.deferredToDate"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"title":"HummingbirdFoundation","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"url":"\/documentation\/hummingbirdfoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"type":"topic","kind":"symbol","title":"JSONDecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","url":"\/documentation\/hummingbirdfoundation\/jsondecoder","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"role":"symbol"}}}