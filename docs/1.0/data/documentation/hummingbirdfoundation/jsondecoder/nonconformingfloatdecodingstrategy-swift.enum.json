{"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw"]}],"abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"roleHeading":"Enumeration","externalID":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","symbolKind":"enum","title":"JSONDecoder.NonConformingFloatDecodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"modules":[{"name":"HummingbirdFoundation"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder","kind":"symbol","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"type":"topic","title":"JSONDecoder","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"type":"topic","title":"JSONDecoder.NonConformingFloatDecodingStrategy","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/throw":{"abstract":[{"text":"Throw upon encountering non-conforming values. This is the default strategy.","type":"text"}],"type":"topic","title":"JSONDecoder.NonConformingFloatDecodingStrategy.throw","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"`throw`","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/throw","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/convertFromString(positiveInfinity:negativeInfinity:nan:)":{"abstract":[{"text":"Decode the values from the given representation strings.","type":"text"}],"type":"topic","title":"JSONDecoder.NonConformingFloatDecodingStrategy.convertFromString(positiveInfinity:negativeInfinity:nan:)","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"convertFromString","kind":"identifier"},{"text":"(","kind":"text"},{"text":"positiveInfinity","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"negativeInfinity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nan"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/convertfromstring(positiveinfinity:negativeinfinity:nan:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"type":"topic","title":"HummingbirdFoundation","url":"\/documentation\/hummingbirdfoundation","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","kind":"symbol","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}]}}}