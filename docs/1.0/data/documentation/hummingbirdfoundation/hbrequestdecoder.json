{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/URLEncodedFormDecoder"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecoder","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecoder\/decode(_:from:)"]}],"abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}],"seeAlsoSections":[{"generated":true,"title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseCodable"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/hbrequestdecoder"]}],"kind":"symbol","sections":[],"metadata":{"roleHeading":"Protocol","role":"symbol","title":"HBRequestDecoder","symbolKind":"protocol","modules":[{"name":"HummingbirdFoundation"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestDecoder"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecoder"}],"externalID":"s:11Hummingbird16HBRequestDecoderP"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecoder","kind":"identifier"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRequestDecoder/decode(_:from:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecoder\/decode(_:from:)","url":"\/documentation\/hummingbirdfoundation\/hbrequestdecoder\/decode(_:from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"text":"Decode type from request","type":"text"}],"type":"topic","required":true,"title":"decode(_:from:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponseGenerator":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseGenerator","title":"HBResponseGenerator","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBResponseGenerator"}],"abstract":[{"text":"Object that can generate a ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseGenerator"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbresponsegenerator"},"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","type":"topic","role":"collection","kind":"article","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","title":"JSONDecoder","type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsondecoder","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/URLEncodedFormDecoder":{"url":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder","abstract":[{"text":"The wrapper struct for decoding URL encoded form data to Codable classes","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/URLEncodedFormDecoder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"URLEncodedFormDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"URLEncodedFormDecoder","kind":"identifier"}],"title":"URLEncodedFormDecoder","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponseCodable":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseCodable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseCodable","navigatorTitle":[{"text":"HBResponseCodable","kind":"identifier"}],"abstract":[{"text":"Protocol for codable object that can generate a response","type":"text"}],"type":"topic","title":"HBResponseCodable","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbresponsecodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponseEncodable":{"url":"\/documentation\/hummingbirdfoundation\/hbresponseencodable","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseEncodable","title":"HBResponseEncodable","navigatorTitle":[{"text":"HBResponseEncodable","kind":"identifier"}],"abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"text":"the response using the encoder stored in ","type":"text"},{"code":"HBApplication.encoder","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseEncodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","abstract":[{"text":"Hummingbird uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to decode requests and encode responses.","type":"text"}],"url":"\/documentation\/hummingbird\/encodinganddecoding","kind":"article","type":"topic","role":"collectionGroup","title":"Encoding and Decoding"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponseEncoder":{"navigatorTitle":[{"text":"HBResponseEncoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseEncoder","title":"HBResponseEncoder","type":"topic","url":"\/documentation\/hummingbirdfoundation\/hbresponseencoder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseEncoder","kind":"identifier"}],"abstract":[{"text":"protocol for encoders generating a Response","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRequestDecoder":{"navigatorTitle":[{"text":"HBRequestDecoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecoder","title":"HBRequestDecoder","type":"topic","url":"\/documentation\/hummingbirdfoundation\/hbrequestdecoder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecoder","kind":"identifier"}],"abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"}}}