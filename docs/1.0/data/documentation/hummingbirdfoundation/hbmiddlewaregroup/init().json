{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddlewareGroup\/init()"},"metadata":{"title":"init()","modules":[{"name":"Hummingbird"}],"roleHeading":"Initializer","externalID":"s:11Hummingbird17HBMiddlewareGroupCACycfc","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"Set middleware array to be empty","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/hbmiddlewaregroup\/init()"]}],"kind":"symbol","abstract":[{"text":"Initialize ","type":"text"},{"type":"codeVoice","code":"HBMiddlewareGroup"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddlewareGroup"]]},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBMiddlewareGroup":{"role":"symbol","navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/hbmiddlewaregroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddlewareGroup","title":"HBMiddlewareGroup","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","kind":"symbol","title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBMiddlewareGroup/init()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddlewareGroup\/init()","title":"init()","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","url":"\/documentation\/hummingbirdfoundation\/hbmiddlewaregroup\/init()","abstract":[{"type":"text","text":"Initialize "},{"type":"codeVoice","code":"HBMiddlewareGroup"}],"kind":"symbol"}}}