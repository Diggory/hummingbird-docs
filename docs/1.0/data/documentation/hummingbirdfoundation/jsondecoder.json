{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder"]}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecoder"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","interfaceLanguage":"swift"},"sections":[],"metadata":{"title":"JSONDecoder","externalID":"s:10Foundation11JSONDecoderC","roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"modules":[{"name":"HummingbirdFoundation"}],"role":"symbol","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"symbolKind":"class"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/keyDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/userInfo"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/decode(_:from:)-1fi5j"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"],"title":"Enumerations"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/HBRequestDecoder-Implementations"],"title":"Default Implementations","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"languages":["swift"]}]}],"abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DateDecodingStrategy-swift.enum":{"abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" values.","type":"text"}],"navigatorTitle":[{"text":"DateDecodingStrategy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DateDecodingStrategy-swift.enum","title":"JSONDecoder.DateDecodingStrategy","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateDecodingStrategy","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/HBRequestDecoder-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/hbrequestdecoder-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/HBRequestDecoder-Implementations","role":"collectionGroup","abstract":[],"title":"HBRequestDecoder Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/init()":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","abstract":[{"text":"Initializes ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" with default strategies.","type":"text"}],"title":"init()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/init()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum":{"navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"title":"JSONDecoder.DataDecodingStrategy","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/KeyDecodingStrategy-swift.enum":{"title":"JSONDecoder.KeyDecodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyDecodingStrategy"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"KeyDecodingStrategy"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/decode(_:from:)-1fi5j":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/decode(_:from:)-1fi5j","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"text":"Decodes a top-level value of the given type from the given JSON representation.","type":"text"}],"title":"decode(_:from:)","type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:)-1fi5j"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","title":"HummingbirdFoundation","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","title":"JSONDecoder","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","type":"topic","kind":"symbol","navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","role":"symbol","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestDecoder":{"abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"navigatorTitle":[{"text":"HBRequestDecoder","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbrequestdecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecoder","title":"HBRequestDecoder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecoder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/dataDecodingStrategy-swift.property":{"kind":"symbol","abstract":[{"type":"text","text":"The strategy to use in decoding binary data. Defaults to "},{"type":"codeVoice","code":".base64"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dataDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"DataDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC20DataDecodingStrategyO"}],"role":"symbol","title":"dataDecodingStrategy","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.property","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dataDecodingStrategy-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/userInfo":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/userinfo","title":"userInfo","role":"symbol","abstract":[{"text":"Contextual user-provided information for use during decoding.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/userInfo","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"userInfo","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s17CodingUserInfoKeyV","text":"CodingUserInfoKey","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"]","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/keyDecodingStrategy-swift.property":{"title":"keyDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use for decoding keys. Defaults to "},{"type":"codeVoice","code":".useDefaultKeys"},{"type":"text","text":"."}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.property","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/keyDecodingStrategy-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO","text":"KeyDecodingStrategy"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/dateDecodingStrategy-swift.property":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.property","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dateDecodingStrategy-swift.property","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dateDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO","text":"DateDecodingStrategy"}],"abstract":[{"text":"The strategy to use in decoding dates. Defaults to ","type":"text"},{"code":".deferredToDate","type":"codeVoice"},{"text":".","type":"text"}],"title":"dateDecodingStrategy"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"kind":"symbol","abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"code":".throw","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonConformingFloatDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","text":"NonConformingFloatDecodingStrategy"}],"role":"symbol","title":"nonConformingFloatDecodingStrategy","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property"}}}