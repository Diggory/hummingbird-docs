{"abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParameters"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParameters\/getCatchAll()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/hbparameters\/getcatchall()"]}],"metadata":{"externalID":"s:11Hummingbird12HBParametersV11getCatchAllSaySsGyF","modules":[{"name":"HummingbirdFoundation"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"]"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","title":"getCatchAll()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"languages":["swift"]}]}],"sections":[],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBParameters/getCatchAll()":{"type":"topic","url":"\/documentation\/hummingbirdfoundation\/hbparameters\/getcatchall()","role":"symbol","title":"getCatchAll()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParameters\/getCatchAll()","kind":"symbol","abstract":[{"text":"Return path elements caught by recursive capture","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBParameters":{"url":"\/documentation\/hummingbirdfoundation\/hbparameters","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParameters","title":"HBParameters","navigatorTitle":[{"text":"HBParameters","kind":"identifier"}],"abstract":[{"type":"text","text":"Store for parameters key, value pairs extracted from URI"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParameters","kind":"identifier"}]}}}