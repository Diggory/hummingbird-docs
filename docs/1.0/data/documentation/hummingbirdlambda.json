{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler"],"title":"Structures"}],"metadata":{"role":"collection","modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Framework","externalID":"HummingbirdLambda","symbolKind":"module","title":"HummingbirdLambda"},"variants":[{"paths":["\/documentation\/hummingbirdlambda"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Usage","text":"Usage","type":"heading"},{"inlineContent":[{"text":"Create struct conforming to ","type":"text"},{"type":"codeVoice","code":"HBLambda"},{"text":". Setup your application in the ","type":"text"},{"type":"codeVoice","code":"init"},{"text":" function: add your middleware, add route handlers etc","type":"text"}],"type":"paragraph"},{"code":["struct MyHandler: HBLambda {","    \/\/ define input and output","    typealias In = APIGateway.Request","    typealias Out = APIGateway.Response","    ","    init(_ app: HBApplication) {","        app.middleware.add(HBLogRequestsMiddleware(.debug))","        app.router.get(\"hello\") { _ in","            return \"Hello\"","        }","    }","}","","Lambda.run { context in","    return HBLambdaHandler<MyHandler>(context: context)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"In","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" types define your input and output objects. If you are using an ","type":"text"},{"code":"APIGateway","type":"codeVoice"},{"text":" REST interface to invoke your Lambda then set these to ","type":"text"},{"code":"APIGateway.Request","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"APIGateway.Response","type":"codeVoice"},{"text":" respectively. If you are using an ","type":"text"},{"code":"APIGateway","type":"codeVoice"},{"text":" HTML interface then set these to ","type":"text"},{"code":"APIGateway.V2.Request","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"APIGateway.V2.Response","type":"codeVoice"},{"text":". If you are using any other ","type":"text"},{"code":"In","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" types you will need to implement the ","type":"text"},{"code":"request(context:application:from:)","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"output(from:)","type":"codeVoice"},{"text":" methods yourself.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[[]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambdaHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","type":"topic","navigatorTitle":[{"text":"HBLambdaHandler","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Specialization of EventLoopLambdaHandler which runs an HBLambda","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hblambdahandler","kind":"symbol","title":"HBLambdaHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"title":"HBLambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas. Define the "},{"type":"codeVoice","code":"In"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Out"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"In"},{"type":"text","text":" to "},{"type":"codeVoice","code":"HBRequest"},{"type":"text","text":" and "},{"type":"codeVoice","code":"HBResponse"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Out"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambda"}],"navigatorTitle":[{"kind":"identifier","text":"HBLambda"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hblambda","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","type":"topic","role":"collection","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"url":"\/documentation\/hummingbirdlambda","kind":"symbol","title":"HummingbirdLambda"}}}