{"metadata":{"roleHeading":"Framework","role":"collection","symbolKind":"module","externalID":"HummingbirdLambda","modules":[{"name":"HummingbirdLambda"}],"title":"HummingbirdLambda"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/hummingbirdlambda"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler"],"title":"Structures"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","interfaceLanguage":"swift"},"abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Usage","anchor":"Usage","type":"heading"},{"inlineContent":[{"type":"text","text":"Create struct conforming to "},{"type":"codeVoice","code":"HBLambda"},{"type":"text","text":". Setup your application in the "},{"type":"codeVoice","code":"init"},{"type":"text","text":" function: add your middleware, add route handlers etc"}],"type":"paragraph"},{"code":["struct MyHandler: HBLambda {","    \/\/ define input and output","    typealias In = APIGateway.Request","    typealias Out = APIGateway.Response","    ","    init(_ app: HBApplication) {","        app.middleware.add(HBLogRequestsMiddleware(.debug))","        app.router.get(\"hello\") { _ in","            return \"Hello\"","        }","    }","}","","Lambda.run { context in","    return HBLambdaHandler<MyHandler>(context: context)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"code":"In","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Out","type":"codeVoice"},{"type":"text","text":" types define your input and output objects. If you are using an "},{"code":"APIGateway","type":"codeVoice"},{"type":"text","text":" REST interface to invoke your Lambda then set these to "},{"code":"APIGateway.Request","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"APIGateway.Response","type":"codeVoice"},{"text":" respectively. If you are using an ","type":"text"},{"code":"APIGateway","type":"codeVoice"},{"text":" HTML interface then set these to ","type":"text"},{"code":"APIGateway.V2.Request","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"APIGateway.V2.Response","type":"codeVoice"},{"text":". If you are using any other ","type":"text"},{"code":"In","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" types you will need to implement the ","type":"text"},{"type":"codeVoice","code":"request(context:application:from:)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"output(from:)"},{"text":" methods yourself.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hblambdahandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","title":"HBLambdaHandler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambdaHandler"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBLambdaHandler"}],"type":"topic","abstract":[{"type":"text","text":"Specialization of EventLoopLambdaHandler which runs an HBLambda"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","type":"topic","url":"\/documentation\/hummingbirdlambda","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"navigatorTitle":[{"kind":"identifier","text":"HBLambda"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","title":"HBLambda","type":"topic","url":"\/documentation\/hummingbirdlambda\/hblambda","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambda"}],"abstract":[{"text":"Protocol for Hummingbird Lambdas. Define the ","type":"text"},{"code":"In","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Out","type":"codeVoice"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"In"},{"type":"text","text":" to "},{"type":"codeVoice","code":"HBRequest"},{"type":"text","text":" and "},{"type":"codeVoice","code":"HBResponse"},{"type":"text","text":" to "},{"code":"Out","type":"codeVoice"}]}}}