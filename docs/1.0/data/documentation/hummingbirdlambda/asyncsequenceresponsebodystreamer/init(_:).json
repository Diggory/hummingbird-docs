{"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"asyncSequence"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBufferSequence"},{"kind":"text","text":")"}],"platforms":["Linux"]}]}],"metadata":{"externalID":"s:11Hummingbird33AsyncSequenceResponseBodyStreamerCyACyxGxcfc","modules":[{"name":"HummingbirdLambda"}],"role":"symbol","platforms":[{"unavailable":false,"deprecated":false,"name":"iOS","introducedAt":"13.0","beta":false},{"unavailable":false,"deprecated":false,"name":"macOS","introducedAt":"10.15","beta":false},{"unavailable":false,"deprecated":false,"name":"tvOS","introducedAt":"13.0","beta":false},{"unavailable":false,"deprecated":false,"name":"watchOS","introducedAt":"6.0","beta":false}],"roleHeading":"Initializer","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ByteBufferSequence","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"init"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/AsyncSequenceResponseBodyStreamer"]]},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/asyncsequenceresponsebodystreamer\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/AsyncSequenceResponseBodyStreamer\/init(_:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/AsyncSequenceResponseBodyStreamer":{"title":"AsyncSequenceResponseBodyStreamer","abstract":[{"type":"text","text":"Response body streamer which uses an AsyncSequence as its input."}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceResponseBodyStreamer"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceResponseBodyStreamer"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/AsyncSequenceResponseBodyStreamer","url":"\/documentation\/hummingbirdlambda\/asyncsequenceresponsebodystreamer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/AsyncSequenceResponseBodyStreamer/init(_:)":{"title":"init(_:)","abstract":[],"kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ByteBufferSequence"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/AsyncSequenceResponseBodyStreamer\/init(_:)","url":"\/documentation\/hummingbirdlambda\/asyncsequenceresponsebodystreamer\/init(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}