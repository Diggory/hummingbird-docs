{"metadata":{"role":"symbol","navigatorTitle":[{"text":"HTTPHeadersPatch","kind":"identifier"}],"symbolKind":"struct","roleHeading":"Structure","title":"HTTPHeadersPatch","externalID":"s:11Hummingbird16HTTPHeadersPatchV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeadersPatch","kind":"identifier"}],"modules":[{"name":"HummingbirdFoundation"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/httpheaderspatch"]}],"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s30ExpressibleByDictionaryLiteralP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBURL","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse"],"title":"Request\/Response"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Used to Patch HTTPHeaders. Remembers if a header was added in with ","type":"text"},{"code":"add","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"replaceOrAdd","type":"codeVoice"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/init(dictionaryLiteral:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/add(contentsOf:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/add(name:value:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/remove(name:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/replaceOrAdd(name:value:)"],"title":"Instance Methods"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeadersPatch","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"HBRequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestContext":{"url":"\/documentation\/hummingbirdlambda\/hbrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestContext","abstract":[{"type":"text","text":"Context that created HBRequest."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"role":"symbol","kind":"symbol","title":"HBRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch/add(contentsOf:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/add(contentsOf:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"add","kind":"identifier"},{"kind":"text","text":"<"},{"text":"S","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contentsOf"},{"kind":"text","text":": "},{"text":"S","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","title":"add(contentsOf:)","abstract":[{"text":"Add a sequence of header name\/value pairs to the block.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/httpheaderspatch\/add(contentsof:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch/remove(name:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/remove(name:)","abstract":[{"text":"Remove all values for a given header name from the block.","type":"text"}],"title":"remove(name:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remove","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/httpheaderspatch\/remove(name:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch/add(name:value:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/add(name:value:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","title":"add(name:value:)","abstract":[{"type":"text","text":"Add a header name\/value pair to the block."}],"url":"\/documentation\/hummingbirdlambda\/httpheaderspatch\/add(name:value:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch","abstract":[{"text":"Used to Patch HTTPHeaders. Remembers if a header was added in with ","type":"text"},{"code":"add","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"replaceOrAdd","type":"codeVoice"}],"navigatorTitle":[{"text":"HTTPHeadersPatch","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/httpheaderspatch","title":"HTTPHeadersPatch","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeadersPatch","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMediaType":{"abstract":[{"type":"text","text":"Define media type of file"}],"navigatorTitle":[{"text":"HBMediaType","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbmediatype","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMediaType","title":"HBMediaType","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMediaType","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch/init(dictionaryLiteral:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/init(dictionaryLiteral:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dictionaryLiteral","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")...)","kind":"text"}],"title":"init(dictionaryLiteral:)","type":"topic","url":"\/documentation\/hummingbirdlambda\/httpheaderspatch\/init(dictionaryliteral:)","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponse":{"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponse"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbresponse","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse","title":"HBResponse","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponse"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBURL":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBURL","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hburl","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBURL","kind":"identifier"}],"type":"topic","abstract":[{"text":"Simple URL parser","type":"text"}],"title":"HBURL","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBURL"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParameters":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBParameters","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbparameters","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParameters","kind":"identifier"}],"type":"topic","abstract":[{"text":"Store for parameters key, value pairs extracted from URI","type":"text"}],"title":"HBParameters","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParameters"},"doc://com.opticalaberration.hummingbird/s30ExpressibleByDictionaryLiteralP":{"title":"Swift.ExpressibleByDictionaryLiteral","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s30ExpressibleByDictionaryLiteralP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch/replaceOrAdd(name:value:)":{"title":"replaceOrAdd(name:value:)","url":"\/documentation\/hummingbirdlambda\/httpheaderspatch\/replaceoradd(name:value:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/replaceOrAdd(name:value:)","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceOrAdd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}]}}}