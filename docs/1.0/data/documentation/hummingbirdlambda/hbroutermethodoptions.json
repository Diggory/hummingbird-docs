{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/rawValue"]},{"title":"Type Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/editResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/streamBody"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/SetAlgebra-Implementations"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"]}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"symbolKind":"struct","roleHeading":"Structure","role":"symbol","externalID":"s:11Hummingbird21HBRouterMethodOptionsV","title":"HBRouterMethodOptions","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"modules":[{"name":"HummingbirdLambda"}]},"sections":[],"seeAlsoSections":[{"generated":true,"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncCallbackResponder"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbroutermethodoptions"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Options available to routes"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"title":"HBRouterMethods","abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","url":"\/documentation\/hummingbirdlambda\/hbroutermethods","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/init(rawValue:)":{"kind":"symbol","type":"topic","title":"init(rawValue:)","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/init(rawvalue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/init(rawValue:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/streamBody":{"abstract":[{"text":"don’t collate the request body, expect handler to stream it","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/streambody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/streamBody","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"streamBody","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"}],"title":"streamBody","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/SetAlgebra-Implementations":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/setalgebra-implementations","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/SetAlgebra-Implementations","title":"SetAlgebra Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/OptionSet-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/OptionSet-Implementations","kind":"article","title":"OptionSet Implementations","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/optionset-implementations","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/SQ":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/SY":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/rawValue":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/rawvalue","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/rawValue","title":"rawValue","role":"symbol","type":"topic","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCallbackResponder":{"url":"\/documentation\/hummingbirdlambda\/hbcallbackresponder","title":"HBCallbackResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"title":"HBRouterMethodOptions","abstract":[{"type":"text","text":"Options available to routes"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponder":{"title":"HBResponder","url":"\/documentation\/hummingbirdlambda\/hbresponder","navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouteHandler":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"title":"HBRouteHandler","abstract":[{"type":"text","text":"Object for handling requests."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","url":"\/documentation\/hummingbirdlambda\/hbroutehandler","role":"symbol"},"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"title":"Swift.SetAlgebra","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/editResponse":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/editresponse","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"editResponse","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/editResponse","title":"editResponse","role":"symbol","type":"topic","abstract":[{"text":"allow handler to edit response via ","type":"text"},{"code":"request.response","type":"codeVoice"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"title":"HBRouterGroup","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","url":"\/documentation\/hummingbirdlambda\/hbroutergroup","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncCallbackResponder":{"kind":"symbol","type":"topic","title":"HBAsyncCallbackResponder","role":"symbol","navigatorTitle":[{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbasynccallbackresponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncCallbackResponder"},"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","title":"Swift.OptionSet"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/Equatable-Implementations":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/equatable-implementations","title":"Equatable Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/Equatable-Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestDecodable":{"type":"topic","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecodable","role":"symbol","title":"HBRequestDecodable","kind":"symbol","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbrequestdecodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterBuilder":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"title":"HBRouterBuilder","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","url":"\/documentation\/hummingbirdlambda\/hbrouterbuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncRouteHandler":{"abstract":[{"text":"Route Handler using async\/await methods","type":"text"}],"navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbasyncroutehandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"title":"HBAsyncRouteHandler","kind":"symbol","role":"symbol"}}}