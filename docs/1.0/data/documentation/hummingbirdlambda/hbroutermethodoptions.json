{"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"],"title":"Conforms To","type":"conformsTo"}],"metadata":{"role":"symbol","externalID":"s:11Hummingbird21HBRouterMethodOptionsV","title":"HBRouterMethodOptions","roleHeading":"Structure","modules":[{"name":"HummingbirdAuth"}],"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}]},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbroutermethodoptions"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncCallbackResponder"],"title":"Router"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","interfaceLanguage":"swift"},"abstract":[{"text":"Options available to routes","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/rawValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/editResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/streamBody"],"title":"Type Properties"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/SetAlgebra-Implementations"],"title":"Default Implementations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://com.opticalaberration.hummingbird/SY":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethods","type":"topic","role":"symbol","title":"HBRouterMethods","abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"HBRouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","kind":"symbol","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponder":{"title":"HBResponder","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/rawValue":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/rawvalue","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/rawValue","abstract":[],"title":"rawValue","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/SQ":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/OptionSet-Implementations":{"title":"OptionSet Implementations","role":"collectionGroup","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/OptionSet-Implementations","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/optionset-implementations"},"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","title":"Swift.OptionSet","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/streamBody":{"abstract":[{"text":"don’t collate the request body, expect handler to stream it","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"streamBody","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/streambody","title":"streamBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/streamBody","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouteHandler":{"url":"\/documentation\/hummingbirdlambda\/hbroutehandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"abstract":[{"text":"Object for handling requests.","type":"text"}],"title":"HBRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestDecodable":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrequestdecodable","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"title":"HBRequestDecodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCallbackResponder":{"title":"HBCallbackResponder","role":"symbol","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBCallbackResponder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","url":"\/documentation\/hummingbirdlambda\/hbcallbackresponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/editResponse":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/editresponse","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"editResponse","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/editResponse","abstract":[{"text":"allow handler to edit response via ","type":"text"},{"code":"request.response","type":"codeVoice"}],"title":"editResponse","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP","title":"Swift.SetAlgebra","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterBuilder":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"kind":"symbol","title":"HBRouterBuilder","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbrouterbuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","role":"symbol","navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/Equatable-Implementations":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/equatable-implementations","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/Equatable-Implementations","abstract":[],"title":"Equatable Implementations","kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/setalgebra-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/SetAlgebra-Implementations","abstract":[],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"kind":"symbol","title":"HBRouterMethodOptions","abstract":[{"text":"Options available to routes","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","role":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/init(rawValue:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/init(rawValue:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"init(rawValue:)","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/init(rawvalue:)","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncCallbackResponder":{"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"title":"HBAsyncCallbackResponder","url":"\/documentation\/hummingbirdlambda\/hbasynccallbackresponder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncCallbackResponder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncRouteHandler":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbasyncroutehandler","abstract":[{"text":"Route Handler using async\/await methods","type":"text"}],"title":"HBAsyncRouteHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup":{"url":"\/documentation\/hummingbirdlambda\/hbroutergroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"role":"symbol","title":"HBRouterGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup"}}}