{"seeAlsoSections":[{"generated":true,"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"s:11Hummingbird11HBDateCacheC","symbolKind":"class","roleHeading":"Class","title":"HBDateCache","role":"symbol","modules":[{"name":"HummingbirdFoundation"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBDateCache"}],"navigatorTitle":[{"kind":"identifier","text":"HBDateCache"}]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache\/currentDate"]},{"title":"Type Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache\/formatRFC1123Date(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache\/getDateCache(on:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Current date cache.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbdatecache"]}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBDateCache","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Getting the current date formatted is an expensive operation. This creates a scheduled task that will"},{"type":"text","text":" "},{"type":"text","text":"update a cached version of the date in the format as detailed in RFC1123 once every second. To"},{"type":"text","text":" "},{"type":"text","text":"avoid threading issues it is assumed that "},{"type":"codeVoice","code":"currentDate"},{"type":"text","text":" will only every be accessed on the same"},{"type":"text","text":" "},{"type":"text","text":"EventLoop that the update is running."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FlatDictionary":{"abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/flatdictionary","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","title":"FlatDictionary","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser":{"abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","title":"HBParser","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache/formatRFC1123Date(_:)":{"type":"topic","abstract":[{"text":"Render Epoch seconds as RFC1123 formatted date","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache\/formatRFC1123Date(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formatRFC1123Date"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"formatRFC1123Date(_:)","url":"\/documentation\/hummingbirdlambda\/hbdatecache\/formatrfc1123date(_:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache/currentDate":{"kind":"symbol","abstract":[{"type":"text","text":"Current formatted date"}],"title":"currentDate","url":"\/documentation\/hummingbirdlambda\/hbdatecache\/currentdate","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"currentDate","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache\/currentDate"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache":{"title":"HBDateCache","abstract":[{"text":"Current date cache.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBDateCache"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache","url":"\/documentation\/hummingbirdlambda\/hbdatecache","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBDateCache"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache/getDateCache(on:)":{"url":"\/documentation\/hummingbirdlambda\/hbdatecache\/getdatecache(on:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDateCache"},{"text":"(","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11HBDateCacheC","text":"HBDateCache","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache\/getDateCache(on:)","role":"symbol","title":"getDateCache(on:)","type":"topic","abstract":[{"type":"text","text":"return date cache for this thread. If one doesnâ€™t exist create one scheduled on EventLoop"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBEnvironment":{"role":"symbol","kind":"symbol","title":"HBEnvironment","navigatorTitle":[{"text":"HBEnvironment","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","abstract":[{"text":"Access environment variables","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbenvironment","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBEnvironment","kind":"identifier"}]}}}