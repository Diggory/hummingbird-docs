{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBPersistDriverFactory\/create"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBPersistDriverFactory"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBPersistDriverFactory"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBPersistDriverFactory"]]},"metadata":{"role":"symbol","title":"create","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":": (","kind":"text"},{"text":"HBApplication","preciseIdentifier":"s:11Hummingbird13HBApplicationC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"HBPersistDriver","preciseIdentifier":"s:11Hummingbird15HBPersistDriverP","kind":"typeIdentifier"}],"modules":[{"name":"HummingbirdAuth"}],"symbolKind":"property","externalID":"s:11Hummingbird22HBPersistDriverFactoryV6createyAA0bC0_pAA13HBApplicationCcvp","roleHeading":"Instance Property"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbpersistdriverfactory\/create"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":": (","kind":"text"},{"text":"HBApplication","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"},{"text":") -> ","kind":"text"},{"text":"HBPersistDriver","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBPersistDriverP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBPersistDriver"}],"platforms":["Linux"]}],"kind":"declarations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBPersistDriver":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBPersistDriver","kind":"identifier"}],"title":"HBPersistDriver","navigatorTitle":[{"text":"HBPersistDriver","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBPersistDriver","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbpersistdriver","abstract":[{"text":"Protocol for driver supporting persistent Key\/Value pairs across requests","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"title":"Persistent data","role":"collectionGroup","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","url":"\/documentation\/hummingbird\/persistentdata"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBPersistDriverFactory/create":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBPersistDriverFactory\/create","title":"create","kind":"symbol","role":"symbol","abstract":[],"type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15HBPersistDriverP","text":"HBPersistDriver","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbpersistdriverfactory\/create"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBPersistDriverFactory":{"title":"HBPersistDriverFactory","url":"\/documentation\/hummingbirdlambda\/hbpersistdriverfactory","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBPersistDriverFactory","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBPersistDriverFactory"}],"abstract":[{"type":"text","text":"Factory class for persist drivers"}],"navigatorTitle":[{"kind":"identifier","text":"HBPersistDriverFactory"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"title":"HBApplication","role":"symbol","abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBApplication"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","url":"\/documentation\/hummingbirdlambda\/hbapplication"}}}