{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference\/onEventLoop","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference\/onThreadPool(threshold:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference\/Equatable-Implementations"],"generated":true,"title":"Default Implementations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","metadata":{"roleHeading":"Enumeration","externalID":"s:11Hummingbird13HBApplicationC0A11CompressionE08ResponseC19ExecutionPreferenceO","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"extendedModule":"Hummingbird","modules":[{"name":"Hummingbird"}],"title":"HBApplication.ResponseCompressionExecutionPreference","navigatorTitle":[{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"symbolKind":"enum"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference","interfaceLanguage":"swift"},"abstract":[{"text":"Indicate where the response compression tasks should be executed","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference","title":"HBApplication.ResponseCompressionExecutionPreference","abstract":[{"text":"Indicate where the response compression tasks should be executed","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/SQ":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference/Equatable-Implementations":{"kind":"article","url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference\/equatable-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference\/Equatable-Implementations","title":"Equatable Implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference/onThreadPool(threshold:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onThreadPool","kind":"identifier"},{"text":"(","kind":"text"},{"text":"threshold","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"run compression tasks that are larger than ","type":"text"},{"code":"threshold","type":"codeVoice"},{"text":" bytes on application thread pool","type":"text"}],"type":"topic","kind":"symbol","title":"HBApplication.ResponseCompressionExecutionPreference.onThreadPool(threshold:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference\/onthreadpool(threshold:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference\/onThreadPool(threshold:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"title":"HBApplication","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference/onEventLoop":{"abstract":[{"text":"run all compression tasks on the EventLoop","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference\/onEventLoop","title":"HBApplication.ResponseCompressionExecutionPreference.onEventLoop","kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onEventLoop","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference\/oneventloop","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"}}}