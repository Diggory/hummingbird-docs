{"metadata":{"title":"asyncRun()","symbolKind":"method","platforms":[{"name":"iOS","beta":false,"unavailable":false,"deprecated":false,"introducedAt":"13.0"},{"name":"macOS","beta":false,"unavailable":false,"deprecated":false,"introducedAt":"10.15"},{"name":"tvOS","beta":false,"unavailable":false,"deprecated":false,"introducedAt":"13.0"},{"name":"watchOS","beta":false,"unavailable":false,"deprecated":false,"introducedAt":"6.0"}],"roleHeading":"Instance Method","externalID":"s:11Hummingbird13HBApplicationC8asyncRunyyYaKF","modules":[{"name":"HummingbirdLambda"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}]},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Version of "},{"type":"codeVoice","code":"run"},{"type":"text","text":" that can be called from asynchronous context"}]}],"kind":"content"}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncRun()":{"type":"topic","kind":"symbol","title":"asyncRun()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Start application and wait for it to stop","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"title":"HBApplication","abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","url":"\/documentation\/hummingbirdlambda\/hbapplication","role":"symbol"}}}