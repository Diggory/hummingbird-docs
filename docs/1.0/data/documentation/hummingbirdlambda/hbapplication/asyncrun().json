{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncRun","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Version of ","type":"text"},{"code":"run","type":"codeVoice"},{"text":" that can be called from asynchronous context","type":"text"}],"type":"paragraph"}]}],"metadata":{"platforms":[{"introducedAt":"13.0","name":"iOS","beta":false,"deprecated":false,"unavailable":false},{"introducedAt":"10.15","name":"macOS","beta":false,"deprecated":false,"unavailable":false},{"introducedAt":"13.0","name":"tvOS","beta":false,"deprecated":false,"unavailable":false},{"introducedAt":"6.0","name":"watchOS","beta":false,"deprecated":false,"unavailable":false}],"externalID":"s:11Hummingbird13HBApplicationC8asyncRunyyYaKF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"modules":[{"name":"HummingbirdLambda"}],"role":"symbol","title":"asyncRun()","roleHeading":"Instance Method"},"abstract":[{"text":"Start application and wait for it to stop","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"title":"HBApplication","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","url":"\/documentation\/hummingbirdlambda\/hbapplication","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"type":"topic","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncRun()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"title":"asyncRun()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]}}}