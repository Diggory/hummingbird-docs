{"abstract":[{"text":"Wait until server has stopped running","type":"text"}],"metadata":{"modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Instance Method","platforms":[{"unavailable":false,"deprecated":false,"introducedAt":"13.0","name":"iOS","beta":false},{"unavailable":false,"deprecated":false,"introducedAt":"10.15","name":"macOS","beta":false},{"unavailable":false,"deprecated":false,"introducedAt":"13.0","name":"tvOS","beta":false},{"unavailable":false,"deprecated":false,"introducedAt":"6.0","name":"watchOS","beta":false}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"role":"symbol","title":"asyncWait()","externalID":"s:11Hummingbird13HBApplicationC9asyncWaityyYaF"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Version of `wait`` that can be called from asynchronous context"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncWait()":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()","title":"asyncWait()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asyncWait","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","abstract":[{"text":"Wait until server has stopped running","type":"text"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"title":"HBApplication","abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","url":"\/documentation\/hummingbirdlambda\/hbapplication","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}