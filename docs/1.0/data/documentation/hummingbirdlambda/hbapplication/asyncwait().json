{"metadata":{"modules":[{"name":"HummingbirdAuth"}],"title":"asyncWait()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"role":"symbol","platforms":[{"name":"iOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0"},{"name":"macOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"10.15"},{"name":"tvOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0"},{"name":"watchOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"6.0"}],"externalID":"s:11Hummingbird13HBApplicationC9asyncWaityyYaF","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"abstract":[{"text":"Wait until server has stopped running","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Version of `wait`` that can be called from asynchronous context","type":"text"}]}]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncWait()":{"abstract":[{"type":"text","text":"Wait until server has stopped running"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()","type":"topic","title":"asyncWait()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"title":"HBApplication","role":"symbol","abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBApplication"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","url":"\/documentation\/hummingbirdlambda\/hbapplication"}}}