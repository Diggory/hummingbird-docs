{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Version of `wait`` that can be called from asynchronous context"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"Wait until server has stopped running"}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Instance Method","externalID":"s:11Hummingbird13HBApplicationC9asyncWaityyYaF","modules":[{"name":"HummingbirdFoundation"}],"platforms":[{"beta":false,"deprecated":false,"introducedAt":"13.0","unavailable":false,"name":"iOS"},{"name":"macOS","introducedAt":"10.15","beta":false,"deprecated":false,"unavailable":false},{"name":"tvOS","introducedAt":"13.0","beta":false,"deprecated":false,"unavailable":false},{"name":"watchOS","introducedAt":"6.0","beta":false,"deprecated":false,"unavailable":false}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"role":"symbol","symbolKind":"method","title":"asyncWait()"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncWait()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","title":"asyncWait()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Wait until server has stopped running"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"title":"HBApplication","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication","role":"symbol"}}}