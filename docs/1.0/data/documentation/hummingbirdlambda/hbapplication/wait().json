{"abstract":[{"type":"text","text":"Wait until server has stopped running"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"wait","kind":"identifier"},{"text":"()","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This function can only be called from a non async context as it stalls","type":"text"},{"text":" ","type":"text"},{"text":"the current thread waiting for the application to finish","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/wait()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"()"}],"modules":[{"name":"HummingbirdLambda"}],"title":"wait()","symbolKind":"method","externalID":"s:11Hummingbird13HBApplicationC4waityyF","roleHeading":"Instance Method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/wait()":{"abstract":[{"type":"text","text":"Wait until server has stopped running"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"wait()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/wait()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"title":"HBApplication","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","url":"\/documentation\/hummingbirdlambda\/hbapplication","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"type":"topic","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}]}}}