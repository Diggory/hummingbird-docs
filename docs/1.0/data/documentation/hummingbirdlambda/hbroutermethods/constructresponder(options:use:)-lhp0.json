{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"constructResponder","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier"},{"text":" = [], ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"closure","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","text":"HBResponseGenerator","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdLambda"}],"externalID":"s:11Hummingbird15HBRouterMethodsPAAE18constructResponder7options3useAA11HBResponder_pAA0B13MethodOptionsV_qd__AA9HBRequestVYaKctAA19HBResponseGeneratorRd__lFZ","symbolKind":"method","roleHeading":"Type Method","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier","text":"HBResponder"}],"title":"constructResponder(options:use:)","platforms":[{"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"iOS","beta":false},{"unavailable":false,"introducedAt":"10.15","deprecated":false,"name":"macOS","beta":false},{"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"tvOS","beta":false},{"unavailable":false,"introducedAt":"6.0","deprecated":false,"name":"watchOS","beta":false}],"extendedModule":"Hummingbird"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbroutermethods\/constructresponder(options:use:)-lhp0"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/constructResponder(options:use:)-lhp0","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"title":"HBRouterMethodOptions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRouterMethodOptions","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Options available to routes","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","role":"collection","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"title":"HBRequest","role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","url":"\/documentation\/hummingbirdlambda\/hbrequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","title":"HBResponder","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbresponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/constructResponder(options:use:)-lhp0":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/constructresponder(options:use:)-lhp0","kind":"symbol","type":"topic","title":"constructResponder(options:use:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier","text":"HBResponder"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/constructResponder(options:use:)-lhp0"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Conform to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"title":"HBRouterMethods","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponseGenerator":{"title":"HBResponseGenerator","role":"symbol","navigatorTitle":[{"text":"HBResponseGenerator","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","url":"\/documentation\/hummingbirdlambda\/hbresponsegenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","kind":"article","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","type":"topic","url":"\/documentation\/hummingbird\/router"}}}