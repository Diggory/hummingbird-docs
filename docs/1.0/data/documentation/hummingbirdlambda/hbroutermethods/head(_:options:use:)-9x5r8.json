{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"head"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" = \"\", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"kind":"text","text":" = [], "},{"kind":"externalParam","text":"use"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","text":"HBResponseGenerator","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP"}],"languages":["swift"]}]}],"kind":"symbol","abstract":[{"text":"HEAD path for closure returning type conforming to HBResponseGenerator","type":"text"}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbroutermethods\/head(_:options:use:)-9x5r8"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","title":"head(_:options:use:)","symbolKind":"method","modules":[{"name":"HummingbirdLambda","relatedModules":["Hummingbird"]}],"externalID":"s:11Hummingbird15HBRouterMethodsPAAE4head_7options3usexSS_AA0B13MethodOptionsVqd__AA9HBRequestVKctAA19HBResponseGeneratorRd__lF","roleHeading":"Instance Method","extendedModule":"Hummingbird","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"head","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/head(_:options:use:)-9x5r8"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"title":"HBRequest","role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","url":"\/documentation\/hummingbirdlambda\/hbrequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/head(_:options:use:)-9x5r8":{"kind":"symbol","type":"topic","title":"head(_:options:use:)","role":"symbol","abstract":[{"text":"HEAD path for closure returning type conforming to HBResponseGenerator","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"head"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/head(_:options:use:)-9x5r8","url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/head(_:options:use:)-9x5r8"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Conform to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"title":"HBRouterMethods","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"title":"HBRouterMethodOptions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRouterMethodOptions","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Options available to routes","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","role":"collection","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponseGenerator":{"title":"HBResponseGenerator","role":"symbol","navigatorTitle":[{"text":"HBResponseGenerator","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","url":"\/documentation\/hummingbirdlambda\/hbresponsegenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","kind":"article","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","type":"topic","url":"\/documentation\/hummingbird\/router"}}}