{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"symbol","title":"post(_:options:use:)","extendedModule":"Hummingbird","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"post","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"HummingbirdFoundation","relatedModules":["Hummingbird"]}],"symbolKind":"method","platforms":[{"name":"iOS","unavailable":false,"beta":false,"introducedAt":"13.0","deprecated":false},{"name":"macOS","unavailable":false,"beta":false,"introducedAt":"10.15","deprecated":false},{"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"13.0","deprecated":false},{"deprecated":false,"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"6.0"}],"roleHeading":"Instance Method","externalID":"s:11Hummingbird15HBRouterMethodsPAAE4post_7options3usexSS_AA0B13MethodOptionsVqd__AA9HBRequestVYaKctAA19HBResponseGeneratorRd__lF::SYNTHESIZED::s:11Hummingbird15HBRouterBuilderC"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder\/post(_:options:use:)-4lh1p","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"POST path for async closure returning type conforming to ResponseEncodable"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder\/HBRouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder\/HBRouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder\/HBRouterMethods-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"post"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" = \"\", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","kind":"typeIdentifier","text":"HBRouterMethodOptions"},{"kind":"text","text":" = [], "},{"kind":"externalParam","text":"use"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","kind":"typeIdentifier","text":"HBResponseGenerator"}],"platforms":["Linux"]}],"kind":"declarations"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbrouterbuilder\/post(_:options:use:)-4lh1p"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"abstract":[{"text":"Options available to routes","type":"text"}],"navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","title":"HBRouterMethodOptions","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterBuilder":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrouterbuilder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"title":"HBRouterBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","kind":"article","url":"\/documentation\/index","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"kind":"article","url":"\/documentation\/hummingbird\/router","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","title":"Router","type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterBuilder/HBRouterMethods-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/hummingbirdlambda\/hbrouterbuilder\/hbroutermethods-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder\/HBRouterMethods-Implementations","title":"HBRouterMethods Implementations","type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponseGenerator":{"abstract":[{"text":"Object that can generate a ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"HBResponseGenerator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbresponsegenerator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","title":"HBResponseGenerator","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"HBRequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterBuilder/post(_:options:use:)-4lh1p":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"post","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrouterbuilder\/post(_:options:use:)-4lh1p","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder\/post(_:options:use:)-4lh1p","abstract":[{"type":"text","text":"POST path for async closure returning type conforming to ResponseEncodable"}],"kind":"symbol","title":"post(_:options:use:)","type":"topic","role":"symbol"}}}