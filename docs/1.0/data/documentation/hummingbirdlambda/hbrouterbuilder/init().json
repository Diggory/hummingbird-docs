{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbrouterbuilder\/init()"]}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"roleHeading":"Initializer","externalID":"s:11Hummingbird15HBRouterBuilderCACycfc","title":"init()","role":"symbol","symbolKind":"init","modules":[{"name":"HummingbirdFoundation"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder\/init()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterBuilder":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrouterbuilder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"title":"HBRouterBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"kind":"article","url":"\/documentation\/hummingbird\/router","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","title":"Router","type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterBuilder/init()":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder\/init()","type":"topic","role":"symbol","title":"init()","abstract":[],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbrouterbuilder\/init()"},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","kind":"article","url":"\/documentation\/index","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"}}}