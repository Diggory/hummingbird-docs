{"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"modules":[{"name":"HummingbirdLambda"}],"title":"HBCORSMiddleware","roleHeading":"Structure","externalID":"s:11Hummingbird16HBCORSMiddlewareV","symbolKind":"struct"},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware"],"kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"If request has “origin” header then generate CORS headers. If method is OPTIONS"},{"type":"text","text":" "},{"type":"text","text":"then return an empty body with all the standard CORS headers otherwise send"},{"type":"text","text":" "},{"type":"text","text":"request onto the next handler and when you receive the response add a"},{"type":"text","text":" "},{"type":"text","text":"“access-control-allow-origin” header"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/apply(to:next:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/AllowOrigin"],"title":"Enumerations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbcorsmiddleware"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMetricsMiddleware"],"title":"Middleware"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMetricsMiddleware":{"title":"HBMetricsMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMetricsMiddleware"}],"kind":"symbol","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMetricsMiddleware","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbmetricsmiddleware","navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddleware":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware","navigatorTitle":[{"text":"HBMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbmiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddleware","kind":"identifier"}],"abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"type":"topic","role":"symbol","title":"HBMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncMiddleware":{"role":"symbol","title":"HBAsyncMiddleware","navigatorTitle":[{"text":"HBAsyncMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbasyncmiddleware","abstract":[{"text":"Middleware using async\/await","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncMiddleware","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncMiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup":{"navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup","title":"HBMiddlewareGroup","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCORSMiddleware/apply(to:next:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11HBResponderP","text":"HBResponder","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10HBResponseV","text":"HBResponse","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"apply CORS middleware"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbcorsmiddleware\/apply(to:next:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/apply(to:next:)","type":"topic","title":"apply(to:next:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCORSMiddleware/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)":{"abstract":[{"type":"text","text":"Initialize CORS middleware"}],"title":"init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","url":"\/documentation\/hummingbirdlambda\/hbcorsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allowOrigin","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV","text":"HBCORSMiddleware","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV11AllowOriginO","text":"AllowOrigin","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"allowHeaders","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"allowMethods","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"HTTPMethod","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO"},{"text":"], ","kind":"text"},{"text":"allowCredentials","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"exposedHeaders","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]?, ","kind":"text"},{"text":"maxAge","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":"?)","kind":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLogRequestsMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"abstract":[{"text":"Middleware outputting to log for every call to server","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLogRequestsMiddleware","url":"\/documentation\/hummingbirdlambda\/hblogrequestsmiddleware","title":"HBLogRequestsMiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCORSMiddleware/AllowOrigin":{"url":"\/documentation\/hummingbirdlambda\/hbcorsmiddleware\/alloworigin","navigatorTitle":[{"text":"AllowOrigin","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Defines what origins are allowed","type":"text"}],"title":"HBCORSMiddleware.AllowOrigin","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllowOrigin","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/AllowOrigin"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCORSMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware","title":"HBCORSMiddleware","url":"\/documentation\/hummingbirdlambda\/hbcorsmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBCORSMiddleware"}]}}}