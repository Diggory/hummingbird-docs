{"metadata":{"externalID":"s:11Hummingbird13HBEnvironmentV6dotEnvyACSSKFZ","title":"dotEnv(_:)","symbolKind":"method","role":"symbol","modules":[{"name":"HummingbirdAuth"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dotEnv","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBEnvironment","preciseIdentifier":"s:11Hummingbird13HBEnvironmentV","kind":"typeIdentifier"}],"roleHeading":"Type Method"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment"]]},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment\/dotEnv(_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbenvironment\/dotenv(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dotEnv"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"dovEnvPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" = \".env\") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HBEnvironment","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","preciseIdentifier":"s:11Hummingbird13HBEnvironmentV"}]}],"kind":"declarations"}],"abstract":[{"text":"Create HBEnvironment initialised from the ","type":"text"},{"code":".env","type":"codeVoice"},{"text":" file","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBEnvironment":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBEnvironment","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbenvironment","type":"topic","role":"symbol","title":"HBEnvironment","abstract":[{"text":"Access environment variables","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","kind":"symbol","navigatorTitle":[{"text":"HBEnvironment","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBEnvironment/dotEnv(_:)":{"abstract":[{"text":"Create HBEnvironment initialised from the ","type":"text"},{"code":".env","type":"codeVoice"},{"text":" file","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbenvironment\/dotenv(_:)","title":"dotEnv(_:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment\/dotEnv(_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dotEnv","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBEnvironment","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBEnvironmentV"}],"kind":"symbol"}}}