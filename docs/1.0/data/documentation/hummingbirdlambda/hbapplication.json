{"sections":[],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct"]},{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()"]},{"title":"Enumerations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference"]}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"title":"HBApplication","externalID":"s:11Hummingbird13HBApplicationC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"modules":[{"name":"HummingbirdFoundation"}],"role":"symbol","symbolKind":"class","roleHeading":"Class"},"seeAlsoSections":[{"title":"Application","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Create an HBApplication, setup your application middleware, encoders, routes etc and then call "},{"type":"codeVoice","code":"start"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"start the server and "},{"type":"codeVoice","code":"wait"},{"type":"text","text":" to wait until the server is stopped."}],"type":"paragraph"},{"code":["let app = HBApplication()","app.middleware.add(MyMiddleware())","app.get(\"hello\") { _ in","    return \"hello\"","}","app.start()","app.wait()"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"Editing the application setup after calling ","type":"text"},{"code":"start","type":"codeVoice"},{"text":" will produce undefined behaviour.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"},"abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible"],"type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTExecute(uri:method:headers:body:testCallback:)":{"abstract":[{"text":"Send request and call test callback on the response returned","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTExecute","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPMethod","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPHeaders","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?, ","kind":"text"},{"text":"testCallback","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBXCTResponse","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT13HBXCTResponseV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctexecute(uri:method:headers:body:testcallback:)","kind":"symbol","title":"XCTExecute(uri:method:headers:body:testCallback:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"title":"HBApplication","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/eventLoopGroup":{"role":"symbol","title":"eventLoopGroup","abstract":[{"type":"text","text":"event loop group used by application"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoopGroup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/start()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","abstract":[{"text":"Start application","type":"text"}],"role":"symbol","title":"start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/start()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/shutdownApplication()":{"abstract":[{"text":"shutdown eventloop, threadpool and any extensions attached to the Application","type":"text"}],"title":"shutdownApplication()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownApplication","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/shutdownapplication()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addPersist(using:)":{"abstract":[{"text":"Add persist framework to ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addpersist(using:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)","title":"addPersist(using:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addPersist","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV","text":"HBPersistDriverFactory","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(testing:configuration:timeout:)":{"abstract":[{"text":"Creates a version of ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":" that can be used for testing code","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(testing:configuration:timeout:)","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"testing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"XCTTestingSetup","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBApplication","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)","title":"init(testing:configuration:timeout:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/configuration-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configuration","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"HBApplication","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.property","abstract":[{"type":"text","text":"Configuration"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","title":"configuration","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensible":{"abstract":[{"type":"text","text":"Protocol for extensible classes"}],"url":"\/documentation\/hummingbirdlambda\/hbextensible","title":"HBExtensible","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}],"navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/sessionStorage":{"abstract":[{"text":"Accessor for session storage","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sessionStorage","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Persist","preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/sessionstorage","kind":"symbol","title":"sessionStorage","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/run()":{"abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/run()","title":"run()","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(sessionID:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addSessions"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sessionID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV","text":"SessionManager"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea","text":"SessionIDStorage"},{"kind":"text","text":")"}],"title":"addSessions(sessionID:)","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(sessionid:)","abstract":[{"type":"text","text":"Add session management to "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":" using default persist memory driver"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(using:sessionID:)":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(using:sessionid:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","kind":"symbol","abstract":[{"type":"text","text":"Add session management to "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":"."}],"title":"addSessions(using:sessionID:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addSessions"},{"kind":"text","text":"("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV","kind":"typeIdentifier","text":"HBPersistDriverFactory"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sessionID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SessionManager","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SessionIDStorage","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea"},{"kind":"text","text":")"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/router":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"router"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterBuilderC","text":"HBRouterBuilder"}],"title":"router","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/router","abstract":[{"type":"text","text":"routes requests to requestResponders based on URI"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-8fsw8","kind":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","kind":"typeIdentifier","text":"HBApplication"},{"text":".","kind":"text"},{"text":"Configuration","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eventLoopGroupProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore25NIOEventLoopGroupProviderO","text":"NIOEventLoopGroupProvider","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"serviceLifecycleProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO","text":"ServiceLifecycleProvider","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","deprecated":true,"role":"symbol","title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","type":"topic","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncWait()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","title":"asyncWait()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Wait until server has stopped running"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db(_:)","role":"symbol","title":"db(_:)","abstract":[{"type":"text","text":"Get database with ID"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"db","kind":"identifier"},{"text":"(","kind":"text"},{"text":"DatabaseID","preciseIdentifier":"s:9FluentKit10DatabaseIDV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Database","preciseIdentifier":"s:9FluentKit8DatabaseP","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/ServiceLifecycleProvider":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServiceLifecycleProvider"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider","title":"ServiceLifecycleProvider","navigatorTitle":[{"kind":"identifier","text":"ServiceLifecycleProvider"}],"url":"\/documentation\/hummingbirdlambda\/servicelifecycleprovider","role":"symbol","abstract":[{"text":"Define where we get the ServiceLifecycle from.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/constructResponder()":{"title":"constructResponder()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier","text":"HBResponder"}],"abstract":[{"type":"text","text":"Construct the RequestResponder from the middleware group and router"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/constructresponder()","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/extensions":{"title":"extensions","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"extensions"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird12HBExtensionsV","kind":"typeIdentifier","text":"HBExtensions"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","kind":"typeIdentifier","text":"HBApplication"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Application extensions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/extensions","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStop()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstop()","type":"topic","kind":"symbol","abstract":[{"text":"Stop tests","type":"text"}],"title":"XCTStop()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTStop","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRequestDecompression(execute:limit:)":{"title":"addRequestDecompression(execute:limit:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addrequestdecompression(execute:limit:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRequestDecompression"},{"kind":"text","text":"("},{"kind":"externalParam","text":"execute"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE07RequestC19ExecutionPreferenceO","kind":"typeIdentifier","text":"RequestCompressionExecutionPreference"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPDecompressionLimit","preciseIdentifier":"s:22HummingbirdCompression22HTTPDecompressionLimitV"},{"kind":"text","text":")"}],"abstract":[{"text":"Add Channel Handler for decompressing request that have Content-Encoding header set to gzip or deflate","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/encoder":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encoder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP","text":"HBResponseEncoder","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/encoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder","abstract":[{"type":"text","text":"Encoder used by router"}],"type":"topic","title":"encoder","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(configuration:)":{"title":"addRedis(configuration:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRedis"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV","kind":"typeIdentifier","text":"HBRedisConfiguration"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Add Redis to HBApplication"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(configuration:)","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/xct":{"title":"xct","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"xct"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14HummingbirdXCT5HBXCTP","kind":"typeIdentifier","text":"HBXCT"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xct","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/lifecycle":{"abstract":[{"type":"text","text":"server lifecycle, controls initialization and shutdown of application"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/lifecycle","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"lifecycle"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9Lifecycle07ServiceA0V","text":"ServiceLifecycle"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","type":"topic","title":"lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/wait()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()","title":"wait()","kind":"symbol","type":"topic","abstract":[{"text":"Wait until server has stopped running","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/wait()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Configuration-swift.struct":{"abstract":[{"text":"Application configuration","type":"text"}],"navigatorTitle":[{"text":"Configuration","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.struct","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","title":"HBApplication.Configuration","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Configuration","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/middleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","url":"\/documentation\/hummingbirdlambda\/hbapplication\/middleware","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"middleware","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBMiddlewareGroup","preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC","kind":"typeIdentifier"}],"role":"symbol","type":"topic","abstract":[{"text":"middleware applied to requests","type":"text"}],"title":"middleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/jobs":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"jobs","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A4JobsE15JobQueueHandlerC","text":"JobQueueHandler","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobs","role":"symbol","abstract":[{"type":"text","text":"Job queue handler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","type":"topic","title":"jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redisConnectionPools":{"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/redisconnectionpools","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","kind":"symbol","title":"redisConnectionPools","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"redisConnectionPools"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B24ConnectionPoolGroupArrayC","kind":"typeIdentifier","text":"RedisConnectionPoolGroupArray"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/persist-swift.property":{"title":"persist","abstract":[{"type":"text","text":"Accessor for persist framework"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"persist"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV","text":"Persist"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.property","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/EventLoopGroupProvider":{"title":"HBApplication.EventLoopGroupProvider","abstract":[{"text":"Indicates where we should get our EventLoopGroup from","type":"text"}],"navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroupprovider","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/stop()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","type":"topic","title":"stop()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"kind":"text","text":"()"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/stop()","abstract":[{"type":"text","text":"Shutdown application"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Persist-swift.struct":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.struct","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Persist"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct","navigatorTitle":[{"text":"Persist","kind":"identifier"}],"role":"symbol","title":"HBApplication.Persist","type":"topic","abstract":[{"type":"text","text":"Framework for storing persistent key\/value pairs between mulitple requests"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/threadPool":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/threadpool","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","type":"topic","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"threadPool"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC","text":"NIOThreadPool"}],"abstract":[{"text":"thread pool used by application","type":"text"}],"title":"threadPool","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addFluent()":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addFluent","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"addFluent()","role":"symbol","abstract":[{"text":"Create Fluent management object.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addfluent()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/logger":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/logger","kind":"symbol","title":"logger","abstract":[{"type":"text","text":"Logger. Required to be a var by hummingbird-lambda"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncRun()":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()","role":"symbol","abstract":[{"text":"Start application and wait for it to stop","type":"text"}],"title":"asyncRun()","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/fluent":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fluent","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdFluent8HBFluentV","text":"HBFluent","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Fluent interface object","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","url":"\/documentation\/hummingbirdlambda\/hbapplication\/fluent","title":"fluent","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/JobQueueHandler":{"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobqueuehandler","type":"topic","navigatorTitle":[{"text":"JobQueueHandler","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueueHandler","kind":"identifier"}],"title":"HBApplication.JobQueueHandler","abstract":[{"text":"Object internal to ","type":"text"},{"type":"codeVoice","code":"HBApplication"},{"text":" that handles its array of JobQueues.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference","title":"HBApplication.ResponseCompressionExecutionPreference","abstract":[{"text":"Indicate where the response compression tasks should be executed","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis","role":"symbol","title":"redis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","type":"topic","abstract":[],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"redis","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV","text":"RedisConnectionPoolGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration"},{"kind":"text","text":", "},{"text":"eventLoopGroupProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBApplication","preciseIdentifier":"s:11Hummingbird13HBApplicationC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC22EventLoopGroupProviderV","text":"EventLoopGroupProvider","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"serviceLifecycleProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO","text":"ServiceLifecycleProvider","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-9vwer","abstract":[{"type":"text","text":"Initialize new Application"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addJobs(using:numWorkers:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)","type":"topic","title":"addJobs(using:numWorkers:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addJobs"},{"kind":"text","text":"("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdJobs17HBJobQueueFactoryV","kind":"typeIdentifier","text":"HBJobQueueFactory"},{"kind":"text","text":", "},{"kind":"externalParam","text":"numWorkers"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addjobs(using:numworkers:)","abstract":[{"type":"text","text":"Initialisation for Job queue system"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStart()":{"title":"XCTStart()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstart()","abstract":[{"type":"text","text":"Start tests"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTStart","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/server":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","title":"server","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"server"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore12HBHTTPServerC","kind":"typeIdentifier","text":"HBHTTPServer"}],"abstract":[{"type":"text","text":"http server"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/server","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addResponseCompression(execute:)":{"title":"addResponseCompression(execute:)","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addresponsecompression(execute:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addResponseCompression"},{"kind":"text","text":"("},{"kind":"externalParam","text":"execute"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE08ResponseC19ExecutionPreferenceO","kind":"typeIdentifier","text":"ResponseCompressionExecutionPreference"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Add Channel Handler for compressing responses where accept-encoding header indicates the client will accept compressed data"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ws":{"abstract":[{"text":"WebSocket interface","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","url":"\/documentation\/hummingbirdlambda\/hbapplication\/ws","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"ws"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20HummingbirdWebSocket05HBWebC7BuilderV","text":"HBWebSocketBuilder"}],"kind":"symbol","title":"ws"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/RequestCompressionExecutionPreference":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestCompressionExecutionPreference"}],"role":"symbol","title":"HBApplication.RequestCompressionExecutionPreference","abstract":[{"text":"Indicate where the response compression tasks should be executed","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RequestCompressionExecutionPreference"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/requestcompressionexecutionpreference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/decoder":{"title":"decoder","url":"\/documentation\/hummingbirdlambda\/hbapplication\/decoder","abstract":[{"text":"decoder used by router","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRequestDecoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis(id:)":{"title":"redis(id:)","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis(id:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"redis"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","kind":"typeIdentifier","text":"RedisConnectionPoolGroupIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV","kind":"typeIdentifier","text":"RedisConnectionPoolGroup"},{"kind":"text","text":"?"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(id:configuration:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRedis"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","kind":"typeIdentifier","text":"RedisConnectionPoolGroupIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRedisConfiguration","preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV"},{"kind":"text","text":")"}],"abstract":[{"text":"Add Redis to HBApplication","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(id:configuration:)","type":"topic","title":"addRedis(id:configuration:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/HTTPResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","abstract":[{"text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore","type":"text"}],"title":"HBApplication.HTTPResponder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/httpresponder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","abstract":[{"text":"Get default database","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db","title":"db","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"db","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9FluentKit8DatabaseP","text":"Database"}]}}}