{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider"],"title":"Application"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler"],"title":"Classes"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct"],"title":"Structures"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference"],"title":"Enumerations"}],"abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbapplication"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"text":"Create an HBApplication, setup your application middleware, encoders, routes etc and then call ","type":"text"},{"code":"start","type":"codeVoice"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"text":"start the server and ","type":"text"},{"code":"wait","type":"codeVoice"},{"text":" to wait until the server is stopped.","type":"text"}],"type":"paragraph"},{"code":["let app = HBApplication()","app.middleware.add(MyMiddleware())","app.get(\"hello\") { _ in","    return \"hello\"","}","app.start()","app.wait()"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"Editing the application setup after calling ","type":"text"},{"type":"codeVoice","code":"start"},{"text":" will produce undefined behaviour.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"symbolKind":"class","title":"HBApplication","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"modules":[{"name":"HummingbirdLambda"}],"role":"symbol","externalID":"s:11Hummingbird13HBApplicationC"},"kind":"symbol","relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible"],"kind":"relationships","title":"Conforms To"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStart()":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstart()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","role":"symbol","abstract":[{"type":"text","text":"Start tests"}],"title":"XCTStart()","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTStart"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/xct":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xct","title":"xct","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"xct"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14HummingbirdXCT5HBXCTP","text":"HBXCT","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncWait()":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()","title":"asyncWait()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"asyncWait","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","abstract":[{"text":"Wait until server has stopped running","type":"text"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/encoder":{"kind":"symbol","type":"topic","title":"encoder","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/encoder","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"encoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBResponseEncoder","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP"}],"abstract":[{"text":"Encoder used by router","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/shutdownApplication()":{"abstract":[{"text":"shutdown eventloop, threadpool and any extensions attached to the Application","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/shutdownapplication()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownApplication"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"type":"topic","title":"shutdownApplication()","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(testing:configuration:timeout:)":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(testing:configuration:timeout:)","title":"init(testing:configuration:timeout:)","abstract":[{"text":"Creates a version of ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":" that can be used for testing code","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"testing","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupO","text":"XCTTestingSetup","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/lifecycle":{"title":"lifecycle","kind":"symbol","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lifecycle","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ServiceLifecycle","preciseIdentifier":"s:9Lifecycle07ServiceA0V","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/lifecycle","abstract":[{"text":"server lifecycle, controls initialization and shutdown of application","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/server":{"abstract":[{"type":"text","text":"http server"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"server","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore12HBHTTPServerC","text":"HBHTTPServer","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/server","title":"server","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8":{"abstract":[],"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eventLoopGroupProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore25NIOEventLoopGroupProviderO","text":"NIOEventLoopGroupProvider","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"serviceLifecycleProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO","text":"ServiceLifecycleProvider","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","deprecated":true,"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-8fsw8","title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStop()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTStop"},{"kind":"text","text":"()"}],"kind":"symbol","title":"XCTStop()","abstract":[{"type":"text","text":"Stop tests"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstop()","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/EventLoopGroupProvider":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"type":"topic","abstract":[{"text":"Indicates where we should get our EventLoopGroup from","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroupprovider","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"title":"HBApplication.EventLoopGroupProvider","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db(_:)":{"abstract":[{"type":"text","text":"Get database with ID"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"db","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9FluentKit10DatabaseIDV","text":"DatabaseID","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:9FluentKit8DatabaseP","text":"Database","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db(_:)","title":"db(_:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/persist-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"persist","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV","text":"Persist","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","kind":"symbol","title":"persist","url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.property","type":"topic","abstract":[{"text":"Accessor for persist framework","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/eventLoopGroup":{"abstract":[{"type":"text","text":"event loop group used by application"}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"eventLoopGroup","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroup","title":"eventLoopGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addPersist(using:)":{"abstract":[{"type":"text","text":"Add persist framework to "},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"addPersist","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV","text":"HBPersistDriverFactory","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addpersist(using:)","title":"addPersist(using:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"title":"HBApplication","abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","url":"\/documentation\/hummingbirdlambda\/hbapplication","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addFluent()":{"abstract":[{"type":"text","text":"Create Fluent management object."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addFluent"},{"kind":"text","text":"()"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addfluent()","title":"addFluent()","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRequestDecompression(execute:limit:)":{"abstract":[{"type":"text","text":"Add Channel Handler for decompressing request that have Content-Encoding header set to gzip or deflate"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRequestDecompression"},{"kind":"text","text":"("},{"text":"execute","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE07RequestC19ExecutionPreferenceO","text":"RequestCompressionExecutionPreference","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"limit","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22HummingbirdCompression22HTTPDecompressionLimitV","text":"HTTPDecompressionLimit","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addrequestdecompression(execute:limit:)","title":"addRequestDecompression(execute:limit:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redisConnectionPools":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/redisconnectionpools","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"redisConnectionPools"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B24ConnectionPoolGroupArrayC","text":"RedisConnectionPoolGroupArray","kind":"typeIdentifier"}],"type":"topic","title":"redisConnectionPools","kind":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis(id:)":{"type":"topic","kind":"symbol","title":"redis(id:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis(id:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"redis","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","text":"RedisConnectionPoolGroupIdentifier","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV","text":"RedisConnectionPoolGroup","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/ServiceLifecycleProvider":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider","title":"ServiceLifecycleProvider","url":"\/documentation\/hummingbirdlambda\/servicelifecycleprovider","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ServiceLifecycleProvider"}],"abstract":[{"type":"text","text":"Define where we get the ServiceLifecycle from."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ServiceLifecycleProvider"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncRun()":{"type":"topic","kind":"symbol","title":"asyncRun()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Start application and wait for it to stop","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/threadPool":{"role":"symbol","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"threadPool","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC","text":"NIOThreadPool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","abstract":[{"text":"thread pool used by application","type":"text"}],"title":"threadPool","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/threadpool"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/wait()":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()","abstract":[{"text":"Wait until server has stopped running","type":"text"}],"title":"wait()","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/wait()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addJobs(using:numWorkers:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addJobs","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdJobs17HBJobQueueFactoryV","text":"HBJobQueueFactory","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"numWorkers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"addJobs(using:numWorkers:)","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addjobs(using:numworkers:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)","abstract":[{"text":"Initialisation for Job queue system","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/middleware":{"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"middleware","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","abstract":[{"text":"middleware applied to requests","type":"text"}],"title":"middleware","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/middleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/fluent":{"role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fluent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBFluent","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdFluent8HBFluentV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","abstract":[{"text":"Fluent interface object","type":"text"}],"title":"fluent","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/fluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/decoder":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"decoder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP","kind":"typeIdentifier","text":"HBRequestDecoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","url":"\/documentation\/hummingbirdlambda\/hbapplication\/decoder","kind":"symbol","abstract":[{"type":"text","text":"decoder used by router"}],"title":"decoder","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/stop()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/stop()","kind":"symbol","abstract":[{"type":"text","text":"Shutdown application"}],"title":"stop()","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/sessionStorage":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sessionStorage"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV","kind":"typeIdentifier","text":"Persist"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","url":"\/documentation\/hummingbirdlambda\/hbapplication\/sessionstorage","kind":"symbol","abstract":[{"type":"text","text":"Accessor for session storage"}],"title":"sessionStorage","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addResponseCompression(execute:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addResponseCompression"},{"kind":"text","text":"("},{"kind":"externalParam","text":"execute"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE08ResponseC19ExecutionPreferenceO","text":"ResponseCompressionExecutionPreference","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addresponsecompression(execute:)","kind":"symbol","abstract":[{"type":"text","text":"Add Channel Handler for compressing responses where accept-encoding header indicates the client will accept compressed data"}],"title":"addResponseCompression(execute:)","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/logger":{"abstract":[{"type":"text","text":"Logger. Required to be a var by hummingbird-lambda"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/logger","title":"logger","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Persist-swift.struct":{"kind":"symbol","type":"topic","title":"HBApplication.Persist","role":"symbol","navigatorTitle":[{"text":"Persist","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Persist","kind":"identifier"}],"abstract":[{"text":"Framework for storing persistent key\/value pairs between mulitple requests","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-9vwer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","kind":"typeIdentifier","text":"HBApplication"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","kind":"typeIdentifier","text":"Configuration"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eventLoopGroupProvider"},{"text":": ","kind":"text"},{"text":"HBApplication","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"text":".","kind":"text"},{"text":"EventLoopGroupProvider","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC22EventLoopGroupProviderV"},{"text":", ","kind":"text"},{"text":"serviceLifecycleProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ServiceLifecycleProvider","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initialize new Application"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/extensions":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"extensions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBExtensions","preciseIdentifier":"s:11Hummingbird12HBExtensionsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/extensions","abstract":[{"text":"Application extensions","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","title":"extensions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/router":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"router"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird15HBRouterBuilderC","kind":"typeIdentifier","text":"HBRouterBuilder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","url":"\/documentation\/hummingbirdlambda\/hbapplication\/router","kind":"symbol","abstract":[{"type":"text","text":"routes requests to requestResponders based on URI"}],"title":"router","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"redis","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RedisConnectionPoolGroup","preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV","kind":"typeIdentifier"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","title":"redis","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"db","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9FluentKit8DatabaseP","text":"Database","kind":"typeIdentifier"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","title":"db","abstract":[{"text":"Get default database","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/RequestCompressionExecutionPreference":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","navigatorTitle":[{"kind":"identifier","text":"RequestCompressionExecutionPreference"}],"kind":"symbol","type":"topic","title":"HBApplication.RequestCompressionExecutionPreference","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestCompressionExecutionPreference"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/requestcompressionexecutionpreference","role":"symbol","abstract":[{"text":"Indicate where the response compression tasks should be executed","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(id:configuration:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addRedis","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","text":"RedisConnectionPoolGroupIdentifier","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV","text":"HBRedisConfiguration","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(id:configuration:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","title":"addRedis(id:configuration:)","abstract":[{"text":"Add Redis to HBApplication","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/start()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","abstract":[{"text":"Start application","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/start()","title":"start()","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensible":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible","kind":"symbol","abstract":[{"text":"Protocol for extensible classes","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensible"}],"navigatorTitle":[{"kind":"identifier","text":"HBExtensible"}],"title":"HBExtensible","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbextensible"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ws":{"kind":"symbol","abstract":[{"text":"WebSocket interface","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","url":"\/documentation\/hummingbirdlambda\/hbapplication\/ws","role":"symbol","type":"topic","title":"ws","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ws","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20HummingbirdWebSocket05HBWebC7BuilderV","text":"HBWebSocketBuilder","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/constructResponder()":{"role":"symbol","abstract":[{"text":"Construct the RequestResponder from the middleware group and router","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11HBResponderP","text":"HBResponder","kind":"typeIdentifier"}],"title":"constructResponder()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/constructresponder()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTExecute(uri:method:headers:body:testCallback:)":{"abstract":[{"text":"Send request and call test callback on the response returned","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctexecute(uri:method:headers:body:testcallback:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"XCTExecute","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPMethod","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"testCallback","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:14HummingbirdXCT13HBXCTResponseV","text":"HBXCTResponse","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp","text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp","text":"Return","kind":"typeIdentifier"}],"title":"XCTExecute(uri:method:headers:body:testCallback:)","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/JobQueueHandler":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobqueuehandler","role":"symbol","title":"HBApplication.JobQueueHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueueHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler","kind":"symbol","navigatorTitle":[{"text":"JobQueueHandler","kind":"identifier"}],"abstract":[{"text":"Object internal to ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":" that handles its array of JobQueues.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(sessionID:)":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(sessionid:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addSessions"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sessionID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV","kind":"typeIdentifier","text":"SessionManager"},{"kind":"text","text":"."},{"text":"SessionIDStorage","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","title":"addSessions(sessionID:)","role":"symbol","type":"topic","abstract":[{"text":"Add session management to ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":" using default persist memory driver"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/run()":{"role":"symbol","abstract":[{"text":"Start application and wait for it to stop","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"run()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/run()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"navigatorTitle":[{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference","kind":"symbol","role":"symbol","abstract":[{"text":"Indicate where the response compression tasks should be executed","type":"text"}],"title":"HBApplication.ResponseCompressionExecutionPreference"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/jobs":{"role":"symbol","abstract":[{"text":"Job queue handler","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"jobs"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A4JobsE15JobQueueHandlerC","text":"JobQueueHandler","kind":"typeIdentifier"}],"title":"jobs","url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Configuration-swift.struct":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Configuration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","kind":"symbol","title":"HBApplication.Configuration","url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.struct","type":"topic","abstract":[{"text":"Application configuration","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Configuration"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(configuration:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","title":"addRedis(configuration:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(configuration:)","abstract":[{"text":"Add Redis to HBApplication","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addRedis","kind":"identifier"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV","text":"HBRedisConfiguration","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/HTTPResponder":{"abstract":[{"type":"text","text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore"}],"navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/httpresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HTTPResponder","kind":"identifier"}],"title":"HBApplication.HTTPResponder","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(using:sessionID:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","title":"addSessions(using:sessionID:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(using:sessionid:)","abstract":[{"text":"Add session management to ","type":"text"},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addSessions","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV","text":"HBPersistDriverFactory","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"sessionID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV","text":"SessionManager","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea","text":"SessionIDStorage","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/configuration-swift.property":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.property","abstract":[{"type":"text","text":"Configuration"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBApplication","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","title":"configuration","role":"symbol"}}}