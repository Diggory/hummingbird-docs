{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider"],"generated":true,"title":"Application"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an HBApplication, setup your application middleware, encoders, routes etc and then call "},{"type":"codeVoice","code":"start"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"start the server and "},{"type":"codeVoice","code":"wait"},{"type":"text","text":" to wait until the server is stopped."}]},{"code":["let app = HBApplication()","app.middleware.add(MyMiddleware())","app.get(\"hello\") { _ in","    return \"hello\"","}","app.start()","app.wait()"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"Editing the application setup after calling ","type":"text"},{"type":"codeVoice","code":"start"},{"text":" will produce undefined behaviour.","type":"text"}]}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler"],"title":"Classes"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct"],"title":"Structures"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference"],"title":"Enumerations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible"],"type":"conformsTo","title":"Conforms To"}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"modules":[{"name":"HummingbirdLambda"}],"title":"HBApplication","externalID":"s:11Hummingbird13HBApplicationC","role":"symbol","symbolKind":"class","roleHeading":"Class"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addJobs(using:numWorkers:)":{"abstract":[{"text":"Initialisation for Job queue system","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addJobs","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdJobs17HBJobQueueFactoryV","text":"HBJobQueueFactory","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"numWorkers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"addJobs(using:numWorkers:)","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addjobs(using:numworkers:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStop()":{"title":"XCTStop()","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstop()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","type":"topic","abstract":[{"text":"Stop tests","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTStop"},{"kind":"text","text":"()"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(testing:configuration:timeout:)":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(testing:configuration:timeout:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"testing","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupO","text":"XCTTestingSetup","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)","title":"init(testing:configuration:timeout:)","role":"symbol","type":"topic","abstract":[{"text":"Creates a version of ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":" that can be used for testing code","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/encoder":{"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/encoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"encoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP","text":"HBResponseEncoder"}],"abstract":[{"text":"Encoder used by router","type":"text"}],"role":"symbol","type":"topic","title":"encoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db","title":"db","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"db"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Database","preciseIdentifier":"s:9FluentKit8DatabaseP"}],"abstract":[{"text":"Get default database","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Persist-swift.struct":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct","type":"topic","kind":"symbol","title":"HBApplication.Persist","abstract":[{"type":"text","text":"Framework for storing persistent key\/value pairs between mulitple requests"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.struct","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Persist"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Persist"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ws":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","title":"ws","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"ws"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20HummingbirdWebSocket05HBWebC7BuilderV","text":"HBWebSocketBuilder"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/ws","role":"symbol","abstract":[{"type":"text","text":"WebSocket interface"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRequestDecompression(execute:limit:)":{"title":"addRequestDecompression(execute:limit:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRequestDecompression"},{"kind":"text","text":"("},{"kind":"externalParam","text":"execute"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE07RequestC19ExecutionPreferenceO","text":"RequestCompressionExecutionPreference"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22HummingbirdCompression22HTTPDecompressionLimitV","text":"HTTPDecompressionLimit"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"text":"Add Channel Handler for decompressing request that have Content-Encoding header set to gzip or deflate","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addrequestdecompression(execute:limit:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"redis"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RedisConnectionPoolGroup","preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis","abstract":[],"title":"redis","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensible":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbextensible","navigatorTitle":[{"kind":"identifier","text":"HBExtensible"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensible"}],"role":"symbol","title":"HBExtensible","abstract":[{"type":"text","text":"Protocol for extensible classes"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/RequestCompressionExecutionPreference":{"role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestCompressionExecutionPreference","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/requestcompressionexecutionpreference","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","title":"HBApplication.RequestCompressionExecutionPreference","navigatorTitle":[{"text":"RequestCompressionExecutionPreference","kind":"identifier"}],"abstract":[{"type":"text","text":"Indicate where the response compression tasks should be executed"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTExecute(uri:method:headers:body:testCallback:)":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctexecute(uri:method:headers:body:testcallback:)","title":"XCTExecute(uri:method:headers:body:testCallback:)","abstract":[{"type":"text","text":"Send request and call test callback on the response returned"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTExecute"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"text":">(","kind":"text"},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?, ","kind":"text"},{"text":"testCallback","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBXCTResponse","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT13HBXCTResponseV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/lifecycle":{"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/lifecycle","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","title":"lifecycle","role":"symbol","abstract":[{"type":"text","text":"server lifecycle, controls initialization and shutdown of application"}],"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"lifecycle"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9Lifecycle07ServiceA0V","kind":"typeIdentifier","text":"ServiceLifecycle"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addFluent()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()","title":"addFluent()","abstract":[{"text":"Create Fluent management object.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addfluent()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addFluent","kind":"identifier"},{"kind":"text","text":"()"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"title":"HBApplication","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","url":"\/documentation\/hummingbirdlambda\/hbapplication","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"type":"topic","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/eventLoopGroup":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroup","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoopGroup","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoopGroup","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"}],"abstract":[{"text":"event loop group used by application","type":"text"}],"type":"topic","role":"symbol","title":"eventLoopGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Configuration-swift.struct":{"title":"HBApplication.Configuration","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Configuration"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Configuration"}],"type":"topic","abstract":[{"text":"Application configuration","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/ServiceLifecycleProvider":{"url":"\/documentation\/hummingbirdlambda\/servicelifecycleprovider","navigatorTitle":[{"text":"ServiceLifecycleProvider","kind":"identifier"}],"title":"ServiceLifecycleProvider","abstract":[{"text":"Define where we get the ServiceLifecycle from.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServiceLifecycleProvider","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addResponseCompression(execute:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addResponseCompression"},{"kind":"text","text":"("},{"kind":"externalParam","text":"execute"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE08ResponseC19ExecutionPreferenceO","kind":"typeIdentifier","text":"ResponseCompressionExecutionPreference"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Add Channel Handler for compressing responses where accept-encoding header indicates the client will accept compressed data"}],"kind":"symbol","title":"addResponseCompression(execute:)","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addresponsecompression(execute:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/configuration-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configuration","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.property","abstract":[{"text":"Configuration","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","title":"configuration","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/persist-swift.property":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"persist"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV","text":"Persist"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","title":"persist","role":"symbol","abstract":[{"type":"text","text":"Accessor for persist framework"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/start()":{"abstract":[{"type":"text","text":"Start application"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/start()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","title":"start()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/decoder":{"title":"decoder","url":"\/documentation\/hummingbirdlambda\/hbapplication\/decoder","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"decoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRequestDecoder","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","abstract":[{"text":"decoder used by router","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/EventLoopGroupProvider":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroupprovider","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"title":"HBApplication.EventLoopGroupProvider","abstract":[{"text":"Indicates where we should get our EventLoopGroup from","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/middleware":{"type":"topic","kind":"symbol","abstract":[{"text":"middleware applied to requests","type":"text"}],"title":"middleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"middleware","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/middleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(using:sessionID:)":{"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(using:sessionid:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addSessions","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"HBPersistDriverFactory","preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sessionID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SessionManager","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SessionIDStorage","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Add session management to "},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":"."}],"title":"addSessions(using:sessionID:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/logger":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"}],"title":"logger","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/logger","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger","abstract":[{"text":"Logger. Required to be a var by hummingbird-lambda","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/router":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","url":"\/documentation\/hummingbirdlambda\/hbapplication\/router","abstract":[{"text":"routes requests to requestResponders based on URI","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"router","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird15HBRouterBuilderC","kind":"typeIdentifier","text":"HBRouterBuilder"}],"title":"router","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/xct":{"abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xct","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct","type":"topic","kind":"symbol","role":"symbol","title":"xct","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"xct"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14HummingbirdXCT5HBXCTP","text":"HBXCT","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/stop()":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/stop()","title":"stop()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"kind":"text","text":"()"}],"abstract":[{"text":"Shutdown application","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/run()":{"abstract":[{"text":"Start application and wait for it to stop","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/run()","kind":"symbol","title":"run()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/constructResponder()":{"type":"topic","abstract":[{"text":"Construct the RequestResponder from the middleware group and router","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/constructresponder()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"kind":"text","text":"() -> "},{"text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"}],"title":"constructResponder()","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(configuration:)":{"type":"topic","title":"addRedis(configuration:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","abstract":[{"text":"Add Redis to HBApplication","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addRedis","kind":"identifier"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV","text":"HBRedisConfiguration","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(configuration:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis(id:)":{"title":"redis(id:)","abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis(id:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"redis"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"text":"RedisConnectionPoolGroupIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"RedisConnectionPoolGroup","preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addPersist(using:)":{"title":"addPersist(using:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addpersist(using:)","kind":"symbol","abstract":[{"text":"Add persist framework to ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addPersist","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBPersistDriverFactory","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/threadPool":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"threadPool"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOThreadPool","preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/threadpool","abstract":[{"text":"thread pool used by application","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","title":"threadPool","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncRun()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"title":"asyncRun()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/HTTPResponder":{"title":"HBApplication.HTTPResponder","role":"symbol","navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","url":"\/documentation\/hummingbirdlambda\/hbapplication\/httpresponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"type":"topic","abstract":[{"text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/extensions":{"abstract":[{"type":"text","text":"Application extensions"}],"title":"extensions","url":"\/documentation\/hummingbirdlambda\/hbapplication\/extensions","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"extensions"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird12HBExtensionsV","kind":"typeIdentifier","text":"HBExtensions"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","kind":"typeIdentifier","text":"HBApplication"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/shutdownApplication()":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/shutdownapplication()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownApplication","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"shutdown eventloop, threadpool and any extensions attached to the Application"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","title":"shutdownApplication()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-8fsw8","title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","kind":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","kind":"typeIdentifier","text":"HBApplication"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eventLoopGroupProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore25NIOEventLoopGroupProviderO","text":"NIOEventLoopGroupProvider"},{"kind":"text","text":", "},{"kind":"externalParam","text":"serviceLifecycleProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ServiceLifecycleProvider","preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","role":"symbol","abstract":[],"type":"topic","deprecated":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/sessionStorage":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sessionStorage"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV","kind":"typeIdentifier","text":"Persist"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","url":"\/documentation\/hummingbirdlambda\/hbapplication\/sessionstorage","type":"topic","abstract":[{"text":"Accessor for session storage","type":"text"}],"role":"symbol","title":"sessionStorage"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redisConnectionPools":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/redisconnectionpools","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"redisConnectionPools","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RedisConnectionPoolGroupArray","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B24ConnectionPoolGroupArrayC"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","type":"topic","title":"redisConnectionPools","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db(_:)":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db(_:)","title":"db(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"db"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DatabaseID","preciseIdentifier":"s:9FluentKit10DatabaseIDV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Database","preciseIdentifier":"s:9FluentKit8DatabaseP"}],"abstract":[{"text":"Get database with ID","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(id:configuration:)":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(id:configuration:)","title":"addRedis(id:configuration:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addRedis","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RedisConnectionPoolGroupIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRedisConfiguration","preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV"},{"kind":"text","text":")"}],"abstract":[{"text":"Add Redis to HBApplication","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncWait()":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()","type":"topic","kind":"symbol","title":"asyncWait()","abstract":[{"type":"text","text":"Wait until server has stopped running"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/fluent":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/fluent","title":"fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fluent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBFluent","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdFluent8HBFluentV"}],"abstract":[{"text":"Fluent interface object","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStart()":{"abstract":[{"type":"text","text":"Start tests"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","title":"XCTStart()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTStart"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstart()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/JobQueueHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler","abstract":[{"text":"Object internal to ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":" that handles its array of JobQueues."}],"navigatorTitle":[{"text":"JobQueueHandler","kind":"identifier"}],"title":"HBApplication.JobQueueHandler","url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobqueuehandler","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"JobQueueHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-9vwer","title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","abstract":[{"text":"Initialize new Application","type":"text"}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBApplication","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"kind":"text","text":"."},{"text":"Configuration","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eventLoopGroupProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBApplication","preciseIdentifier":"s:11Hummingbird13HBApplicationC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"EventLoopGroupProvider","preciseIdentifier":"s:11Hummingbird13HBApplicationC22EventLoopGroupProviderV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"serviceLifecycleProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ServiceLifecycleProvider","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference":{"navigatorTitle":[{"kind":"identifier","text":"ResponseCompressionExecutionPreference"}],"role":"symbol","title":"HBApplication.ResponseCompressionExecutionPreference","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCompressionExecutionPreference"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference","abstract":[{"type":"text","text":"Indicate where the response compression tasks should be executed"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/server":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","role":"symbol","abstract":[{"type":"text","text":"http server"}],"title":"server","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"server","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBHTTPServer","preciseIdentifier":"s:15HummingbirdCore12HBHTTPServerC","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/server","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(sessionID:)":{"title":"addSessions(sessionID:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addSessions","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sessionID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV","text":"SessionManager","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea","text":"SessionIDStorage","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Add session management to ","type":"text"},{"type":"codeVoice","code":"HBApplication"},{"text":" using default persist memory driver","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(sessionid:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/wait()":{"abstract":[{"type":"text","text":"Wait until server has stopped running"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"wait()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/wait()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/jobs":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobs","abstract":[{"type":"text","text":"Job queue handler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","title":"jobs","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"jobs"},{"text":": ","kind":"text"},{"text":"JobQueueHandler","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A4JobsE15JobQueueHandlerC","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","role":"symbol"}}}