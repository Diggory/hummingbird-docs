{"abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider"],"generated":true}],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct"]},{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()"]},{"title":"Enumerations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbapplication"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"title":"HBApplication","externalID":"s:11Hummingbird13HBApplicationC","modules":[{"name":"HummingbirdAuth"}],"role":"symbol","roleHeading":"Class","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}]},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","interfaceLanguage":"swift"},"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible"],"type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"Create an HBApplication, setup your application middleware, encoders, routes etc and then call ","type":"text"},{"code":"start","type":"codeVoice"},{"text":" to","type":"text"},{"text":" ","type":"text"},{"text":"start the server and ","type":"text"},{"code":"wait","type":"codeVoice"},{"text":" to wait until the server is stopped.","type":"text"}],"type":"paragraph"},{"code":["let app = HBApplication()","app.middleware.add(MyMiddleware())","app.get(\"hello\") { _ in","    return \"hello\"","}","app.start()","app.wait()"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"Editing the application setup after calling "},{"code":"start","type":"codeVoice"},{"type":"text","text":" will produce undefined behaviour."}],"type":"paragraph"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStop()":{"abstract":[{"text":"Stop tests","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstop()","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","title":"XCTStop()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTStop"},{"kind":"text","text":"()"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8":{"deprecated":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eventLoopGroupProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore25NIOEventLoopGroupProviderO","text":"NIOEventLoopGroupProvider"},{"text":", ","kind":"text"},{"text":"serviceLifecycleProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ServiceLifecycleProvider","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-8fsw8","type":"topic","title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCompressionExecutionPreference"}],"title":"HBApplication.ResponseCompressionExecutionPreference","navigatorTitle":[{"kind":"identifier","text":"ResponseCompressionExecutionPreference"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference","abstract":[{"type":"text","text":"Indicate where the response compression tasks should be executed"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(sessionID:)":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addSessions","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sessionID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV","text":"SessionManager","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SessionIDStorage","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","abstract":[{"type":"text","text":"Add session management to "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":" using default persist memory driver"}],"kind":"symbol","title":"addSessions(sessionID:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(sessionid:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/middleware":{"abstract":[{"type":"text","text":"middleware applied to requests"}],"title":"middleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/middleware","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"middleware","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/router":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/router","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"router","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRouterBuilder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterBuilderC"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","role":"symbol","abstract":[{"type":"text","text":"routes requests to requestResponders based on URI"}],"kind":"symbol","title":"router","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/sessionStorage":{"title":"sessionStorage","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/sessionstorage","type":"topic","abstract":[{"type":"text","text":"Accessor for session storage"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sessionStorage","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Persist","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-9vwer","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBApplication","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"text":".","kind":"text"},{"text":"Configuration","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV"},{"text":", ","kind":"text"},{"text":"eventLoopGroupProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBApplication","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"text":".","kind":"text"},{"text":"EventLoopGroupProvider","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC22EventLoopGroupProviderV"},{"text":", ","kind":"text"},{"text":"serviceLifecycleProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ServiceLifecycleProvider","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO"},{"text":")","kind":"text"}],"title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Initialize new Application"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/RequestCompressionExecutionPreference":{"title":"HBApplication.RequestCompressionExecutionPreference","role":"symbol","abstract":[{"type":"text","text":"Indicate where the response compression tasks should be executed"}],"navigatorTitle":[{"text":"RequestCompressionExecutionPreference","kind":"identifier"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestCompressionExecutionPreference","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","url":"\/documentation\/hummingbirdlambda\/hbapplication\/requestcompressionexecutionpreference"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/fluent":{"title":"fluent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fluent"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdFluent8HBFluentV","text":"HBFluent"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/fluent","kind":"symbol","abstract":[{"text":"Fluent interface object","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/jobs":{"type":"topic","title":"jobs","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"jobs"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A4JobsE15JobQueueHandlerC","text":"JobQueueHandler","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobs","abstract":[{"type":"text","text":"Job queue handler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/persist-swift.property":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","title":"persist","type":"topic","kind":"symbol","abstract":[{"text":"Accessor for persist framework","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"persist","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV","text":"Persist","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.property","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensible":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible","type":"topic","navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}],"abstract":[{"text":"Protocol for extensible classes","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}],"title":"HBExtensible","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbextensible"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/HTTPResponder":{"navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"abstract":[{"text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/httpresponder","type":"topic","title":"HBApplication.HTTPResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(using:sessionID:)":{"abstract":[{"text":"Add session management to ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(using:sessionid:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","title":"addSessions(using:sessionID:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addSessions"},{"kind":"text","text":"("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBPersistDriverFactory","preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sessionID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SessionManager","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SessionIDStorage","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea"},{"kind":"text","text":")"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/EventLoopGroupProvider":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroupProvider"}],"title":"HBApplication.EventLoopGroupProvider","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroupProvider"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","abstract":[{"type":"text","text":"Indicates where we should get our EventLoopGroup from"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroupprovider","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis(id:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"redis","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RedisConnectionPoolGroupIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV"},{"text":") -> ","kind":"text"},{"text":"RedisConnectionPoolGroup","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV"},{"text":"?","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis(id:)","kind":"symbol","abstract":[],"title":"redis(id:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"title":"HBApplication","role":"symbol","abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBApplication"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","url":"\/documentation\/hummingbirdlambda\/hbapplication"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/xct":{"title":"xct","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"xct"},{"kind":"text","text":": "},{"preciseIdentifier":"s:14HummingbirdXCT5HBXCTP","kind":"typeIdentifier","text":"HBXCT"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xct","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRequestDecompression(execute:limit:)":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addrequestdecompression(execute:limit:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addRequestDecompression","kind":"identifier"},{"text":"(","kind":"text"},{"text":"execute","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE07RequestC19ExecutionPreferenceO","text":"RequestCompressionExecutionPreference","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"limit","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22HummingbirdCompression22HTTPDecompressionLimitV","text":"HTTPDecompressionLimit","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)","role":"symbol","kind":"symbol","abstract":[{"text":"Add Channel Handler for decompressing request that have Content-Encoding header set to gzip or deflate","type":"text"}],"title":"addRequestDecompression(execute:limit:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redisConnectionPools":{"title":"redisConnectionPools","abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/redisconnectionpools","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"redisConnectionPools","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RedisConnectionPoolGroupArray","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B24ConnectionPoolGroupArrayC"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/stop()":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/stop()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","abstract":[{"text":"Shutdown application","type":"text"}],"title":"stop()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/logger":{"abstract":[{"text":"Logger. Required to be a var by hummingbird-lambda","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/logger","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"}],"title":"logger","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/threadPool":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"threadPool"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOThreadPool","preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC"}],"abstract":[{"type":"text","text":"thread pool used by application"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/threadpool","role":"symbol","title":"threadPool"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/extensions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","kind":"symbol","abstract":[{"text":"Application extensions","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/extensions","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extensions","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBExtensions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12HBExtensionsV"},{"text":"<","kind":"text"},{"text":"HBApplication","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"text":">","kind":"text"}],"title":"extensions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ws":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ws"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20HummingbirdWebSocket05HBWebC7BuilderV","text":"HBWebSocketBuilder"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/ws","abstract":[{"type":"text","text":"WebSocket interface"}],"title":"ws","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db":{"abstract":[{"type":"text","text":"Get default database"}],"type":"topic","kind":"symbol","title":"db","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"db"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Database","preciseIdentifier":"s:9FluentKit8DatabaseP"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/encoder":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/encoder","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encoder"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP","text":"HBResponseEncoder"}],"abstract":[{"text":"Encoder used by router","type":"text"}],"role":"symbol","title":"encoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/eventLoopGroup":{"title":"eventLoopGroup","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoopGroup"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore14EventLoopGroupP","kind":"typeIdentifier","text":"EventLoopGroup"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"event loop group used by application"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/constructResponder()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","type":"topic","title":"constructResponder()","abstract":[{"type":"text","text":"Construct the RequestResponder from the middleware group and router"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/constructresponder()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"constructResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/start()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","type":"topic","title":"start()","abstract":[{"type":"text","text":"Start application"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/start()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/ServiceLifecycleProvider":{"title":"ServiceLifecycleProvider","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/servicelifecycleprovider","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider","navigatorTitle":[{"text":"ServiceLifecycleProvider","kind":"identifier"}],"abstract":[{"text":"Define where we get the ServiceLifecycle from.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ServiceLifecycleProvider","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTExecute(uri:method:headers:body:testCallback:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)","title":"XCTExecute(uri:method:headers:body:testCallback:)","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctexecute(uri:method:headers:body:testcallback:)","abstract":[{"type":"text","text":"Send request and call test callback on the response returned"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTExecute"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"kind":"externalParam","text":"uri"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"text":": ","kind":"text"},{"text":"HTTPMethod","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPHeaders","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?, ","kind":"text"},{"text":"testCallback","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBXCTResponse","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT13HBXCTResponseV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp","text":"Return","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addPersist(using:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addPersist","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBPersistDriverFactory","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Add persist framework to "},{"type":"codeVoice","code":"HBApplication"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addpersist(using:)","title":"addPersist(using:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"db"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DatabaseID","preciseIdentifier":"s:9FluentKit10DatabaseIDV"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:9FluentKit8DatabaseP","kind":"typeIdentifier","text":"Database"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db(_:)","abstract":[{"type":"text","text":"Get database with ID"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)","role":"symbol","type":"topic","title":"db(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/decoder":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/decoder","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRequestDecoder","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP","kind":"typeIdentifier"}],"title":"decoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","abstract":[{"text":"decoder used by router","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/configuration-swift.property":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configuration","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBApplication","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"text":".","kind":"text"},{"text":"Configuration","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","role":"symbol","kind":"symbol","abstract":[{"text":"Configuration","type":"text"}],"title":"configuration"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(id:configuration:)":{"abstract":[{"text":"Add Redis to HBApplication","type":"text"}],"title":"addRedis(id:configuration:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addRedis"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","text":"RedisConnectionPoolGroupIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV","text":"HBRedisConfiguration"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(id:configuration:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(configuration:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","type":"topic","title":"addRedis(configuration:)","abstract":[{"type":"text","text":"Add Redis to HBApplication"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(configuration:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addRedis","kind":"identifier"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRedisConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStart()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","type":"topic","title":"XCTStart()","abstract":[{"type":"text","text":"Start tests"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstart()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTStart","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addJobs(using:numWorkers:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addJobs","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBJobQueueFactory","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdJobs17HBJobQueueFactoryV"},{"text":", ","kind":"text"},{"text":"numWorkers","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"title":"addJobs(using:numWorkers:)","abstract":[{"type":"text","text":"Initialisation for Job queue system"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addjobs(using:numworkers:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/wait()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()","type":"topic","title":"wait()","abstract":[{"type":"text","text":"Wait until server has stopped running"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/wait()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wait","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/run()":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/run()","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"run()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/server":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"server"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore12HBHTTPServerC","kind":"typeIdentifier","text":"HBHTTPServer"}],"abstract":[{"type":"text","text":"http server"}],"title":"server","url":"\/documentation\/hummingbirdlambda\/hbapplication\/server","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncWait()":{"abstract":[{"type":"text","text":"Wait until server has stopped running"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()","type":"topic","title":"asyncWait()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/shutdownApplication()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/shutdownapplication()","title":"shutdownApplication()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownApplication"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"shutdown eventloop, threadpool and any extensions attached to the Application"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addResponseCompression(execute:)":{"abstract":[{"text":"Add Channel Handler for compressing responses where accept-encoding header indicates the client will accept compressed data","type":"text"}],"type":"topic","kind":"symbol","title":"addResponseCompression(execute:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addresponsecompression(execute:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addResponseCompression","kind":"identifier"},{"text":"(","kind":"text"},{"text":"execute","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE08ResponseC19ExecutionPreferenceO"},{"text":")","kind":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Persist-swift.struct":{"navigatorTitle":[{"text":"Persist","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Persist","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.struct","abstract":[{"type":"text","text":"Framework for storing persistent key\/value pairs between mulitple requests"}],"title":"HBApplication.Persist","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/JobQueueHandler":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobqueuehandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueueHandler"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JobQueueHandler"}],"abstract":[{"type":"text","text":"Object internal to "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":" that handles its array of JobQueues."}],"title":"HBApplication.JobQueueHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addFluent()":{"role":"symbol","abstract":[{"type":"text","text":"Create Fluent management object."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addFluent"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()","kind":"symbol","title":"addFluent()","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addfluent()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncRun()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","type":"topic","title":"asyncRun()","abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"redis","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RedisConnectionPoolGroup","preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV","kind":"typeIdentifier"}],"title":"redis","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(testing:configuration:timeout:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)","type":"topic","title":"init(testing:configuration:timeout:)","abstract":[{"type":"text","text":"Creates a version of "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":" that can be used for testing code"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(testing:configuration:timeout:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"testing","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"XCTTestingSetup","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupO"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBApplication","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"text":".","kind":"text"},{"text":"Configuration","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/lifecycle":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/lifecycle","abstract":[{"type":"text","text":"server lifecycle, controls initialization and shutdown of application"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lifecycle","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9Lifecycle07ServiceA0V","text":"ServiceLifecycle","kind":"typeIdentifier"}],"title":"lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Configuration-swift.struct":{"title":"HBApplication.Configuration","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.struct","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Configuration"}],"abstract":[{"text":"Application configuration","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Configuration","kind":"identifier"}]}}}