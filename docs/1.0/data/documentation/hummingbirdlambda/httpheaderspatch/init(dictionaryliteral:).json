{"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ExpressibleByDictionaryLiteral.init(dictionaryLiteral:)"},{"type":"text","text":"."}],"metadata":{"externalID":"s:11Hummingbird16HTTPHeadersPatchV17dictionaryLiteralACSS_SStd_tcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dictionaryLiteral"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")...)","kind":"text"}],"role":"symbol","symbolKind":"init","modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Initializer","title":"init(dictionaryLiteral:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/httpheaderspatch\/init(dictionaryliteral:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"dictionaryLiteral","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"elements","kind":"internalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")...)","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/init(dictionaryLiteral:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch/init(dictionaryLiteral:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/init(dictionaryLiteral:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dictionaryLiteral"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")...)","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/httpheaderspatch\/init(dictionaryliteral:)","kind":"symbol","abstract":[],"role":"symbol","title":"init(dictionaryLiteral:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeadersPatch","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPHeadersPatch"}],"title":"HTTPHeadersPatch","abstract":[{"text":"Used to Patch HTTPHeaders. Remembers if a header was added in with ","type":"text"},{"type":"codeVoice","code":"add"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"replaceOrAdd"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch","url":"\/documentation\/hummingbirdlambda\/httpheaderspatch","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}