{"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParentObject"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"If you have only one instance of a type to attach you can extend it to conform to ","type":"text"},{"code":"StorageKey","type":"codeVoice"}]},{"type":"codeListing","syntax":null,"code":["struct Object {","    var extensions: Extensions<Object>","}","","extension Object {","    var extra: Extra? {","        get { return extensions.get(\\.extra) }","        set { extensions.set(\\.extra, value: newValue) }","    }","}"]}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible"],"generated":true,"title":"Extending the Application"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/init()"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/exists(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-63nyk","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-7gsg7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:error:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/set(_:value:shutdownCallback:)"],"title":"Instance Methods"}],"metadata":{"modules":[{"name":"HummingbirdLambda"}],"role":"symbol","symbolKind":"struct","externalID":"s:11Hummingbird12HBExtensionsV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"}],"title":"HBExtensions","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"HBExtensions"}]},"abstract":[{"text":"Extend objects with additional member variables","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbextensions"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:error:)":{"url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:error:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:error:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Type"}],"kind":"symbol","title":"get(_:error:)","abstract":[{"text":"Get extension from a ","type":"text"},{"type":"codeVoice","code":"KeyPath"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/init()":{"url":"\/documentation\/hummingbirdlambda\/hbextensions\/init()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","abstract":[{"text":"Initialize extensions","type":"text"}],"title":"init()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:)-7gsg7":{"kind":"symbol","title":"get(_:)","url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:)-7gsg7","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-7gsg7","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?"}],"abstract":[{"text":"Get optional extension from a ","type":"text"},{"type":"codeVoice","code":"KeyPath"},{"type":"text","text":" that returns an optional"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:)-63nyk":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:)-63nyk","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?"}],"title":"get(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-63nyk","abstract":[{"text":"Get optional extension from a ","type":"text"},{"code":"KeyPath","type":"codeVoice"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBExtensions"}],"type":"topic","title":"HBExtensions","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbextensions","abstract":[{"text":"Extend objects with additional member variables","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBExtensions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/exists(_:)":{"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbextensions\/exists(_:)","type":"topic","role":"symbol","abstract":[{"text":"Return if extension has been set","type":"text"}],"title":"exists(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/exists(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"exists"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensible":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbextensible","navigatorTitle":[{"kind":"identifier","text":"HBExtensible"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensible"}],"role":"symbol","title":"HBExtensible","abstract":[{"type":"text","text":"Protocol for extensible classes"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/set(_:value:shutdownCallback:)":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/set(_:value:shutdownCallback:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"shutdownCallback","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbextensions\/set(_:value:shutdowncallback:)","title":"set(_:value:shutdownCallback:)","abstract":[{"type":"text","text":"Set extension for a "},{"code":"KeyPath","type":"codeVoice"}]}}}