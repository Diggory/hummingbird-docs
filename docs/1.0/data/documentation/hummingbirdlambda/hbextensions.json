{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/exists(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-63nyk","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-7gsg7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:error:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/set(_:value:shutdownCallback:)"],"title":"Instance Methods"}],"metadata":{"roleHeading":"Structure","role":"symbol","externalID":"s:11Hummingbird12HBExtensionsV","modules":[{"name":"HummingbirdLambda"}],"navigatorTitle":[{"text":"HBExtensions","kind":"identifier"}],"title":"HBExtensions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"}],"symbolKind":"struct"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParentObject"},{"kind":"text","text":">"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"If you have only one instance of a type to attach you can extend it to conform to "},{"type":"codeVoice","code":"StorageKey"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["struct Object {","    var extensions: Extensions<Object>","}","","extension Object {","    var extra: Extra? {","        get { return extensions.get(\\.extra) }","        set { extensions.set(\\.extra, value: newValue) }","    }","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbextensions"]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"abstract":[{"text":"Extend objects with additional member variables","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible"],"generated":true,"title":"Extending the Application"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:error:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:error:)","type":"topic","abstract":[{"text":"Get extension from a ","type":"text"},{"code":"KeyPath","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:error:)","title":"get(_:error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Type"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBExtensions"}],"url":"\/documentation\/hummingbirdlambda\/hbextensions","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"}],"abstract":[{"type":"text","text":"Extend objects with additional member variables"}],"title":"HBExtensions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:)-63nyk":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:)-63nyk","type":"topic","abstract":[{"text":"Get optional extension from a ","type":"text"},{"code":"KeyPath","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-63nyk","title":"get(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/init()":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbextensions\/init()","type":"topic","abstract":[{"text":"Initialize extensions","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/init()","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:)-7gsg7":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":"?>) -> ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"get(_:)","kind":"symbol","abstract":[{"text":"Get optional extension from a ","type":"text"},{"type":"codeVoice","code":"KeyPath"},{"text":" that returns an optional","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:)-7gsg7","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-7gsg7","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/set(_:value:shutdownCallback:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/set(_:value:shutdownCallback:)","url":"\/documentation\/hummingbirdlambda\/hbextensions\/set(_:value:shutdowncallback:)","abstract":[{"type":"text","text":"Set extension for a "},{"type":"codeVoice","code":"KeyPath"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shutdownCallback"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"title":"set(_:value:shutdownCallback:)","role":"symbol","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensible":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible","kind":"symbol","abstract":[{"text":"Protocol for extensible classes","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensible"}],"navigatorTitle":[{"kind":"identifier","text":"HBExtensible"}],"title":"HBExtensible","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbextensible"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/exists(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exists","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbextensions\/exists(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/exists(_:)","title":"exists(_:)","abstract":[{"text":"Return if extension has been set","type":"text"}]}}}