{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParentObject"},{"kind":"text","text":">"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"If you have only one instance of a type to attach you can extend it to conform to ","type":"text"},{"code":"StorageKey","type":"codeVoice"}]},{"code":["struct Object {","    var extensions: Extensions<Object>","}","","extension Object {","    var extra: Extra? {","        get { return extensions.get(\\.extra) }","        set { extensions.set(\\.extra, value: newValue) }","    }","}"],"syntax":null,"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions","interfaceLanguage":"swift"},"metadata":{"externalID":"s:11Hummingbird12HBExtensionsV","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"}],"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"HBExtensions"}],"modules":[{"name":"HummingbirdFoundation"}],"title":"HBExtensions","symbolKind":"struct"},"sections":[],"seeAlsoSections":[{"title":"Extending the Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible"],"generated":true}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/exists(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-63nyk","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-7gsg7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:error:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/set(_:value:shutdownCallback:)"]}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbextensions"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"abstract":[{"text":"Extend objects with additional member variables","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensible":{"abstract":[{"type":"text","text":"Protocol for extensible classes"}],"url":"\/documentation\/hummingbirdlambda\/hbextensible","title":"HBExtensible","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}],"navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/init()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/init()","kind":"symbol","abstract":[{"text":"Initialize extensions","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbextensions\/init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"title":"init()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:error:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:error:)","role":"symbol","abstract":[{"type":"text","text":"Get extension from a "},{"type":"codeVoice","code":"KeyPath"}],"title":"get(_:error:)","url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Type"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:)-7gsg7":{"url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:)-7gsg7","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-7gsg7","abstract":[{"text":"Get optional extension from a ","type":"text"},{"code":"KeyPath","type":"codeVoice"},{"text":" that returns an optional","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"get(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions":{"url":"\/documentation\/hummingbirdlambda\/hbextensions","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions","navigatorTitle":[{"kind":"identifier","text":"HBExtensions"}],"role":"symbol","title":"HBExtensions","type":"topic","abstract":[{"text":"Extend objects with additional member variables","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/set(_:value:shutdownCallback:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/set(_:value:shutdownCallback:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"shutdownCallback","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"url":"\/documentation\/hummingbirdlambda\/hbextensions\/set(_:value:shutdowncallback:)","role":"symbol","abstract":[{"text":"Set extension for a ","type":"text"},{"code":"KeyPath","type":"codeVoice"}],"title":"set(_:value:shutdownCallback:)","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/exists(_:)":{"abstract":[{"text":"Return if extension has been set","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/exists(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exists","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","title":"exists(_:)","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbextensions\/exists(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:)-63nyk":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"get(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-63nyk","url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:)-63nyk","abstract":[{"text":"Get optional extension from a ","type":"text"},{"code":"KeyPath","type":"codeVoice"}],"type":"topic"}}}