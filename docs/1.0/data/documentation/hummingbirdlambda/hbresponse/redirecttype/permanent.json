{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbresponse\/redirecttype\/permanent"]}],"abstract":[{"type":"codeVoice","code":"301 moved permanently"},{"type":"text","text":": The URL of the requested resource has been changed permanently."},{"type":"text","text":" "},{"type":"text","text":"The new URL is iven in the response."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse\/RedirectType\/permanent"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"permanent"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse\/RedirectType"]]},"sections":[],"kind":"symbol","metadata":{"externalID":"s:11Hummingbird10HBResponseV12RedirectTypeO9permanentyA2EmF","title":"HBResponse.RedirectType.permanent","role":"symbol","symbolKind":"case","modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"permanent","kind":"identifier"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponse/RedirectType/permanent":{"type":"topic","title":"HBResponse.RedirectType.permanent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse\/RedirectType\/permanent","url":"\/documentation\/hummingbirdlambda\/hbresponse\/redirecttype\/permanent","role":"symbol","kind":"symbol","abstract":[{"code":"301 moved permanently","type":"codeVoice"},{"text":": The URL of the requested resource has been changed permanently.","type":"text"},{"text":" ","type":"text"},{"text":"The new URL is iven in the response.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"permanent","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponse/RedirectType":{"url":"\/documentation\/hummingbirdlambda\/hbresponse\/redirecttype","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse\/RedirectType","navigatorTitle":[{"text":"RedirectType","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RedirectType"}],"type":"topic","title":"HBResponse.RedirectType","kind":"symbol","abstract":[{"text":"Specifies the type of redirect that the client should receive.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponse":{"title":"HBResponse","url":"\/documentation\/hummingbirdlambda\/hbresponse","navigatorTitle":[{"kind":"identifier","text":"HBResponse"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponse"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}