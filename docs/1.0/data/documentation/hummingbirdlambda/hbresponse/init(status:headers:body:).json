{"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbresponse\/init(status:headers:body:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse"]]},"abstract":[{"text":"Create an ","type":"text"},{"code":"HBResponse","type":"codeVoice"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"status","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseStatus","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPHeaders","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","kind":"typeIdentifier"},{"text":" = [:], ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponseBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyO","kind":"typeIdentifier"},{"text":" = .empty)","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"response status"}],"type":"paragraph"}],"name":"status"},{"content":[{"type":"paragraph","inlineContent":[{"text":"response headers","type":"text"}]}],"name":"headers"},{"content":[{"inlineContent":[{"type":"text","text":"response body"}],"type":"paragraph"}],"name":"body"}],"kind":"parameters"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse\/init(status:headers:body:)"},"metadata":{"title":"init(status:headers:body:)","role":"symbol","externalID":"s:11Hummingbird10HBResponseV6status7headers4bodyAC8NIOHTTP118HTTPResponseStatusO_AG11HTTPHeadersV0A4Core0B4BodyOtcfc","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"status","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseStatus","preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPHeaders","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponseBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyO"},{"text":")","kind":"text"}],"symbolKind":"init","modules":[{"name":"HummingbirdLambda"}]},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponse/init(status:headers:body:)":{"title":"init(status:headers:body:)","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbresponse\/init(status:headers:body:)","abstract":[{"text":"Create an ","type":"text"},{"code":"HBResponse","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse\/init(status:headers:body:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"status","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO","text":"HTTPResponseStatus","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPHeaders","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponseBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyO"},{"text":")","kind":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponse":{"title":"HBResponse","url":"\/documentation\/hummingbirdlambda\/hbresponse","navigatorTitle":[{"kind":"identifier","text":"HBResponse"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponse"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody":{"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}],"abstract":[{"type":"text","text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty"}],"title":"HBResponseBody","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","url":"\/documentation\/hummingbirdcore\/hbresponsebody","navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}]}}}