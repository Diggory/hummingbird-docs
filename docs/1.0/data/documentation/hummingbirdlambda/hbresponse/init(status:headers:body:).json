{"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"status"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPResponseStatus","preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","kind":"typeIdentifier","text":"HTTPHeaders"},{"kind":"text","text":" = [:], "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyO","kind":"typeIdentifier","text":"HBResponseBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody"},{"kind":"text","text":" = .empty)"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"response status"}]}],"name":"status"},{"content":[{"inlineContent":[{"text":"response headers","type":"text"}],"type":"paragraph"}],"name":"headers"},{"content":[{"inlineContent":[{"text":"response body","type":"text"}],"type":"paragraph"}],"name":"body"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse\/init(status:headers:body:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbresponse\/init(status:headers:body:)"]}],"abstract":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"HBResponse"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"init(status:headers:body:)","symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"status","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseStatus","preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyO","text":"HBResponseBody","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","externalID":"s:11Hummingbird10HBResponseV6status7headers4bodyAC8NIOHTTP118HTTPResponseStatusO_AG11HTTPHeadersV0A4Core0B4BodyOtcfc","modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Initializer"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponse/init(status:headers:body:)":{"abstract":[{"type":"text","text":"Create an "},{"type":"codeVoice","code":"HBResponse"}],"role":"symbol","title":"init(status:headers:body:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse\/init(status:headers:body:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"status","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO","text":"HTTPResponseStatus","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyO","text":"HBResponseBody","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbresponse\/init(status:headers:body:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponse":{"title":"HBResponse","role":"symbol","navigatorTitle":[{"text":"HBResponse","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponse","url":"\/documentation\/hummingbirdlambda\/hbresponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponse","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody":{"kind":"symbol","title":"HBResponseBody","url":"\/documentation\/hummingbirdcore\/hbresponsebody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}],"abstract":[{"text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty","type":"text"}],"navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]}}}