{"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getDateCache","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBDateCacheC","text":"HBDateCache"}],"symbolKind":"method","modules":[{"name":"HummingbirdAuth"}],"title":"getDateCache(on:)","externalID":"s:11Hummingbird11HBDateCacheC07getDateC02onAC7NIOCore9EventLoop_p_tFZ","roleHeading":"Type Method","role":"symbol"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache\/getDateCache(on:)"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"return date cache for this thread. If one doesn’t exist create one scheduled on EventLoop"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDateCache"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache","preciseIdentifier":"s:11Hummingbird11HBDateCacheC","text":"HBDateCache"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbdatecache\/getdatecache(on:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache/getDateCache(on:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getDateCache","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"on"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"HBDateCache","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBDateCacheC"}],"title":"getDateCache(on:)","abstract":[{"text":"return date cache for this thread. If one doesn’t exist create one scheduled on EventLoop","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache\/getDateCache(on:)","url":"\/documentation\/hummingbirdlambda\/hbdatecache\/getdatecache(on:)","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache":{"abstract":[{"text":"Current date cache.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache","title":"HBDateCache","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBDateCache"}],"navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbdatecache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}