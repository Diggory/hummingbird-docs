{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-3o008"]}],"sections":[],"metadata":{"externalID":"s:17HummingbirdLambda8HBLambdaP6output4from6OutputQz0A010HBResponseV_tF","modules":[{"name":"HummingbirdLambda"}],"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:11Hummingbird10HBResponseV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP6OutputQa","kind":"typeIdentifier"}],"symbolKind":"method","roleHeading":"Instance Method","title":"output(from:)","role":"symbol"},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-3o008","interfaceLanguage":"swift"},"defaultImplementationsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-50vf3","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-50i4f"],"title":"HBLambda Implementations"}],"abstract":[{"text":"Convert from ","type":"text"},{"code":"HBResponse","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" type","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponse","preciseIdentifier":"s:11Hummingbird10HBResponseV","text":"HBResponse"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Output","preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP6OutputQa","text":"Output"}]}],"kind":"declarations"},{"parameters":[{"name":"from","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"response from Hummingbird"}]}]}],"kind":"parameters"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/output(from:)-50i4f":{"url":"\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-50i4f","abstract":[{"text":"Specialization of HBLambda.request where ","type":"text"},{"type":"codeVoice","code":"Out"},{"type":"text","text":" is "},{"type":"codeVoice","code":"APIGateway.Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-50i4f","conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"APIGatewayResponse","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10HBResponseV","text":"HBResponse"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP6OutputQa","text":"Output"}],"title":"output(from:)","type":"topic","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/output(from:)-50vf3":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"APIGatewayV2Response","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-50vf3","title":"output(from:)","abstract":[{"type":"text","text":"Specialization of HBLambda.request where "},{"type":"codeVoice","code":"Out"},{"type":"text","text":" is "},{"type":"codeVoice","code":"APIGateway.Response"}],"url":"\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-50vf3","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10HBResponseV","text":"HBResponse","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP6OutputQa","text":"Output","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/output(from:)-3o008":{"required":true,"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Convert from "},{"code":"HBResponse","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" type","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10HBResponseV","text":"HBResponse"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP6OutputQa","text":"Output"}],"url":"\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-3o008","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-3o008","kind":"symbol","title":"output(from:)","defaultImplementations":2},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/Output":{"url":"\/documentation\/hummingbirdlambda\/hblambda\/output","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"}],"kind":"symbol","title":"Output","required":true,"abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Output","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponse":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponse","navigatorTitle":[{"text":"HBResponse","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponse","kind":"identifier"}],"title":"HBResponse","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"url":"\/documentation\/hummingbirdfoundation\/hbresponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"navigatorTitle":[{"kind":"identifier","text":"HBLambda"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","title":"HBLambda","type":"topic","url":"\/documentation\/hummingbirdlambda\/hblambda","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambda"}],"abstract":[{"text":"Protocol for Hummingbird Lambdas. Define the ","type":"text"},{"code":"In","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Out","type":"codeVoice"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"In"},{"type":"text","text":" to "},{"type":"codeVoice","code":"HBRequest"},{"type":"text","text":" and "},{"type":"codeVoice","code":"HBResponse"},{"type":"text","text":" to "},{"code":"Out","type":"codeVoice"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","type":"topic","url":"\/documentation\/hummingbirdlambda","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}]}}}