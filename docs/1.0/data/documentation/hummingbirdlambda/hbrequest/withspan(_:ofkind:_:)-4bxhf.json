{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","platforms":[{"name":"iOS","deprecated":false,"introducedAt":"13.0","unavailable":false,"beta":false},{"name":"macOS","deprecated":false,"introducedAt":"10.15","unavailable":false,"beta":false},{"name":"tvOS","deprecated":false,"introducedAt":"13.0","unavailable":false,"beta":false},{"name":"watchOS","deprecated":false,"introducedAt":"6.0","unavailable":false,"beta":false}],"title":"withSpan(_:ofKind:_:)","modules":[{"name":"HummingbirdAuth","relatedModules":["Hummingbird"]}],"externalID":"s:11Hummingbird9HBRequestV8withSpan_6ofKind_xSS_7Tracing0dF0OxAC_AF0D0_ptKXEtKlF","role":"symbol","extendedModule":"Hummingbird","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ofKind"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SpanKind","preciseIdentifier":"s:7Tracing8SpanKindO"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Span","preciseIdentifier":"s:7Tracing4SpanP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withSpan"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operationName"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ofKind"},{"kind":"text","text":" "},{"kind":"internalParam","text":"kind"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Tracing8SpanKindO","kind":"typeIdentifier","text":"SpanKind"},{"kind":"text","text":" = .internal, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Tracing4SpanP","kind":"typeIdentifier","text":"Span"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"}],"platforms":["Linux"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The name of the operation being traced. This may be a handler function, database call, …"}]}],"name":"operationName"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SpanKind","type":"codeVoice"},{"type":"text","text":" of the "},{"code":"Span","type":"codeVoice"},{"type":"text","text":" to be created. Defaults to "},{"code":"SpanKind\/internal","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"kind"},{"content":[{"inlineContent":[{"type":"text","text":"operation to wrap in a span start\/end and execute immediately"}],"type":"paragraph"}],"name":"operation"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"the value returned by ","type":"text"},{"code":"operation","type":"codeVoice"}]}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Calls operation with edited request that includes the serviceContext from span, and the span Be sure to use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"HBRequest"},{"text":" passed to the closure as that includes the serviceContext","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This function should be used when we aren’t inside an async function and serviceContext cannot be propagated","type":"text"},{"text":" ","type":"text"},{"text":"via Task local variables. The equivalent async version of this is","type":"text"},{"text":" ","type":"text"},{"code":"InstrumentationSystem.tracer.withSpan(_:ofKind:_)","type":"codeVoice"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"DO NOT "},{"code":"end()","type":"codeVoice"},{"type":"text","text":" the passed in span manually. It will be ended automatically when the "},{"code":"operation","type":"codeVoice"},{"type":"text","text":" returns."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"the error the ","type":"text"},{"code":"operation","type":"codeVoice"},{"text":" has thrown (if any)","type":"text"}]}],"type":"aside","style":"note","name":"Throws"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"]]},"abstract":[{"type":"text","text":"Execute the given operation within a newly created "},{"type":"codeVoice","code":"Span"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbrequest\/withspan(_:ofkind:_:)-4bxhf"]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/withSpan(_:ofKind:_:)-4bxhf":{"title":"withSpan(_:ofKind:_:)","role":"symbol","abstract":[{"type":"text","text":"Execute the given operation within a newly created "},{"code":"Span","type":"codeVoice"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SpanKind","preciseIdentifier":"s:7Tracing8SpanKindO"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Span","preciseIdentifier":"s:7Tracing4SpanP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","url":"\/documentation\/hummingbirdlambda\/hbrequest\/withspan(_:ofkind:_:)-4bxhf"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","title":"HBRequest","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}