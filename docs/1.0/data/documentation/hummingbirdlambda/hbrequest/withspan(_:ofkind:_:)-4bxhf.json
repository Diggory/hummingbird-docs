{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operationName","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"kind","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"SpanKind","kind":"typeIdentifier","preciseIdentifier":"s:7Tracing8SpanKindO"},{"text":" = .internal, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"text":": (","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":", ","kind":"text"},{"text":"Span","kind":"typeIdentifier","preciseIdentifier":"s:7Tracing4SpanP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"name":"operationName","content":[{"inlineContent":[{"text":"The name of the operation being traced. This may be a handler function, database call, …","type":"text"}],"type":"paragraph"}]},{"name":"kind","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"SpanKind","type":"codeVoice"},{"text":" of the ","type":"text"},{"code":"Span","type":"codeVoice"},{"text":" to be created. Defaults to ","type":"text"},{"code":"SpanKind\/internal","type":"codeVoice"},{"text":".","type":"text"}]}]},{"name":"operation","content":[{"inlineContent":[{"type":"text","text":"operation to wrap in a span start\/end and execute immediately"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"the value returned by "},{"code":"operation","type":"codeVoice"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"Calls operation with edited request that includes the serviceContext from span, and the span Be sure to use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"HBRequest"},{"text":" passed to the closure as that includes the serviceContext","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This function should be used when we aren’t inside an async function and serviceContext cannot be propagated"},{"type":"text","text":" "},{"type":"text","text":"via Task local variables. The equivalent async version of this is"},{"type":"text","text":" "},{"type":"codeVoice","code":"InstrumentationSystem.tracer.withSpan(_:ofKind:_)"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"DO NOT "},{"type":"codeVoice","code":"end()"},{"type":"text","text":" the passed in span manually. It will be ended automatically when the "},{"type":"codeVoice","code":"operation"},{"type":"text","text":" returns."}],"type":"paragraph"},{"style":"note","name":"Throws","content":[{"inlineContent":[{"text":"the error the ","type":"text"},{"code":"operation","type":"codeVoice"},{"text":" has thrown (if any)","type":"text"}],"type":"paragraph"}],"type":"aside"}]}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbrequest\/withspan(_:ofkind:_:)-4bxhf"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","extendedModule":"Hummingbird","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withSpan"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ofKind"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Tracing8SpanKindO","text":"SpanKind"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Tracing4SpanP","text":"Span"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"}],"role":"symbol","roleHeading":"Instance Method","platforms":[{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"13.0","name":"iOS"},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"10.15","name":"macOS"},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"13.0","name":"tvOS"},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"6.0","name":"watchOS"}],"externalID":"s:11Hummingbird9HBRequestV8withSpan_6ofKind_xSS_7Tracing0dF0OxAC_AF0D0_ptKXEtKlF","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdLambda"}],"title":"withSpan(_:ofKind:_:)"},"abstract":[{"type":"text","text":"Execute the given operation within a newly created "},{"type":"codeVoice","code":"Span"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"title":"HBRequest","url":"\/documentation\/hummingbirdlambda\/hbrequest","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/withSpan(_:ofKind:_:)-4bxhf":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SpanKind","kind":"typeIdentifier","preciseIdentifier":"s:7Tracing8SpanKindO"},{"text":", (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":", ","kind":"text"},{"text":"Span","kind":"typeIdentifier","preciseIdentifier":"s:7Tracing4SpanP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Execute the given operation within a newly created "},{"type":"codeVoice","code":"Span"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","url":"\/documentation\/hummingbirdlambda\/hbrequest\/withspan(_:ofkind:_:)-4bxhf","kind":"symbol","title":"withSpan(_:ofKind:_:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}