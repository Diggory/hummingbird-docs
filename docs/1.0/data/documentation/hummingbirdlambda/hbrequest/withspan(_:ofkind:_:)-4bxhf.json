{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbrequest\/withspan(_:ofkind:_:)-4bxhf"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdFoundation"}],"externalID":"s:11Hummingbird9HBRequestV8withSpan_6ofKind_xSS_7Tracing0dF0OxAC_AF0D0_ptKXEtKlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Tracing8SpanKindO","text":"SpanKind","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Tracing4SpanP","text":"Span","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"roleHeading":"Instance Method","role":"symbol","platforms":[{"deprecated":false,"introducedAt":"13.0","name":"iOS","unavailable":false,"beta":false},{"deprecated":false,"introducedAt":"10.15","name":"macOS","unavailable":false,"beta":false},{"deprecated":false,"introducedAt":"13.0","name":"tvOS","unavailable":false,"beta":false},{"deprecated":false,"introducedAt":"6.0","name":"watchOS","unavailable":false,"beta":false}],"extendedModule":"Hummingbird","title":"withSpan(_:ofKind:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withSpan"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operationName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ofKind"},{"kind":"text","text":" "},{"kind":"internalParam","text":"kind"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Tracing8SpanKindO","text":"SpanKind"},{"kind":"text","text":" = .internal, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Tracing4SpanP","text":"Span"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The name of the operation being traced. This may be a handler function, database call, …"}],"type":"paragraph"}],"name":"operationName"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SpanKind","type":"codeVoice"},{"type":"text","text":" of the "},{"code":"Span","type":"codeVoice"},{"type":"text","text":" to be created. Defaults to "},{"code":"SpanKind\/internal","type":"codeVoice"},{"type":"text","text":"."}]}],"name":"kind"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"operation to wrap in a span start\/end and execute immediately"}]}],"name":"operation"}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"the value returned by "},{"type":"codeVoice","code":"operation"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Calls operation with edited request that includes the serviceContext from span, and the span Be sure to use the"},{"type":"text","text":" "},{"code":"HBRequest","type":"codeVoice"},{"type":"text","text":" passed to the closure as that includes the serviceContext"}],"type":"paragraph"},{"inlineContent":[{"text":"This function should be used when we aren’t inside an async function and serviceContext cannot be propagated","type":"text"},{"text":" ","type":"text"},{"text":"via Task local variables. The equivalent async version of this is","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"InstrumentationSystem.tracer.withSpan(_:ofKind:_)"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"DO NOT "},{"type":"codeVoice","code":"end()"},{"type":"text","text":" the passed in span manually. It will be ended automatically when the "},{"type":"codeVoice","code":"operation"},{"type":"text","text":" returns."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"the error the ","type":"text"},{"code":"operation","type":"codeVoice"},{"text":" has thrown (if any)","type":"text"}],"type":"paragraph"}],"name":"Throws","style":"note","type":"aside"}]}],"kind":"symbol","sections":[],"abstract":[{"text":"Execute the given operation within a newly created ","type":"text"},{"type":"codeVoice","code":"Span"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/withSpan(_:ofKind:_:)-4bxhf":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbrequest\/withspan(_:ofkind:_:)-4bxhf","title":"withSpan(_:ofKind:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SpanKind","preciseIdentifier":"s:7Tracing8SpanKindO","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Tracing4SpanP","text":"Span","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Execute the given operation within a newly created ","type":"text"},{"type":"codeVoice","code":"Span"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"HBRequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"}}}