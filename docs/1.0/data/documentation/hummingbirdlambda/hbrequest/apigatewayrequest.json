{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/apiGatewayRequest"},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbrequest\/apigatewayrequest"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"HummingbirdLambda","relatedModules":["Hummingbird"]}],"externalID":"s:11Hummingbird9HBRequestV0A6LambdaE17apiGatewayRequest15AWSLambdaEvents010APIGatewayF0Vvp","role":"symbol","title":"apiGatewayRequest","symbolKind":"property","extendedModule":"Hummingbird","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apiGatewayRequest","kind":"identifier"},{"text":": ","kind":"text"},{"text":"APIGatewayRequest","kind":"typeIdentifier","preciseIdentifier":"s:15AWSLambdaEvents17APIGatewayRequestV"}],"roleHeading":"Instance Property"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"apiGatewayRequest"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"APIGatewayRequest","preciseIdentifier":"s:15AWSLambdaEvents17APIGatewayRequestV"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}]}],"abstract":[{"type":"codeVoice","code":"APIGateway.Request"},{"type":"text","text":" that generated this "},{"type":"codeVoice","code":"HBRequest"}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"title":"HBRequest","role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","url":"\/documentation\/hummingbirdlambda\/hbrequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/apiGatewayRequest":{"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apiGatewayRequest","kind":"identifier"},{"text":": ","kind":"text"},{"text":"APIGatewayRequest","preciseIdentifier":"s:15AWSLambdaEvents17APIGatewayRequestV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest\/apigatewayrequest","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/apiGatewayRequest","abstract":[{"code":"APIGateway.Request","type":"codeVoice"},{"text":" that generated this ","type":"text"},{"code":"HBRequest","type":"codeVoice"}],"title":"apiGatewayRequest"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]}}}