{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}],"externalID":"s:11Hummingbird9HBRequestV13ResponsePatchC","extendedModule":"Hummingbird","role":"symbol","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdAuth"}],"navigatorTitle":[{"kind":"identifier","text":"ResponsePatch"}],"title":"HBRequest.ResponsePatch","symbolKind":"class"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Allow you to patch the response generated by your route handler via the "},{"type":"codeVoice","code":"HBRequest"},{"type":"text","text":" supplied. If your handler is only"},{"type":"text","text":" "},{"type":"text","text":"returning the payload you can edit the status and headers via "},{"type":"codeVoice","code":"request.response"},{"type":"text","text":" eg."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["func myHandler(_ request: HBRequest) -> String {","    request.response.status = .accepted","    return \"hello\"","}"]}]}],"abstract":[{"type":"text","text":"Patches Response via "},{"type":"codeVoice","code":"HBResponse.apply(patch:)"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/headers","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/status"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/setCookie(_:)"]}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/headers":{"title":"headers","role":"symbol","abstract":[{"type":"text","text":"headers to add to response"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"headers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird16HTTPHeadersPatchV","kind":"typeIdentifier","text":"HTTPHeadersPatch"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/headers","url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/headers"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/setCookie(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setCookie"},{"kind":"text","text":"("},{"preciseIdentifier":"s:21HummingbirdFoundation8HBCookieV","kind":"typeIdentifier","text":"HBCookie"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/setcookie(_:)","type":"topic","role":"symbol","title":"setCookie(_:)","abstract":[{"type":"text","text":"Set cookie on reponse patch"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/setCookie(_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch":{"title":"HBRequest.ResponsePatch","role":"symbol","abstract":[{"type":"text","text":"Patches Response via "},{"type":"codeVoice","code":"HBResponse.apply(patch:)"}],"navigatorTitle":[{"kind":"identifier","text":"ResponsePatch"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch","url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/status":{"url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/status","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"status"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO","kind":"typeIdentifier","text":"HTTPResponseStatus"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/status","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"patch status of reponse"}],"title":"status"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","title":"HBRequest","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}]}}}