{"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","symbolKind":"class","title":"HBRequest.ResponsePatch","externalID":"s:11Hummingbird9HBRequestV13ResponsePatchC","roleHeading":"Class","extendedModule":"Hummingbird","navigatorTitle":[{"kind":"identifier","text":"ResponsePatch"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}],"modules":[{"name":"HummingbirdLambda","relatedModules":["Hummingbird"]}]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/headers","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/status"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/setCookie(_:)"],"title":"Instance Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Allow you to patch the response generated by your route handler via the ","type":"text"},{"code":"HBRequest","type":"codeVoice"},{"text":" supplied. If your handler is only","type":"text"},{"text":" ","type":"text"},{"text":"returning the payload you can edit the status and headers via ","type":"text"},{"code":"request.response","type":"codeVoice"},{"text":" eg.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["func myHandler(_ request: HBRequest) -> String {","    request.response.status = .accepted","    return \"hello\"","}"]}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch"},"abstract":[{"text":"Patches Response via ","type":"text"},{"type":"codeVoice","code":"HBResponse.apply(patch:)"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/status":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/status","role":"symbol","kind":"symbol","title":"status","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"status"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO","text":"HTTPResponseStatus"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"patch status of reponse"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/status"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/headers":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/headers","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/headers","title":"headers","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPHeadersPatch","preciseIdentifier":"s:11Hummingbird16HTTPHeadersPatchV"}],"abstract":[{"text":"headers to add to response","type":"text"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/setCookie(_:)":{"title":"setCookie(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/setcookie(_:)","abstract":[{"type":"text","text":"Set cookie on reponse patch"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/setCookie(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setCookie","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:21HummingbirdFoundation8HBCookieV","text":"HBCookie","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"title":"HBRequest","url":"\/documentation\/hummingbirdlambda\/hbrequest","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch":{"kind":"symbol","title":"HBRequest.ResponsePatch","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}],"type":"topic","abstract":[{"type":"text","text":"Patches Response via "},{"type":"codeVoice","code":"HBResponse.apply(patch:)"}],"navigatorTitle":[{"kind":"identifier","text":"ResponsePatch"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}