{"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Patches Response via "},{"type":"codeVoice","code":"HBResponse.apply(patch:)"}],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}],"navigatorTitle":[{"kind":"identifier","text":"ResponsePatch"}],"title":"HBRequest.ResponsePatch","externalID":"s:11Hummingbird9HBRequestV13ResponsePatchC","roleHeading":"Class","role":"symbol","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdFoundation"}],"extendedModule":"Hummingbird","symbolKind":"class"},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/headers","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/status"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/setCookie(_:)"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"]]},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Allow you to patch the response generated by your route handler via the ","type":"text"},{"code":"HBRequest","type":"codeVoice"},{"text":" supplied. If your handler is only","type":"text"},{"text":" ","type":"text"},{"text":"returning the payload you can edit the status and headers via ","type":"text"},{"code":"request.response","type":"codeVoice"},{"text":" eg.","type":"text"}]},{"syntax":null,"type":"codeListing","code":["func myHandler(_ request: HBRequest) -> String {","    request.response.status = .accepted","    return \"hello\"","}"]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/status":{"abstract":[{"type":"text","text":"patch status of reponse"}],"type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"status","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO","text":"HTTPResponseStatus"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/status","title":"status","url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/status","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch","title":"HBRequest.ResponsePatch","url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch","kind":"symbol","abstract":[{"type":"text","text":"Patches Response via "},{"type":"codeVoice","code":"HBResponse.apply(patch:)"}],"navigatorTitle":[{"text":"ResponsePatch","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponsePatch","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/headers":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/headers","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/headers","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"headers","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HTTPHeadersPatch","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HTTPHeadersPatchV"}],"abstract":[{"text":"headers to add to response","type":"text"}],"title":"headers"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"HBRequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/setCookie(_:)":{"abstract":[{"text":"Set cookie on reponse patch","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setCookie","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HBCookie","kind":"typeIdentifier","preciseIdentifier":"s:21HummingbirdFoundation8HBCookieV"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/setCookie(_:)","title":"setCookie(_:)","url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/setcookie(_:)","role":"symbol"}}}