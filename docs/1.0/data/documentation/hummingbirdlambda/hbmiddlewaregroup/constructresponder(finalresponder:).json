{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/constructResponder(finalResponder:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/constructresponder(finalresponder:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"constructResponder","kind":"identifier"},{"text":"(","kind":"text"},{"text":"finalResponder","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The responder the last middleware calls","type":"text"}],"type":"paragraph"}],"name":"finalResponder"}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"Responder chain","type":"text"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup"]]},"metadata":{"externalID":"s:11Hummingbird17HBMiddlewareGroupC18constructResponder05finalE0AA11HBResponder_pAaF_p_tF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"constructResponder","kind":"identifier"},{"text":"(","kind":"text"},{"text":"finalResponder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier"}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","modules":[{"name":"HummingbirdLambda"}],"title":"constructResponder(finalResponder:)"},"abstract":[{"type":"text","text":"Construct responder chain from this middleware group"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponder":{"title":"HBResponder","url":"\/documentation\/hummingbirdlambda\/hbresponder","navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"title":"HBMiddlewareGroup","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup/constructResponder(finalResponder:)":{"url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/constructresponder(finalresponder:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Construct responder chain from this middleware group"}],"title":"constructResponder(finalResponder:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"finalResponder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/constructResponder(finalResponder:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}