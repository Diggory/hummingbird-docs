{"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/add(_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup"]]},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"HBMiddleware","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP"},{"kind":"text","text":")"}],"title":"add(_:)","roleHeading":"Instance Method","externalID":"s:11Hummingbird17HBMiddlewareGroupC3addyyAA0B0_pF","modules":[{"name":"HummingbirdLambda"}],"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"middleware","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"HBMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/add(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Add middleware to group","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup":{"navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup","title":"HBMiddlewareGroup","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup/add(_:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/add(_:)","url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/add(_:)","kind":"symbol","abstract":[{"text":"Add middleware to group","type":"text"}],"title":"add(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","text":"HBMiddleware"},{"kind":"text","text":")"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddleware":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware","navigatorTitle":[{"text":"HBMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbmiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddleware","kind":"identifier"}],"abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"type":"topic","role":"symbol","title":"HBMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]}}}