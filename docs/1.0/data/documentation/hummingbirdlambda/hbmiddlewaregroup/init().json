{"sections":[],"abstract":[{"type":"text","text":"Initialize "},{"type":"codeVoice","code":"HBMiddlewareGroup"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Set middleware array to be empty"}],"type":"paragraph"}]}],"metadata":{"symbolKind":"init","title":"init()","externalID":"s:11Hummingbird17HBMiddlewareGroupCACycfc","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Initializer","modules":[{"name":"HummingbirdLambda"}],"role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/init()"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/init()"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup/init()":{"type":"topic","abstract":[{"text":"Initialize ","type":"text"},{"code":"HBMiddlewareGroup","type":"codeVoice"}],"role":"symbol","title":"init()","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/init()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup":{"navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup","title":"HBMiddlewareGroup","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]}}}