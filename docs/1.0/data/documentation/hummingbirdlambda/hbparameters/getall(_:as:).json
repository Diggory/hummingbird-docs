{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbparameters\/getall(_:as:)"]}],"metadata":{"modules":[{"name":"HummingbirdLambda"}],"title":"getAll(_:as:)","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"externalID":"s:11Hummingbird12HBParametersV6getAll_2asSayxGSS_xmts25LosslessStringConvertibleRzlF","roleHeading":"Instance Method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Return parameter with specified id as a certain type","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParameters"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParameters\/getAll(_:as:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"s"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"] "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s25LosslessStringConvertibleP","text":"LosslessStringConvertible"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"name":"s","content":[{"inlineContent":[{"text":"parameter id","type":"text"}],"type":"paragraph"}]},{"name":"as","content":[{"inlineContent":[{"text":"type we want returned","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParameters/getAll(_:as:)":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparameters\/getall(_:as:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParameters\/getAll(_:as:)","abstract":[{"text":"Return parameter with specified id as a certain type","type":"text"}],"title":"getAll(_:as:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParameters":{"title":"HBParameters","role":"symbol","navigatorTitle":[{"text":"HBParameters","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParameters","url":"\/documentation\/hummingbirdlambda\/hbparameters","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParameters","kind":"identifier"}],"type":"topic","abstract":[{"text":"Store for parameters key, value pairs extracted from URI","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]}}}