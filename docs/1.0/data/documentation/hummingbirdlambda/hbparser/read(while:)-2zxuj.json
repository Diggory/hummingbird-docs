{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2zxuj"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"characterSet"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO","text":"Unicode"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBParserV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","text":"HBParser"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"character set to check","type":"text"}],"type":"paragraph"}],"name":"while"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"String read from buffer","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2zxuj"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"text":"Read while character at current position is in supplied set","type":"text"}],"metadata":{"modules":[{"name":"HummingbirdLambda","relatedModules":["Hummingbird"]}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO","text":"Unicode"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"text":">) -> ","kind":"text"},{"text":"HBParser","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"externalID":"s:11Hummingbird8HBParserV4read5whileACShys7UnicodeO6ScalarVG_tF","role":"symbol","roleHeading":"Instance Method","title":"read(while:)","symbolKind":"method","extendedModule":"Hummingbird"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser":{"title":"HBParser","role":"symbol","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","url":"\/documentation\/hummingbirdlambda\/hbparser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"type":"topic","abstract":[{"text":"Reader object for parsing String buffers","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2zxuj":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2zxuj","title":"read(while:)","abstract":[{"text":"Read while character at current position is in supplied set","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2zxuj"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]}}}