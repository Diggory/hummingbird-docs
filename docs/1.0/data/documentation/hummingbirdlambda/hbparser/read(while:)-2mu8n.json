{"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO","text":"Unicode"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"while","content":[{"inlineContent":[{"text":"character set to check","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"String read from buffer","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:11Hummingbird8HBParserV4read5whileACSbs7UnicodeO6ScalarVXE_tF","extendedModule":"Hummingbird","title":"read(while:)","role":"symbol","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdLambda"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"roleHeading":"Instance Method","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser"]]},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2mu8n"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Read while character returns true for supplied closure","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2mu8n"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser":{"title":"HBParser","url":"\/documentation\/hummingbirdlambda\/hbparser","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2mu8n":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2mu8n","title":"read(while:)","role":"symbol","abstract":[{"type":"text","text":"Read while character returns true for supplied closure"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2mu8n"}}}