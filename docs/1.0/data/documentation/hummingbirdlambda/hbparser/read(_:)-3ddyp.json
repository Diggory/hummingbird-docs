{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3ddyp"},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-3ddyp"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"read(_:)","extendedModule":"Hummingbird","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdLambda"}],"role":"symbol","externalID":"s:11Hummingbird8HBParserV4readySbs7UnicodeO6ScalarVKF"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"char","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"char","content":[{"type":"paragraph","inlineContent":[{"text":"character to compare against","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If current character was the one we expected"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":".overflow","type":"text"}]}],"type":"aside"}]}],"abstract":[{"text":"Read the current character and return if it is as intended. If character test returns true then move forward 1","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-3ddyp":{"title":"read(_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3ddyp","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-3ddyp","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Read the current character and return if it is as intended. If character test returns true then move forward 1","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser":{"title":"HBParser","role":"symbol","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","url":"\/documentation\/hummingbirdlambda\/hbparser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"type":"topic","abstract":[{"text":"Reader object for parsing String buffers","type":"text"}]}}}