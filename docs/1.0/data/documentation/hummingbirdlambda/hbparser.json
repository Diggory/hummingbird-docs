{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser"},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbparser"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/ST"],"type":"conformsTo","kind":"relationships"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"languages":["swift"]}]}],"abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"metadata":{"title":"HBParser","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"symbolKind":"struct","externalID":"s:11Hummingbird8HBParserV","modules":[{"name":"HummingbirdLambda"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"roleHeading":"Structure","role":"symbol"},"sections":[],"seeAlsoSections":[{"title":"Miscellaneous","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:validateUTF8:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/count","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/string"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance(by:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/character()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/current()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToStart()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/percentDecode()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/reachedEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3ddyp","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3jot2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-46502","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(count:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4fsmu","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4qwvq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9o9x7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9xtym","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(untilString:throwOnOverflow:skipToEnd:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2mu8n","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2tzbd","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2zxuj","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-4p0fs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/readUntilTheEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat(by:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/split(separator:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance(by:)"]},{"title":"Enumerations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Error"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Sequence-Implementations"]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache":{"title":"HBDateCache","url":"\/documentation\/hummingbirdlambda\/hbdatecache","navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}],"abstract":[{"type":"text","text":"Current date cache."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBDateCache","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(count:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier","text":"HBParser"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(count:)","abstract":[{"type":"text","text":"Read next so many characters from buffer"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(count:)","type":"topic","role":"symbol","title":"read(count:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/percentDecode()":{"title":"percentDecode()","url":"\/documentation\/hummingbirdlambda\/hbparser\/percentdecode()","abstract":[{"type":"text","text":"percent decode UTF8"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/percentDecode()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"percentDecode","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/string":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/string","abstract":[{"type":"text","text":"Return contents of parser as a string"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/string","type":"topic","role":"symbol","title":"string","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-9xtym":{"title":"read(until:throwOnOverflow:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-9xtym","abstract":[{"type":"text","text":"Read from buffer until we hit a character where supplied KeyPath is true. Position after this is of the character we were checking for"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9xtym","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/count":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"count","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/count","abstract":[{"type":"text","text":"Return contents of parser as a string"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/count","type":"topic","role":"symbol","title":"count","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/advance()":{"title":"advance()","url":"\/documentation\/hummingbirdlambda\/hbparser\/advance()","abstract":[{"type":"text","text":"Move forward one character"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"advance","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-4p0fs":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-4p0fs","abstract":[{"type":"text","text":"Read while character at current position is the one supplied"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-4p0fs","type":"topic","role":"symbol","title":"read(while:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/retreat(by:)":{"title":"retreat(by:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/retreat(by:)","abstract":[{"type":"text","text":"Move back so many characters"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retreat","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/moveToEnd()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"moveToEnd","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToEnd()","abstract":[{"type":"text","text":"Move parser to end of string"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/movetoend()","type":"topic","role":"symbol","title":"moveToEnd()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/character()":{"title":"character()","url":"\/documentation\/hummingbirdlambda\/hbparser\/character()","abstract":[{"type":"text","text":"Return current character"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/character()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"character","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2zxuj":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2zxuj","abstract":[{"type":"text","text":"Read while character at current position is in supplied set"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2zxuj","type":"topic","role":"symbol","title":"read(while:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser":{"title":"HBParser","url":"\/documentation\/hummingbirdlambda\/hbparser","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/unsafeAdvance()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"unsafeAdvance","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance()","abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbparser\/unsafeadvance()","type":"topic","role":"symbol","title":"unsafeAdvance()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/reachedEnd()":{"title":"reachedEnd()","url":"\/documentation\/hummingbirdlambda\/hbparser\/reachedend()","abstract":[{"type":"text","text":"Return whether we have reached the end of the buffer"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/reachedEnd()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reachedEnd","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/ST":{"title":"Swift.Sequence","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/ST"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/advance(by:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"advance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance(by:)","abstract":[{"type":"text","text":"Move forward so many character"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/advance(by:)","type":"topic","role":"symbol","title":"advance(by:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/current()":{"title":"current()","url":"\/documentation\/hummingbirdlambda\/hbparser\/current()","abstract":[{"type":"text","text":"Return the character at the current position"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/current()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"current","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/Error":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Error","navigatorTitle":[{"kind":"identifier","text":"Error"}],"abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbparser\/error","type":"topic","role":"symbol","title":"HBParser.Error","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-4qwvq":{"title":"read(until:throwOnOverflow:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-4qwvq","abstract":[{"type":"text","text":"Read from buffer until we hit a character that returns true for supplied closure. Position after this is of the character we were checking for"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4qwvq","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/moveToStart()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"moveToStart","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToStart()","abstract":[{"type":"text","text":"Move parser to beginning of string"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/movetostart()","type":"topic","role":"symbol","title":"moveToStart()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-46502":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-46502","title":"read(_:)","role":"symbol","abstract":[{"type":"text","text":"Compare characters at current position against provided string. If the characters are the same as string provided advance past string"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-46502"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBEnvironment":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBEnvironment","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","navigatorTitle":[{"text":"HBEnvironment","kind":"identifier"}],"abstract":[{"type":"text","text":"Access environment variables"}],"url":"\/documentation\/hummingbirdlambda\/hbenvironment","type":"topic","role":"symbol","title":"HBEnvironment","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/Sequence-Implementations":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Sequence-Implementations","title":"Sequence Implementations","role":"collectionGroup","abstract":[],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/sequence-implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FlatDictionary":{"title":"FlatDictionary","url":"\/documentation\/hummingbirdlambda\/flatdictionary","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/split(separator:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"split","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/split(separator:)","abstract":[{"type":"text","text":"Split parser into sections separated by character"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/split(separator:)","type":"topic","role":"symbol","title":"split(separator:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/readUntilTheEnd()":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/readUntilTheEnd()","title":"readUntilTheEnd()","role":"symbol","abstract":[{"type":"text","text":"Read from buffer from current position until the end of the buffer"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readUntilTheEnd","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/readuntiltheend()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:)","abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbparser\/init(_:)","type":"topic","role":"symbol","title":"init(_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/retreat()":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat()","title":"retreat()","role":"symbol","abstract":[{"type":"text","text":"Move backwards one character"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retreat","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/retreat()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-4fsmu":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4fsmu","abstract":[{"type":"text","text":"Read from buffer until we hit a character in supplied set. Position after this is of the character we were checking for"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-4fsmu","type":"topic","role":"symbol","title":"read(until:throwOnOverflow:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-3jot2":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3jot2","title":"read(_:)","role":"symbol","abstract":[{"type":"text","text":"Read the current character and check if it is in a set of characters If character test returns true then move forward 1"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-3jot2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/unsafeAdvance(by:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance(by:)","title":"unsafeAdvance(by:)","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"unsafeAdvance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/unsafeadvance(by:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/init(_:validateUTF8:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:validateUTF8:)","title":"init(_:validateUTF8:)","role":"symbol","abstract":[{"type":"text","text":"Create a Parser object"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"?<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"validateUTF8","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/init(_:validateutf8:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-9o9x7":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9o9x7","title":"read(until:throwOnOverflow:)","role":"symbol","abstract":[{"type":"text","text":"Read from buffer until we hit a character. Position after this is of the character we were checking for"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-9o9x7"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2mu8n":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2mu8n","title":"read(while:)","role":"symbol","abstract":[{"type":"text","text":"Read while character returns true for supplied closure"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2mu8n"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-3ddyp":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3ddyp","title":"read(_:)","role":"symbol","abstract":[{"type":"text","text":"Read the current character and return if it is as intended. If character test returns true then move forward 1"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-3ddyp"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(untilString:throwOnOverflow:skipToEnd:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(untilString:throwOnOverflow:skipToEnd:)","title":"read(untilString:throwOnOverflow:skipToEnd:)","role":"symbol","abstract":[{"type":"text","text":"Read from buffer until we hit a string. By default the position after this is of the beginning of the string we were checking for"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"untilString","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"skipToEnd","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(untilstring:throwonoverflow:skiptoend:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2tzbd":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Read while character returns true for supplied KeyPath"}],"title":"read(while:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2tzbd","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2tzbd"}}}