{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:validateUTF8:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/count","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/string"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance(by:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/character()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/current()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToStart()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/percentDecode()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/reachedEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3ddyp","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3jot2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-46502","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(count:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4fsmu","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4qwvq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9o9x7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9xtym","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(untilString:throwOnOverflow:skipToEnd:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2mu8n","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2tzbd","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2zxuj","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-4p0fs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/readUntilTheEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat(by:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/split(separator:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance(by:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Error"],"title":"Enumerations"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Sequence-Implementations"],"title":"Default Implementations","generated":true}],"metadata":{"externalID":"s:11Hummingbird8HBParserV","modules":[{"name":"HummingbirdAuth"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"title":"HBParser","roleHeading":"Structure","symbolKind":"struct","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBParser"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"platforms":["Linux"]}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbparser"]}],"abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"sections":[],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/ST"],"title":"Conforms To","type":"conformsTo"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache"],"title":"Miscellaneous","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/init(_:validateUTF8:)":{"url":"\/documentation\/hummingbirdlambda\/hbparser\/init(_:validateutf8:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"validateUTF8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:validateUTF8:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Create a Parser object"}],"title":"init(_:validateUTF8:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/reachedEnd()":{"title":"reachedEnd()","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/reachedEnd()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reachedEnd"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"role":"symbol","abstract":[{"type":"text","text":"Return whether we have reached the end of the buffer"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/reachedend()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-3jot2":{"type":"topic","title":"read(_:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-3jot2","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Read the current character and check if it is in a set of characters If character test returns true then move forward 1"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3jot2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-46502":{"type":"topic","title":"read(_:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-46502","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Compare characters at current position against provided string. If the characters are the same as string provided advance past string"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-46502"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(untilString:throwOnOverflow:skipToEnd:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(untilString:throwOnOverflow:skipToEnd:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"untilString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"throwOnOverflow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"skipToEnd"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser"}],"title":"read(untilString:throwOnOverflow:skipToEnd:)","abstract":[{"type":"text","text":"Read from buffer until we hit a string. By default the position after this is of the beginning of the string we were checking for"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(untilstring:throwonoverflow:skiptoend:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-4qwvq":{"title":"read(until:throwOnOverflow:)","role":"symbol","abstract":[{"text":"Read from buffer until we hit a character that returns true for supplied closure. Position after this is of the character we were checking for","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"read","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO","text":"Unicode"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"throwOnOverflow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4qwvq","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-4qwvq"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/moveToEnd()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToEnd()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"moveToEnd"},{"kind":"text","text":"()"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/movetoend()","kind":"symbol","abstract":[{"text":"Move parser to end of string","type":"text"}],"title":"moveToEnd()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/init(_:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:)","abstract":[],"title":"init(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-9xtym":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9xtym","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"throwOnOverflow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-9xtym","kind":"symbol","abstract":[{"text":"Read from buffer until we hit a character where supplied KeyPath is true. Position after this is of the character we were checking for","type":"text"}],"title":"read(until:throwOnOverflow:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache":{"abstract":[{"text":"Current date cache.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache","title":"HBDateCache","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBDateCache"}],"navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbdatecache"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/current()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/current()","url":"\/documentation\/hummingbirdlambda\/hbparser\/current()","kind":"symbol","abstract":[{"text":"Return the character at the current position","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"current"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier","text":"Unicode"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier","text":"Scalar"}],"type":"topic","title":"current()","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/count":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"title":"count","url":"\/documentation\/hummingbirdlambda\/hbparser\/count","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/count","abstract":[{"type":"text","text":"Return contents of parser as a string"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-9o9x7":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"text":": ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"title":"read(until:throwOnOverflow:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-9o9x7","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9o9x7","abstract":[{"type":"text","text":"Read from buffer until we hit a character. Position after this is of the character we were checking for"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-4fsmu":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4fsmu","role":"symbol","title":"read(until:throwOnOverflow:)","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-4fsmu","type":"topic","abstract":[{"type":"text","text":"Read from buffer until we hit a character in supplied set. Position after this is of the character we were checking for"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/Sequence-Implementations":{"url":"\/documentation\/hummingbirdlambda\/hbparser\/sequence-implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Sequence-Implementations","role":"collectionGroup","kind":"article","abstract":[],"title":"Sequence Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/advance(by:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance(by:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"advance"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/advance(by:)","kind":"symbol","abstract":[{"text":"Move forward so many character","type":"text"}],"title":"advance(by:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/moveToStart()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToStart()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"moveToStart"},{"text":"()","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/movetostart()","kind":"symbol","abstract":[{"text":"Move parser to beginning of string","type":"text"}],"title":"moveToStart()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser":{"title":"HBParser","role":"symbol","abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","url":"\/documentation\/hummingbirdlambda\/hbparser"},"doc://com.opticalaberration.hummingbird/ST":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/ST","title":"Swift.Sequence"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/retreat()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retreat"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/retreat()","kind":"symbol","abstract":[{"text":"Move backwards one character","type":"text"}],"title":"retreat()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/percentDecode()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/percentDecode()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"percentDecode"},{"text":"() -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/percentdecode()","kind":"symbol","abstract":[{"text":"percent decode UTF8","type":"text"}],"title":"percentDecode()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/string":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/string","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/string","kind":"symbol","abstract":[{"text":"Return contents of parser as a string","type":"text"}],"title":"string"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/retreat(by:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat(by:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"retreat"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/retreat(by:)","kind":"symbol","abstract":[{"text":"Move back so many characters","type":"text"}],"title":"retreat(by:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-3ddyp":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3ddyp","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"text":"(","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-3ddyp","kind":"symbol","abstract":[{"text":"Read the current character and return if it is as intended. If character test returns true then move forward 1","type":"text"}],"title":"read(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-4p0fs":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-4p0fs","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-4p0fs","kind":"symbol","abstract":[{"text":"Read while character at current position is the one supplied","type":"text"}],"title":"read(while:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/advance()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"advance"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/advance()","kind":"symbol","abstract":[{"text":"Move forward one character","type":"text"}],"title":"advance()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/character()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/character()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"character"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/character()","kind":"symbol","abstract":[{"text":"Return current character","type":"text"}],"title":"character()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/Error":{"url":"\/documentation\/hummingbirdlambda\/hbparser\/error","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Error","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Error"}],"abstract":[],"title":"HBParser.Error"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FlatDictionary":{"url":"\/documentation\/hummingbirdlambda\/flatdictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"title":"FlatDictionary"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/readUntilTheEnd()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/readUntilTheEnd()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readUntilTheEnd"},{"text":"() -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/readuntiltheend()","kind":"symbol","abstract":[{"text":"Read from buffer from current position until the end of the buffer","type":"text"}],"title":"readUntilTheEnd()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/split(separator:)":{"title":"split(separator:)","role":"symbol","abstract":[{"type":"text","text":"Split parser into sections separated by character"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"split","kind":"identifier"},{"kind":"text","text":"("},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/split(separator:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/split(separator:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBEnvironment":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBEnvironment","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbenvironment","type":"topic","role":"symbol","title":"HBEnvironment","abstract":[{"text":"Access environment variables","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","kind":"symbol","navigatorTitle":[{"text":"HBEnvironment","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(count:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(count:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(count:)","kind":"symbol","abstract":[{"text":"Read next so many characters from buffer","type":"text"}],"title":"read(count:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/unsafeAdvance(by:)":{"kind":"symbol","title":"unsafeAdvance(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unsafeAdvance"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance(by:)","role":"symbol","abstract":[],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/unsafeadvance(by:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2mu8n":{"kind":"symbol","title":"read(while:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2mu8n","role":"symbol","abstract":[{"type":"text","text":"Read while character returns true for supplied closure"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2mu8n"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/unsafeAdvance()":{"kind":"symbol","title":"unsafeAdvance()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unsafeAdvance"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance()","role":"symbol","abstract":[],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/unsafeadvance()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2zxuj":{"kind":"symbol","title":"read(while:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2zxuj","role":"symbol","abstract":[{"type":"text","text":"Read while character at current position is in supplied set"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2zxuj"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2tzbd":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":", "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2tzbd","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2tzbd","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Read while character returns true for supplied KeyPath"}],"role":"symbol","title":"read(while:)"}}}