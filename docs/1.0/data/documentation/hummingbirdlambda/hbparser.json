{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","interfaceLanguage":"swift"},"metadata":{"role":"symbol","title":"HBParser","navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"modules":[{"name":"HummingbirdFoundation"}],"symbolKind":"struct","externalID":"s:11Hummingbird8HBParserV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"roleHeading":"Structure"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/ST"],"title":"Conforms To","type":"conformsTo"}],"abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"languages":["swift"],"platforms":["Linux"]}]}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:validateUTF8:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/count","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/string"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance(by:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/character()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/current()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToStart()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/percentDecode()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/reachedEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3ddyp","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3jot2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-46502","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(count:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4fsmu","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4qwvq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9o9x7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9xtym","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(untilString:throwOnOverflow:skipToEnd:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2mu8n","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2tzbd","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2zxuj","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-4p0fs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/readUntilTheEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat(by:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/split(separator:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance(by:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Error"],"title":"Enumerations"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Sequence-Implementations"],"title":"Default Implementations","generated":true}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache"],"title":"Miscellaneous","generated":true}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbparser"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-9xtym":{"abstract":[{"text":"Read from buffer until we hit a character where supplied KeyPath is true. Position after this is of the character we were checking for","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-9xtym","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9xtym","title":"read(until:throwOnOverflow:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO","text":"Unicode"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/unsafeAdvance(by:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unsafeAdvance"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance(by:)","title":"unsafeAdvance(by:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/unsafeadvance(by:)","abstract":[],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/current()":{"title":"current()","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/current()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/current()","abstract":[{"text":"Return the character at the current position","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"current","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/moveToStart()":{"abstract":[{"text":"Move parser to beginning of string","type":"text"}],"title":"moveToStart()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToStart()","url":"\/documentation\/hummingbirdlambda\/hbparser\/movetostart()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"moveToStart","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/unsafeAdvance()":{"url":"\/documentation\/hummingbirdlambda\/hbparser\/unsafeadvance()","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unsafeAdvance","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","title":"unsafeAdvance()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(untilString:throwOnOverflow:skipToEnd:)":{"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(untilstring:throwonoverflow:skiptoend:)","abstract":[{"text":"Read from buffer until we hit a string. By default the position after this is of the beginning of the string we were checking for","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(untilString:throwOnOverflow:skipToEnd:)","title":"read(untilString:throwOnOverflow:skipToEnd:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"untilString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"throwOnOverflow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"skipToEnd","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-4qwvq":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"text":"Read from buffer until we hit a character that returns true for supplied closure. Position after this is of the character we were checking for","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-4qwvq","title":"read(until:throwOnOverflow:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4qwvq","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-3ddyp":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3ddyp","title":"read(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-3ddyp","abstract":[{"text":"Read the current character and return if it is as intended. If character test returns true then move forward 1","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/readUntilTheEnd()":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/readuntiltheend()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"readUntilTheEnd","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Read from buffer from current position until the end of the buffer","type":"text"}],"title":"readUntilTheEnd()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/readUntilTheEnd()"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FlatDictionary":{"abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/flatdictionary","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","title":"FlatDictionary","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/character()":{"abstract":[{"text":"Return current character","type":"text"}],"type":"topic","kind":"symbol","title":"character()","url":"\/documentation\/hummingbirdlambda\/hbparser\/character()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"character","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/character()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/Sequence-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Sequence-Implementations","role":"collectionGroup","kind":"article","title":"Sequence Implementations","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/sequence-implementations","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/moveToEnd()":{"role":"symbol","title":"moveToEnd()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToEnd()","url":"\/documentation\/hummingbirdlambda\/hbparser\/movetoend()","abstract":[{"text":"Move parser to end of string","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"moveToEnd","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/split(separator:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/split(separator:)","abstract":[{"text":"Split parser into sections separated by character","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"split","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/split(separator:)","title":"split(separator:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/retreat()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat()","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retreat","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/retreat()","abstract":[{"text":"Move backwards one character","type":"text"}],"title":"retreat()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/retreat(by:)":{"role":"symbol","abstract":[{"text":"Move back so many characters","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/retreat(by:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retreat","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat(by:)","title":"retreat(by:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/advance(by:)":{"title":"advance(by:)","kind":"symbol","abstract":[{"type":"text","text":"Move forward so many character"}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"advance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/advance(by:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance(by:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2tzbd":{"type":"topic","title":"read(while:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Read while character returns true for supplied KeyPath"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2tzbd","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"text":"while","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":", "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier","text":"HBParser"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2tzbd"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/init(_:validateUTF8:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:validateUTF8:)","title":"init(_:validateUTF8:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":", "},{"kind":"externalParam","text":"validateUTF8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/init(_:validateutf8:)","abstract":[{"text":"Create a Parser object","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/ST":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/ST","title":"Swift.Sequence","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/count":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/count","title":"count","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/count","abstract":[{"text":"Return contents of parser as a string","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-3jot2":{"kind":"symbol","abstract":[{"text":"Read the current character and check if it is in a set of characters If character test returns true then move forward 1","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3jot2","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-3jot2","title":"read(_:)","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-46502":{"kind":"symbol","abstract":[{"text":"Compare characters at current position against provided string. If the characters are the same as string provided advance past string","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-46502","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-46502","title":"read(_:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-4fsmu":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"throwOnOverflow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"HBParser","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"role":"symbol","abstract":[{"text":"Read from buffer until we hit a character in supplied set. Position after this is of the character we were checking for","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-4fsmu","kind":"symbol","type":"topic","title":"read(until:throwOnOverflow:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4fsmu"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-4p0fs":{"abstract":[{"text":"Read while character at current position is the one supplied","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-4p0fs","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic","title":"read(while:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-4p0fs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2zxuj":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2zxuj","title":"read(while:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2zxuj","abstract":[{"text":"Read while character at current position is in supplied set","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/Error":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Error","role":"symbol","navigatorTitle":[{"text":"Error","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Error","kind":"identifier"}],"title":"HBParser.Error","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/error","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-9o9x7":{"abstract":[{"text":"Read from buffer until we hit a character. Position after this is of the character we were checking for","type":"text"}],"type":"topic","title":"read(until:throwOnOverflow:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-9o9x7","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9o9x7","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/advance()":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"advance","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"kind":"symbol","type":"topic","title":"advance()","abstract":[{"text":"Move forward one character","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/advance()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/reachedEnd()":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/reachedEnd()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reachedEnd"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"reachedEnd()","kind":"symbol","abstract":[{"text":"Return whether we have reached the end of the buffer","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/reachedend()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser":{"abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","title":"HBParser","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/percentDecode()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"percentDecode","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/percentDecode()","title":"percentDecode()","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/percentdecode()","abstract":[{"text":"percent decode UTF8","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2mu8n":{"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2mu8n","kind":"symbol","title":"read(while:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2mu8n","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"HBParser","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"abstract":[{"text":"Read while character returns true for supplied closure","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBEnvironment":{"role":"symbol","kind":"symbol","title":"HBEnvironment","navigatorTitle":[{"text":"HBEnvironment","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","abstract":[{"text":"Access environment variables","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbenvironment","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBEnvironment","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/init(_:)":{"role":"symbol","kind":"symbol","title":"init(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:)","abstract":[],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/string":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/string","title":"string","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/string","abstract":[{"text":"Return contents of parser as a string","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(count:)":{"abstract":[{"text":"Read next so many characters from buffer","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(count:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(count:)","title":"read(count:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache":{"title":"HBDateCache","abstract":[{"text":"Current date cache.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBDateCache"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache","url":"\/documentation\/hummingbirdlambda\/hbdatecache","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBDateCache"}],"type":"topic","role":"symbol"}}}