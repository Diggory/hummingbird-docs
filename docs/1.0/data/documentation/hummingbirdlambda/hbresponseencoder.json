{"relationshipsSections":[{"kind":"relationships","title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/URLEncodedFormEncoder"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseEncoder","kind":"identifier"}],"languages":["swift"]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbresponseencoder"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseEncoder\/encode(_:from:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseEncoder"},"kind":"symbol","metadata":{"externalID":"s:11Hummingbird17HBResponseEncoderP","title":"HBResponseEncoder","modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseEncoder"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"HBResponseEncoder"}],"role":"symbol"},"seeAlsoSections":[{"title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseCodable"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding"]]},"abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","role":"collection","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"title":"Encoding and Decoding","kind":"article","abstract":[{"type":"text","text":"Hummingbird uses "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" to decode requests and encode responses."}],"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","type":"topic","url":"\/documentation\/hummingbird\/encodinganddecoding"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}],"title":"JSONEncoder","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponseEncoder/encode(_:from:)":{"role":"symbol","required":true,"abstract":[{"type":"text","text":"Encode value returned by handler to request"}],"url":"\/documentation\/hummingbirdlambda\/hbresponseencoder\/encode(_:from:)","title":"encode(_:from:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseEncoder\/encode(_:from:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10HBResponseV"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponseEncoder":{"navigatorTitle":[{"kind":"identifier","text":"HBResponseEncoder"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseEncoder"}],"type":"topic","kind":"symbol","title":"HBResponseEncoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseEncoder","abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"url":"\/documentation\/hummingbirdlambda\/hbresponseencoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/URLEncodedFormEncoder":{"url":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder","navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"title":"URLEncodedFormEncoder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/URLEncodedFormEncoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponseEncodable":{"navigatorTitle":[{"kind":"identifier","text":"HBResponseEncodable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseEncodable"}],"type":"topic","kind":"symbol","title":"HBResponseEncodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseEncodable","abstract":[{"type":"text","text":"Protocol for encodable object that can generate a response. The router will encode"},{"type":"text","text":" "},{"type":"text","text":"the response using the encoder stored in "},{"type":"codeVoice","code":"HBApplication.encoder"},{"type":"text","text":"."}],"url":"\/documentation\/hummingbirdlambda\/hbresponseencodable","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponseCodable":{"navigatorTitle":[{"kind":"identifier","text":"HBResponseCodable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseCodable"}],"type":"topic","kind":"symbol","title":"HBResponseCodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseCodable","abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}],"url":"\/documentation\/hummingbirdlambda\/hbresponsecodable","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestDecoder":{"navigatorTitle":[{"kind":"identifier","text":"HBRequestDecoder"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecoder"}],"type":"topic","kind":"symbol","title":"HBRequestDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecoder","abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}],"url":"\/documentation\/hummingbirdlambda\/hbrequestdecoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponseGenerator":{"title":"HBResponseGenerator","role":"symbol","navigatorTitle":[{"text":"HBResponseGenerator","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","url":"\/documentation\/hummingbirdlambda\/hbresponsegenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]}}}