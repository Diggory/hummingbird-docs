{"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbasyncroutehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncRouteHandler"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"HBRouteHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","preciseIdentifier":"s:11Hummingbird14HBRouteHandlerP"}]}],"kind":"declarations"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"HBAsyncRouteHandler"}],"modules":[{"name":"HummingbirdLambda"}],"externalID":"s:11Hummingbird19HBAsyncRouteHandlerP","symbolKind":"protocol","platforms":[{"beta":false,"deprecated":false,"unavailable":false,"name":"iOS","introducedAt":"13.0"},{"beta":false,"deprecated":false,"unavailable":false,"name":"macOS","introducedAt":"10.15"},{"beta":false,"deprecated":false,"unavailable":false,"name":"tvOS","introducedAt":"13.0"},{"introducedAt":"6.0","deprecated":false,"unavailable":false,"beta":false,"name":"watchOS"}],"role":"symbol","roleHeading":"Protocol","title":"HBAsyncRouteHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncRouteHandler"}]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncCallbackResponder"],"title":"Router"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler\/init(from:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler\/handle(request:)-9isdg"],"title":"Instance Methods"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler"},"abstract":[{"text":"Route Handler using async\/await methods","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterBuilder":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"title":"HBRouterBuilder","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","url":"\/documentation\/hummingbirdlambda\/hbrouterbuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncRouteHandler/handle(request:)-9isdg":{"abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbasyncroutehandler\/handle(request:)-9isdg","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler\/handle(request:)-9isdg","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"_Output2"}],"type":"topic","defaultImplementations":2,"title":"handle(request:)","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncRouteHandler":{"abstract":[{"text":"Route Handler using async\/await methods","type":"text"}],"navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbasyncroutehandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"title":"HBAsyncRouteHandler","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"title":"HBRouterMethodOptions","abstract":[{"type":"text","text":"Options available to routes"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestDecodable":{"type":"topic","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecodable","role":"symbol","title":"HBRequestDecodable","kind":"symbol","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbrequestdecodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncCallbackResponder":{"kind":"symbol","type":"topic","title":"HBAsyncCallbackResponder","role":"symbol","navigatorTitle":[{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbasynccallbackresponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"title":"HBRouterMethods","abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post â€¦) methods"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","url":"\/documentation\/hummingbirdlambda\/hbroutermethods","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponder":{"title":"HBResponder","url":"\/documentation\/hummingbirdlambda\/hbresponder","navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouteHandler":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"title":"HBRouteHandler","abstract":[{"type":"text","text":"Object for handling requests."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","url":"\/documentation\/hummingbirdlambda\/hbroutehandler","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCallbackResponder":{"url":"\/documentation\/hummingbirdlambda\/hbcallbackresponder","title":"HBCallbackResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"title":"HBRouterGroup","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","url":"\/documentation\/hummingbirdlambda\/hbroutergroup","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncRouteHandler/init(from:)":{"kind":"symbol","required":true,"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbasyncroutehandler\/init(from:)","title":"init(from:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler\/init(from:)","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]}}}