{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addChannelHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" () -> ","kind":"text"},{"text":"RemovableChannelHandler","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"handler","content":[{"inlineContent":[{"type":"text","text":"autoclosure generating handler"}],"type":"paragraph"}]},{"name":"position","content":[{"inlineContent":[{"type":"text","text":"position to place channel handler"}],"type":"paragraph"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer"]]},"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbhttpserver\/addchannelhandler(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer\/addChannelHandler(_:)"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Append to list of "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s to be added to server child channels. Need to provide a closure so new instance of these handlers are"},{"type":"text","text":" "},{"type":"text","text":"created for each child channel"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"s:15HummingbirdCore12HBHTTPServerC17addChannelHandleryACXD7NIOCore09RemovableeF0_pyXAF","symbolKind":"method","title":"addChannelHandler(_:)","roleHeading":"Instance Method","modules":[{"name":"HummingbirdCore"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addChannelHandler"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","text":"RemovableChannelHandler"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}],"url":"\/documentation\/hummingbirdcore\/hbhttpserver","abstract":[{"type":"text","text":"HTTP server class"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}],"kind":"symbol","title":"HBHTTPServer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer/addChannelHandler(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addChannelHandler"},{"kind":"text","text":"(() -> "},{"preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","text":"RemovableChannelHandler","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer\/addChannelHandler(_:)","title":"addChannelHandler(_:)","kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpserver\/addchannelhandler(_:)","abstract":[{"type":"text","text":"Append to list of "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to be added to server child channels. Need to provide a closure so new instance of these handlers are"},{"type":"text","text":" "},{"type":"text","text":"created for each child channel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","kind":"symbol","type":"topic","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]}}}