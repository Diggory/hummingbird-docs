{"metadata":{"roleHeading":"Protocol","title":"HBHTTPResponder","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"externalID":"s:15HummingbirdCore15HBHTTPResponderP","modules":[{"name":"HummingbirdCore"}],"role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbhttpresponder"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"relationshipsSections":[{"title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder"],"kind":"relationships","type":"conformingTypes"}],"abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"type":"codeVoice","code":"HBHTTPResponse"},{"text":" from a ","type":"text"},{"type":"codeVoice","code":"HBHTTPRequest"},{"text":".","type":"text"}],"seeAlsoSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the core interface to the HummingbirdCore library. You need to provide an object that conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" when you call "},{"type":"codeVoice","code":"HTTPServer.start"},{"type":"text","text":". This object is used to define how"},{"type":"text","text":" "},{"type":"text","text":"you convert requests to the server into responses."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is an example "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" that replies with a response with body “Hello”. Once you"},{"type":"text","text":" "},{"type":"text","text":"have your response you need to call "},{"type":"codeVoice","code":"onComplete"},{"type":"text","text":"."}]},{"syntax":null,"type":"codeListing","code":["struct HelloResponder: HBHTTPResponder {","    func respond(","        to request: HBHTTPRequest,","        context: ChannelHandlerContext,","        onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void","    ) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"The following will start up a server using the above ","type":"text"},{"type":"codeVoice","code":"HelloResponder"},{"text":".","type":"text"}]},{"syntax":null,"type":"codeListing","code":["let server = HBHTTPServer(","    group: eventLoopGroup,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()"]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder"},"sections":[],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"url":"\/documentation\/hummingbirdcore\/hbhttpresponder","abstract":[{"type":"text","text":"Protocol for objects generating a "},{"type":"codeVoice","code":"HBHTTPResponse"},{"type":"text","text":" from a "},{"type":"codeVoice","code":"HBHTTPRequest"},{"type":"text","text":"."}],"title":"HBHTTPResponder","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/logger-9ouqb":{"abstract":[{"type":"text","text":"Logger used by responder"}],"title":"logger","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb","kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-9ouqb","type":"topic","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"url":"\/documentation\/hummingbirdcore\/http1channelinitializer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"abstract":[{"type":"text","text":"Setup child channel for HTTP1"}],"title":"HTTP1ChannelInitializer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/HTTPResponder":{"navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"abstract":[{"text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/httpresponder","type":"topic","title":"HBApplication.HTTPResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerRemoved(context:)-65gds":{"role":"symbol","title":"handlerRemoved(context:)","type":"topic","defaultImplementations":1,"abstract":[{"type":"text","text":"Called when HTTP server handler is removed from channel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-65gds","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerAdded(context:)-8f1ye":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"abstract":[{"text":"Called when HTTP server handler is added to channel","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-8f1ye","role":"symbol","required":true,"defaultImplementations":1,"kind":"symbol","type":"topic","title":"handlerAdded(context:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"url":"\/documentation\/hummingbirdcore\/hbhttpserver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP server class"}],"title":"HBHTTPServer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBBindAddress":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBindAddress"}],"url":"\/documentation\/hummingbirdcore\/hbbindaddress","type":"topic","role":"symbol","title":"HBBindAddress","abstract":[{"type":"text","text":"Address to bind server to"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBBindAddress"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/respond(to:context:onComplete:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)","abstract":[{"type":"text","text":"Passes request to be responded to and function to call when response is ready. It is required your implementation"},{"type":"text","text":" "},{"type":"text","text":"calls "},{"type":"codeVoice","code":"onComplete"},{"type":"text","text":" otherwise the server will never receive a response"}],"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore13HBHTTPRequestV","text":"HBHTTPRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"onComplete","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore14HBHTTPResponseV","text":"HBHTTPResponse","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/respond(to:context:oncomplete:)","title":"respond(to:context:onComplete:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"title":"HBChannelInitializer","role":"symbol","abstract":[{"type":"text","text":"HTTPServer child channel initializer protocol"}],"navigatorTitle":[{"text":"HBChannelInitializer","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBChannelInitializer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","url":"\/documentation\/hummingbirdcore\/hbchannelinitializer"}}}