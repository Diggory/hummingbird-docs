{"metadata":{"symbolKind":"protocol","externalID":"s:15HummingbirdCore15HBHTTPResponderP","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"title":"HBHTTPResponder","modules":[{"name":"HummingbirdCore"}],"roleHeading":"Protocol","navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/hbhttpresponder"]}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"text":"This is the core interface to the HummingbirdCore library. You need to provide an object that conforms","type":"text"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"type":"codeVoice","code":"HBHTTPResponder"},{"text":" when you call ","type":"text"},{"type":"codeVoice","code":"HTTPServer.start"},{"text":". This object is used to define how","type":"text"},{"text":" ","type":"text"},{"text":"you convert requests to the server into responses.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is an example "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" that replies with a response with body “Hello”. Once you"},{"type":"text","text":" "},{"type":"text","text":"have your response you need to call "},{"type":"codeVoice","code":"onComplete"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["struct HelloResponder: HBHTTPResponder {","    func respond(","        to request: HBHTTPRequest,","        context: ChannelHandlerContext,","        onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void","    ) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"The following will start up a server using the above ","type":"text"},{"code":"HelloResponder","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let server = HBHTTPServer(","    group: eventLoopGroup,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()"],"syntax":null,"type":"codeListing"}]}],"seeAlsoSections":[{"generated":true,"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"relationshipsSections":[{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder"]}],"abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/logger-9ouqb":{"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-9ouqb","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb","abstract":[{"text":"Logger used by responder","type":"text"}],"defaultImplementations":1,"required":true,"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"title":"logger"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerAdded(context:)-8f1ye":{"defaultImplementations":1,"title":"handlerAdded(context:)","role":"symbol","kind":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-8f1ye","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerAdded","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Called when HTTP server handler is added to channel","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"url":"\/documentation\/hummingbirdcore\/http1channelinitializer","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","abstract":[{"text":"Setup child channel for HTTP1","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"title":"HTTP1ChannelInitializer","navigatorTitle":[{"kind":"identifier","text":"HTTP1ChannelInitializer"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/HTTPResponder":{"title":"HBApplication.HTTPResponder","role":"symbol","navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","url":"\/documentation\/hummingbirdlambda\/hbapplication\/httpresponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"type":"topic","abstract":[{"text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"title":"HBChannelInitializer","role":"symbol","navigatorTitle":[{"text":"HBChannelInitializer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBChannelInitializer","kind":"identifier"}],"type":"topic","abstract":[{"text":"HTTPServer child channel initializer protocol","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBBindAddress":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBindAddress","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","title":"HBBindAddress","navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbbindaddress","abstract":[{"type":"text","text":"Address to bind server to"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"url":"\/documentation\/hummingbirdcore\/hbhttpresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"title":"HBHTTPResponder","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerRemoved(context:)-65gds":{"defaultImplementations":1,"title":"handlerRemoved(context:)","role":"symbol","kind":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-65gds","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Called when HTTP server handler is removed from channel","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"title":"HBHTTPServer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","url":"\/documentation\/hummingbirdcore\/hbhttpserver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}],"type":"topic","abstract":[{"text":"HTTP server class","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/respond(to:context:onComplete:)":{"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/respond(to:context:oncomplete:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)","abstract":[{"text":"Passes request to be responded to and function to call when response is ready. It is required your implementation","type":"text"},{"text":" ","type":"text"},{"text":"calls ","type":"text"},{"code":"onComplete","type":"codeVoice"},{"text":" otherwise the server will never receive a response","type":"text"}],"required":true,"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBHTTPRequest","preciseIdentifier":"s:15HummingbirdCore13HBHTTPRequestV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onComplete"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"HBHTTPResponse","preciseIdentifier":"s:15HummingbirdCore14HBHTTPResponseV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"respond(to:context:onComplete:)"}}}