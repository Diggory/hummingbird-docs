{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/hbhttpresponder"]}],"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"This is the core interface to the HummingbirdCore library. You need to provide an object that conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" when you call "},{"type":"codeVoice","code":"HTTPServer.start"},{"type":"text","text":". This object is used to define how"},{"type":"text","text":" "},{"type":"text","text":"you convert requests to the server into responses."}],"type":"paragraph"},{"inlineContent":[{"text":"This is an example ","type":"text"},{"code":"HBHTTPResponder","type":"codeVoice"},{"text":" that replies with a response with body “Hello”. Once you","type":"text"},{"text":" ","type":"text"},{"text":"have your response you need to call ","type":"text"},{"code":"onComplete","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["struct HelloResponder: HBHTTPResponder {","    func respond(","        to request: HBHTTPRequest,","        context: ChannelHandlerContext,","        onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void","    ) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"],"syntax":null},{"inlineContent":[{"type":"text","text":"The following will start up a server using the above "},{"type":"codeVoice","code":"HelloResponder"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["let server = HBHTTPServer(","    group: eventLoopGroup,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()"],"syntax":null}],"kind":"content"}],"seeAlsoSections":[{"title":"Server","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress"]}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)"]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}],"title":"HBHTTPResponder","modules":[{"name":"HummingbirdCore"}],"roleHeading":"Protocol","symbolKind":"protocol","externalID":"s:15HummingbirdCore15HBHTTPResponderP","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}]},"relationshipsSections":[{"title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication\/HTTPResponder"],"kind":"relationships"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","interfaceLanguage":"swift"},"abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/logger-9ouqb":{"abstract":[{"type":"text","text":"Logger used by responder"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"logger","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"}],"defaultImplementations":1,"type":"topic","role":"symbol","title":"logger","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-9ouqb","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","abstract":[{"text":"HTTPServer child channel initializer protocol","type":"text"}],"navigatorTitle":[{"text":"HBChannelInitializer","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","title":"HBChannelInitializer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBChannelInitializer","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","url":"\/documentation\/hummingbirdcore\/hbhttpresponder","title":"HBHTTPResponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/respond(to:context:onComplete:)":{"kind":"symbol","required":true,"title":"respond(to:context:onComplete:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore13HBHTTPRequestV","kind":"typeIdentifier","text":"HBHTTPRequest"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onComplete"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore14HBHTTPResponseV","kind":"typeIdentifier","text":"HBHTTPResponse"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"abstract":[{"text":"Passes request to be responded to and function to call when response is ready. It is required your implementation","type":"text"},{"text":" ","type":"text"},{"text":"calls ","type":"text"},{"type":"codeVoice","code":"onComplete"},{"text":" otherwise the server will never receive a response","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/respond(to:context:oncomplete:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerAdded(context:)-8f1ye":{"abstract":[{"text":"Called when HTTP server handler is added to channel","type":"text"}],"kind":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerAdded","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-8f1ye","role":"symbol","title":"handlerAdded(context:)","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplication/HTTPResponder":{"title":"HBApplication.HTTPResponder","url":"\/documentation\/hummingbird\/hbapplication\/httpresponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"abstract":[{"type":"text","text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication\/HTTPResponder","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"title":"HBBindAddress","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"HBBindAddress","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbbindaddress","type":"topic","abstract":[{"text":"Address to bind server to","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerRemoved(context:)-65gds":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"role":"symbol","title":"handlerRemoved(context:)","abstract":[{"text":"Called when HTTP server handler is removed from channel","type":"text"}],"defaultImplementations":1,"type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-65gds","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","required":true,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"HTTP server class"}],"url":"\/documentation\/hummingbirdcore\/hbhttpserver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","title":"HBHTTPServer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","url":"\/documentation\/hummingbirdcore\/http1channelinitializer","title":"HTTP1ChannelInitializer","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"abstract":[{"type":"text","text":"Setup child channel for HTTP1"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection"}}}