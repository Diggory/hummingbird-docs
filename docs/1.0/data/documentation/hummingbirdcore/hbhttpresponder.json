{"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbhttpresponder"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Server","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"This is the core interface to the HummingbirdCore library. You need to provide an object that conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" when you call "},{"type":"codeVoice","code":"HTTPServer.start"},{"type":"text","text":". This object is used to define how"},{"type":"text","text":" "},{"type":"text","text":"you convert requests to the server into responses."}],"type":"paragraph"},{"inlineContent":[{"text":"This is an example ","type":"text"},{"code":"HBHTTPResponder","type":"codeVoice"},{"text":" that replies with a response with body “Hello”. Once you","type":"text"},{"text":" ","type":"text"},{"text":"have your response you need to call ","type":"text"},{"code":"onComplete","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["struct HelloResponder: HBHTTPResponder {","    func respond(","        to request: HBHTTPRequest,","        context: ChannelHandlerContext,","        onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void","    ) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"]},{"inlineContent":[{"text":"The following will start up a server using the above ","type":"text"},{"code":"HelloResponder","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let server = HBHTTPServer(","    group: eventLoopGroup,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()"]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)"]}],"abstract":[{"type":"text","text":"Protocol for objects generating a "},{"type":"codeVoice","code":"HBHTTPResponse"},{"type":"text","text":" from a "},{"type":"codeVoice","code":"HBHTTPRequest"},{"type":"text","text":"."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder"},"relationshipsSections":[{"type":"conformingTypes","title":"Conforming Types","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBApplication\/HTTPResponder"]}],"kind":"symbol","metadata":{"externalID":"s:15HummingbirdCore15HBHTTPResponderP","title":"HBHTTPResponder","symbolKind":"protocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"roleHeading":"Protocol","modules":[{"name":"HummingbirdCore"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerRemoved(context:)-65gds":{"type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-65gds","defaultImplementations":1,"abstract":[{"type":"text","text":"Called when HTTP server handler is removed from channel"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"title":"handlerRemoved(context:)","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/http1channelinitializer","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","title":"HTTP1ChannelInitializer","navigatorTitle":[{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"type":"topic","abstract":[{"text":"Setup child channel for HTTP1","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerAdded(context:)-8f1ye":{"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-8f1ye","abstract":[{"type":"text","text":"Called when HTTP server handler is added to channel"}],"kind":"symbol","required":true,"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","title":"handlerAdded(context:)","defaultImplementations":1,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerAdded","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"title":"HBHTTPResponder","navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","url":"\/documentation\/hummingbirdcore\/hbhttpresponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Protocol for objects generating a "},{"type":"codeVoice","code":"HBHTTPResponse"},{"type":"text","text":" from a "},{"type":"codeVoice","code":"HBHTTPRequest"},{"type":"text","text":"."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"type":"topic","title":"HBChannelInitializer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBChannelInitializer","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","role":"symbol","navigatorTitle":[{"text":"HBChannelInitializer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","kind":"symbol","abstract":[{"text":"HTTPServer child channel initializer protocol","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","kind":"symbol","type":"topic","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/respond(to:context:onComplete:)":{"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/respond(to:context:oncomplete:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore13HBHTTPRequestV","text":"HBHTTPRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"onComplete","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"HBHTTPResponse","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore14HBHTTPResponseV"},{"text":", ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"type":"topic","title":"respond(to:context:onComplete:)","required":true,"kind":"symbol","abstract":[{"type":"text","text":"Passes request to be responded to and function to call when response is ready. It is required your implementation"},{"type":"text","text":" "},{"type":"text","text":"calls "},{"code":"onComplete","type":"codeVoice"},{"text":" otherwise the server will never receive a response","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/logger-9ouqb":{"required":true,"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-9ouqb","abstract":[{"type":"text","text":"Logger used by responder"}],"role":"symbol","title":"logger","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb","defaultImplementations":1,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBApplication/HTTPResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBApplication\/HTTPResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"url":"\/documentation\/hummingbirdfoundation\/hbapplication\/httpresponder","title":"HBApplication.HTTPResponder","role":"symbol","abstract":[{"text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBBindAddress":{"title":"HBBindAddress","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBindAddress","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","url":"\/documentation\/hummingbirdcore\/hbbindaddress","type":"topic","navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"abstract":[{"text":"Address to bind server to","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}],"url":"\/documentation\/hummingbirdcore\/hbhttpserver","abstract":[{"type":"text","text":"HTTP server class"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}],"kind":"symbol","title":"HBHTTPServer"}}}