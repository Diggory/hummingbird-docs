{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbhttpresponder"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"HBHTTPResponder","modules":[{"name":"HummingbirdCore"}],"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBHTTPResponder","kind":"identifier"}],"role":"symbol","externalID":"s:15HummingbirdCore15HBHTTPResponderP","roleHeading":"Protocol","navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}]},"kind":"symbol","abstract":[{"type":"text","text":"Protocol for objects generating a "},{"code":"HBHTTPResponse","type":"codeVoice"},{"type":"text","text":" from a "},{"code":"HBHTTPRequest","type":"codeVoice"},{"type":"text","text":"."}],"relationshipsSections":[{"type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication\/HTTPResponder"],"title":"Conforming Types","kind":"relationships"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)"],"title":"Instance Methods"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"languages":["swift"]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This is the core interface to the HummingbirdCore library. You need to provide an object that conforms","type":"text"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"code":"HBHTTPResponder","type":"codeVoice"},{"text":" when you call ","type":"text"},{"code":"HTTPServer.start","type":"codeVoice"},{"text":". This object is used to define how","type":"text"},{"text":" ","type":"text"},{"text":"you convert requests to the server into responses.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This is an example ","type":"text"},{"code":"HBHTTPResponder","type":"codeVoice"},{"text":" that replies with a response with body “Hello”. Once you","type":"text"},{"text":" ","type":"text"},{"text":"have your response you need to call ","type":"text"},{"code":"onComplete","type":"codeVoice"},{"text":".","type":"text"}]},{"code":["struct HelloResponder: HBHTTPResponder {","    func respond(","        to request: HBHTTPRequest,","        context: ChannelHandlerContext,","        onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void","    ) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following will start up a server using the above "},{"code":"HelloResponder","type":"codeVoice"},{"type":"text","text":"."}]},{"code":["let server = HBHTTPServer(","    group: eventLoopGroup,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress"],"title":"Server"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerRemoved(context:)-65gds":{"kind":"symbol","abstract":[{"type":"text","text":"Called when HTTP server handler is removed from channel"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"handlerRemoved(context:)","role":"symbol","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-65gds","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/respond(to:context:onComplete:)":{"kind":"symbol","abstract":[{"type":"text","text":"Passes request to be responded to and function to call when response is ready. It is required your implementation"},{"type":"text","text":" "},{"text":"calls ","type":"text"},{"code":"onComplete","type":"codeVoice"},{"type":"text","text":" otherwise the server will never receive a response"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore13HBHTTPRequestV","text":"HBHTTPRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"onComplete","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore14HBHTTPResponseV","text":"HBHTTPResponse","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"respond(to:context:onComplete:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/respond(to:context:oncomplete:)","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerAdded(context:)-8f1ye":{"kind":"symbol","abstract":[{"type":"text","text":"Called when HTTP server handler is added to channel"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerAdded","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"handlerAdded(context:)","role":"symbol","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-8f1ye","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBBindAddress":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBindAddress"}],"abstract":[{"text":"Address to bind server to","type":"text"}],"url":"\/documentation\/hummingbirdcore\/hbbindaddress","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBBindAddress"}],"title":"HBBindAddress"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Protocol for objects generating a "},{"code":"HBHTTPResponse","type":"codeVoice"},{"type":"text","text":" from a "},{"code":"HBHTTPRequest","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBHTTPResponder","kind":"identifier"}],"title":"HBHTTPResponder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"navigatorTitle":[{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Setup child channel for HTTP1"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"title":"HTTP1ChannelInitializer","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","type":"topic","url":"\/documentation\/hummingbirdcore\/http1channelinitializer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"navigatorTitle":[{"text":"HBChannelInitializer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"HTTPServer child channel initializer protocol"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBChannelInitializer","kind":"identifier"}],"title":"HBChannelInitializer","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","type":"topic","url":"\/documentation\/hummingbirdcore\/hbchannelinitializer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/logger-9ouqb":{"title":"logger","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-9ouqb","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb","role":"symbol","abstract":[{"text":"Logger used by responder","type":"text"}],"required":true,"defaultImplementations":1,"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBApplication/HTTPResponder":{"title":"HBApplication.HTTPResponder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication\/HTTPResponder","abstract":[{"type":"text","text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore"}],"url":"\/documentation\/hummingbirdauth\/hbapplication\/httpresponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"abstract":[{"text":"HTTP server class","type":"text"}],"type":"topic","title":"HBHTTPServer","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpserver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}]}}}