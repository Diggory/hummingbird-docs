{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder"},"abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"type":"codeVoice","code":"HBHTTPResponse"},{"text":" from a ","type":"text"},{"type":"codeVoice","code":"HBHTTPRequest"},{"text":".","type":"text"}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdcore\/hbhttpresponder"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"This is the core interface to the HummingbirdCore library. You need to provide an object that conforms","type":"text"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"code":"HBHTTPResponder","type":"codeVoice"},{"text":" when you call ","type":"text"},{"code":"HTTPServer.start","type":"codeVoice"},{"text":". This object is used to define how","type":"text"},{"text":" ","type":"text"},{"text":"you convert requests to the server into responses.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is an example "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" that replies with a response with body “Hello”. Once you"},{"type":"text","text":" "},{"type":"text","text":"have your response you need to call "},{"type":"codeVoice","code":"onComplete"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["struct HelloResponder: HBHTTPResponder {","    func respond(","        to request: HBHTTPRequest,","        context: ChannelHandlerContext,","        onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void","    ) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The following will start up a server using the above "},{"type":"codeVoice","code":"HelloResponder"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let server = HBHTTPServer(","    group: eventLoopGroup,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()"],"syntax":null,"type":"codeListing"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress"],"generated":true,"title":"Server"}],"metadata":{"symbolKind":"protocol","navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"roleHeading":"Protocol","modules":[{"name":"HummingbirdCore"}],"externalID":"s:15HummingbirdCore15HBHTTPResponderP","title":"HBHTTPResponder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"role":"symbol"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)"],"title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBApplication\/HTTPResponder"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"type":"topic","title":"HBHTTPServer","url":"\/documentation\/hummingbirdcore\/hbhttpserver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP server class"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBApplication/HTTPResponder":{"abstract":[{"type":"text","text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore"}],"title":"HBApplication.HTTPResponder","url":"\/documentation\/hummingbirdfoundation\/hbapplication\/httpresponder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBApplication\/HTTPResponder","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"navigatorTitle":[{"text":"HBChannelInitializer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","role":"symbol","type":"topic","title":"HBChannelInitializer","url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","abstract":[{"text":"HTTPServer child channel initializer protocol","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBChannelInitializer","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerAdded(context:)-8f1ye":{"abstract":[{"text":"Called when HTTP server handler is added to channel","type":"text"}],"kind":"symbol","role":"symbol","defaultImplementations":1,"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-8f1ye","title":"handlerAdded(context:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerAdded","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/logger-9ouqb":{"type":"topic","kind":"symbol","title":"logger","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"required":true,"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-9ouqb","defaultImplementations":1,"abstract":[{"type":"text","text":"Logger used by responder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/respond(to:context:onComplete:)":{"title":"respond(to:context:onComplete:)","abstract":[{"text":"Passes request to be responded to and function to call when response is ready. It is required your implementation","type":"text"},{"text":" ","type":"text"},{"text":"calls ","type":"text"},{"type":"codeVoice","code":"onComplete"},{"text":" otherwise the server will never receive a response","type":"text"}],"kind":"symbol","required":true,"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/respond(to:context:oncomplete:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore13HBHTTPRequestV","text":"HBHTTPRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onComplete"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore14HBHTTPResponseV","kind":"typeIdentifier","text":"HBHTTPResponse"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerRemoved(context:)-65gds":{"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-65gds","role":"symbol","title":"handlerRemoved(context:)","defaultImplementations":1,"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Called when HTTP server handler is removed from channel","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponder","title":"HBHTTPResponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection","url":"\/documentation\/hummingbirdcore","kind":"symbol","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"navigatorTitle":[{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","title":"HTTP1ChannelInitializer","type":"topic","url":"\/documentation\/hummingbirdcore\/http1channelinitializer","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"abstract":[{"text":"Setup child channel for HTTP1","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","abstract":[{"type":"text","text":"Address to bind server to"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbbindaddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBindAddress"}],"kind":"symbol","title":"HBBindAddress","navigatorTitle":[{"kind":"identifier","text":"HBBindAddress"}]}}}