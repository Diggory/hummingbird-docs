{"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress"],"generated":true,"title":"Server"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"inlineContent":[{"text":"This is the core interface to the HummingbirdCore library. You need to provide an object that conforms","type":"text"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"code":"HBHTTPResponder","type":"codeVoice"},{"text":" when you call ","type":"text"},{"code":"HTTPServer.start","type":"codeVoice"},{"text":". This object is used to define how","type":"text"},{"text":" ","type":"text"},{"text":"you convert requests to the server into responses.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This is an example "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" that replies with a response with body “Hello”. Once you"},{"type":"text","text":" "},{"type":"text","text":"have your response you need to call "},{"type":"codeVoice","code":"onComplete"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["struct HelloResponder: HBHTTPResponder {","    func respond(","        to request: HBHTTPRequest,","        context: ChannelHandlerContext,","        onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void","    ) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"]},{"inlineContent":[{"type":"text","text":"The following will start up a server using the above "},{"type":"codeVoice","code":"HelloResponder"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["let server = HBHTTPServer(","    group: eventLoopGroup,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()"],"syntax":null}]}],"kind":"symbol","abstract":[{"type":"text","text":"Protocol for objects generating a "},{"type":"codeVoice","code":"HBHTTPResponse"},{"type":"text","text":" from a "},{"type":"codeVoice","code":"HBHTTPRequest"},{"type":"text","text":"."}],"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbhttpresponder"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication\/HTTPResponder"],"kind":"relationships","title":"Conforming Types"}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}],"externalID":"s:15HummingbirdCore15HBHTTPResponderP","roleHeading":"Protocol","title":"HBHTTPResponder","symbolKind":"protocol","modules":[{"name":"HummingbirdCore"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)"],"title":"Instance Methods"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","kind":"symbol","title":"HummingbirdCore","type":"topic","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBApplication/HTTPResponder":{"abstract":[{"type":"text","text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"type":"topic","title":"HBApplication.HTTPResponder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication\/HTTPResponder","url":"\/documentation\/hummingbirdauth\/hbapplication\/httpresponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerAdded(context:)-8f1ye":{"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-8f1ye","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","abstract":[{"type":"text","text":"Called when HTTP server handler is added to channel"}],"title":"handlerAdded(context:)","role":"symbol","type":"topic","required":true,"defaultImplementations":1,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/logger-9ouqb":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb","defaultImplementations":1,"title":"logger","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"}],"type":"topic","abstract":[{"type":"text","text":"Logger used by responder"}],"required":true,"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-9ouqb","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBindAddress","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","title":"HBBindAddress","role":"symbol","url":"\/documentation\/hummingbird\/hbbindaddress","abstract":[{"text":"Address to bind server to","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerRemoved(context:)-65gds":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerRemoved"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Called when HTTP server handler is removed from channel"}],"kind":"symbol","type":"topic","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","title":"handlerRemoved(context:)","required":true,"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-65gds"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","title":"HBHTTPResponder","abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"url":"\/documentation\/hummingbirdcore\/hbhttpresponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"abstract":[{"text":"HTTP server class","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}],"type":"topic","title":"HBHTTPServer","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","url":"\/documentation\/hummingbirdcore\/hbhttpserver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/respond(to:context:onComplete:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore13HBHTTPRequestV","text":"HBHTTPRequest"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onComplete"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore14HBHTTPResponseV","text":"HBHTTPResponse"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Passes request to be responded to and function to call when response is ready. It is required your implementation"},{"type":"text","text":" "},{"type":"text","text":"calls "},{"type":"codeVoice","code":"onComplete"},{"type":"text","text":" otherwise the server will never receive a response"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)","title":"respond(to:context:onComplete:)","required":true,"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/respond(to:context:oncomplete:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBChannelInitializer"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","title":"HBChannelInitializer","type":"topic","abstract":[{"text":"HTTPServer child channel initializer protocol","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBChannelInitializer"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"url":"\/documentation\/hummingbirdcore\/http1channelinitializer","abstract":[{"text":"Setup child channel for HTTP1","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","title":"HTTP1ChannelInitializer"}}}