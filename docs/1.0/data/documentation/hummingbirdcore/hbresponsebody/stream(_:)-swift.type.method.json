{"metadata":{"symbolKind":"method","title":"stream(_:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stream"},{"kind":"text","text":"("},{"preciseIdentifier":"s:15HummingbirdCore18HBStreamerProtocolP","kind":"typeIdentifier","text":"HBStreamerProtocol"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyO","kind":"typeIdentifier","text":"HBResponseBody"}],"externalID":"s:15HummingbirdCore14HBResponseBodyO6streamyAcA18HBStreamerProtocol_pFZ","modules":[{"name":"HummingbirdCore"}],"roleHeading":"Type Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stream"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"streamer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamerProtocol","text":"HBStreamerProtocol","preciseIdentifier":"s:15HummingbirdCore18HBStreamerProtocolP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","text":"HBResponseBody","preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyO"}]}]},{"kind":"parameters","parameters":[{"name":"closure","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Closure called whenever a new ByteBuffer is needed"}]}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function should supply "},{"type":"codeVoice","code":".byteBuffer(ByteBuffer)"},{"type":"text","text":" until there is no more data, at which"},{"type":"text","text":" "},{"type":"text","text":"point is should return "},{"type":"codeVoice","code":"'end"},{"type":"text","text":"."}]}]}],"abstract":[{"text":"Construct a ","type":"text"},{"type":"codeVoice","code":"HBResponseBody"},{"text":" from a closure supplying ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":"’s.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody"]]},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody\/stream(_:)-swift.type.method","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbresponsebody\/stream(_:)-swift.type.method"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody/stream(_:)-swift.type.method":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18HBStreamerProtocolP","text":"HBStreamerProtocol","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyO","kind":"typeIdentifier","text":"HBResponseBody"}],"url":"\/documentation\/hummingbirdcore\/hbresponsebody\/stream(_:)-swift.type.method","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody\/stream(_:)-swift.type.method","kind":"symbol","role":"symbol","title":"stream(_:)","abstract":[{"type":"text","text":"Construct a "},{"code":"HBResponseBody","type":"codeVoice"},{"type":"text","text":" from a closure supplying "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":"’s."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamerProtocol":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerProtocol"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamerProtocol","title":"HBStreamerProtocol","navigatorTitle":[{"kind":"identifier","text":"HBStreamerProtocol"}],"url":"\/documentation\/hummingbirdcore\/hbstreamerprotocol","role":"symbol","abstract":[{"type":"text","text":"Protocol for objects providing a stream of ByteBuffers"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody":{"abstract":[{"type":"text","text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponseBody"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbresponsebody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","title":"HBResponseBody","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseBody"}],"role":"symbol"}}}