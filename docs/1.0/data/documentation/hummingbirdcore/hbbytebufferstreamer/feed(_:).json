{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Feed a ByteBuffer to the request"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"feed"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore20HBByteBufferStreamerC9FeedInputO","text":"FeedInput"},{"kind":"text","text":")"}],"title":"feed(_:)","role":"symbol","modules":[{"name":"HummingbirdCore"}],"roleHeading":"Instance Method","externalID":"s:15HummingbirdCore20HBByteBufferStreamerC4feedyyAC9FeedInputOF","symbolKind":"method"},"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/feed(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"feed"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"result"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore20HBByteBufferStreamerC9FeedInputO","kind":"typeIdentifier","text":"FeedInput","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer\/FeedInput"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Bytebuffer or end tag","type":"text"}]}],"name":"result"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer\/feed(_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection","title":"HummingbirdCore","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer/feed(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"feed","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FeedInput","preciseIdentifier":"s:15HummingbirdCore20HBByteBufferStreamerC9FeedInputO","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer\/feed(_:)","url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/feed(_:)","title":"feed(_:)","abstract":[{"text":"Feed a ByteBuffer to the request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer/FeedInput":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer\/FeedInput","title":"HBByteBufferStreamer.FeedInput","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FeedInput","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer\/feedinput","type":"topic","abstract":[{"text":"Values we can feed the streamer with","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"FeedInput","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBByteBufferStreamer","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer","title":"HBByteBufferStreamer","abstract":[{"text":"Request body streamer. ","type":"text"},{"code":"HBHTTPDecodeHandler","type":"codeVoice"},{"text":" feeds this with ByteBuffers while the Router consumes them","type":"text"}],"navigatorTitle":[{"text":"HBByteBufferStreamer","kind":"identifier"}]}}}