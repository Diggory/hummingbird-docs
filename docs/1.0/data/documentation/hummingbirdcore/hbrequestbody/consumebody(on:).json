{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(on:)"]}],"metadata":{"symbolKind":"method","modules":[{"name":"HummingbirdCore"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":"?>"}],"roleHeading":"Instance Method","platforms":[],"title":"consumeBody(on:)","role":"symbol","externalID":"s:15HummingbirdCore13HBRequestBodyO07consumeD02on7NIOCore15EventLoopFutureCyAF10ByteBufferVSgGAF0hI0_p_tF"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":"?>"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"EventLoop to use","type":"text"}]}],"name":"eventLoop"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"EventLoopFuture that will be fulfilled with ByteBuffer. If no body is include then return ","type":"text"},{"code":"nil","type":"codeVoice"}],"type":"paragraph"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Provide body as a single ByteBuffer"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/consumeBody(on:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use the version of `consumeBody` which sets a maximum size for the resultant ByteBuffer","type":"text"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbrequestbody","type":"topic","title":"HBRequestBody","abstract":[{"text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody/consumeBody(on:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":"?>"}],"kind":"symbol","abstract":[{"text":"Provide body as a single ByteBuffer","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/consumeBody(on:)","url":"\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(on:)","deprecated":true,"type":"topic","role":"symbol","title":"consumeBody(on:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore"}}}