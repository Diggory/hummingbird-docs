{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":"?>"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"eventLoop","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"EventLoop to use"}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"EventLoopFuture that will be fulfilled with ByteBuffer. If no body is include then return ","type":"text"},{"code":"nil","type":"codeVoice"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/consumeBody(on:)"},"abstract":[{"text":"Provide body as a single ByteBuffer","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(on:)"]}],"deprecationSummary":[{"inlineContent":[{"text":"Use the version of `consumeBody` which sets a maximum size for the resultant ByteBuffer","type":"text"}],"type":"paragraph"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":"?>"}],"platforms":[],"role":"symbol","externalID":"s:15HummingbirdCore13HBRequestBodyO07consumeD02on7NIOCore15EventLoopFutureCyAF10ByteBufferVSgGAF0hI0_p_tF","modules":[{"name":"HummingbirdCore"}],"title":"consumeBody(on:)"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody/consumeBody(on:)":{"title":"consumeBody(on:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/consumeBody(on:)","abstract":[{"type":"text","text":"Provide body as a single ByteBuffer"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"deprecated":true,"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(on:)","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"url":"\/documentation\/hummingbirdcore","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","type":"topic","navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer","type":"text"}],"url":"\/documentation\/hummingbirdcore\/hbrequestbody","kind":"symbol","title":"HBRequestBody"}}}