{"sections":[],"metadata":{"externalID":"s:15HummingbirdCore13HBRequestBodyO07consumeD07maxSize7NIOCore10ByteBufferVSgSi_tYaKF","symbolKind":"method","role":"symbol","title":"consumeBody(maxSize:)","modules":[{"name":"HummingbirdCore"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","platforms":[{"name":"iOS","introducedAt":"13.0","beta":false,"deprecated":false,"unavailable":false},{"name":"macOS","introducedAt":"10.15","beta":false,"deprecated":false,"unavailable":false},{"name":"tvOS","introducedAt":"13.0","beta":false,"deprecated":false,"unavailable":false},{"name":"watchOS","introducedAt":"6.0","beta":false,"deprecated":false,"unavailable":false}],"extendedModule":"HummingbirdCore"},"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(maxsize:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":"?"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"EventLoopFuture that will be fulfilled with ByteBuffer. If no body is include then return ","type":"text"},{"code":"nil","type":"codeVoice"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Parameters"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"maxSize: Maximum size of ByteBuffer to generate","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"eventLoop: EventLoop to use","type":"text"}]}]}]}]}],"type":"unorderedList"}],"kind":"content"}],"abstract":[{"type":"text","text":"Provide body as a single ByteBuffer"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/consumeBody(maxSize:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody/consumeBody(maxSize:)":{"title":"consumeBody(maxSize:)","abstract":[{"text":"Provide body as a single ByteBuffer","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/consumeBody(maxSize:)","url":"\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(maxsize:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":"?"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"abstract":[{"text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer","type":"text"}],"navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbrequestbody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","title":"HBRequestBody","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"role":"symbol"}}}