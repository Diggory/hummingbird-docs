{"abstract":[{"text":"Provide body as a single ByteBuffer","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":"?"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"EventLoopFuture that will be fulfilled with ByteBuffer. If no body is include then return "},{"code":"nil","type":"codeVoice"}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Parameters","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"maxSize: Maximum size of ByteBuffer to generate","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"eventLoop: EventLoop to use","type":"text"}]}]}],"type":"unorderedList"}]}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody"]]},"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(maxsize:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"HummingbirdCore"}],"extendedModule":"HummingbirdCore","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"consumeBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":"?"}],"symbolKind":"method","externalID":"s:15HummingbirdCore13HBRequestBodyO07consumeD07maxSize7NIOCore10ByteBufferVSgSi_tYaKF","platforms":[{"unavailable":false,"deprecated":false,"introducedAt":"13.0","beta":false,"name":"iOS"},{"unavailable":false,"deprecated":false,"introducedAt":"10.15","beta":false,"name":"macOS"},{"unavailable":false,"deprecated":false,"introducedAt":"13.0","beta":false,"name":"tvOS"},{"unavailable":false,"deprecated":false,"introducedAt":"6.0","beta":false,"name":"watchOS"}],"role":"symbol","roleHeading":"Instance Method","title":"consumeBody(maxSize:)"},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/consumeBody(maxSize:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody/consumeBody(maxSize:)":{"url":"\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(maxsize:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeBody","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"maxSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/consumeBody(maxSize:)","title":"consumeBody(maxSize:)","abstract":[{"type":"text","text":"Provide body as a single ByteBuffer"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbrequestbody","kind":"symbol","abstract":[{"text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer","type":"text"}],"type":"topic","title":"HBRequestBody","navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","kind":"symbol","type":"topic","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]}}}