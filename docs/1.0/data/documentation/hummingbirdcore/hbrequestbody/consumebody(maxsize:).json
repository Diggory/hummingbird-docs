{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody"]]},"metadata":{"roleHeading":"Instance Method","extendedModule":"HummingbirdCore","symbolKind":"method","modules":[{"name":"HummingbirdCore"}],"role":"symbol","externalID":"s:15HummingbirdCore13HBRequestBodyO07consumeD07maxSize7NIOCore10ByteBufferVSgSi_tYaKF","platforms":[{"unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false,"name":"iOS"},{"unavailable":false,"introducedAt":"10.15","deprecated":false,"beta":false,"name":"macOS"},{"unavailable":false,"introducedAt":"13.0","deprecated":false,"beta":false,"name":"tvOS"},{"unavailable":false,"introducedAt":"6.0","deprecated":false,"beta":false,"name":"watchOS"}],"title":"consumeBody(maxSize:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"abstract":[{"type":"text","text":"Provide body as a single ByteBuffer"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(maxsize:)"]}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/consumeBody(maxSize:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"EventLoopFuture that will be fulfilled with ByteBuffer. If no body is include then return ","type":"text"},{"code":"nil","type":"codeVoice"}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Parameters","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"maxSize: Maximum size of ByteBuffer to generate"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"eventLoop: EventLoop to use","type":"text"}]}]}]}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody/consumeBody(maxSize:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Provide body as a single ByteBuffer"}],"title":"consumeBody(maxSize:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/consumeBody(maxSize:)","url":"\/documentation\/hummingbirdcore\/hbrequestbody\/consumebody(maxsize:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"abstract":[{"type":"text","text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer"}],"title":"HBRequestBody","navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","url":"\/documentation\/hummingbirdcore\/hbrequestbody"}}}