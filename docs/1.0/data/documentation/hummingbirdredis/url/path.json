{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/path","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The path, or an empty string if the URL has an empty path."}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the URL contains a parameter string, it is appended to the path with a "},{"code":";","type":"codeVoice"},{"type":"text","text":"."}]},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"This function will resolve against the base "},{"code":"URL","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"path","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"modules":[{"name":"HummingbirdRedis"}],"roleHeading":"Instance Property","title":"path","symbolKind":"property","externalID":"s:10Foundation3URLV4pathSSvp","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/url\/path"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL"]]},"sections":[],"abstract":[{"text":"If the URL conforms to RFC 1808 (the most common form of URL), returns the path component of the URL; otherwise it returns an empty string.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL/path":{"abstract":[{"type":"text","text":"If the URL conforms to RFC 1808 (the most common form of URL), returns the path component of the URL; otherwise it returns an empty string."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"url":"\/documentation\/hummingbirdredis\/url\/path","role":"symbol","title":"path","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/path","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"URL"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URL"}],"url":"\/documentation\/hummingbirdredis\/url","abstract":[{"type":"text","text":"A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data."}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","title":"URL"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","kind":"symbol","title":"HummingbirdRedis","type":"topic","url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}]}}}