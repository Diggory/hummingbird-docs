{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__tSERd__lF5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The key to use to uniquely identify this value.","type":"text"}],"type":"paragraph"}],"name":"key"},{"content":[{"inlineContent":[{"type":"text","text":"The value to set the key to."}],"type":"paragraph"}],"name":"value"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that resolves if the operation was successful."}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Any previous expiration set on the key is discarded if the SET operation was successful.","type":"text"}]},{"style":"important","type":"aside","name":"Important","content":[{"inlineContent":[{"text":"Regardless of the type of value stored at the key, it will be overwritten to a string value.","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/redis.io\/commands\/set","type":"reference","isActive":true}]}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Sets the value stored in the key provided, overwriting the previous value."}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup\/set(_:toJSON:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup\/RedisClient-Implementations"]]},"metadata":{"modules":[{"relatedModules":["RediStack"],"name":"HummingbirdRedis"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__tSERd__lF5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"RediStack","externalID":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__tSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B19ConnectionPoolGroupV","roleHeading":"Instance Method","role":"symbol","title":"set(_:toJSON:)","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/set(_:tojson:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroup/RedisClient-Implementations":{"title":"RedisClient Implementations","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup\/RedisClient-Implementations","abstract":[],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/redisclient-implementations"},"https://redis.io/commands/set":{"title":"https:\/\/redis.io\/commands\/set","identifier":"https:\/\/redis.io\/commands\/set","type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/redis.io\/commands\/set"}],"url":"https:\/\/redis.io\/commands\/set"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroup/set(_:toJSON:)":{"type":"topic","kind":"symbol","title":"set(_:toJSON:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"RedisKey","preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__tSERd__lF5ValueL_qd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup\/set(_:toJSON:)","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup\/set(_:tojson:)","abstract":[{"text":"Sets the value stored in the key provided, overwriting the previous value.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"kind":"symbol","url":"\/documentation\/hummingbirdredis","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroup":{"title":"RedisConnectionPoolGroup","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolGroup"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","abstract":[{"type":"text","text":"Store Redis connection pool array for an EventLoopGroup."}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup"}}}