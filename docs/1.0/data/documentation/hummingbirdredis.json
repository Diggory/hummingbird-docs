{"metadata":{"role":"collection","title":"HummingbirdRedis","modules":[{"name":"HummingbirdRedis"}],"externalID":"HummingbirdRedis","roleHeading":"Framework","symbolKind":"module"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupArray"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupIdentifier"]}],"variants":[{"paths":["\/documentation\/hummingbirdredis"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"First you need to create a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","isActive":true,"type":"reference"},{"type":"text","text":" for your "},{"code":"EventLoopGroup","type":"codeVoice"},{"type":"text","text":". This creates a connection pool for each "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" in your "},{"code":"EventLoopGroup","type":"codeVoice"},{"type":"text","text":". When you want to send a command you ask the "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","isActive":true,"type":"reference"},{"type":"text","text":" for the connection pool for the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" you are running on and then call your command."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Initialize a Redis Connection Pool for each EventLoop","let redisConnectionPoolGroup = try RedisConnectionPoolGroup(","    configuration: .init(hostname: Self.redisHostname, port: 6379),","    eventLoopGroup: app.eventLoopGroup,","    logger: app.logger",")","\/\/ Get Redis connection","let redis = redisConnectionPoolGroup.pool(for: eventLoop)","try await redis.set(\"Test\", to: \"hello\").get()"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Alternatively you can access a Redis connection pool via "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","isActive":true},{"type":"text","text":" if you add the connection pool group to your "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["try app.addRedis(","    configuration: .init(hostname: Self.redisHostname, port: 6379)",")","\/\/ Add route that returns contents of Redis INFO command","app.router.get(\"redis\") { req in","    req.redis.send(command: \"INFO\").map(\\.description)","}"],"syntax":"swift"}],"kind":"content"}],"sections":[],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroupArray":{"title":"RedisConnectionPoolGroupArray","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupArray","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgrouparray","kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolGroupArray"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolGroupArray"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"title":"HBRequest","url":"\/documentation\/hummingbirdlambda\/hbrequest","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","url":"\/documentation\/hummingbirdredis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisPersistDriver":{"type":"topic","url":"\/documentation\/hummingbirdredis\/hbredispersistdriver","abstract":[{"type":"text","text":"Redis driver for persist system for storing persistent cross request key\/value pairs"}],"role":"symbol","title":"HBRedisPersistDriver","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisPersistDriver","navigatorTitle":[{"kind":"identifier","text":"HBRedisPersistDriver"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisPersistDriver"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroup":{"title":"RedisConnectionPoolGroup","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolGroup"}],"abstract":[{"type":"text","text":"Store Redis connection pool array for an EventLoopGroup."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolGroup"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConfiguration":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBRedisConfiguration","kind":"identifier"}],"abstract":[],"title":"HBRedisConfiguration","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration","url":"\/documentation\/hummingbirdredis\/hbredisconfiguration","navigatorTitle":[{"text":"HBRedisConfiguration","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroupIdentifier":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolGroupIdentifier"}],"navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolGroupIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupIdentifier","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier","type":"topic","abstract":[],"title":"RedisConnectionPoolGroupIdentifier","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"title":"HBApplication","abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","url":"\/documentation\/hummingbirdlambda\/hbapplication","role":"symbol"}}}