{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupArray"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/Logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis"]}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First you need to create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup"},{"type":"text","text":" for your "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". This creates a connection pool for each "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" in your "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". When you want to send a command you ask the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup"},{"type":"text","text":" for the connection pool for the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" you are running on and then call your command."}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Initialize a Redis Connection Pool for each EventLoop","let redisConnectionPoolGroup = try RedisConnectionPoolGroup(","    configuration: .init(hostname: Self.redisHostname, port: 6379),","    eventLoopGroup: app.eventLoopGroup,","    logger: app.logger",")","\/\/ Get Redis connection","let redis = redisConnectionPoolGroup.pool(for: eventLoop)","try await redis.set(\"Test\", to: \"hello\").get()"]},{"type":"paragraph","inlineContent":[{"text":"Alternatively you can access a Redis connection pool via ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","type":"reference"},{"text":" if you add the connection pool group to your ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","type":"reference"},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["try app.addRedis(","    configuration: .init(hostname: Self.redisHostname, port: 6379)",")","\/\/ Add route that returns contents of Redis INFO command","app.router.get(\"redis\") { req in","    req.redis.send(command: \"INFO\").map(\\.description)","}"]}],"kind":"content"}],"abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","metadata":{"symbolKind":"module","role":"collection","externalID":"HummingbirdRedis","roleHeading":"Framework","modules":[{"name":"HummingbirdRedis"}],"title":"HummingbirdRedis"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[[]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/Logger":{"abstract":[{"text":"A ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" is the central type in ","type":"text"},{"code":"SwiftLog","type":"codeVoice"},{"text":". Its central function is to emit log messages using one of the methods","type":"text"},{"text":" ","type":"text"},{"text":"corresponding to a log level.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Logger"}],"kind":"symbol","url":"\/documentation\/hummingbirdredis\/logger","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/Logger","title":"Logger","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Logger"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"HBRequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroup":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolGroup"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup","abstract":[{"type":"text","text":"Store Redis connection pool array for an EventLoopGroup."}],"navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolGroup"}],"title":"RedisConnectionPoolGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroupIdentifier":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupIdentifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolGroupIdentifier"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolGroupIdentifier"}],"title":"RedisConnectionPoolGroupIdentifier","kind":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConfiguration":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisConfiguration"}],"type":"topic","title":"HBRedisConfiguration","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"HBRedisConfiguration"}],"url":"\/documentation\/hummingbirdredis\/hbredisconfiguration"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroupArray":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupArray","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgrouparray","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolGroupArray"}],"abstract":[],"title":"RedisConnectionPoolGroupArray","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolGroupArray"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"title":"HBApplication","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL":{"navigatorTitle":[{"kind":"identifier","text":"URL"}],"title":"URL","abstract":[{"type":"text","text":"A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data."}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdredis\/url","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"URL"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisPersistDriver":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisPersistDriver"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisPersistDriver","title":"HBRedisPersistDriver","navigatorTitle":[{"kind":"identifier","text":"HBRedisPersistDriver"}],"url":"\/documentation\/hummingbirdredis\/hbredispersistdriver","role":"symbol","abstract":[{"type":"text","text":"Redis driver for persist system for storing persistent cross request key\/value pairs"}]}}}