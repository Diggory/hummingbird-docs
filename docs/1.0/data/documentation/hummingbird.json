{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird"]}],"sections":[],"metadata":{"title":"Hummingbird","modules":[{"name":"Hummingbird"}],"externalID":"Hummingbird","symbolKind":"module","role":"collection","roleHeading":"Framework"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"reference","isActive":true},{"type":"text","text":" is a lightweight, flexible server framework designed to require the minimum number of dependencies."}]},{"type":"paragraph","inlineContent":[{"text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, support for adding channel handlers to extend the HTTP server, extending the core ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest"},{"text":" types and providing custom encoding\/decoding of ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" objects.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The interface is fairly standard. Anyone who has had experience of Vapor, Express.js etc will recognise most of the APIs. Simple setup is as follows","type":"text"}]},{"syntax":"swift","code":["import Hummingbird","","let app = HBApplication(configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080)))","app.router.get(\"hello\") { request -> String in","    return \"Hello\"","}","try app.start()","app.wait()"],"type":"codeListing"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[[]]},"topicSections":[{"title":"Articles","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ExtendingHummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]},{"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ServiceLifecycleProvider"]},{"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder"]},{"title":"Request\/Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBURL","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponse"]},{"title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseCodable"]},{"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMetricsMiddleware"]},{"title":"Extending the Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensible","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions"]},{"title":"Connection Pool","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPool","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncConnectionSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPoolGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPoolError"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriverFactory","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistError"]},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParser"]},{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AsyncSequenceResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMemoryPersistDriver"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSendableExtensible"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AsyncSequenceResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSendableExtensions"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncConnectionSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncConnectionSource","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncConnectionSource","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbasyncconnectionsource","type":"topic","title":"HBAsyncConnectionSource","role":"symbol","abstract":[{"type":"text","text":"Source of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncConnection"}],"kind":"symbol","navigatorTitle":[{"text":"HBAsyncConnectionSource","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequestContext":{"title":"HBRequestContext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestContext","abstract":[{"type":"text","text":"Context that created HBRequest."}],"url":"\/documentation\/hummingbirdauth\/hbrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensible":{"navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensible","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbextensible","abstract":[{"type":"text","text":"Protocol for extensible classes"}],"title":"HBExtensible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"title":"HummingbirdXCT","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"url":"\/documentation\/hummingbirdxct"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","type":"topic","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"title":"HummingbirdJobs","url":"\/documentation\/hummingbirdjobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBCORSMiddleware":{"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"type":"topic","title":"HBCORSMiddleware","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbcorsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCORSMiddleware","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMediaType":{"abstract":[{"type":"text","text":"Define media type of file"}],"navigatorTitle":[{"text":"HBMediaType","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMediaType","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBMediaType","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbmediatype","title":"HBMediaType","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"abstract":[{"type":"text","text":"How to build errors for the server to return."}],"type":"topic","title":"Error Handling","role":"article","kind":"article","url":"\/documentation\/hummingbird\/errorhandling","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBConnectionSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionSource","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionSource","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbconnectionsource","type":"topic","title":"HBConnectionSource","role":"symbol","abstract":[{"type":"text","text":"Source of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnection"}],"kind":"symbol","navigatorTitle":[{"text":"HBConnectionSource","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBURL":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBURL"}],"title":"HBURL","url":"\/documentation\/hummingbirdauth\/hburl","abstract":[{"type":"text","text":"Simple URL parser"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBURL","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBURL"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ExtendingHummingbird":{"abstract":[{"text":"How to extend core types of Hummingbird","type":"text"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ExtendingHummingbird","url":"\/documentation\/hummingbird\/extendinghummingbird","kind":"article","title":"Extending Hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncConnection":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncConnection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncConnection","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbasyncconnection","type":"topic","title":"HBAsyncConnection","role":"symbol","abstract":[{"type":"text","text":"Connection that supports async close"}],"kind":"symbol","navigatorTitle":[{"text":"HBAsyncConnection","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBCallbackResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"url":"\/documentation\/hummingbirdauth\/hbcallbackresponder","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"title":"HBCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder":{"navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"title":"HBRouterBuilder","type":"topic","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"HBResponder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"HBRouterBuilder","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","kind":"symbol","url":"\/documentation\/hummingbirdfluent","type":"topic","role":"collection","title":"HummingbirdFluent","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponder":{"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"type":"topic","title":"HBResponder","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AsyncSequenceResponseBodyStreamer":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceResponseBodyStreamer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AsyncSequenceResponseBodyStreamer","title":"AsyncSequenceResponseBodyStreamer","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdauth\/asyncsequenceresponsebodystreamer","abstract":[{"text":"Response body streamer which uses an AsyncSequence as its input.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"AsyncSequenceResponseBodyStreamer","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMiddleware":{"title":"HBMiddleware","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMiddleware"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddleware","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"url":"\/documentation\/hummingbirdauth\/hbmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions":{"url":"\/documentation\/hummingbirdauth\/hbextensions","title":"HBExtensions","role":"symbol","abstract":[{"type":"text","text":"Extend objects with additional member variables"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBExtensions"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBApplication":{"title":"HBApplication","kind":"symbol","navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbapplication"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AsyncSequenceResponseGenerator":{"title":"AsyncSequenceResponseGenerator","abstract":[{"text":"Wrapper object for AsyncSequence that conforms to ","type":"text"},{"type":"codeVoice","code":"HBResponseGenerator"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceResponseGenerator","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AsyncSequenceResponseGenerator","navigatorTitle":[{"text":"AsyncSequenceResponseGenerator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/asyncsequenceresponsegenerator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBDateCache":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBDateCache"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBDateCache"}],"title":"HBDateCache","abstract":[{"type":"text","text":"Current date cache."}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbdatecache","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponseGenerator":{"title":"HBResponseGenerator","kind":"symbol","navigatorTitle":[{"text":"HBResponseGenerator","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBResponseGenerator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseGenerator","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"url":"\/documentation\/hummingbirdauth\/hbresponsegenerator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBPersistDriverFactory":{"title":"HBPersistDriverFactory","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBPersistDriverFactory"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBPersistDriverFactory"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriverFactory","abstract":[{"type":"text","text":"Factory class for persist drivers"}],"url":"\/documentation\/hummingbirdauth\/hbpersistdriverfactory"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponseCodable":{"abstract":[{"text":"Protocol for codable object that can generate a response","type":"text"}],"role":"symbol","type":"topic","title":"HBResponseCodable","navigatorTitle":[{"text":"HBResponseCodable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseCodable","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbresponsecodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseCodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HTTPHeadersPatch":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPHeadersPatch"}],"title":"HTTPHeadersPatch","url":"\/documentation\/hummingbirdauth\/httpheaderspatch","abstract":[{"type":"text","text":"Used to Patch HTTPHeaders. Remembers if a header was added in with "},{"code":"add","type":"codeVoice"},{"type":"text","text":" or "},{"code":"replaceOrAdd","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPHeadersPatch"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncMiddleware":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncMiddleware","title":"HBAsyncMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBAsyncMiddleware"}],"type":"topic","abstract":[{"text":"Middleware using async\/await","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbasyncmiddleware","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponseEncoder":{"url":"\/documentation\/hummingbirdauth\/hbresponseencoder","navigatorTitle":[{"text":"HBResponseEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseEncoder","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseEncoder","kind":"identifier"}],"title":"HBResponseEncoder","role":"symbol","abstract":[{"text":"protocol for encoders generating a Response","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterGroup":{"type":"topic","kind":"symbol","title":"HBRouterGroup","navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","url":"\/documentation\/hummingbirdauth\/hbroutergroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSendableExtensible":{"navigatorTitle":[{"text":"HBSendableExtensible","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSendableExtensible","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbsendableextensible","abstract":[{"type":"text","text":"Protocol for extensible classes"}],"title":"HBSendableExtensible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSendableExtensible","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBConnectionPoolError":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPoolError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionPoolError","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbconnectionpoolerror","type":"topic","title":"HBConnectionPoolError","role":"symbol","abstract":[{"type":"text","text":"Errors generated by Connection Pool"}],"kind":"symbol","navigatorTitle":[{"text":"HBConnectionPoolError","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncCallbackResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"title":"HBAsyncCallbackResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"url":"\/documentation\/hummingbirdauth\/hbasynccallbackresponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSendableExtensions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSendableExtensions","navigatorTitle":[{"text":"HBSendableExtensions","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/hbsendableextensions","title":"HBSendableExtensions","role":"symbol","abstract":[{"type":"text","text":"Version of "},{"type":"codeVoice","code":"HBExtensions"},{"type":"text","text":" that requires all extensions are sendable"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSendableExtensions","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethodOptions":{"navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"title":"HBRouterMethodOptions","type":"topic","url":"\/documentation\/hummingbirdauth\/hbroutermethodoptions","abstract":[{"type":"text","text":"Options available to routes"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouteHandler":{"navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"title":"HBRouteHandler","type":"topic","url":"\/documentation\/hummingbirdauth\/hbroutehandler","abstract":[{"type":"text","text":"Object for handling requests."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBPersistDriver":{"title":"HBPersistDriver","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBPersistDriver"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBPersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver","abstract":[{"text":"Protocol for driver supporting persistent Key\/Value pairs across requests","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbpersistdriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponse":{"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"navigatorTitle":[{"text":"HBResponse","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponse","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBResponse","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbresponse","title":"HBResponse","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"title":"HummingbirdLambda","role":"collection","type":"topic","url":"\/documentation\/hummingbirdlambda","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequestDecoder":{"abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"role":"symbol","type":"topic","title":"HBRequestDecoder","navigatorTitle":[{"text":"HBRequestDecoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecoder","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbrequestdecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBConnectionPoolGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPoolGroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionPoolGroup","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbconnectionpoolgroup","type":"topic","title":"HBConnectionPoolGroup","role":"symbol","abstract":[{"type":"text","text":"Array of connection pools associated with an EventLoopGroup."}],"kind":"symbol","navigatorTitle":[{"text":"HBConnectionPoolGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBPersistError":{"role":"symbol","url":"\/documentation\/hummingbirdauth\/hbpersisterror","abstract":[{"type":"text","text":"Errors return by persist framework"}],"title":"HBPersistError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBPersistError"}],"navigatorTitle":[{"kind":"identifier","text":"HBPersistError"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistError","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBConnection":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnection","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbconnection","type":"topic","title":"HBConnection","role":"symbol","abstract":[{"type":"text","text":"Protocol describing a single connection"}],"kind":"symbol","navigatorTitle":[{"text":"HBConnection","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMiddlewareGroup":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddlewareGroup","title":"HBMiddlewareGroup","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"type":"topic","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbmiddlewaregroup","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"title":"HummingbirdFoundation","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"url":"\/documentation\/hummingbirdfoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBParameters":{"url":"\/documentation\/hummingbirdauth\/hbparameters","title":"HBParameters","role":"symbol","abstract":[{"type":"text","text":"Store for parameters key, value pairs extracted from URI"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBParameters"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParameters"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBConnectionPool":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPool","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionPool","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbconnectionpool","type":"topic","title":"HBConnectionPool","role":"symbol","abstract":[{"type":"text","text":"Connection Pool"}],"kind":"symbol","navigatorTitle":[{"text":"HBConnectionPool","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"title":"Encoding and Decoding","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","abstract":[{"type":"text","text":"Hummingbird uses "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to decode requests and encode responses."}],"url":"\/documentation\/hummingbird\/encodinganddecoding"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMemoryPersistDriver":{"abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbmemorypersistdriver","role":"symbol","navigatorTitle":[{"text":"HBMemoryPersistDriver","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMemoryPersistDriver","kind":"identifier"}],"title":"HBMemoryPersistDriver","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMemoryPersistDriver","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"title":"Logging, Metrics and Tracing","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","abstract":[{"text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working.","type":"text"}],"url":"\/documentation\/hummingbird\/loggingmetricsandtracing"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponseEncodable":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseEncodable","url":"\/documentation\/hummingbirdauth\/hbresponseencodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseEncodable"}],"role":"symbol","abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"text":"the response using the encoder stored in ","type":"text"},{"code":"HBApplication.encoder","type":"codeVoice"},{"text":".","type":"text"}],"title":"HBResponseEncodable","navigatorTitle":[{"kind":"identifier","text":"HBResponseEncodable"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"title":"HummingbirdAuth","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"url":"\/documentation\/hummingbirdauth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBParser":{"url":"\/documentation\/hummingbirdauth\/hbparser","title":"HBParser","role":"symbol","abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParser"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequestDecodable":{"title":"HBRequestDecodable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestDecodable"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecodable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"type":"text","text":" which uses "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to initialize it"}],"url":"\/documentation\/hummingbirdauth\/hbrequestdecodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMetricsMiddleware":{"title":"HBMetricsMiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMetricsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMetricsMiddleware","url":"\/documentation\/hummingbirdauth\/hbmetricsmiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"type":"topic","kind":"symbol","title":"HummingbirdWebSocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"kind":"symbol","url":"\/documentation\/hummingbirdredis","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBLogRequestsMiddleware":{"title":"HBLogRequestsMiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBLogRequestsMiddleware","url":"\/documentation\/hummingbirdauth\/hblogrequestsmiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/FlatDictionary":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/FlatDictionary","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"title":"FlatDictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"url":"\/documentation\/hummingbirdauth\/flatdictionary"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBEnvironment":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBEnvironment","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBEnvironment","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbenvironment","abstract":[{"text":"Access environment variables","type":"text"}],"title":"HBEnvironment","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBEnvironment","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/ServiceLifecycleProvider":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ServiceLifecycleProvider","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Define where we get the ServiceLifecycle from."}],"navigatorTitle":[{"kind":"identifier","text":"ServiceLifecycleProvider"}],"title":"ServiceLifecycleProvider","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServiceLifecycleProvider"}],"url":"\/documentation\/hummingbirdauth\/servicelifecycleprovider"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"type":"topic","kind":"article","title":"Persistent data","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","url":"\/documentation\/hummingbird\/persistentdata","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethods":{"title":"HBRouterMethods","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods","abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"HBRouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"url":"\/documentation\/hummingbirdauth\/hbroutermethods"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"url":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","abstract":[{"text":"Adds request decompression and response compression to Hummingbird","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequest":{"title":"HBRequest","kind":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequest"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbrequest"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncRouteHandler":{"title":"HBAsyncRouteHandler","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAsyncRouteHandler"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncRouteHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"url":"\/documentation\/hummingbirdauth\/hbasyncroutehandler"}}}