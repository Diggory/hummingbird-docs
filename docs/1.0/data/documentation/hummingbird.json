{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"],"title":"Related Documentation"}],"topicSections":[{"title":"Articles","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ExtendingHummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]},{"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBApplication","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/ServiceLifecycleProvider"]},{"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncCallbackResponder"]},{"title":"Request\/Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBURL","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HTTPHeadersPatch","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponse"]},{"title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseCodable"]},{"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMetricsMiddleware"]},{"title":"Extending the Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensible","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions"]},{"title":"Connection Pool","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnectionPool","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnectionSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncConnectionSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnectionPoolGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnectionPoolError"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBPersistDriverFactory","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBPersistError"]},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBDateCache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParser"]},{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/AsyncSequenceResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMemoryPersistDriver"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBSendableExtensible"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/AsyncSequenceResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBSendableExtensions"],"title":"Structures"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"reference"},{"text":" is a lightweight, flexible server framework designed to require the minimum number of dependencies.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, support for adding channel handlers to extend the HTTP server, extending the core "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBApplication","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequest","isActive":true,"type":"reference"},{"type":"text","text":" types and providing custom encoding\/decoding of "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" objects."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The interface is fairly standard. Anyone who has had experience of Vapor, Express.js etc will recognise most of the APIs. Simple setup is as follows"}]},{"type":"codeListing","syntax":"swift","code":["import Hummingbird","","let app = HBApplication(configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080)))","app.router.get(\"hello\") { request -> String in","    return \"Hello\"","}","try app.start()","app.wait()"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbird"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"kind":"symbol","hierarchy":{"paths":[[]]},"abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"metadata":{"role":"collection","roleHeading":"Framework","symbolKind":"module","title":"Hummingbird","externalID":"Hummingbird","modules":[{"name":"Hummingbird"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBParser":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParser","navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"title":"HBParser","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"url":"\/documentation\/hummingbirdfoundation\/hbparser"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"type":"topic","kind":"article","url":"\/documentation\/hummingbird\/persistentdata","role":"collectionGroup","title":"Persistent data"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"url":"\/documentation\/hummingbirdfoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","role":"collection","title":"HummingbirdFoundation","kind":"symbol","type":"topic","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/FlatDictionary":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/FlatDictionary","navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"title":"FlatDictionary","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Provides Dictionary like indexing, but uses a flat array of key","type":"text"},{"text":" ","type":"text"},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"url":"\/documentation\/hummingbirdfoundation\/flatdictionary"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBSendableExtensions":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSendableExtensions"}],"navigatorTitle":[{"kind":"identifier","text":"HBSendableExtensions"}],"abstract":[{"text":"Version of ","type":"text"},{"code":"HBExtensions","type":"codeVoice"},{"text":" that requires all extensions are sendable","type":"text"}],"url":"\/documentation\/hummingbirdfoundation\/hbsendableextensions","role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBSendableExtensions","title":"HBSendableExtensions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponseGenerator":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseGenerator","title":"HBResponseGenerator","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBResponseGenerator"}],"abstract":[{"text":"Object that can generate a ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseGenerator"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbresponsegenerator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBConnectionPoolGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnectionPoolGroup","kind":"symbol","type":"topic","title":"HBConnectionPoolGroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionPoolGroup","kind":"identifier"}],"navigatorTitle":[{"text":"HBConnectionPoolGroup","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolgroup","abstract":[{"type":"text","text":"Array of connection pools associated with an EventLoopGroup."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncConnectionSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncConnectionSource","kind":"symbol","type":"topic","title":"HBAsyncConnectionSource","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncConnectionSource","kind":"identifier"}],"navigatorTitle":[{"text":"HBAsyncConnectionSource","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbasyncconnectionsource","abstract":[{"type":"text","text":"Source of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncConnection","isActive":true}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBConnectionPoolError":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnectionPoolError","kind":"symbol","type":"topic","title":"HBConnectionPoolError","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionPoolError","kind":"identifier"}],"navigatorTitle":[{"text":"HBConnectionPoolError","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbconnectionpoolerror","abstract":[{"type":"text","text":"Errors generated by Connection Pool"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBMemoryPersistDriver":{"navigatorTitle":[{"text":"HBMemoryPersistDriver","kind":"identifier"}],"abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMemoryPersistDriver","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbmemorypersistdriver","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMemoryPersistDriver","kind":"identifier"}],"title":"HBMemoryPersistDriver","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRequestDecodable":{"url":"\/documentation\/hummingbirdfoundation\/hbrequestdecodable","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBRequestDecodable","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecodable","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"type":"text","text":" which uses "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to initialize it"}],"navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"title":"HBRequestDecodable","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponseEncodable":{"url":"\/documentation\/hummingbirdfoundation\/hbresponseencodable","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseEncodable","title":"HBResponseEncodable","navigatorTitle":[{"text":"HBResponseEncodable","kind":"identifier"}],"abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"text":"the response using the encoder stored in ","type":"text"},{"code":"HBApplication.encoder","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseEncodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBApplication":{"title":"HBApplication","navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/hbapplication","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBApplication","abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethods":{"url":"\/documentation\/hummingbirdfoundation\/hbroutermethods","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethods","abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"title":"HBRouterMethods","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBPersistError":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBPersistError","abstract":[{"text":"Errors return by persist framework","type":"text"}],"title":"HBPersistError","url":"\/documentation\/hummingbirdfoundation\/hbpersisterror","navigatorTitle":[{"text":"HBPersistError","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBPersistError","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRequestContext":{"url":"\/documentation\/hummingbirdfoundation\/hbrequestcontext","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestContext","title":"HBRequestContext","navigatorTitle":[{"text":"HBRequestContext","kind":"identifier"}],"abstract":[{"text":"Context that created HBRequest.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBConnectionSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnectionSource","kind":"symbol","type":"topic","title":"HBConnectionSource","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionSource","kind":"identifier"}],"navigatorTitle":[{"text":"HBConnectionSource","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbconnectionsource","abstract":[{"type":"text","text":"Source of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnection","isActive":true}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterBuilder","title":"HBRouterBuilder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbrouterbuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/AsyncSequenceResponseGenerator":{"url":"\/documentation\/hummingbirdfoundation\/asyncsequenceresponsegenerator","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceResponseGenerator"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceResponseGenerator"}],"kind":"symbol","title":"AsyncSequenceResponseGenerator","abstract":[{"type":"text","text":"Wrapper object for AsyncSequence that conforms to "},{"code":"HBResponseGenerator","type":"codeVoice"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/AsyncSequenceResponseGenerator","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncCallbackResponder":{"url":"\/documentation\/hummingbirdfoundation\/hbasynccallbackresponder","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncCallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"title":"HBAsyncCallbackResponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBConnectionPool":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnectionPool","kind":"symbol","type":"topic","title":"HBConnectionPool","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionPool","kind":"identifier"}],"navigatorTitle":[{"text":"HBConnectionPool","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbconnectionpool","abstract":[{"type":"text","text":"Connection Pool"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/AsyncSequenceResponseBodyStreamer":{"navigatorTitle":[{"text":"AsyncSequenceResponseBodyStreamer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/AsyncSequenceResponseBodyStreamer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceResponseBodyStreamer","kind":"identifier"}],"abstract":[{"text":"Response body streamer which uses an AsyncSequence as its input.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/asyncsequenceresponsebodystreamer","role":"symbol","title":"AsyncSequenceResponseBodyStreamer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBURL":{"url":"\/documentation\/hummingbirdfoundation\/hburl","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBURL","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBURL","abstract":[{"text":"Simple URL parser","type":"text"}],"navigatorTitle":[{"text":"HBURL","kind":"identifier"}],"title":"HBURL","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponseEncoder":{"navigatorTitle":[{"text":"HBResponseEncoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseEncoder","title":"HBResponseEncoder","type":"topic","url":"\/documentation\/hummingbirdfoundation\/hbresponseencoder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseEncoder","kind":"identifier"}],"abstract":[{"text":"protocol for encoders generating a Response","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","abstract":[{"text":"Hummingbird uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to decode requests and encode responses.","type":"text"}],"url":"\/documentation\/hummingbird\/encodinganddecoding","kind":"article","type":"topic","role":"collectionGroup","title":"Encoding and Decoding"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","type":"topic","url":"\/documentation\/hummingbirdlambda","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRequest":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequest","title":"HBRequest","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRequest"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequest"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbrequest"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncConnection":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncConnection","kind":"symbol","type":"topic","title":"HBAsyncConnection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncConnection","kind":"identifier"}],"navigatorTitle":[{"text":"HBAsyncConnection","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbasyncconnection","abstract":[{"type":"text","text":"Connection that supports async close"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HTTPHeadersPatch":{"url":"\/documentation\/hummingbirdfoundation\/httpheaderspatch","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeadersPatch","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HTTPHeadersPatch","abstract":[{"text":"Used to Patch HTTPHeaders. Remembers if a header was added in with ","type":"text"},{"code":"add","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"replaceOrAdd","type":"codeVoice"}],"navigatorTitle":[{"text":"HTTPHeadersPatch","kind":"identifier"}],"title":"HTTPHeadersPatch","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"type":"topic","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"role":"collection","title":"HummingbirdFluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBCallbackResponder":{"url":"\/documentation\/hummingbirdfoundation\/hbcallbackresponder","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"title":"HBCallbackResponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBMediaType":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMediaType","navigatorTitle":[{"text":"HBMediaType","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMediaType","kind":"identifier"}],"title":"HBMediaType","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Define media type of file"}],"url":"\/documentation\/hummingbirdfoundation\/hbmediatype"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterMethodOptions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterMethodOptions","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"title":"HBRouterMethodOptions","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Options available to routes","type":"text"}],"url":"\/documentation\/hummingbirdfoundation\/hbroutermethodoptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponse":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponse","navigatorTitle":[{"text":"HBResponse","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponse","kind":"identifier"}],"title":"HBResponse","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"url":"\/documentation\/hummingbirdfoundation\/hbresponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncMiddleware":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/hbasyncmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncMiddleware","abstract":[{"text":"Middleware using async\/await","type":"text"}],"title":"HBAsyncMiddleware","navigatorTitle":[{"text":"HBAsyncMiddleware","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponseCodable":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseCodable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponseCodable","navigatorTitle":[{"text":"HBResponseCodable","kind":"identifier"}],"abstract":[{"text":"Protocol for codable object that can generate a response","type":"text"}],"type":"topic","title":"HBResponseCodable","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbresponsecodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBEnvironment":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBEnvironment","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBEnvironment","navigatorTitle":[{"text":"HBEnvironment","kind":"identifier"}],"abstract":[{"text":"Access environment variables","type":"text"}],"type":"topic","title":"HBEnvironment","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbenvironment"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddleware","navigatorTitle":[{"text":"HBMiddleware","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddleware","kind":"identifier"}],"title":"HBMiddleware","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"url":"\/documentation\/hummingbirdfoundation\/hbmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBConnection":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBConnection","kind":"symbol","type":"topic","title":"HBConnection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnection","kind":"identifier"}],"navigatorTitle":[{"text":"HBConnection","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbconnection","abstract":[{"type":"text","text":"Protocol describing a single connection"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","abstract":[{"text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working.","type":"text"}],"url":"\/documentation\/hummingbird\/loggingmetricsandtracing","kind":"article","type":"topic","role":"collectionGroup","title":"Logging, Metrics and Tracing"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBExtensions":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensions","url":"\/documentation\/hummingbirdfoundation\/hbextensions","role":"symbol","abstract":[{"type":"text","text":"Extend objects with additional member variables"}],"navigatorTitle":[{"kind":"identifier","text":"HBExtensions"}],"type":"topic","title":"HBExtensions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBPersistDriver":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBPersistDriver","navigatorTitle":[{"text":"HBPersistDriver","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBPersistDriver","kind":"identifier"}],"title":"HBPersistDriver","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"url":"\/documentation\/hummingbirdfoundation\/hbpersistdriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBResponder":{"url":"\/documentation\/hummingbirdfoundation\/hbresponder","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBResponder","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"title":"HBResponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","title":"Router","type":"topic","role":"collectionGroup","kind":"article","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBDateCache":{"navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBDateCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBDateCache","kind":"identifier"}],"abstract":[{"type":"text","text":"Current date cache."}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbdatecache","role":"symbol","title":"HBDateCache"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBAsyncRouteHandler":{"url":"\/documentation\/hummingbirdfoundation\/hbasyncroutehandler","role":"symbol","kind":"symbol","title":"HBAsyncRouteHandler","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"abstract":[{"text":"Route Handler using async\/await methods","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBAsyncRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ExtendingHummingbird":{"abstract":[{"text":"How to extend core types of Hummingbird","type":"text"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/extendinghummingbird","title":"Extending Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ExtendingHummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouterGroup":{"url":"\/documentation\/hummingbirdfoundation\/hbroutergroup","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouterGroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"title":"HBRouterGroup","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBCORSMiddleware":{"navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBCORSMiddleware","title":"HBCORSMiddleware","type":"topic","url":"\/documentation\/hummingbirdfoundation\/hbcorsmiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBCORSMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBSendableExtensible":{"navigatorTitle":[{"text":"HBSendableExtensible","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBSendableExtensible","title":"HBSendableExtensible","abstract":[{"type":"text","text":"Protocol for extensible classes"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSendableExtensible","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbsendableextensible"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBExtensible":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}],"title":"HBExtensible","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbextensible","role":"symbol","abstract":[{"text":"Protocol for extensible classes","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBExtensible","navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","title":"HummingbirdJobs","type":"topic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"url":"\/documentation\/hummingbirdjobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"role":"collection","url":"\/documentation\/hummingbirdauth","kind":"symbol","title":"HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBMetricsMiddleware":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMetricsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/hbmetricsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMetricsMiddleware","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"title":"HBMetricsMiddleware","navigatorTitle":[{"text":"HBMetricsMiddleware","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBPersistDriverFactory":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBPersistDriverFactory","abstract":[{"text":"Factory class for persist drivers","type":"text"}],"title":"HBPersistDriverFactory","url":"\/documentation\/hummingbirdfoundation\/hbpersistdriverfactory","navigatorTitle":[{"text":"HBPersistDriverFactory","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBPersistDriverFactory","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBLogRequestsMiddleware":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBLogRequestsMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"type":"topic","title":"HBLogRequestsMiddleware","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/hblogrequestsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"url":"\/documentation\/hummingbird\/errorhandling","kind":"article","type":"topic","role":"article","title":"Error Handling"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"role":"collection","url":"\/documentation\/hummingbirdredis","kind":"symbol","title":"HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/ServiceLifecycleProvider":{"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServiceLifecycleProvider"}],"url":"\/documentation\/hummingbirdfoundation\/servicelifecycleprovider","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/ServiceLifecycleProvider","abstract":[{"type":"text","text":"Define where we get the ServiceLifecycle from."}],"title":"ServiceLifecycleProvider","navigatorTitle":[{"kind":"identifier","text":"ServiceLifecycleProvider"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBParameters":{"url":"\/documentation\/hummingbirdfoundation\/hbparameters","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBParameters","title":"HBParameters","navigatorTitle":[{"text":"HBParameters","kind":"identifier"}],"abstract":[{"type":"text","text":"Store for parameters key, value pairs extracted from URI"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParameters","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBMiddlewareGroup":{"url":"\/documentation\/hummingbirdfoundation\/hbmiddlewaregroup","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddlewareGroup","title":"HBMiddlewareGroup","navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection","url":"\/documentation\/hummingbirdcore","kind":"symbol","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRequestDecoder":{"navigatorTitle":[{"text":"HBRequestDecoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequestDecoder","title":"HBRequestDecoder","type":"topic","url":"\/documentation\/hummingbirdfoundation\/hbrequestdecoder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecoder","kind":"identifier"}],"abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"title":"HummingbirdXCT","url":"\/documentation\/hummingbirdxct","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","role":"collection","title":"HummingbirdWebSocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"url":"\/documentation\/hummingbirdwebsocket","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","title":"HummingbirdCompression","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcompression","abstract":[{"text":"Adds request decompression and response compression to Hummingbird","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRouteHandler":{"url":"\/documentation\/hummingbirdfoundation\/hbroutehandler","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRouteHandler","abstract":[{"type":"text","text":"Object for handling requests."}],"navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"title":"HBRouteHandler","kind":"symbol"}}}