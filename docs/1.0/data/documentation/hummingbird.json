{"topicSections":[{"title":"Articles","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ExtendingHummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]},{"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycleProvider"]},{"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder"]},{"title":"Request\/Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBURL","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponse"]},{"title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseCodable"]},{"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware"]},{"title":"Extending the Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBExtensible","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBExtensions"]},{"title":"Connection Pool","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnectionPool","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnectionSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncConnectionSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnectionPoolGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnectionPoolError"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriverFactory","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistError"]},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBDateCache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParser"]},{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSendableExtensible"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSendableExtensions"]}],"variants":[{"paths":["\/documentation\/hummingbird"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]}],"metadata":{"symbolKind":"module","title":"Hummingbird","externalID":"Hummingbird","modules":[{"name":"Hummingbird"}],"role":"collection","roleHeading":"Framework"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"primaryContentSections":[{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},{"type":"text","text":" is a lightweight, flexible server framework designed to require the minimum number of dependencies."}]},{"type":"paragraph","inlineContent":[{"text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, support for adding channel handlers to extend the HTTP server, extending the core ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","isActive":true,"type":"reference"},{"text":" types and providing custom encoding\/decoding of ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" objects.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The interface is fairly standard. Anyone who has had experience of Vapor, Express.js etc will recognise most of the APIs. Simple setup is as follows","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import Hummingbird","","let app = HBApplication(configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080)))","app.router.get(\"hello\") { request -> String in","    return \"Hello\"","}","try app.start()","app.wait()"]}],"kind":"content"}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBURL":{"abstract":[{"type":"text","text":"Simple URL parser"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBURL","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"HBURL","kind":"identifier"}],"title":"HBURL","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBURL","url":"\/documentation\/hummingbird\/hburl","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","type":"topic","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplication":{"abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"title":"HBApplication","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"url":"\/documentation\/hummingbird\/hbapplication","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBConnectionSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnectionSource","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBConnectionSource"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbconnectionsource","title":"HBConnectionSource","abstract":[{"type":"text","text":"Source of "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnection","isActive":true,"type":"reference"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBConnectionSource"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBConnectionPool":{"abstract":[{"type":"text","text":"Connection Pool"}],"navigatorTitle":[{"text":"HBConnectionPool","kind":"identifier"}],"title":"HBConnectionPool","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBConnectionPool","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbconnectionpool","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnectionPool","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"navigatorTitle":[{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"title":"HBLogRequestsMiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hblogrequestsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncConnectionSource":{"abstract":[{"text":"Source of ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncConnection","isActive":true,"type":"reference"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncConnectionSource"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAsyncConnectionSource"}],"title":"HBAsyncConnectionSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncConnectionSource","url":"\/documentation\/hummingbird\/hbasyncconnectionsource","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBExtensible":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensible"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBExtensible","kind":"symbol","url":"\/documentation\/hummingbird\/hbextensible","abstract":[{"type":"text","text":"Protocol for extensible classes"}],"role":"symbol","type":"topic","title":"HBExtensible","navigatorTitle":[{"kind":"identifier","text":"HBExtensible"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"title":"HBRouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutergroup","type":"topic","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBConnectionPoolError":{"title":"HBConnectionPoolError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBConnectionPoolError"}],"url":"\/documentation\/hummingbird\/hbconnectionpoolerror","type":"topic","abstract":[{"text":"Errors generated by Connection Pool","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnectionPoolError","navigatorTitle":[{"kind":"identifier","text":"HBConnectionPoolError"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"title":"Persistent data","url":"\/documentation\/hummingbird\/persistentdata","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","kind":"article","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddleware":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddleware","url":"\/documentation\/hummingbird\/hbmiddleware","title":"HBMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddleware","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HBMiddleware","kind":"identifier"}],"type":"topic","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"title":"HummingbirdFoundation","url":"\/documentation\/hummingbirdfoundation","type":"topic","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"title":"HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbrequest","type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"abstract":[{"text":"Context that created HBRequest.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"title":"HBRequestContext","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}],"url":"\/documentation\/hummingbird\/hbrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseEncoder":{"url":"\/documentation\/hummingbird\/hbresponseencoder","abstract":[{"text":"protocol for encoders generating a Response","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponseEncoder"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncoder","title":"HBResponseEncoder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBResponseEncoder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AsyncSequenceResponseGenerator":{"url":"\/documentation\/hummingbird\/asyncsequenceresponsegenerator","abstract":[{"text":"Wrapper object for AsyncSequence that conforms to ","type":"text"},{"code":"HBResponseGenerator","type":"codeVoice"}],"navigatorTitle":[{"text":"AsyncSequenceResponseGenerator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseGenerator","title":"AsyncSequenceResponseGenerator","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceResponseGenerator","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseCodable":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseCodable","url":"\/documentation\/hummingbird\/hbresponsecodable","title":"HBResponseCodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseCodable","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HBResponseCodable","kind":"identifier"}],"abstract":[{"text":"Protocol for codable object that can generate a response","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBExtensions":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBExtensions","url":"\/documentation\/hummingbird\/hbextensions","abstract":[{"text":"Extend objects with additional member variables","type":"text"}],"title":"HBExtensions","navigatorTitle":[{"text":"HBExtensions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycleProvider":{"abstract":[{"type":"text","text":"Define where we get the ServiceLifecycle from."}],"navigatorTitle":[{"text":"ServiceLifecycleProvider","kind":"identifier"}],"title":"ServiceLifecycleProvider","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServiceLifecycleProvider","kind":"identifier"}],"url":"\/documentation\/hummingbird\/servicelifecycleprovider","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycleProvider","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseGenerator":{"title":"HBResponseGenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbresponsegenerator","type":"topic","abstract":[{"type":"text","text":"Object that can generate a "},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","navigatorTitle":[{"text":"HBResponseGenerator","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FlatDictionary":{"title":"FlatDictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"url":"\/documentation\/hummingbird\/flatdictionary","type":"topic","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FlatDictionary","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ExtendingHummingbird":{"role":"article","type":"topic","url":"\/documentation\/hummingbird\/extendinghummingbird","abstract":[{"text":"How to extend core types of Hummingbird","type":"text"}],"title":"Extending Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ExtendingHummingbird","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBConnectionPoolGroup":{"title":"HBConnectionPoolGroup","url":"\/documentation\/hummingbird\/hbconnectionpoolgroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionPoolGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"Array of connection pools associated with an EventLoopGroup."}],"navigatorTitle":[{"text":"HBConnectionPoolGroup","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnectionPoolGroup","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","type":"topic","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBPersistDriverFactory":{"title":"HBPersistDriverFactory","url":"\/documentation\/hummingbird\/hbpersistdriverfactory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBPersistDriverFactory"}],"abstract":[{"text":"Factory class for persist drivers","type":"text"}],"navigatorTitle":[{"text":"HBPersistDriverFactory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriverFactory","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder":{"title":"HBRouterBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"url":"\/documentation\/hummingbird\/hbrouterbuilder","type":"topic","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncConnection":{"abstract":[{"type":"text","text":"Connection that supports async close"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBAsyncConnection","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"HBAsyncConnection","kind":"identifier"}],"title":"HBAsyncConnection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncConnection","url":"\/documentation\/hummingbird\/hbasyncconnection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseEncodable":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseEncodable"}],"kind":"symbol","role":"symbol","title":"HBResponseEncodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncodable","navigatorTitle":[{"kind":"identifier","text":"HBResponseEncodable"}],"abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"type":"text","text":" "},{"text":"the response using the encoder stored in ","type":"text"},{"type":"codeVoice","code":"HBApplication.encoder"},{"type":"text","text":"."}],"url":"\/documentation\/hummingbird\/hbresponseencodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSendableExtensible":{"title":"HBSendableExtensible","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBSendableExtensible"}],"type":"topic","navigatorTitle":[{"text":"HBSendableExtensible","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for extensible classes"}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbsendableextensible","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSendableExtensible"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"title":"HBRouterMethodOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutermethodoptions","type":"topic","abstract":[{"type":"text","text":"Options available to routes"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"title":"HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","type":"topic","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"title":"HummingbirdXCT","url":"\/documentation\/hummingbirdxct","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBDateCache":{"title":"HBDateCache","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBDateCache"}],"url":"\/documentation\/hummingbird\/hbdatecache","type":"topic","abstract":[{"type":"text","text":"Current date cache."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBDateCache","navigatorTitle":[{"kind":"identifier","text":"HBDateCache"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AsyncSequenceResponseBodyStreamer":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseBodyStreamer","role":"symbol","url":"\/documentation\/hummingbird\/asyncsequenceresponsebodystreamer","kind":"symbol","title":"AsyncSequenceResponseBodyStreamer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceResponseBodyStreamer"}],"navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceResponseBodyStreamer"}],"abstract":[{"type":"text","text":"Response body streamer which uses an AsyncSequence as its input."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","url":"\/documentation\/hummingbird\/router","type":"topic","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","kind":"article","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponse":{"title":"HBResponse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponse"}],"url":"\/documentation\/hummingbird\/hbresponse","type":"topic","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponse","navigatorTitle":[{"kind":"identifier","text":"HBResponse"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"title":"HBCallbackResponder","url":"\/documentation\/hummingbird\/hbcallbackresponder","role":"symbol","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"kind":"symbol","title":"HummingbirdJobs","url":"\/documentation\/hummingbirdjobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeadersPatch":{"title":"HTTPHeadersPatch","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Used to Patch HTTPHeaders. Remembers if a header was added in with "},{"type":"codeVoice","code":"add"},{"type":"text","text":" or "},{"type":"codeVoice","code":"replaceOrAdd"}],"url":"\/documentation\/hummingbird\/httpheaderspatch","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPHeadersPatch"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPHeadersPatch"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"kind":"symbol","title":"HummingbirdCompression","abstract":[{"type":"text","text":"Adds request decompression and response compression to Hummingbird"}],"role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","url":"\/documentation\/hummingbirdcompression"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"title":"HBRouteHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"url":"\/documentation\/hummingbird\/hbroutehandler","type":"topic","abstract":[{"text":"Object for handling requests.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSendableExtensions":{"title":"HBSendableExtensions","url":"\/documentation\/hummingbird\/hbsendableextensions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSendableExtensions","kind":"identifier"}],"abstract":[{"type":"text","text":"Version of "},{"code":"HBExtensions","type":"codeVoice"},{"type":"text","text":" that requires all extensions are sendable"}],"navigatorTitle":[{"text":"HBSendableExtensions","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSendableExtensions","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"title":"HBRouterMethods","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutermethods","type":"topic","abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestDecoder":{"role":"symbol","url":"\/documentation\/hummingbird\/hbrequestdecoder","kind":"symbol","title":"HBRequestDecoder","type":"topic","abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"HBRequestDecoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"title":"HummingbirdFluent","kind":"symbol","url":"\/documentation\/hummingbirdfluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBPersistDriver":{"navigatorTitle":[{"kind":"identifier","text":"HBPersistDriver"}],"kind":"symbol","type":"topic","title":"HBPersistDriver","abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriver","url":"\/documentation\/hummingbird\/hbpersistdriver","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBPersistDriver"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"title":"HBResponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"url":"\/documentation\/hummingbird\/hbresponder","type":"topic","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/hummingbird\/encodinganddecoding","title":"Encoding and Decoding","abstract":[{"text":"Hummingbird uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to decode requests and encode responses."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"title":"Logging, Metrics and Tracing","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","type":"topic","abstract":[{"text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","kind":"article","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncRouteHandler":{"abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"title":"HBAsyncRouteHandler","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbasyncroutehandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncRouteHandler","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMediaType":{"title":"HBMediaType","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Define media type of file"}],"url":"\/documentation\/hummingbird\/hbmediatype","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMediaType"}],"navigatorTitle":[{"kind":"identifier","text":"HBMediaType"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBEnvironment":{"title":"HBEnvironment","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBEnvironment","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbenvironment","type":"topic","abstract":[{"type":"text","text":"Access environment variables"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEnvironment","navigatorTitle":[{"text":"HBEnvironment","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"title":"Error Handling","abstract":[{"type":"text","text":"How to build errors for the server to return."}],"role":"article","type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","url":"\/documentation\/hummingbird\/errorhandling"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBCORSMiddleware"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"type":"topic","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"title":"HBCORSMiddleware","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","url":"\/documentation\/hummingbird\/hbcorsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBParser":{"abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"title":"HBParser","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"url":"\/documentation\/hummingbird\/hbparser","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParser","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncCallbackResponder":{"role":"symbol","url":"\/documentation\/hummingbird\/hbasynccallbackresponder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"title":"HBAsyncCallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMemoryPersistDriver":{"url":"\/documentation\/hummingbird\/hbmemorypersistdriver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMemoryPersistDriver","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver","navigatorTitle":[{"text":"HBMemoryPersistDriver","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"title":"HBMemoryPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"title":"HBMiddlewareGroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbmiddlewaregroup","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBPersistError":{"kind":"symbol","title":"HBPersistError","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBPersistError","kind":"identifier"}],"abstract":[{"text":"Errors return by persist framework","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"HBPersistError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistError","url":"\/documentation\/hummingbird\/hbpersisterror"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncMiddleware":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncMiddleware","url":"\/documentation\/hummingbird\/hbasyncmiddleware","title":"HBAsyncMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncMiddleware"}],"kind":"symbol","navigatorTitle":[{"text":"HBAsyncMiddleware","kind":"identifier"}],"abstract":[{"text":"Middleware using async\/await","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","url":"\/documentation\/hummingbirdredis","type":"topic","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"title":"HBMetricsMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMetricsMiddleware"}],"url":"\/documentation\/hummingbird\/hbmetricsmiddleware","type":"topic","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBConnection":{"kind":"symbol","navigatorTitle":[{"text":"HBConnection","kind":"identifier"}],"title":"HBConnection","url":"\/documentation\/hummingbird\/hbconnection","abstract":[{"type":"text","text":"Protocol describing a single connection"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBConnection","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnection","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBParameters":{"title":"HBParameters","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParameters"}],"url":"\/documentation\/hummingbird\/hbparameters","type":"topic","abstract":[{"type":"text","text":"Store for parameters key, value pairs extracted from URI"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParameters","navigatorTitle":[{"kind":"identifier","text":"HBParameters"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestDecodable":{"kind":"symbol","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"title":"HBRequestDecodable","url":"\/documentation\/hummingbird\/hbrequestdecodable","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"type":"text","text":" which uses "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" to initialize it"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecodable","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecodable"}]}}}