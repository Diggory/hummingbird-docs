{"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress"]},{"title":"Request","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput"]},{"title":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback"]},{"title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"role":"collection","modules":[{"name":"HummingbirdCore"}],"symbolKind":"module","roleHeading":"Framework","title":"HummingbirdCore","externalID":"HummingbirdCore"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"kind":"symbol","hierarchy":{"paths":[[]]},"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based HTTP server. When starting the server you provide it with a struct that conforms to "},{"code":"HBHTTPResponder","type":"codeVoice"},{"type":"text","text":" to define how the server should respond to requests. For example the following is a responder that always returns a response containing the word “Hello” in the body."}],"type":"paragraph"},{"code":["struct HelloResponder: HBHTTPResponder {","    func respond(to request: HBHTTPRequest, context: ChannelHandlerContext, onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"You then initialise a ","type":"text"},{"code":"HBHTTPServer","type":"codeVoice"},{"text":", call ","type":"text"},{"code":"start","type":"codeVoice"},{"text":" on it and then ","type":"text"},{"code":"wait","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount)","let server = HBHTTPServer(","    group: eventLoopGroup, ","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()","\/\/ Wait until server closes which never happens as server channel is never closed","try server.wait()"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"anchor":"Swift-service-lifecycle","text":"Swift service lifecycle"},{"inlineContent":[{"type":"text","text":"If you are using HummingbirdCore outside of Hummingbird ideally you would use it along with the swift-server library "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"type":"text","text":". This gives you a framework for clean initialization and shutdown of your server. The following sets up a Lifecycle that initializes the HTTP server and stops it when the application shuts down."}],"type":"paragraph"},{"code":["import Lifecycle","import LifecycleNIOCompat","","let lifecycle = ServiceLifecycle()","lifecycle.register(","    label: \"HTTP Server\",","    start: .eventLoopFuture { self.server.start(responder: MyResponder()) },","    shutdown: .eventLoopFuture(self.server.stop)",")","lifecycle.start { error in","    if let error = error {","        print(\"ERROR: \\(error)\")","    }","}","lifecycle.wait()"],"type":"codeListing","syntax":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBody":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBResponseBody","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbresponsebody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","abstract":[{"type":"text","text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty"}],"title":"HBResponseBody","navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","navigatorTitle":[{"kind":"identifier","text":"HBRequestBody"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBody"}],"title":"HBRequestBody","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer"}],"url":"\/documentation\/hummingbird\/hbrequestbody"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPResponseError":{"abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbhttpresponseerror","title":"HBHTTPResponseError","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponseError","kind":"identifier"}],"navigatorTitle":[{"text":"HBHTTPResponseError","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPRequest":{"title":"HBHTTPRequest","type":"topic","navigatorTitle":[{"text":"HBHTTPRequest","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"HTTP request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","url":"\/documentation\/hummingbirdcore\/hbhttprequest","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPRequest","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"navigatorTitle":[{"text":"HBChannelInitializer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","role":"symbol","type":"topic","title":"HBChannelInitializer","url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","abstract":[{"text":"HTTPServer child channel initializer protocol","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBChannelInitializer","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBootstrap":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap","navigatorTitle":[{"text":"HTTPServerBootstrap","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerBootstrap","kind":"identifier"}],"title":"HTTPServerBootstrap","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Protocol for bootstrap.","type":"text"}],"url":"\/documentation\/hummingbirdcore\/httpserverbootstrap"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError":{"navigatorTitle":[{"text":"HBHTTPError","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","title":"HBHTTPError","type":"topic","url":"\/documentation\/hummingbird\/hbhttperror","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPError","kind":"identifier"}],"abstract":[{"text":"Default HTTP error. Provides an HTTP status and a message is so desired","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBodyStreamer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","navigatorTitle":[{"text":"HBResponseBodyStreamer","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBodyStreamer","kind":"identifier"}],"title":"HBResponseBodyStreamer","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Object supplying ByteBuffers for a response body"}],"url":"\/documentation\/hummingbird\/hbresponsebodystreamer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamCallback":{"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamCallback"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback","navigatorTitle":[{"kind":"identifier","text":"HBStreamCallback"}],"abstract":[{"type":"text","text":"Function returning streamed byte buffer output"}],"type":"topic","title":"HBStreamCallback","kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbstreamcallback"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","role":"collection","type":"topic","title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection","url":"\/documentation\/hummingbirdcore","kind":"symbol","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","abstract":[{"type":"text","text":"Address to bind server to"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbbindaddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBindAddress"}],"kind":"symbol","title":"HBBindAddress","navigatorTitle":[{"kind":"identifier","text":"HBBindAddress"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"type":"topic","title":"HBHTTPServer","url":"\/documentation\/hummingbirdcore\/hbhttpserver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP server class"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"kind":"symbol"},"https://github.com/swift-server/swift-service-lifecycle":{"title":"swift-service-lifecycle","type":"link","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"text":"swift-service-lifecycle","type":"text"}],"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBodyStreamerSequence":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","abstract":[{"text":"AsyncSequence providing ByteBuffers from a request body stream","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBodyStreamerSequence"}],"kind":"symbol","title":"HBRequestBodyStreamerSequence","navigatorTitle":[{"kind":"identifier","text":"HBRequestBodyStreamerSequence"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponder","title":"HBHTTPResponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"kind":"symbol","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"url":"\/documentation\/hummingbirdtls","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","type":"topic","title":"HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerProtocol":{"abstract":[{"text":"Protocol for objects providing a stream of ByteBuffers","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbstreamerprotocol","title":"HBStreamerProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamerProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"HBStreamerProtocol","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerOutput":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput","navigatorTitle":[{"text":"HBStreamerOutput","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamerOutput","kind":"identifier"}],"title":"HBStreamerOutput","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Values returned when we consume the contents of the streamer","type":"text"}],"url":"\/documentation\/hummingbird\/hbstreameroutput"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"navigatorTitle":[{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","title":"HTTP1ChannelInitializer","type":"topic","url":"\/documentation\/hummingbirdcore\/http1channelinitializer","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"abstract":[{"text":"Setup child channel for HTTP1","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBSendable":{"deprecated":true,"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSendable","kind":"identifier"}],"title":"HBSendable","role":"symbol","navigatorTitle":[{"text":"HBSendable","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/hbsendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponse":{"abstract":[{"type":"text","text":"HTTP response"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponse","title":"HBHTTPResponse","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponse"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponse"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer":{"abstract":[{"type":"text","text":"Request body streamer. "},{"type":"codeVoice","code":"HBHTTPDecodeHandler"},{"type":"text","text":" feeds this with ByteBuffers while the Router consumes them"}],"title":"HBByteBufferStreamer","url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBByteBufferStreamer","kind":"identifier"}],"navigatorTitle":[{"text":"HBByteBufferStreamer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","type":"topic"}}}