{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based HTTP server. When starting the server you provide it with a struct that conforms to "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" to define how the server should respond to requests. For example the following is a responder that always returns a response containing the word “Hello” in the body."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct HelloResponder: HBHTTPResponder {","    func respond(to request: HBHTTPRequest, context: ChannelHandlerContext, onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"You then initialise a ","type":"text"},{"type":"codeVoice","code":"HBHTTPServer"},{"text":", call ","type":"text"},{"type":"codeVoice","code":"start"},{"type":"text","text":" on it and then "},{"type":"codeVoice","code":"wait"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount)","let server = HBHTTPServer(","    group: eventLoopGroup, ","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()","\/\/ Wait until server closes which never happens as server channel is never closed","try server.wait()"]},{"type":"heading","anchor":"Swift-service-lifecycle","level":2,"text":"Swift service lifecycle"},{"type":"paragraph","inlineContent":[{"text":"If you are using HummingbirdCore outside of Hummingbird ideally you would use it along with the swift-server library ","type":"text"},{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"reference","isActive":true},{"text":". This gives you a framework for clean initialization and shutdown of your server. The following sets up a Lifecycle that initializes the HTTP server and stops it when the application shuts down.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import Lifecycle","import LifecycleNIOCompat","","let lifecycle = ServiceLifecycle()","lifecycle.register(","    label: \"HTTP Server\",","    start: .eventLoopFuture { self.server.start(responder: MyResponder()) },","    shutdown: .eventLoopFuture(self.server.stop)",")","lifecycle.start { error in","    if let error = error {","        print(\"ERROR: \\(error)\")","    }","}","lifecycle.wait()"]}],"kind":"content"}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamerProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamerOutput"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable"],"title":"Type Aliases"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore"]}],"metadata":{"externalID":"HummingbirdCore","symbolKind":"module","roleHeading":"Framework","modules":[{"name":"HummingbirdCore"}],"title":"HummingbirdCore","role":"collection"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBByteBufferStreamer"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","title":"HBByteBufferStreamer","role":"symbol","abstract":[{"text":"Request body streamer. ","type":"text"},{"code":"HBHTTPDecodeHandler","type":"codeVoice"},{"text":" feeds this with ByteBuffers while the Router consumes them","type":"text"}],"url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer","navigatorTitle":[{"kind":"identifier","text":"HBByteBufferStreamer"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamerProtocol":{"url":"\/documentation\/hummingbirdcore\/hbstreamerprotocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamerProtocol","title":"HBStreamerProtocol","navigatorTitle":[{"kind":"identifier","text":"HBStreamerProtocol"}],"role":"symbol","type":"topic","abstract":[{"text":"Protocol for objects providing a stream of ByteBuffers","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}],"title":"HBHTTPResponder","abstract":[{"type":"text","text":"Protocol for objects generating a "},{"type":"codeVoice","code":"HBHTTPResponse"},{"type":"text","text":" from a "},{"type":"codeVoice","code":"HBHTTPRequest"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","url":"\/documentation\/hummingbirdcore\/hbhttpresponder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody":{"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}],"abstract":[{"type":"text","text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty"}],"title":"HBResponseBody","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","url":"\/documentation\/hummingbirdcore\/hbresponsebody","navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBodyStreamerSequence":{"url":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBodyStreamerSequence"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","title":"HBRequestBodyStreamerSequence","navigatorTitle":[{"kind":"identifier","text":"HBRequestBodyStreamerSequence"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"AsyncSequence providing ByteBuffers from a request body stream"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponse":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponse"}],"abstract":[{"type":"text","text":"HTTP response"}],"title":"HBHTTPResponse","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","url":"\/documentation\/hummingbirdcore\/hbhttpresponse","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponse"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponseError":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponseError"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponseError"}],"title":"HBHTTPResponseError","abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponseError","url":"\/documentation\/hummingbirdcore\/hbhttpresponseerror","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"title":"HBHTTPServer","url":"\/documentation\/hummingbirdcore\/hbhttpserver","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP server class"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamCallback":{"url":"\/documentation\/hummingbirdcore\/hbstreamcallback","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamCallback"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback","title":"HBStreamCallback","navigatorTitle":[{"kind":"identifier","text":"HBStreamCallback"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Function returning streamed byte buffer output"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamerOutput":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerOutput"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBStreamerOutput"}],"title":"HBStreamerOutput","abstract":[{"type":"text","text":"Values returned when we consume the contents of the streamer"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamerOutput","url":"\/documentation\/hummingbirdcore\/hbstreameroutput","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBSendable":{"url":"\/documentation\/hummingbirdcore\/hbsendable","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSendable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable","deprecated":true,"title":"HBSendable","navigatorTitle":[{"kind":"identifier","text":"HBSendable"}],"role":"symbol","type":"topic","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","navigatorTitle":[{"kind":"identifier","text":"HBChannelInitializer"}],"kind":"symbol","type":"topic","title":"HBChannelInitializer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBChannelInitializer"}],"url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","role":"symbol","abstract":[{"text":"HTTPServer child channel initializer protocol","type":"text"}]},"https://github.com/swift-server/swift-service-lifecycle":{"url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"text":"swift-service-lifecycle","type":"text"}],"title":"swift-service-lifecycle","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPRequest":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPRequest"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPRequest"}],"title":"HBHTTPRequest","abstract":[{"type":"text","text":"HTTP request"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","url":"\/documentation\/hummingbirdcore\/hbhttprequest","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPError":{"url":"\/documentation\/hummingbirdcore\/hbhttperror","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPError","title":"HBHTTPError","navigatorTitle":[{"kind":"identifier","text":"HBHTTPError"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"title":"HTTP1ChannelInitializer","abstract":[{"type":"text","text":"Setup child channel for HTTP1"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","url":"\/documentation\/hummingbirdcore\/http1channelinitializer","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"abstract":[{"type":"text","text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer"}],"title":"HBRequestBody","navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","url":"\/documentation\/hummingbirdcore\/hbrequestbody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBBindAddress":{"url":"\/documentation\/hummingbirdcore\/hbbindaddress","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBindAddress"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","title":"HBBindAddress","navigatorTitle":[{"kind":"identifier","text":"HBBindAddress"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Address to bind server to"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","title":"HummingbirdHTTP2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBootstrap":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap","navigatorTitle":[{"kind":"identifier","text":"HTTPServerBootstrap"}],"kind":"symbol","type":"topic","title":"HTTPServerBootstrap","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerBootstrap"}],"url":"\/documentation\/hummingbirdcore\/httpserverbootstrap","role":"symbol","abstract":[{"text":"Protocol for bootstrap.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBodyStreamer":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseBodyStreamer"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponseBodyStreamer"}],"title":"HBResponseBodyStreamer","abstract":[{"text":"Object supplying ByteBuffers for a response body","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyStreamer","url":"\/documentation\/hummingbirdcore\/hbresponsebodystreamer","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","kind":"symbol","type":"topic","title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","role":"collection","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}]}}}