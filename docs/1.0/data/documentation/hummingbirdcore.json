{"hierarchy":{"paths":[[]]},"metadata":{"externalID":"HummingbirdCore","roleHeading":"Framework","modules":[{"name":"HummingbirdCore"}],"title":"HummingbirdCore","symbolKind":"module","role":"collection"},"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable"],"title":"Type Aliases"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based HTTP server. When starting the server you provide it with a struct that conforms to ","type":"text"},{"code":"HBHTTPResponder","type":"codeVoice"},{"text":" to define how the server should respond to requests. For example the following is a responder that always returns a response containing the word “Hello” in the body.","type":"text"}],"type":"paragraph"},{"code":["struct HelloResponder: HBHTTPResponder {","    func respond(to request: HBHTTPRequest, context: ChannelHandlerContext, onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"You then initialise a "},{"type":"codeVoice","code":"HBHTTPServer"},{"type":"text","text":", call "},{"type":"codeVoice","code":"start"},{"type":"text","text":" on it and then "},{"type":"codeVoice","code":"wait"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount)","let server = HBHTTPServer(","    group: eventLoopGroup, ","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()","\/\/ Wait until server closes which never happens as server channel is never closed","try server.wait()"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Swift service lifecycle","anchor":"Swift-service-lifecycle","level":2},{"inlineContent":[{"type":"text","text":"If you are using HummingbirdCore outside of Hummingbird ideally you would use it along with the swift-server library "},{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"reference","isActive":true},{"type":"text","text":". This gives you a framework for clean initialization and shutdown of your server. The following sets up a Lifecycle that initializes the HTTP server and stops it when the application shuts down."}],"type":"paragraph"},{"code":["import Lifecycle","import LifecycleNIOCompat","","let lifecycle = ServiceLifecycle()","lifecycle.register(","    label: \"HTTP Server\",","    start: .eventLoopFuture { self.server.start(responder: MyResponder()) },","    shutdown: .eventLoopFuture(self.server.stop)",")","lifecycle.start { error in","    if let error = error {","        print(\"ERROR: \\(error)\")","    }","}","lifecycle.wait()"],"type":"codeListing","syntax":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","type":"topic","kind":"symbol","role":"collection","title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection","title":"HummingbirdCore","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponse":{"title":"HBHTTPResponse","navigatorTitle":[{"text":"HBHTTPResponse","kind":"identifier"}],"abstract":[{"text":"HTTP response","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponse","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBHTTPResponse","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"abstract":[{"text":"HTTP server class","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"title":"HBHTTPServer","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbhttpserver","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPRequest":{"role":"symbol","abstract":[{"text":"HTTP request","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","navigatorTitle":[{"text":"HBHTTPRequest","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPRequest","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbhttprequest","title":"HBHTTPRequest"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerProtocol":{"navigatorTitle":[{"text":"HBStreamerProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamerProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbstreamerprotocol","abstract":[{"text":"Protocol for objects providing a stream of ByteBuffers","type":"text"}],"role":"symbol","title":"HBStreamerProtocol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","kind":"symbol"},"https://github.com/swift-server/swift-service-lifecycle":{"titleInlineContent":[{"type":"text","text":"swift-service-lifecycle"}],"title":"swift-service-lifecycle","type":"link","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBSendable":{"navigatorTitle":[{"text":"HBSendable","kind":"identifier"}],"title":"HBSendable","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable","url":"\/documentation\/hummingbirdcore\/hbsendable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"HBSendable","kind":"identifier"}],"deprecated":true,"abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBody":{"url":"\/documentation\/hummingbird\/hbresponsebody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","title":"HBResponseBody","abstract":[{"text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty","type":"text"}],"navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","url":"\/documentation\/hummingbird\/hbrequestbody","title":"HBRequestBody","abstract":[{"text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer","type":"text"}],"navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBootstrap":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap","title":"HTTPServerBootstrap","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerBootstrap","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/httpserverbootstrap","type":"topic","abstract":[{"type":"text","text":"Protocol for bootstrap."}],"role":"symbol","navigatorTitle":[{"text":"HTTPServerBootstrap","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"title":"HummingbirdHTTP2","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","type":"topic","url":"\/documentation\/hummingbirdhttp2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"abstract":[{"text":"Address to bind server to","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBindAddress","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"title":"HBBindAddress","url":"\/documentation\/hummingbird\/hbbindaddress"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPError","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","url":"\/documentation\/hummingbird\/hbhttperror","title":"HBHTTPError","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}],"navigatorTitle":[{"text":"HBHTTPError","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPResponseError":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError","title":"HBHTTPResponseError","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponseError","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbhttpresponseerror","type":"topic","abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"role":"symbol","navigatorTitle":[{"text":"HBHTTPResponseError","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerOutput":{"abstract":[{"text":"Values returned when we consume the contents of the streamer","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamerOutput","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBStreamerOutput","kind":"identifier"}],"title":"HBStreamerOutput","url":"\/documentation\/hummingbird\/hbstreameroutput"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbhttpresponder","abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"HBHTTPResponder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"abstract":[{"text":"Setup child channel for HTTP1","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","url":"\/documentation\/hummingbirdcore\/http1channelinitializer","kind":"symbol","role":"symbol","title":"HTTP1ChannelInitializer","type":"topic","navigatorTitle":[{"text":"HTTP1ChannelInitializer","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBodyStreamer":{"navigatorTitle":[{"text":"HBResponseBodyStreamer","kind":"identifier"}],"abstract":[{"type":"text","text":"Object supplying ByteBuffers for a response body"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBodyStreamer","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbresponsebodystreamer","title":"HBResponseBodyStreamer","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBByteBufferStreamer","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer","title":"HBByteBufferStreamer","abstract":[{"text":"Request body streamer. ","type":"text"},{"code":"HBHTTPDecodeHandler","type":"codeVoice"},{"text":" feeds this with ByteBuffers while the Router consumes them","type":"text"}],"navigatorTitle":[{"text":"HBByteBufferStreamer","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamCallback":{"type":"topic","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamCallback","kind":"identifier"}],"navigatorTitle":[{"text":"HBStreamCallback","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback","abstract":[{"text":"Function returning streamed byte buffer output","type":"text"}],"title":"HBStreamCallback","url":"\/documentation\/hummingbirdcore\/hbstreamcallback","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"abstract":[{"text":"HTTPServer child channel initializer protocol","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","title":"HBChannelInitializer","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBChannelInitializer"}],"navigatorTitle":[{"kind":"identifier","text":"HBChannelInitializer"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBodyStreamerSequence":{"navigatorTitle":[{"text":"HBRequestBodyStreamerSequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBodyStreamerSequence","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence","abstract":[{"text":"AsyncSequence providing ByteBuffers from a request body stream","type":"text"}],"role":"symbol","title":"HBRequestBodyStreamerSequence","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","kind":"symbol"}}}