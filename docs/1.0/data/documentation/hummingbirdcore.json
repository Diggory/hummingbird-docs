{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based HTTP server. When starting the server you provide it with a struct that conforms to ","type":"text"},{"code":"HBHTTPResponder","type":"codeVoice"},{"type":"text","text":" to define how the server should respond to requests. For example the following is a responder that always returns a response containing the word “Hello” in the body."}],"type":"paragraph"},{"syntax":"swift","code":["struct HelloResponder: HBHTTPResponder {","    func respond(to request: HBHTTPRequest, context: ChannelHandlerContext, onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"You then initialise a "},{"type":"codeVoice","code":"HBHTTPServer"},{"type":"text","text":", call "},{"type":"codeVoice","code":"start"},{"type":"text","text":" on it and then "},{"type":"codeVoice","code":"wait"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["let eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount)","let server = HBHTTPServer(","    group: eventLoopGroup, ","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()","\/\/ Wait until server closes which never happens as server channel is never closed","try server.wait()"],"type":"codeListing"},{"text":"Swift service lifecycle","anchor":"Swift-service-lifecycle","type":"heading","level":2},{"inlineContent":[{"text":"If you are using HummingbirdCore outside of Hummingbird ideally you would use it along with the swift-server library ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"text":". This gives you a framework for clean initialization and shutdown of your server. The following sets up a Lifecycle that initializes the HTTP server and stops it when the application shuts down.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["import Lifecycle","import LifecycleNIOCompat","","let lifecycle = ServiceLifecycle()","lifecycle.register(","    label: \"HTTP Server\",","    start: .eventLoopFuture { self.server.start(responder: MyResponder()) },","    shutdown: .eventLoopFuture(self.server.stop)",")","lifecycle.start { error in","    if let error = error {","        print(\"ERROR: \\(error)\")","    }","}","lifecycle.wait()"],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"metadata":{"modules":[{"name":"HummingbirdCore"}],"externalID":"HummingbirdCore","symbolKind":"module","role":"collection","title":"HummingbirdCore","roleHeading":"Framework"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[[]]},"sections":[],"topicSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress"]},{"title":"Request","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput"]},{"title":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback"]},{"title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBody":{"url":"\/documentation\/hummingbird\/hbresponsebody","role":"symbol","abstract":[{"text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponseBody"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","title":"HBResponseBody","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamCallback":{"abstract":[{"text":"Function returning streamed byte buffer output","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamCallback","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"HBStreamCallback","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback","navigatorTitle":[{"text":"HBStreamCallback","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbstreamcallback","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"HBStreamerProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","title":"HBStreamerProtocol","kind":"symbol","url":"\/documentation\/hummingbird\/hbstreamerprotocol","type":"topic","role":"symbol","abstract":[{"text":"Protocol for objects providing a stream of ByteBuffers","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerOutput":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerOutput"}],"navigatorTitle":[{"kind":"identifier","text":"HBStreamerOutput"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput","title":"HBStreamerOutput","kind":"symbol","url":"\/documentation\/hummingbird\/hbstreameroutput","type":"topic","role":"symbol","abstract":[{"text":"Values returned when we consume the contents of the streamer","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"type":"topic","abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"type":"codeVoice","code":"HBHTTPResponse"},{"type":"text","text":" from a "},{"type":"codeVoice","code":"HBHTTPRequest"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","url":"\/documentation\/hummingbirdcore\/hbhttpresponder","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}],"title":"HBHTTPResponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","kind":"symbol","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBootstrap":{"url":"\/documentation\/hummingbirdcore\/httpserverbootstrap","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap","navigatorTitle":[{"kind":"identifier","text":"HTTPServerBootstrap"}],"abstract":[{"text":"Protocol for bootstrap.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerBootstrap"}],"title":"HTTPServerBootstrap"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponse":{"title":"HBHTTPResponse","abstract":[{"text":"HTTP response","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponse"}],"url":"\/documentation\/hummingbirdcore\/hbhttpresponse","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponse"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBodyStreamer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","navigatorTitle":[{"text":"HBResponseBodyStreamer","kind":"identifier"}],"type":"topic","abstract":[{"text":"Object supplying ByteBuffers for a response body","type":"text"}],"title":"HBResponseBodyStreamer","url":"\/documentation\/hummingbird\/hbresponsebodystreamer","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBodyStreamer","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPRequest":{"title":"HBHTTPRequest","url":"\/documentation\/hummingbirdcore\/hbhttprequest","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBHTTPRequest","kind":"identifier"}],"type":"topic","abstract":[{"text":"HTTP request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPRequest","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"abstract":[{"type":"text","text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","title":"HBRequestBody","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/hbrequestbody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBodyStreamerSequence":{"url":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence","role":"symbol","abstract":[{"text":"AsyncSequence providing ByteBuffers from a request body stream","type":"text"}],"navigatorTitle":[{"text":"HBRequestBodyStreamerSequence","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRequestBodyStreamerSequence","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","title":"HBRequestBodyStreamerSequence","type":"topic","kind":"symbol"},"https://github.com/swift-server/swift-service-lifecycle":{"titleInlineContent":[{"text":"swift-service-lifecycle","type":"text"}],"title":"swift-service-lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"title":"HBHTTPServer","url":"\/documentation\/hummingbirdcore\/hbhttpserver","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"type":"topic","abstract":[{"text":"HTTP server class","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"title":"HummingbirdTLS","role":"collection","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdtls","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer":{"abstract":[{"text":"Request body streamer. ","type":"text"},{"code":"HBHTTPDecodeHandler","type":"codeVoice"},{"text":" feeds this with ByteBuffers while the Router consumes them","type":"text"}],"url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer","kind":"symbol","type":"topic","role":"symbol","title":"HBByteBufferStreamer","navigatorTitle":[{"kind":"identifier","text":"HBByteBufferStreamer"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBByteBufferStreamer"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPResponseError":{"role":"symbol","navigatorTitle":[{"text":"HBHTTPResponseError","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponseError","kind":"identifier"}],"abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError","title":"HBHTTPResponseError","url":"\/documentation\/hummingbird\/hbhttpresponseerror"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBSendable":{"title":"HBSendable","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSendable","kind":"identifier"}],"abstract":[],"kind":"symbol","deprecated":true,"url":"\/documentation\/hummingbirdcore\/hbsendable","type":"topic","navigatorTitle":[{"text":"HBSendable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"type":"topic","abstract":[{"text":"HTTPServer child channel initializer protocol","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBChannelInitializer"}],"title":"HBChannelInitializer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBChannelInitializer"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"url":"\/documentation\/hummingbird\/hbbindaddress","kind":"symbol","abstract":[{"text":"Address to bind server to","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBindAddress","kind":"identifier"}],"navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"title":"HBBindAddress","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError":{"url":"\/documentation\/hummingbird\/hbhttperror","role":"symbol","abstract":[{"text":"Default HTTP error. Provides an HTTP status and a message is so desired","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPError"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","title":"HBHTTPError","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","title":"HTTP1ChannelInitializer","type":"topic","url":"\/documentation\/hummingbirdcore\/http1channelinitializer","navigatorTitle":[{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Setup child channel for HTTP1"}],"kind":"symbol"}}}