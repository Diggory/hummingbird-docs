{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"metadata":{"modules":[{"name":"HummingbirdCore"}],"externalID":"HummingbirdCore","roleHeading":"Framework","title":"HummingbirdCore","role":"collection","symbolKind":"module"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamerProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamerOutput"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable"],"title":"Type Aliases"}],"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"sections":[],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based HTTP server. When starting the server you provide it with a struct that conforms to "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" to define how the server should respond to requests. For example the following is a responder that always returns a response containing the word “Hello” in the body."}]},{"syntax":"swift","type":"codeListing","code":["struct HelloResponder: HBHTTPResponder {","    func respond(to request: HBHTTPRequest, context: ChannelHandlerContext, onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"You then initialise a ","type":"text"},{"type":"codeVoice","code":"HBHTTPServer"},{"type":"text","text":", call "},{"type":"codeVoice","code":"start"},{"type":"text","text":" on it and then "},{"type":"codeVoice","code":"wait"},{"type":"text","text":"."}]},{"syntax":"swift","type":"codeListing","code":["let eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount)","let server = HBHTTPServer(","    group: eventLoopGroup, ","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()","\/\/ Wait until server closes which never happens as server channel is never closed","try server.wait()"]},{"level":2,"text":"Swift service lifecycle","type":"heading","anchor":"Swift-service-lifecycle"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are using HummingbirdCore outside of Hummingbird ideally you would use it along with the swift-server library "},{"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","isActive":true},{"type":"text","text":". This gives you a framework for clean initialization and shutdown of your server. The following sets up a Lifecycle that initializes the HTTP server and stops it when the application shuts down."}]},{"syntax":"swift","type":"codeListing","code":["import Lifecycle","import LifecycleNIOCompat","","let lifecycle = ServiceLifecycle()","lifecycle.register(","    label: \"HTTP Server\",","    start: .eventLoopFuture { self.server.start(responder: MyResponder()) },","    shutdown: .eventLoopFuture(self.server.stop)",")","lifecycle.start { error in","    if let error = error {","        print(\"ERROR: \\(error)\")","    }","}","lifecycle.wait()"]}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody":{"abstract":[{"type":"text","text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponseBody"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbresponsebody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","title":"HBResponseBody","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseBody"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponse":{"abstract":[{"type":"text","text":"HTTP response"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponse"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponse","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","title":"HBHTTPResponse","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponse"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","abstract":[{"text":"HTTP server class","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpserver","title":"HBHTTPServer","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamerProtocol":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerProtocol"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamerProtocol","title":"HBStreamerProtocol","navigatorTitle":[{"kind":"identifier","text":"HBStreamerProtocol"}],"url":"\/documentation\/hummingbirdcore\/hbstreamerprotocol","role":"symbol","abstract":[{"type":"text","text":"Protocol for objects providing a stream of ByteBuffers"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPError":{"url":"\/documentation\/hummingbirdcore\/hbhttperror","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPError","navigatorTitle":[{"text":"HBHTTPError","kind":"identifier"}],"role":"symbol","title":"HBHTTPError","type":"topic","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamerOutput":{"title":"HBStreamerOutput","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerOutput"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBStreamerOutput"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamerOutput","abstract":[{"type":"text","text":"Values returned when we consume the contents of the streamer"}],"url":"\/documentation\/hummingbirdcore\/hbstreameroutput","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBBindAddress":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","role":"symbol","navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBindAddress","kind":"identifier"}],"title":"HBBindAddress","type":"topic","url":"\/documentation\/hummingbirdcore\/hbbindaddress","abstract":[{"text":"Address to bind server to","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBodyStreamer":{"kind":"symbol","type":"topic","title":"HBResponseBodyStreamer","navigatorTitle":[{"kind":"identifier","text":"HBResponseBodyStreamer"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseBodyStreamer"}],"url":"\/documentation\/hummingbirdcore\/hbresponsebodystreamer","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyStreamer","abstract":[{"text":"Object supplying ByteBuffers for a response body","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponseError":{"url":"\/documentation\/hummingbirdcore\/hbhttpresponseerror","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponseError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponseError","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponseError"}],"role":"symbol","title":"HBHTTPResponseError","type":"topic","abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"abstract":[{"text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer","type":"text"}],"navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbrequestbody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","title":"HBRequestBody","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","role":"symbol","navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBHTTPResponder","kind":"identifier"}],"title":"HBHTTPResponder","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder","abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"type":"codeVoice","code":"HBHTTPResponse"},{"text":" from a ","type":"text"},{"type":"codeVoice","code":"HBHTTPRequest"},{"text":".","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","kind":"symbol","title":"HummingbirdTLS","type":"topic","url":"\/documentation\/hummingbirdtls","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer":{"url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","abstract":[{"type":"text","text":"Request body streamer. "},{"type":"codeVoice","code":"HBHTTPDecodeHandler"},{"type":"text","text":" feeds this with ByteBuffers while the Router consumes them"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBByteBufferStreamer"}],"role":"symbol","kind":"symbol","title":"HBByteBufferStreamer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBByteBufferStreamer"}]},"https://github.com/swift-server/swift-service-lifecycle":{"type":"link","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","title":"swift-service-lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"type":"text","text":"swift-service-lifecycle"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBootstrap":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap","role":"symbol","navigatorTitle":[{"text":"HTTPServerBootstrap","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerBootstrap","kind":"identifier"}],"title":"HTTPServerBootstrap","type":"topic","url":"\/documentation\/hummingbirdcore\/httpserverbootstrap","abstract":[{"text":"Protocol for bootstrap.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"url":"\/documentation\/hummingbirdcore\/http1channelinitializer","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","navigatorTitle":[{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"role":"symbol","title":"HTTP1ChannelInitializer","type":"topic","abstract":[{"type":"text","text":"Setup child channel for HTTP1"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBodyStreamerSequence":{"url":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","abstract":[{"text":"AsyncSequence providing ByteBuffers from a request body stream","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRequestBodyStreamerSequence"}],"role":"symbol","kind":"symbol","title":"HBRequestBodyStreamerSequence","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBRequestBodyStreamerSequence"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPRequest":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","abstract":[{"text":"HTTP request","type":"text"}],"title":"HBHTTPRequest","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPRequest"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBHTTPRequest"}],"url":"\/documentation\/hummingbirdcore\/hbhttprequest","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","role":"collection","kind":"symbol","title":"HummingbirdHTTP2","type":"topic","url":"\/documentation\/hummingbirdhttp2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamCallback":{"title":"HBStreamCallback","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamCallback"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBStreamCallback"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback","abstract":[{"type":"text","text":"Function returning streamed byte buffer output"}],"url":"\/documentation\/hummingbirdcore\/hbstreamcallback","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBSendable":{"type":"topic","title":"HBSendable","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBSendable"}],"deprecated":true,"abstract":[],"url":"\/documentation\/hummingbirdcore\/hbsendable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSendable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBChannelInitializer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","navigatorTitle":[{"text":"HBChannelInitializer","kind":"identifier"}],"role":"symbol","title":"HBChannelInitializer","type":"topic","abstract":[{"type":"text","text":"HTTPServer child channel initializer protocol"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","type":"topic","role":"collection"}}}