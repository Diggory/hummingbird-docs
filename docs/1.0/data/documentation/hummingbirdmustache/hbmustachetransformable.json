{"abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"metadata":{"roleHeading":"Protocol","symbolKind":"protocol","role":"symbol","title":"HBMustacheTransformable","externalID":"s:19HummingbirdMustache23HBMustacheTransformableP","navigatorTitle":[{"text":"HBMustacheTransformable","kind":"identifier"}],"modules":[{"name":"HummingbirdMustache"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheTransformable","kind":"identifier"}]},"seeAlsoSections":[{"title":"Rendering","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable\/transform(_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"variants":[{"paths":["\/documentation\/hummingbirdmustache\/hbmustachetransformable"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheTransformable"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The syntax for applying transforms is ","type":"text"},{"code":"{{transform(variable)}}","type":"codeVoice"},{"text":". Transforms can be applied to both","type":"text"},{"text":" ","type":"text"},{"text":"variables, sections and inverted sections.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A simple example would be ensuring a string is lowercase."}]},{"code":["{{lowercased(myString)}}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"If applying a transform to a sequence then the closing element of the sequence should include the","type":"text"},{"text":" ","type":"text"},{"text":"transform name eg","type":"text"}]},{"code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"],"type":"codeListing","syntax":null}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheCustomRenderable":{"abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheCustomRenderable"}],"role":"symbol","title":"HBMustacheCustomRenderable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMustacheCustomRenderable"}],"type":"topic","url":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable/transform(_:)":{"type":"topic","kind":"symbol","title":"transform(_:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transform","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"abstract":[],"role":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable\/transform(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable\/transform(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheLambda":{"type":"topic","title":"HBMustacheLambda","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheLambda"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"navigatorTitle":[{"kind":"identifier","text":"HBMustacheLambda"}],"url":"\/documentation\/hummingbirdmustache\/hbmustachelambda","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable":{"type":"topic","kind":"symbol","title":"HBMustacheTransformable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheTransformable","kind":"identifier"}],"navigatorTitle":[{"text":"HBMustacheTransformable","kind":"identifier"}],"abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheParent":{"abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheParent"}],"role":"symbol","title":"HBMustacheParent","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMustacheParent"}],"type":"topic","url":"\/documentation\/hummingbirdmustache\/hbmustacheparent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"type":"topic","kind":"symbol","title":"HummingbirdMustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdmustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"}}}