{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable\/transform(_:)"],"title":"Instance Methods"}],"kind":"symbol","abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"variants":[{"paths":["\/documentation\/hummingbirdmustache\/hbmustachetransformable"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"protocol","navigatorTitle":[{"text":"HBMustacheTransformable","kind":"identifier"}],"externalID":"s:19HummingbirdMustache23HBMustacheTransformableP","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheTransformable","kind":"identifier"}],"modules":[{"name":"HummingbirdMustache"}],"title":"HBMustacheTransformable","role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheTransformable","kind":"identifier"}],"platforms":["Linux"]}]},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The syntax for applying transforms is ","type":"text"},{"code":"{{transform(variable)}}","type":"codeVoice"},{"text":". Transforms can be applied to both","type":"text"},{"text":" ","type":"text"},{"text":"variables, sections and inverted sections.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"A simple example would be ensuring a string is lowercase.","type":"text"}]},{"code":["{{lowercased(myString)}}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"If applying a transform to a sequence then the closing element of the sequence should include the"},{"type":"text","text":" "},{"type":"text","text":"transform name eg"}]},{"code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"],"type":"codeListing","syntax":null}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda"],"title":"Rendering","generated":true}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable/transform(_:)":{"required":true,"url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable\/transform(_:)","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transform","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"type":"topic","title":"transform(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable\/transform(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheTransformable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","type":"topic","navigatorTitle":[{"text":"HBMustacheTransformable","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable","kind":"symbol","title":"HBMustacheTransformable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"title":"HummingbirdMustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdmustache","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheLambda":{"title":"HBMustacheLambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheLambda","kind":"identifier"}],"navigatorTitle":[{"text":"HBMustacheLambda","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustachelambda","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheParent":{"url":"\/documentation\/hummingbirdmustache\/hbmustacheparent","navigatorTitle":[{"text":"HBMustacheParent","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"title":"HBMustacheParent","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheParent","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheCustomRenderable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheCustomRenderable","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBMustacheCustomRenderable","kind":"identifier"}],"url":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable","title":"HBMustacheCustomRenderable","kind":"symbol","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"code":"String(describing)","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","type":"topic"}}}