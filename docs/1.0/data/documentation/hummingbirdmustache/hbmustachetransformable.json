{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheTransformable","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The syntax for applying transforms is "},{"type":"codeVoice","code":"{{transform(variable)}}"},{"type":"text","text":". Transforms can be applied to both"},{"type":"text","text":" "},{"type":"text","text":"variables, sections and inverted sections."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A simple example would be ensuring a string is lowercase."}]},{"syntax":null,"type":"codeListing","code":["{{lowercased(myString)}}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If applying a transform to a sequence then the closing element of the sequence should include the"},{"type":"text","text":" "},{"type":"text","text":"transform name eg"}]},{"syntax":null,"type":"codeListing","code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheTransformable"}],"modules":[{"name":"HummingbirdMustache"}],"roleHeading":"Protocol","title":"HBMustacheTransformable","externalID":"s:19HummingbirdMustache23HBMustacheTransformableP","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"HBMustacheTransformable"}],"role":"symbol"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable\/transform(_:)"],"title":"Instance Methods"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda"],"title":"Rendering"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdmustache\/hbmustachetransformable"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheParent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdmustache\/hbmustacheparent","role":"symbol","navigatorTitle":[{"text":"HBMustacheParent","kind":"identifier"}],"title":"HBMustacheParent","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheParent","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"role":"collection","kind":"symbol","url":"\/documentation\/hummingbirdmustache","type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}],"title":"HummingbirdMustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable/transform(_:)":{"type":"topic","required":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transform"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"title":"transform(_:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable\/transform(_:)","abstract":[],"url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable\/transform(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable","role":"symbol","navigatorTitle":[{"text":"HBMustacheTransformable","kind":"identifier"}],"title":"HBMustacheTransformable","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheTransformable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdmustache\/hbmustachelambda","role":"symbol","navigatorTitle":[{"text":"HBMustacheLambda","kind":"identifier"}],"title":"HBMustacheLambda","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheLambda","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheCustomRenderable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable","role":"symbol","navigatorTitle":[{"text":"HBMustacheCustomRenderable","kind":"identifier"}],"title":"HBMustacheCustomRenderable","abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheCustomRenderable","kind":"identifier"}]}}}