{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2ChannelInitializer"],"title":"Structures"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"text":"HummingbirdHTTP2 adds a single function ","type":"text"},{"code":"addHTTP2Upgrade(tlsConfiguration:)","type":"codeVoice"},{"text":" to ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","type":"reference","isActive":true},{"text":". Setting up a server with HTTP2 is simple as passing a NIOSSL ","type":"text"},{"type":"codeVoice","code":"TLSConfiguration"},{"text":" struct to the server.","type":"text"}],"type":"paragraph"},{"code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Add TLS support to server","app.server.addHTTP2Upgrade(tlsConfiguration: tlsConfiguration)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"HTTP2 secure upgrade requires a TLS connection so this will add a TLS handler as well. Do not call addTLS() inconjunction with this as you will then be adding two TLS handlers.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdhttp2"]}],"hierarchy":{"paths":[[]]},"metadata":{"externalID":"HummingbirdHTTP2","role":"collection","symbolKind":"module","title":"HummingbirdHTTP2","roleHeading":"Framework","modules":[{"name":"HummingbirdHTTP2"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"url":"\/documentation\/hummingbirdhttp2","role":"collection","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"title":"HummingbirdHTTP2","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"title":"HBHTTPServer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","url":"\/documentation\/hummingbirdcore\/hbhttpserver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}],"type":"topic","abstract":[{"text":"HTTP server class","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","url":"\/documentation\/hummingbirdtls","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"type":"topic","title":"HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2/HTTP2ChannelInitializer":{"kind":"symbol","title":"HTTP2ChannelInitializer","url":"\/documentation\/hummingbirdhttp2\/http2channelinitializer","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2ChannelInitializer","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2ChannelInitializer"}],"abstract":[{"text":"Setup child channel for HTTP2","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HTTP2ChannelInitializer"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","title":"HummingbirdCore"}}}