{"hierarchy":{"paths":[[]]},"kind":"symbol","primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdHTTP2 adds a single function ","type":"text"},{"code":"addHTTP2Upgrade(tlsConfiguration:)","type":"codeVoice"},{"text":" to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","type":"reference"},{"text":". Setting up a server with HTTP2 is simple as passing a NIOSSL ","type":"text"},{"code":"TLSConfiguration","type":"codeVoice"},{"text":" struct to the server.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Add TLS support to server","app.server.addHTTP2Upgrade(tlsConfiguration: tlsConfiguration)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"HTTP2 secure upgrade requires a TLS connection so this will add a TLS handler as well. Do not call addTLS() inconjunction with this as you will then be adding two TLS handlers."}]}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2ChannelInitializer"],"title":"Structures"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Framework","modules":[{"name":"HummingbirdHTTP2"}],"title":"HummingbirdHTTP2","symbolKind":"module","externalID":"HummingbirdHTTP2","role":"collection"},"abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdhttp2"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","kind":"symbol","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"role":"collection","type":"topic","title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpserver","abstract":[{"text":"HTTP server class","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","title":"HBHTTPServer","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","type":"topic","url":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","kind":"symbol","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"role":"collection","type":"topic","title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2/HTTP2ChannelInitializer":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2ChannelInitializer","kind":"identifier"}],"title":"HTTP2ChannelInitializer","kind":"symbol","role":"symbol","abstract":[{"text":"Setup child channel for HTTP2","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2ChannelInitializer","url":"\/documentation\/hummingbirdhttp2\/http2channelinitializer","navigatorTitle":[{"text":"HTTP2ChannelInitializer","kind":"identifier"}]}}}