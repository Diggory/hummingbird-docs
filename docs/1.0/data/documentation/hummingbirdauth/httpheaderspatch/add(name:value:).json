{"variants":[{"paths":["\/documentation\/hummingbirdauth\/httpheaderspatch\/add(name:value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Add a header name\/value pair to the block."}],"metadata":{"title":"add(name:value:)","externalID":"s:11Hummingbird16HTTPHeadersPatchV3add4name5valueySS_SStF","role":"symbol","modules":[{"name":"HummingbirdAuth"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method"},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The header field name. For maximum compatibility this should be an"},{"type":"text","text":" "},{"type":"text","text":"ASCII string. For future-proofing with HTTP\/2 lowercase header names are strongly"},{"type":"text","text":" "},{"type":"text","text":"recommended."}],"type":"paragraph"}],"name":"name"},{"content":[{"inlineContent":[{"text":"The header field value to add for the given name.","type":"text"}],"type":"paragraph"}],"name":"value"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"This method is strictly additive: if there are other values for the given header name","type":"text"},{"text":" ","type":"text"},{"text":"already in the block, this will add a new entry.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch\/add(name:value:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HTTPHeadersPatch":{"kind":"symbol","url":"\/documentation\/hummingbirdauth\/httpheaderspatch","abstract":[{"text":"Used to Patch HTTPHeaders. Remembers if a header was added in with ","type":"text"},{"code":"add","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"replaceOrAdd","type":"codeVoice"}],"type":"topic","role":"symbol","title":"HTTPHeadersPatch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeadersPatch","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch","navigatorTitle":[{"text":"HTTPHeadersPatch","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HTTPHeadersPatch/add(name:value:)":{"abstract":[{"type":"text","text":"Add a header name\/value pair to the block."}],"type":"topic","url":"\/documentation\/hummingbirdauth\/httpheaderspatch\/add(name:value:)","kind":"symbol","title":"add(name:value:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch\/add(name:value:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}