{"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbrouterbuilder"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"code":"HBRouterBuilder","type":"codeVoice"},{"text":" requires an implementation of  the ","type":"text"},{"code":"on(path:method:use)","type":"codeVoice"},{"text":" functions but because it","type":"text"},{"text":" ","type":"text"},{"text":"also conforms to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" it is also possible to call the method specific functions ","type":"text"},{"code":"get","type":"codeVoice"},{"text":", ","type":"text"},{"code":"put","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"code":"head","type":"codeVoice"},{"text":", ","type":"text"},{"code":"post","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"patch","type":"codeVoice"},{"text":".  The route handler closures all return objects conforming to","type":"text"},{"text":" ","type":"text"},{"code":"HBResponseGenerator","type":"codeVoice"},{"text":".  This allows us to support routes which return a multitude of types eg","type":"text"}]},{"syntax":null,"code":["app.router.get(\"string\") { _ -> String in","    return \"string\"","}","app.router.post(\"status\") { _ -> HTTPResponseStatus in","    return .ok","}","app.router.data(\"data\") { request -> ByteBuffer in","    return request.allocator.buffer(string: \"buffer\")","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Routes can also return "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"’s. So you can support returning values from"},{"type":"text","text":" "},{"type":"text","text":"asynchronous processes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default "},{"code":"Router","type":"codeVoice"},{"type":"text","text":" setup in "},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":" is the "},{"code":"TrieRouter","type":"codeVoice"},{"type":"text","text":" . This uses a"},{"type":"text","text":" "},{"type":"text","text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction"}]},{"syntax":null,"code":["app.router.get(\"user\/*\", use: anyUser)","app.router.get(\"user\/:id\", use: userWithId)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both of these match routes which start with “\/user” and the next path segment being anything."},{"type":"text","text":" "},{"type":"text","text":"The second version extracts the path segment out and adds it to "},{"type":"codeVoice","code":"HBRequest.parameters"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"key “id”."}]}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/middlewares"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/add(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/buildRouter()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/on(_:method:options:use:)-3277t","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/on(_:method:options:use:)-4t19t"]},{"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/HBRouterMethods-Implementations"],"generated":true}],"sections":[],"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"kind":"symbol","seeAlsoSections":[{"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder"],"generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:11Hummingbird15HBRouterBuilderC","title":"HBRouterBuilder","modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Class","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"role":"symbol"},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouteHandler":{"title":"HBRouteHandler","url":"\/documentation\/hummingbirdauth\/hbroutehandler","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"type":"topic","abstract":[{"type":"text","text":"Object for handling requests."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncCallbackResponder":{"title":"HBAsyncCallbackResponder","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbasynccallbackresponder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBCallbackResponder":{"url":"\/documentation\/hummingbirdauth\/hbcallbackresponder","navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"title":"HBCallbackResponder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"type":"topic","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/HBRouterMethods-Implementations":{"title":"HBRouterMethods Implementations","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/hbroutermethods-implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/HBRouterMethods-Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncRouteHandler":{"abstract":[{"text":"Route Handler using async\/await methods","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","title":"HBAsyncRouteHandler","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/hbasyncroutehandler"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","url":"\/documentation\/index","kind":"article","role":"collection","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/on(_:method:options:use:)-4t19t":{"abstract":[{"text":"Add path for closure returning type conforming to ResponseFutureEncodable","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/on(_:method:options:use:)-4t19t","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/on(_:method:options:use:)-4t19t","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"on(_:method:options:use:)","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","url":"\/documentation\/hummingbird\/router","kind":"article","role":"collectionGroup","type":"topic","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/add(_:method:responder:)":{"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/add(_:method:responder:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP","text":"HBResponder"},{"kind":"text","text":")"}],"abstract":[{"text":"Add route to router","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/add(_:method:responder:)","title":"add(_:method:responder:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterGroup":{"title":"HBRouterGroup","url":"\/documentation\/hummingbirdauth\/hbroutergroup","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequestDecodable":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestDecodable"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecodable"}],"abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","title":"HBRequestDecodable","url":"\/documentation\/hummingbirdauth\/hbrequestdecodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"HBResponder","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbresponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/on(_:method:options:use:)-3277t":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/on(_:method:options:use:)-3277t","abstract":[{"type":"text","text":"Add path for closure returning type conforming to ResponseFutureEncodable"}],"kind":"symbol","title":"on(_:method:options:use:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/on(_:method:options:use:)-3277t"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/middlewares":{"url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/middlewares","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/middlewares","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"middlewares","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC","text":"HBMiddlewareGroup","kind":"typeIdentifier"}],"type":"topic","title":"middlewares","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/group(_:)":{"title":"group(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/group(_:)","abstract":[{"text":"return new ","type":"text"},{"type":"codeVoice","code":"RouterGroup"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/group(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV","text":"HBRouterGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethodOptions":{"title":"HBRouterMethodOptions","url":"\/documentation\/hummingbirdauth\/hbroutermethodoptions","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Options available to routes"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/buildRouter()":{"title":"buildRouter()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/buildRouter()","abstract":[{"text":"build router","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/buildrouter()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildRouter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethods":{"url":"\/documentation\/hummingbirdauth\/hbroutermethods","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"abstract":[{"text":"Conform to ","type":"text"},{"type":"codeVoice","code":"HBRouterMethods"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"title":"HBRouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/init()":{"title":"init()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/init()","abstract":[],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder":{"title":"HBRouterBuilder","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}]}}}