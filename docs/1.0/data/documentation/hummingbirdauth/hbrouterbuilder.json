{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbrouterbuilder"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/middlewares"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/add(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/buildRouter()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/on(_:method:options:use:)-3277t","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/on(_:method:options:use:)-4t19t"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/HBRouterMethods-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"HBResponder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder"],"title":"Router","generated":true}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Class","title":"HBRouterBuilder","externalID":"s:11Hummingbird15HBRouterBuilderC","modules":[{"name":"HummingbirdAuth"}],"navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"code":"HBRouterBuilder","type":"codeVoice"},{"type":"text","text":" requires an implementation of  the "},{"code":"on(path:method:use)","type":"codeVoice"},{"type":"text","text":" functions but because it"},{"type":"text","text":" "},{"type":"text","text":"also conforms to "},{"code":"HBRouterMethods","type":"codeVoice"},{"type":"text","text":" it is also possible to call the method specific functions "},{"code":"get","type":"codeVoice"},{"type":"text","text":", "},{"code":"put","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"code":"head","type":"codeVoice"},{"type":"text","text":", "},{"code":"post","type":"codeVoice"},{"type":"text","text":" and "},{"code":"patch","type":"codeVoice"},{"type":"text","text":".  The route handler closures all return objects conforming to"},{"type":"text","text":" "},{"code":"HBResponseGenerator","type":"codeVoice"},{"type":"text","text":".  This allows us to support routes which return a multitude of types eg"}]},{"code":["app.router.get(\"string\") { _ -> String in","    return \"string\"","}","app.router.post(\"status\") { _ -> HTTPResponseStatus in","    return .ok","}","app.router.data(\"data\") { request -> ByteBuffer in","    return request.allocator.buffer(string: \"buffer\")","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Routes can also return ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":"’s. So you can support returning values from","type":"text"},{"text":" ","type":"text"},{"text":"asynchronous processes.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The default ","type":"text"},{"code":"Router","type":"codeVoice"},{"text":" setup in ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":" is the ","type":"text"},{"code":"TrieRouter","type":"codeVoice"},{"text":" . This uses a","type":"text"},{"text":" ","type":"text"},{"text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction","type":"text"}]},{"code":["app.router.get(\"user\/*\", use: anyUser)","app.router.get(\"user\/:id\", use: userWithId)"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Both of these match routes which start with “\/user” and the next path segment being anything.","type":"text"},{"text":" ","type":"text"},{"text":"The second version extracts the path segment out and adds it to ","type":"text"},{"type":"codeVoice","code":"HBRequest.parameters"},{"text":" with the","type":"text"},{"text":" ","type":"text"},{"text":"key “id”.","type":"text"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/buildRouter()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildRouter"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11Hummingbird11HBResponderP","text":"HBResponder","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/buildRouter()","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/buildrouter()","kind":"symbol","abstract":[{"text":"build router","type":"text"}],"title":"buildRouter()","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequestDecodable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"type":"topic","kind":"symbol","title":"HBRequestDecodable","url":"\/documentation\/hummingbirdauth\/hbrequestdecodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponder":{"kind":"symbol","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbresponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","type":"topic","role":"symbol","title":"HBResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBCallbackResponder":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbcallbackresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder","title":"HBCallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBCallbackResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/HBRouterMethods-Implementations":{"kind":"article","type":"topic","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/hbroutermethods-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/HBRouterMethods-Implementations","title":"HBRouterMethods Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/middlewares":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"middlewares","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC","text":"HBMiddlewareGroup","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/middlewares","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/middlewares","kind":"symbol","abstract":[],"title":"middlewares","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"kind":"article","type":"topic","url":"\/documentation\/hummingbird\/router","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","title":"Router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethods":{"role":"symbol","title":"HBRouterMethods","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"url":"\/documentation\/hummingbirdauth\/hbroutermethods"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncCallbackResponder":{"navigatorTitle":[{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdauth\/hbasynccallbackresponder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"title":"HBAsyncCallbackResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/group(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBRouterGroupV","text":"HBRouterGroup","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/group(_:)","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/group(_:)","kind":"symbol","abstract":[{"text":"return new ","type":"text"},{"code":"RouterGroup","type":"codeVoice"}],"title":"group(_:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethodOptions":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"url":"\/documentation\/hummingbirdauth\/hbroutermethodoptions","abstract":[{"text":"Options available to routes","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","title":"HBRouterMethodOptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/add(_:method:responder:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPMethod","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/add(_:method:responder:)","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/add(_:method:responder:)","kind":"symbol","abstract":[{"text":"Add route to router","type":"text"}],"title":"add(_:method:responder:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterGroup":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbroutergroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"text":"suffix to the endpoint path","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","title":"HBRouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncRouteHandler":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncRouteHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","navigatorTitle":[{"kind":"identifier","text":"HBAsyncRouteHandler"}],"type":"topic","title":"HBAsyncRouteHandler","kind":"symbol","abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"url":"\/documentation\/hummingbirdauth\/hbasyncroutehandler","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/on(_:method:options:use:)-3277t":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/on(_:method:options:use:)-3277t","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/on(_:method:options:use:)-3277t","kind":"symbol","abstract":[{"text":"Add path for closure returning type conforming to ResponseFutureEncodable","type":"text"}],"title":"on(_:method:options:use:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouteHandler":{"navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler","title":"HBRouteHandler","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbroutehandler","abstract":[{"type":"text","text":"Object for handling requests."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/on(_:method:options:use:)-4t19t":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPMethod","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/on(_:method:options:use:)-4t19t","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/on(_:method:options:use:)-4t19t","kind":"symbol","abstract":[{"text":"Add path for closure returning type conforming to ResponseFutureEncodable","type":"text"}],"title":"on(_:method:options:use:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","type":"topic","url":"\/documentation\/index","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"url":"\/documentation\/hummingbirdauth\/hbrouterbuilder","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder","title":"HBRouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder/init()":{"url":"\/documentation\/hummingbirdauth\/hbrouterbuilder\/init()","type":"topic","abstract":[],"title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder\/init()","kind":"symbol","role":"symbol"}}}