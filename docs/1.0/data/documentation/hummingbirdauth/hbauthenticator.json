{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:)-5hn4s"]}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddleware"],"kind":"relationships","type":"inheritsFrom"},{"title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncSessionAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator"],"kind":"relationships","type":"inheritedBy"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"]]},"abstract":[{"text":"Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"text":"authentication data.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Authenticators","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"]}],"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbauthenticator"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticator"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddleware","kind":"typeIdentifier","text":"HBMiddleware"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"Authenticators should conform to protocol ","type":"text"},{"code":"HBAuthenticator","type":"codeVoice"},{"text":". This requires you implement the function","type":"text"},{"text":" ","type":"text"},{"code":"authenticate(request: HBRequest) -> EventLoopFuture<Value?>","type":"codeVoice"},{"text":" where ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" is an","type":"text"},{"text":" ","type":"text"},{"text":"object conforming to the protocol ","type":"text"},{"code":"HBAuthenticatable","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A simple username, password authenticator could be implemented as follows. If the authenticator is successful"},{"type":"text","text":" "},{"type":"text","text":"it returns a "},{"code":"User","type":"codeVoice"},{"type":"text","text":" struct, otherwise it returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct BasicAuthenticator: HBAuthenticator {","    func authenticate(request: HBRequest) -> EventLoopFuture<User?> {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.auth.basic","        guard let basic = request.auth.basic else { return request.success(nil) }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        return database.getUserWithUsername(basic.username).map { user -> User? in","            \/\/ did we find a user","            guard let user = user else { return nil }","            \/\/ verify password against password hash stored in database. If valid","            \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","        \/\/ hop back to request eventloop","        .hop(to: request.eventLoop)","    }","}"]}],"kind":"content"}],"metadata":{"symbolKind":"protocol","role":"symbol","title":"HBAuthenticator","navigatorTitle":[{"kind":"identifier","text":"HBAuthenticator"}],"externalID":"s:15HummingbirdAuth15HBAuthenticatorP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticator"}],"roleHeading":"Protocol","modules":[{"name":"HummingbirdAuth"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncSessionAuthenticator":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncSessionAuthenticator"}],"kind":"symbol","type":"topic","title":"HBAsyncSessionAuthenticator","url":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator","abstract":[{"type":"text","text":"Async version of session authenticator."}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncSessionAuthenticator","navigatorTitle":[{"kind":"identifier","text":"HBAsyncSessionAuthenticator"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","abstract":[{"type":"text","text":"Middleware returning 404 for unauthenticated requests"}],"navigatorTitle":[{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"title":"IsAuthenticatedMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncAuthenticator":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBAsyncAuthenticator"}],"url":"\/documentation\/hummingbirdauth\/hbasyncauthenticator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","abstract":[{"text":"Async version of Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"authentication data."}],"title":"HBAsyncAuthenticator","navigatorTitle":[{"kind":"identifier","text":"HBAsyncAuthenticator"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSessionAuthenticator":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator","kind":"symbol","role":"symbol","type":"topic","title":"HBSessionAuthenticator","url":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","navigatorTitle":[{"text":"HBSessionAuthenticator","kind":"identifier"}],"abstract":[{"text":"Session authenticator","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSessionAuthenticator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"role":"collection","url":"\/documentation\/hummingbirdauth","kind":"symbol","title":"HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBMiddleware","navigatorTitle":[{"text":"HBMiddleware","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddleware","kind":"identifier"}],"title":"HBMiddleware","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"url":"\/documentation\/hummingbirdfoundation\/hbmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/Value":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value","required":true,"abstract":[{"type":"text","text":"type to be authenticated"}],"title":"Value","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"HBAuthenticatable","preciseIdentifier":"s:15HummingbirdAuth17HBAuthenticatableP"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticator\/value"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticatable":{"navigatorTitle":[{"kind":"identifier","text":"HBAuthenticatable"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticatable"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticatable","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","abstract":[{"type":"text","text":"Protocol for objects that can be returned by an "},{"code":"HBAuthenticator","type":"codeVoice"},{"type":"text","text":"."}],"title":"HBAuthenticatable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/authenticate(request:)-5hn4s":{"url":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:)-5hn4s","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:)-5hn4s","kind":"symbol","defaultImplementations":2,"abstract":[{"text":"Called by middleware to see if request is authenticated.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"authenticate"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","preciseIdentifier":"s:15HummingbirdAuth15HBAuthenticatorP5ValueQa","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"type":"topic","title":"authenticate(request:)","required":true,"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator":{"title":"HBAuthenticator","type":"topic","url":"\/documentation\/hummingbirdauth\/hbauthenticator","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBAuthenticator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HBAuthenticator"}],"abstract":[{"type":"text","text":"Middleware to check if a request is authenticated and then augment the request with"},{"type":"text","text":" "},{"text":"authentication data.","type":"text"}]}}}