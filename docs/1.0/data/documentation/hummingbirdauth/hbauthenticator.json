{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator"},"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbauthenticator"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Middleware to check if a request is authenticated and then augment the request with"},{"type":"text","text":" "},{"type":"text","text":"authentication data."}],"sections":[],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticator"}],"title":"HBAuthenticator","roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"HBAuthenticator"}],"modules":[{"name":"HummingbirdAuth"}],"externalID":"s:15HummingbirdAuth15HBAuthenticatorP","symbolKind":"protocol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:)-5hn4s"]}],"seeAlsoSections":[{"generated":true,"title":"Authenticators","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"]}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware"]},{"kind":"relationships","type":"inheritedBy","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncSessionAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticator"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"HBMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Authenticators should conform to protocol "},{"type":"codeVoice","code":"HBAuthenticator"},{"type":"text","text":". This requires you implement the function"},{"type":"text","text":" "},{"type":"codeVoice","code":"authenticate(request: HBRequest) -> EventLoopFuture<Value?>"},{"type":"text","text":" where "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is an"},{"type":"text","text":" "},{"type":"text","text":"object conforming to the protocol "},{"type":"codeVoice","code":"HBAuthenticatable"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"A simple username, password authenticator could be implemented as follows. If the authenticator is successful","type":"text"},{"text":" ","type":"text"},{"text":"it returns a ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" struct, otherwise it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["struct BasicAuthenticator: HBAuthenticator {","    func authenticate(request: HBRequest) -> EventLoopFuture<User?> {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.auth.basic","        guard let basic = request.auth.basic else { return request.success(nil) }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        return database.getUserWithUsername(basic.username).map { user -> User? in","            \/\/ did we find a user","            guard let user = user else { return nil }","            \/\/ verify password against password hash stored in database. If valid","            \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","        \/\/ hop back to request eventloop","        .hop(to: request.eventLoop)","    }","}"],"type":"codeListing","syntax":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddleware":{"type":"topic","navigatorTitle":[{"text":"HBMiddleware","kind":"identifier"}],"title":"HBMiddleware","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbmiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/Value":{"type":"topic","required":true,"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Value"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"HBAuthenticatable","preciseIdentifier":"s:15HummingbirdAuth17HBAuthenticatableP"}],"title":"Value","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value","abstract":[{"type":"text","text":"type to be authenticated"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"role":"collection","url":"\/documentation\/hummingbirdauth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"title":"HummingbirdAuth","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator":{"title":"HBAuthenticator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","type":"topic","kind":"symbol","navigatorTitle":[{"text":"HBAuthenticator","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"}],"abstract":[{"text":"Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"text":"authentication data.","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticator","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","abstract":[{"type":"text","text":"Middleware returning 404 for unauthenticated requests"}],"title":"IsAuthenticatedMiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSessionAuthenticator":{"url":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSessionAuthenticator","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBSessionAuthenticator","kind":"identifier"}],"abstract":[{"text":"Session authenticator","type":"text"}],"title":"HBSessionAuthenticator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticatable":{"title":"HBAuthenticatable","role":"symbol","abstract":[{"type":"text","text":"Protocol for objects that can be returned by an "},{"type":"codeVoice","code":"HBAuthenticator"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"HBAuthenticatable"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticatable"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","url":"\/documentation\/hummingbirdauth\/hbauthenticatable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/authenticate(request:)-5hn4s":{"type":"topic","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"authenticate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdAuth15HBAuthenticatorP5ValueQa","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?>"}],"defaultImplementations":2,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:)-5hn4s","abstract":[{"text":"Called by middleware to see if request is authenticated.","type":"text"}],"title":"authenticate(request:)","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:)-5hn4s","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncAuthenticator":{"url":"\/documentation\/hummingbirdauth\/hbasyncauthenticator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncAuthenticator","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBAsyncAuthenticator","kind":"identifier"}],"abstract":[{"text":"Async version of Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"text":"authentication data.","type":"text"}],"title":"HBAsyncAuthenticator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncSessionAuthenticator":{"title":"HBAsyncSessionAuthenticator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncSessionAuthenticator","type":"topic","kind":"symbol","navigatorTitle":[{"text":"HBAsyncSessionAuthenticator","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncSessionAuthenticator","kind":"identifier"}],"abstract":[{"type":"text","text":"Async version of session authenticator."}],"url":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator","role":"symbol"}}}