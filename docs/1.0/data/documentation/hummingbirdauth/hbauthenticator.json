{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBMiddleware","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddleware"}]}]},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Authenticators should conform to protocol ","type":"text"},{"type":"codeVoice","code":"HBAuthenticator"},{"text":". This requires you implement the function","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"authenticate(request: HBRequest) -> EventLoopFuture<Value?>"},{"text":" where ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" is an","type":"text"},{"text":" ","type":"text"},{"text":"object conforming to the protocol ","type":"text"},{"type":"codeVoice","code":"HBAuthenticatable"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"A simple username, password authenticator could be implemented as follows. If the authenticator is successful","type":"text"},{"text":" ","type":"text"},{"text":"it returns a ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" struct, otherwise it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]},{"code":["struct BasicAuthenticator: HBAuthenticator {","    func authenticate(request: HBRequest) -> EventLoopFuture<User?> {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.auth.basic","        guard let basic = request.auth.basic else { return request.success(nil) }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        return database.getUserWithUsername(basic.username).map { user -> User? in","            \/\/ did we find a user","            guard let user = user else { return nil }","            \/\/ verify password against password hash stored in database. If valid","            \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","        \/\/ hop back to request eventloop","        .hop(to: request.eventLoop)","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"seeAlsoSections":[{"generated":true,"title":"Authenticators","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"]}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:)-5hn4s"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbauthenticator"]}],"metadata":{"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"HBAuthenticator"}],"title":"HBAuthenticator","externalID":"s:15HummingbirdAuth15HBAuthenticatorP","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticator"}],"modules":[{"name":"HummingbirdAuth"}],"role":"symbol"},"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddleware"]},{"type":"inheritedBy","title":"Inherited By","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncSessionAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator"]}],"abstract":[{"text":"Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"text":"authentication data.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncSessionAuthenticator":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncSessionAuthenticator","title":"HBAsyncSessionAuthenticator","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncSessionAuthenticator"}],"url":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator","type":"topic","abstract":[{"text":"Async version of session authenticator.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAsyncSessionAuthenticator"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddleware":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddleware","title":"HBMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddleware"}],"url":"\/documentation\/hummingbird\/hbmiddleware","type":"topic","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/authenticate(request:)-5hn4s":{"kind":"symbol","defaultImplementations":2,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:)-5hn4s","title":"authenticate(request:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"authenticate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth15HBAuthenticatorP5ValueQa","text":"Value"},{"kind":"text","text":"?>"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:)-5hn4s","type":"topic","abstract":[{"text":"Called by middleware to see if request is authenticated.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSessionAuthenticator":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator","title":"HBSessionAuthenticator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSessionAuthenticator","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","type":"topic","abstract":[{"text":"Session authenticator","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"HBSessionAuthenticator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","title":"IsAuthenticatedMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","type":"topic","abstract":[{"text":"Middleware returning 404 for unauthenticated requests","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/Value":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value","title":"Value","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBAuthenticatable","preciseIdentifier":"s:15HummingbirdAuth17HBAuthenticatableP","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","type":"topic","abstract":[{"text":"type to be authenticated","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncAuthenticator":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","title":"HBAsyncAuthenticator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncAuthenticator","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbasyncauthenticator","type":"topic","abstract":[{"text":"Async version of Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"text":"authentication data.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"HBAsyncAuthenticator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticatable":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","title":"HBAuthenticatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticatable","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticatable","type":"topic","abstract":[{"text":"Protocol for objects that can be returned by an ","type":"text"},{"type":"codeVoice","code":"HBAuthenticator"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"HBAuthenticatable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","type":"topic","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","title":"HBAuthenticator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticator","type":"topic","abstract":[{"text":"Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"text":"authentication data.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"HBAuthenticator","kind":"identifier"}]}}}