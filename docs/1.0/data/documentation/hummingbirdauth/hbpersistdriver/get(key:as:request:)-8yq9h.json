{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver\/get(key:as:request:)-8yq9h"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Object"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Key used to look for value","type":"text"}]}],"name":"key"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Type you want value to be returned as. If it cannot be returned as this value then nil will be returned"}]}],"name":"as"},{"content":[{"inlineContent":[{"type":"text","text":"Request making this call"}],"type":"paragraph"}],"name":"request"}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver\/get(key:as:request:)-75a9i"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver\/get(key:as:request:)-75a9i"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver\/get(key:as:request:)-75a9i"]]},"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbpersistdriver\/get(key:as:request:)-8yq9h"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","externalID":"s:11Hummingbird15HBPersistDriverPAAE3get3key2as7requestqd__SgSS_qd__mAA9HBRequestVtYaKSeRd__SERd__lF","roleHeading":"Instance Method","extendedModule":"Hummingbird","role":"symbol","platforms":[{"beta":false,"introducedAt":"13.0","deprecated":false,"name":"iOS","unavailable":false},{"beta":false,"introducedAt":"10.15","deprecated":false,"name":"macOS","unavailable":false},{"beta":false,"introducedAt":"13.0","deprecated":false,"name":"tvOS","unavailable":false},{"beta":false,"introducedAt":"6.0","deprecated":false,"name":"watchOS","unavailable":false}],"modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdAuth"}],"title":"get(key:as:request:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Object","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Object","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Object","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"abstract":[{"type":"text","text":"get value for key"}],"sections":[],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"role":"collectionGroup","type":"topic","url":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","kind":"article","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBPersistDriver/get(key:as:request:)-8yq9h":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver\/get(key:as:request:)-8yq9h","type":"topic","url":"\/documentation\/hummingbirdauth\/hbpersistdriver\/get(key:as:request:)-8yq9h","abstract":[{"text":"get value for key","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Object"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Object","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Object","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","title":"get(key:as:request:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBPersistDriver/get(key:as:request:)-75a9i":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbpersistdriver\/get(key:as:request:)-75a9i","title":"get(key:as:request:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver\/get(key:as:request:)-75a9i","role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Object"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":"?>"}],"defaultImplementations":2,"abstract":[{"type":"text","text":"get value for key"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBPersistDriver":{"kind":"symbol","title":"HBPersistDriver","abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"url":"\/documentation\/hummingbirdauth\/hbpersistdriver","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBPersistDriver","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver","navigatorTitle":[{"text":"HBPersistDriver","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequest":{"url":"\/documentation\/hummingbirdauth\/hbrequest","role":"symbol","title":"HBRequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","type":"topic","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}]}}}