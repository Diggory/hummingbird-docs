{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbparameters\/getcatchall()"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":"]","kind":"text"}],"platforms":["Linux"]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters\/getCatchAll()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters"]]},"metadata":{"modules":[{"name":"HummingbirdAuth"}],"roleHeading":"Instance Method","title":"getCatchAll()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"]"}],"symbolKind":"method","externalID":"s:11Hummingbird12HBParametersV11getCatchAllSaySsGyF"},"sections":[],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBParameters/getCatchAll()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters\/getCatchAll()","abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"title":"getCatchAll()","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"]"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbparameters\/getcatchall()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBParameters":{"url":"\/documentation\/hummingbirdauth\/hbparameters","title":"HBParameters","role":"symbol","abstract":[{"type":"text","text":"Store for parameters key, value pairs extracted from URI"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBParameters"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParameters"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"}}}