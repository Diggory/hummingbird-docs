{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest\/withServiceContext(_:_:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdauth\/hbrequest\/withservicecontext(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Execute the given operation with edited request that includes serviceContext.","type":"text"}],"metadata":{"title":"withServiceContext(_:_:)","symbolKind":"method","externalID":"s:11Hummingbird9HBRequestV18withServiceContextyx0dE6Module0dE0V_xACKXEtKlF","modules":[{"name":"HummingbirdLambda","relatedModules":["Hummingbird"]}],"extendedModule":"Hummingbird","platforms":[{"name":"iOS","beta":false,"unavailable":false,"introducedAt":"13.0","deprecated":false},{"name":"macOS","beta":false,"unavailable":false,"introducedAt":"10.15","deprecated":false},{"name":"tvOS","beta":false,"unavailable":false,"introducedAt":"13.0","deprecated":false},{"name":"watchOS","beta":false,"unavailable":false,"introducedAt":"6.0","deprecated":false}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withServiceContext"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"preciseIdentifier":"s:20ServiceContextModule0aB0V","kind":"typeIdentifier","text":"ServiceContext"},{"kind":"text","text":", ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"}],"role":"symbol","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withServiceContext"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:20ServiceContextModule0aB0V","kind":"typeIdentifier","text":"ServiceContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": ("},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"ServiceContext to attach to request"}],"type":"paragraph"}],"name":"serviceContext"},{"content":[{"type":"paragraph","inlineContent":[{"text":"operation to run","type":"text"}]}],"name":"operation"}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"return value of operation"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Be sure to use the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","type":"reference"},{"text":" passed to the closure as that includes the serviceContext.","type":"text"},{"text":" ","type":"text"},{"text":"This function should be used when we arenâ€™t inside an async function and serviceContext","type":"text"},{"text":" ","type":"text"},{"text":"cannot be propagated via Task local variables using ","type":"text"},{"code":"ServiceContext.$current.withValue(_)","type":"codeVoice"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequest":{"title":"HBRequest","url":"\/documentation\/hummingbirdauth\/hbrequest","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequest/withServiceContext(_:_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest\/withServiceContext(_:_:)","kind":"symbol","type":"topic","title":"withServiceContext(_:_:)","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbrequest\/withservicecontext(_:_:)","abstract":[{"text":"Execute the given operation with edited request that includes serviceContext.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withServiceContext","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ServiceContext","kind":"typeIdentifier","preciseIdentifier":"s:20ServiceContextModule0aB0V"},{"text":", (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}