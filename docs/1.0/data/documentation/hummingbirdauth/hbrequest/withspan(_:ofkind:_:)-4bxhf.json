{"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbrequest\/withspan(_:ofkind:_:)-4bxhf"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest"]]},"abstract":[{"type":"text","text":"Execute the given operation within a newly created "},{"code":"Span","type":"codeVoice"}],"metadata":{"extendedModule":"Hummingbird","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SpanKind","kind":"typeIdentifier","preciseIdentifier":"s:7Tracing8SpanKindO"},{"text":", (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":", ","kind":"text"},{"text":"Span","kind":"typeIdentifier","preciseIdentifier":"s:7Tracing4SpanP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"roleHeading":"Instance Method","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdAuth"}],"platforms":[{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","name":"iOS"},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"10.15","name":"macOS"},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","name":"tvOS"},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"6.0","name":"watchOS"}],"symbolKind":"method","title":"withSpan(_:ofKind:_:)","role":"symbol","externalID":"s:11Hummingbird9HBRequestV8withSpan_6ofKind_xSS_7Tracing0dF0OxAC_AF0D0_ptKXEtKlF"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withSpan"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operationName"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ofKind"},{"kind":"text","text":" "},{"kind":"internalParam","text":"kind"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Tracing8SpanKindO","kind":"typeIdentifier","text":"SpanKind"},{"kind":"text","text":" = .internal, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Tracing4SpanP","kind":"typeIdentifier","text":"Span"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The name of the operation being traced. This may be a handler function, database call, …","type":"text"}],"type":"paragraph"}],"name":"operationName"},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"SpanKind","type":"codeVoice"},{"text":" of the ","type":"text"},{"code":"Span","type":"codeVoice"},{"text":" to be created. Defaults to ","type":"text"},{"code":"SpanKind\/internal","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"kind"},{"content":[{"inlineContent":[{"type":"text","text":"operation to wrap in a span start\/end and execute immediately"}],"type":"paragraph"}],"name":"operation"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"the value returned by ","type":"text"},{"code":"operation","type":"codeVoice"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Calls operation with edited request that includes the serviceContext from span, and the span Be sure to use the"},{"type":"text","text":" "},{"type":"codeVoice","code":"HBRequest"},{"type":"text","text":" passed to the closure as that includes the serviceContext"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This function should be used when we aren’t inside an async function and serviceContext cannot be propagated"},{"type":"text","text":" "},{"type":"text","text":"via Task local variables. The equivalent async version of this is"},{"type":"text","text":" "},{"type":"codeVoice","code":"InstrumentationSystem.tracer.withSpan(_:ofKind:_)"}],"type":"paragraph"},{"inlineContent":[{"text":"DO NOT ","type":"text"},{"type":"codeVoice","code":"end()"},{"text":" the passed in span manually. It will be ended automatically when the ","type":"text"},{"type":"codeVoice","code":"operation"},{"text":" returns.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"the error the ","type":"text"},{"type":"codeVoice","code":"operation"},{"text":" has thrown (if any)","type":"text"}]}],"name":"Throws","style":"note","type":"aside"}]}],"kind":"symbol","sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequest":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequest"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRequest"}],"url":"\/documentation\/hummingbirdauth\/hbrequest","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","title":"HBRequest"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequest/withSpan(_:ofKind:_:)-4bxhf":{"url":"\/documentation\/hummingbirdauth\/hbrequest\/withspan(_:ofkind:_:)-4bxhf","type":"topic","abstract":[{"type":"text","text":"Execute the given operation within a newly created "},{"code":"Span","type":"codeVoice"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Tracing8SpanKindO","text":"SpanKind","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Tracing4SpanP","text":"Span","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","kind":"symbol","role":"symbol","title":"withSpan(_:ofKind:_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"}}}