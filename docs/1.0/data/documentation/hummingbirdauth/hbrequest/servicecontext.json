{"metadata":{"modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdLambda"}],"extendedModule":"Hummingbird","title":"serviceContext","symbolKind":"property","platforms":[{"unavailable":false,"beta":false,"deprecated":false,"name":"iOS","introducedAt":"13.0"},{"unavailable":false,"beta":false,"deprecated":false,"name":"macOS","introducedAt":"10.15"},{"deprecated":false,"introducedAt":"13.0","beta":false,"unavailable":false,"name":"tvOS"},{"deprecated":false,"introducedAt":"6.0","beta":false,"unavailable":false,"name":"watchOS"}],"roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"serviceContext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ServiceContext","preciseIdentifier":"s:20ServiceContextModule0aB0V"}],"externalID":"s:11Hummingbird9HBRequestV14serviceContext07ServiceD6Module0eD0Vvp","role":"symbol"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest\/serviceContext","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"ServiceContext attached to request. Used to propagate serviceContext to child functions"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbrequest\/servicecontext"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"serviceContext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ServiceContext","preciseIdentifier":"s:20ServiceContextModule0aB0V"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Attaching serviceContext to the request should be used when we arenâ€™t inside an async","type":"text"},{"text":" ","type":"text"},{"text":"function and serviceContext cannot be propagated via Task local variables. Otherwise","type":"text"},{"text":" ","type":"text"},{"text":"serviceContext should be propagated using Task local variables using ","type":"text"},{"code":"ServiceContext.$current.withValue(_)","type":"codeVoice"}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequest/serviceContext":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest\/serviceContext","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"serviceContext"},{"kind":"text","text":": "},{"preciseIdentifier":"s:20ServiceContextModule0aB0V","kind":"typeIdentifier","text":"ServiceContext"}],"abstract":[{"type":"text","text":"ServiceContext attached to request. Used to propagate serviceContext to child functions"}],"title":"serviceContext","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbrequest\/servicecontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequest":{"title":"HBRequest","url":"\/documentation\/hummingbirdauth\/hbrequest","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}