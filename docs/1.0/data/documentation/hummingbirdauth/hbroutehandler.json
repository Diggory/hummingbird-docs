{"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler\/init(from:)-9q5p0"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler\/handle(request:)-4ebzc"]}],"sections":[],"abstract":[{"text":"Object for handling requests.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler"},"relationshipsSections":[{"title":"Inherited By","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable"],"type":"inheritedBy"}],"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbroutehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","modules":[{"name":"HummingbirdLambda"}],"title":"HBRouteHandler","externalID":"s:11Hummingbird14HBRouteHandlerP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"roleHeading":"Protocol","symbolKind":"protocol"},"seeAlsoSections":[{"title":"Router","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"Instead of passing a closure to the router you can provide an object it should try and"},{"type":"text","text":" "},{"type":"text","text":"create before handling the request. This allows you to separate the extraction of data"},{"type":"text","text":" "},{"type":"text","text":"from the request and the processing of the request. For example"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["struct UpdateReminder: HBRouteHandler {","    struct Request: Codable {","        let description: String","        let date: Date","    }","    let update: Request","    let id: String","","    init(from request: HBRequest) throws {","        self.update = try request.decode(as: Request.self)","        self.id = try request.parameters.require(\"id\")","    }","    func handle(request: HBRequest) -> EventLoopFuture<HTTPResponseStatus> {","        let reminder = Reminder(id: id, update: update)","        return reminder.update(on: request.db)","            .map { _ in .ok }","    }","}"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"HBResponder","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbresponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBCallbackResponder":{"url":"\/documentation\/hummingbirdauth\/hbcallbackresponder","navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"title":"HBCallbackResponder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"type":"topic","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterGroup":{"title":"HBRouterGroup","url":"\/documentation\/hummingbirdauth\/hbroutergroup","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethods":{"url":"\/documentation\/hummingbirdauth\/hbroutermethods","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"abstract":[{"text":"Conform to ","type":"text"},{"type":"codeVoice","code":"HBRouterMethods"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"title":"HBRouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouteHandler":{"title":"HBRouteHandler","url":"\/documentation\/hummingbirdauth\/hbroutehandler","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"type":"topic","abstract":[{"type":"text","text":"Object for handling requests."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouteHandler/init(from:)-9q5p0":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbroutehandler\/init(from:)-9q5p0","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler\/init(from:)-9q5p0","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"init(from:)","type":"topic","abstract":[],"defaultImplementations":2},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequestDecodable":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestDecodable"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecodable"}],"abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","title":"HBRequestDecodable","url":"\/documentation\/hummingbirdauth\/hbrequestdecodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethodOptions":{"title":"HBRouterMethodOptions","url":"\/documentation\/hummingbirdauth\/hbroutermethodoptions","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Options available to routes"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncRouteHandler":{"abstract":[{"text":"Route Handler using async\/await methods","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","title":"HBAsyncRouteHandler","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/hbasyncroutehandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouteHandler/handle(request:)-4ebzc":{"type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler\/handle(request:)-4ebzc","url":"\/documentation\/hummingbirdauth\/hbroutehandler\/handle(request:)-4ebzc","kind":"symbol","required":true,"defaultImplementations":2,"role":"symbol","title":"handle(request:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"_Output"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncCallbackResponder":{"title":"HBAsyncCallbackResponder","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbasynccallbackresponder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder":{"title":"HBRouterBuilder","url":"\/documentation\/hummingbirdauth\/hbrouterbuilder","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}]}}}