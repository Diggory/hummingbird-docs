{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache\/getDateCache(on:)"},"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbdatecache\/getdatecache(on:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache"]]},"abstract":[{"type":"text","text":"return date cache for this thread. If one doesn’t exist create one scheduled on EventLoop"}],"kind":"symbol","metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getDateCache","kind":"identifier"},{"text":"(","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11HBDateCacheC","text":"HBDateCache","kind":"typeIdentifier"}],"title":"getDateCache(on:)","modules":[{"name":"HummingbirdAuth"}],"symbolKind":"method","role":"symbol","externalID":"s:11Hummingbird11HBDateCacheC07getDateC02onAC7NIOCore9EventLoop_p_tFZ","roleHeading":"Type Method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDateCache"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"HBDateCache","preciseIdentifier":"s:11Hummingbird11HBDateCacheC","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache"}],"platforms":["Linux"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBDateCache/getDateCache(on:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDateCache"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11Hummingbird11HBDateCacheC","kind":"typeIdentifier","text":"HBDateCache"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache\/getDateCache(on:)","type":"topic","title":"getDateCache(on:)","abstract":[{"type":"text","text":"return date cache for this thread. If one doesn’t exist create one scheduled on EventLoop"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbdatecache\/getdatecache(on:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBDateCache":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBDateCache"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBDateCache"}],"title":"HBDateCache","abstract":[{"type":"text","text":"Current date cache."}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbdatecache","role":"symbol"}}}