{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDateCache"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"eventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache","preciseIdentifier":"s:11Hummingbird11HBDateCacheC","kind":"typeIdentifier","text":"HBDateCache"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"metadata":{"title":"getDateCache(on:)","roleHeading":"Type Method","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getDateCache","kind":"identifier"},{"text":"(","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11HBDateCacheC","text":"HBDateCache","kind":"typeIdentifier"}],"externalID":"s:11Hummingbird11HBDateCacheC07getDateC02onAC7NIOCore9EventLoop_p_tFZ","symbolKind":"method","modules":[{"name":"HummingbirdAuth"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache\/getDateCache(on:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbdatecache\/getdatecache(on:)"]}],"abstract":[{"type":"text","text":"return date cache for this thread. If one doesn’t exist create one scheduled on EventLoop"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBDateCache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache","url":"\/documentation\/hummingbirdauth\/hbdatecache","role":"symbol","navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}],"type":"topic","abstract":[{"text":"Current date cache.","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBDateCache","kind":"identifier"}],"title":"HBDateCache"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBDateCache/getDateCache(on:)":{"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getDateCache","kind":"identifier"},{"text":"(","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"HBDateCache","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBDateCacheC"}],"title":"getDateCache(on:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache\/getDateCache(on:)","url":"\/documentation\/hummingbirdauth\/hbdatecache\/getdatecache(on:)","abstract":[{"text":"return date cache for this thread. If one doesn’t exist create one scheduled on EventLoop","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"}}}