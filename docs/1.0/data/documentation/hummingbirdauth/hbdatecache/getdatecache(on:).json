{"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getDateCache","kind":"identifier"},{"text":"(","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"HBDateCache","preciseIdentifier":"s:11Hummingbird11HBDateCacheC","kind":"typeIdentifier"}],"modules":[{"name":"HummingbirdAuth"}],"title":"getDateCache(on:)","role":"symbol","externalID":"s:11Hummingbird11HBDateCacheC07getDateC02onAC7NIOCore9EventLoop_p_tFZ","symbolKind":"method","roleHeading":"Type Method"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbdatecache\/getdatecache(on:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"return date cache for this thread. If one doesn’t exist create one scheduled on EventLoop"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache\/getDateCache(on:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getDateCache","kind":"identifier"},{"text":"(","kind":"text"},{"text":"on","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"eventLoop","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache","text":"HBDateCache","preciseIdentifier":"s:11Hummingbird11HBDateCacheC","kind":"typeIdentifier"}],"platforms":["Linux"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBDateCache/getDateCache(on:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDateCache"},{"kind":"text","text":"("},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"HBDateCache","preciseIdentifier":"s:11Hummingbird11HBDateCacheC","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdauth\/hbdatecache\/getdatecache(on:)","title":"getDateCache(on:)","kind":"symbol","abstract":[{"type":"text","text":"return date cache for this thread. If one doesn’t exist create one scheduled on EventLoop"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache\/getDateCache(on:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBDateCache":{"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbdatecache","abstract":[{"text":"Current date cache.","type":"text"}],"type":"topic","role":"symbol","title":"HBDateCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBDateCache","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache","navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}]}}}