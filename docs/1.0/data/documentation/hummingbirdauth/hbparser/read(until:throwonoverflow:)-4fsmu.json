{"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":" "},{"kind":"internalParam","text":"characterSet"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Unicode","preciseIdentifier":"s:s7UnicodeO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"throwOnOverflow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = true) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParser"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"characterSet","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unicode.Scalar set to check against"}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"text":"String read from buffer","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":".overflow","type":"text"}]}],"style":"note","name":"Throws"}]}],"metadata":{"externalID":"s:11Hummingbird8HBParserV4read5until15throwOnOverflowACShys7UnicodeO6ScalarVG_SbtKF","symbolKind":"method","role":"symbol","modules":[{"name":"HummingbirdAuth","relatedModules":["Hummingbird"]}],"roleHeading":"Instance Method","title":"read(until:throwOnOverflow:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sh","kind":"typeIdentifier","text":"Set"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier","text":"Unicode"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"throwOnOverflow"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBParser","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"extendedModule":"Hummingbird"},"abstract":[{"type":"text","text":"Read from buffer until we hit a character in supplied set. Position after this is of the character we were checking for"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParser\/read(until:throwOnOverflow:)-4fsmu"},"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbparser\/read(until:throwonoverflow:)-4fsmu"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParser"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBParser":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"title":"HBParser","kind":"symbol","role":"symbol","abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParser","url":"\/documentation\/hummingbirdauth\/hbparser","navigatorTitle":[{"text":"HBParser","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBParser/read(until:throwOnOverflow:)-4fsmu":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"text":">, ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBParser","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"abstract":[{"type":"text","text":"Read from buffer until we hit a character in supplied set. Position after this is of the character we were checking for"}],"url":"\/documentation\/hummingbirdauth\/hbparser\/read(until:throwonoverflow:)-4fsmu","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParser\/read(until:throwOnOverflow:)-4fsmu","type":"topic","title":"read(until:throwOnOverflow:)","role":"symbol"}}}