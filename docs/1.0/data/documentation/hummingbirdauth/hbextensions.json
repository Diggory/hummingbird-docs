{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbextensions"]}],"sections":[],"metadata":{"roleHeading":"Structure","role":"symbol","modules":[{"name":"HummingbirdAuth"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"}],"navigatorTitle":[{"kind":"identifier","text":"HBExtensions"}],"symbolKind":"struct","title":"HBExtensions","externalID":"s:11Hummingbird12HBExtensionsV"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/exists(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:)-63nyk","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:)-7gsg7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:error:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/set(_:value:shutdownCallback:)"],"title":"Instance Methods"}],"abstract":[{"type":"text","text":"Extend objects with additional member variables"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you have only one instance of a type to attach you can extend it to conform to "},{"code":"StorageKey","type":"codeVoice"}]},{"type":"codeListing","code":["struct Object {","    var extensions: Extensions<Object>","}","","extension Object {","    var extra: Extra? {","        get { return extensions.get(\\.extra) }","        set { extensions.set(\\.extra, value: newValue) }","    }","}"],"syntax":null}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensible"],"generated":true,"title":"Extending the Application"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/set(_:value:shutdownCallback:)":{"abstract":[{"type":"text","text":"Set extension for a "},{"code":"KeyPath","type":"codeVoice"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbextensions\/set(_:value:shutdowncallback:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shutdownCallback"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"title":"set(_:value:shutdownCallback:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/set(_:value:shutdownCallback:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/get(_:)-7gsg7":{"title":"get(_:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Get optional extension from a "},{"type":"codeVoice","code":"KeyPath"},{"type":"text","text":" that returns an optional"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbextensions\/get(_:)-7gsg7","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:)-7gsg7"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensible":{"title":"HBExtensible","abstract":[{"type":"text","text":"Protocol for extensible classes"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensible"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensible","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdauth\/hbextensible","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBExtensible"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/init()":{"abstract":[{"type":"text","text":"Initialize extensions"}],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/init()","role":"symbol","title":"init()","url":"\/documentation\/hummingbirdauth\/hbextensions\/init()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions","navigatorTitle":[{"text":"HBExtensions","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/hbextensions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"}],"kind":"symbol","title":"HBExtensions","abstract":[{"type":"text","text":"Extend objects with additional member variables"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/get(_:)-63nyk":{"title":"get(_:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Get optional extension from a "},{"type":"codeVoice","code":"KeyPath"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbextensions\/get(_:)-63nyk","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:)-63nyk"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/exists(_:)":{"abstract":[{"text":"Return if extension has been set","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exists","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/hummingbirdauth\/hbextensions\/exists(_:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/exists(_:)","type":"topic","title":"exists(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/get(_:error:)":{"title":"get(_:error:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Get extension from a "},{"type":"codeVoice","code":"KeyPath"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbextensions\/get(_:error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Type"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:error:)"}}}