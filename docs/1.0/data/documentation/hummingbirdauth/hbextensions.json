{"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Extend objects with additional member variables"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions"},"metadata":{"role":"symbol","externalID":"s:11Hummingbird12HBExtensionsV","title":"HBExtensions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBExtensions"}],"navigatorTitle":[{"kind":"identifier","text":"HBExtensions"}],"roleHeading":"Structure","modules":[{"name":"HummingbirdLambda"}],"symbolKind":"struct"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/exists(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:)-63nyk","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:)-7gsg7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:error:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/set(_:value:shutdownCallback:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbextensions"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"If you have only one instance of a type to attach you can extend it to conform to "},{"code":"StorageKey","type":"codeVoice"}],"type":"paragraph"},{"code":["struct Object {","    var extensions: Extensions<Object>","}","","extension Object {","    var extra: Extra? {","        get { return extensions.get(\\.extra) }","        set { extensions.set(\\.extra, value: newValue) }","    }","}"],"type":"codeListing","syntax":null}]}],"seeAlsoSections":[{"title":"Extending the Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensible"],"generated":true}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/get(_:)-7gsg7":{"title":"get(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:)-7gsg7","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?>) -> "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?"}],"url":"\/documentation\/hummingbirdauth\/hbextensions\/get(_:)-7gsg7","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Get optional extension from a "},{"code":"KeyPath","type":"codeVoice"},{"type":"text","text":" that returns an optional"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/exists(_:)":{"abstract":[{"type":"text","text":"Return if extension has been set"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"exists"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/hummingbirdauth\/hbextensions\/exists(_:)","title":"exists(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/exists(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/get(_:)-63nyk":{"title":"get(_:)","url":"\/documentation\/hummingbirdauth\/hbextensions\/get(_:)-63nyk","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:)-63nyk","kind":"symbol","abstract":[{"type":"text","text":"Get optional extension from a "},{"type":"codeVoice","code":"KeyPath"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/init()":{"title":"init()","url":"\/documentation\/hummingbirdauth\/hbextensions\/init()","abstract":[{"text":"Initialize extensions","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/init()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions":{"abstract":[{"text":"Extend objects with additional member variables","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbextensions","title":"HBExtensions","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBExtensions","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensible":{"navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for extensible classes"}],"kind":"symbol","title":"HBExtensible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensible","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbextensible","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/get(_:error:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbextensions\/get(_:error:)","title":"get(_:error:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/get(_:error:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":">, "},{"text":"error","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Type","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Get extension from a "},{"type":"codeVoice","code":"KeyPath"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions/set(_:value:shutdownCallback:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions\/set(_:value:shutdownCallback:)","type":"topic","role":"symbol","title":"set(_:value:shutdownCallback:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"shutdownCallback","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"abstract":[{"type":"text","text":"Set extension for a "},{"code":"KeyPath","type":"codeVoice"}],"url":"\/documentation\/hummingbirdauth\/hbextensions\/set(_:value:shutdowncallback:)"}}}