{"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdauth\/asyncsequenceresponsebodystreamer\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AsyncSequenceResponseBodyStreamer\/init(_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AsyncSequenceResponseBodyStreamer"]]},"metadata":{"roleHeading":"Initializer","title":"init(_:)","platforms":[{"deprecated":false,"introducedAt":"13.0","name":"iOS","beta":false,"unavailable":false},{"deprecated":false,"introducedAt":"10.15","name":"macOS","beta":false,"unavailable":false},{"deprecated":false,"introducedAt":"13.0","name":"tvOS","beta":false,"unavailable":false},{"deprecated":false,"introducedAt":"6.0","name":"watchOS","beta":false,"unavailable":false}],"externalID":"s:11Hummingbird33AsyncSequenceResponseBodyStreamerCyACyxGxcfc","modules":[{"name":"HummingbirdAuth"}],"role":"symbol","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"ByteBufferSequence","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"asyncSequence"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBufferSequence"},{"kind":"text","text":")"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AsyncSequenceResponseBodyStreamer/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ByteBufferSequence","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AsyncSequenceResponseBodyStreamer\/init(_:)","title":"init(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdauth\/asyncsequenceresponsebodystreamer\/init(_:)","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AsyncSequenceResponseBodyStreamer":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncSequenceResponseBodyStreamer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AsyncSequenceResponseBodyStreamer","title":"AsyncSequenceResponseBodyStreamer","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdauth\/asyncsequenceresponsebodystreamer","abstract":[{"text":"Response body streamer which uses an AsyncSequence as its input.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"AsyncSequenceResponseBodyStreamer","kind":"identifier"}]}}}