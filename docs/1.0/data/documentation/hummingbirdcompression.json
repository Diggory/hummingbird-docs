{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/HTTPDecompressionLimit"],"title":"Structures"}],"kind":"symbol","hierarchy":{"paths":[[]]},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"Add support for compressing HTTP response data. Adding response compression means when a request comes in with header ","type":"text"},{"code":"accept-encoding","type":"codeVoice"},{"text":" set to ","type":"text"},{"code":"gzip","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"deflate","type":"codeVoice"},{"text":" the server will compression the response body.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let app = HBApplication()","\/\/ run response compression on application thread pool when buffer is ","\/\/ larger than 32768 bytes otherwise run it on the eventloop","app.addResponseCompression(execute: .onThreadPool(threshold: 32768))"]},{"inlineContent":[{"type":"text","text":"Add support for decompressing HTTP request data. Adding request decompression means when a request comes in with header "},{"code":"content-encoding","type":"codeVoice"},{"type":"text","text":" set to "},{"code":"gzip","type":"codeVoice"},{"type":"text","text":" or "},{"code":"deflate","type":"codeVoice"},{"type":"text","text":" the server will attempt to decompress the request body."}],"type":"paragraph"},{"code":["\/\/ run request decompression on eventloop with no limit to the size","\/\/ of data that can be decompressed","app.addRequestDecompression(execute: .onEventLoop, limit: .none)"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"abstract":[{"text":"Adds request decompression and response compression to Hummingbird","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdcompression"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"name":"HummingbirdCompression"}],"role":"collection","externalID":"HummingbirdCompression","symbolKind":"module","roleHeading":"Framework","title":"HummingbirdCompression"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"title":"HummingbirdCompression","url":"\/documentation\/hummingbirdcompression","kind":"symbol","role":"collection","type":"topic","abstract":[{"text":"Adds request decompression and response compression to Hummingbird","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/HTTPDecompressionLimit":{"url":"\/documentation\/hummingbirdcompression\/httpdecompressionlimit","role":"symbol","abstract":[{"text":"Limits for when decompressing HTTP request data","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPDecompressionLimit"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPDecompressionLimit"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/HTTPDecompressionLimit","title":"HTTPDecompressionLimit","type":"topic","kind":"symbol"}}}