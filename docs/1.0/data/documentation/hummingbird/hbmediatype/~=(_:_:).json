{"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType\/~=(_:_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"~="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBMediaType","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType","preciseIdentifier":"s:11Hummingbird11HBMediaTypeV"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBMediaType","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType","preciseIdentifier":"s:11Hummingbird11HBMediaTypeV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]}]}],"metadata":{"extendedModule":"Hummingbird","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"~="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"HBMediaType","preciseIdentifier":"s:11Hummingbird11HBMediaTypeV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"HBMediaType","preciseIdentifier":"s:11Hummingbird11HBMediaTypeV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdLambda"}],"externalID":"s:11Hummingbird11HBMediaTypeV2teoiySbAC_ACtFZ","title":"~=(_:_:)","role":"symbol","symbolKind":"op","roleHeading":"Operator"},"variants":[{"paths":["\/documentation\/hummingbird\/hbmediatype\/~=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMediaType":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType","title":"HBMediaType","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMediaType","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmediatype","type":"topic","abstract":[{"text":"Define media type of file","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"HBMediaType","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMediaType/~=(_:_:)":{"type":"topic","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"~=","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"HBMediaType","preciseIdentifier":"s:11Hummingbird11HBMediaTypeV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"HBMediaType","preciseIdentifier":"s:11Hummingbird11HBMediaTypeV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/hummingbird\/hbmediatype\/~=(_:_:)","kind":"symbol","title":"~=(_:_:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType\/~=(_:_:)"}}}