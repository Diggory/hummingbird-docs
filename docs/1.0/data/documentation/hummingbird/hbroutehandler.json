{"abstract":[{"text":"Object for handling requests.","type":"text"}],"metadata":{"navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"roleHeading":"Protocol","modules":[{"name":"HummingbirdLambda"}],"symbolKind":"protocol","externalID":"s:11Hummingbird14HBRouteHandlerP","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}],"title":"HBRouteHandler"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler\/init(from:)-9q5p0"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler\/handle(request:)-4ebzc"],"title":"Instance Methods"}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}]}]},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"text":"Instead of passing a closure to the router you can provide an object it should try and","type":"text"},{"text":" ","type":"text"},{"text":"create before handling the request. This allows you to separate the extraction of data","type":"text"},{"text":" ","type":"text"},{"text":"from the request and the processing of the request. For example","type":"text"}],"type":"paragraph"},{"code":["struct UpdateReminder: HBRouteHandler {","    struct Request: Codable {","        let description: String","        let date: Date","    }","    let update: Request","    let id: String","","    init(from request: HBRequest) throws {","        self.update = try request.decode(as: Request.self)","        self.id = try request.parameters.require(\"id\")","    }","    func handle(request: HBRequest) -> EventLoopFuture<HTTPResponseStatus> {","        let reminder = Reminder(id: id, update: update)","        return reminder.update(on: request.db)","            .map { _ in .ok }","    }","}"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecodable"],"type":"inheritedBy","kind":"relationships","title":"Inherited By"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbroutehandler"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder"],"generated":true,"title":"Router"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler/handle(request:)-4ebzc":{"defaultImplementations":2,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler\/handle(request:)-4ebzc","url":"\/documentation\/hummingbird\/hbroutehandler\/handle(request:)-4ebzc","abstract":[],"title":"handle(request:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"_Output"}],"kind":"symbol","role":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncRouteHandler":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncRouteHandler","title":"HBAsyncRouteHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbasyncroutehandler","type":"topic","abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"role":"symbol","navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","title":"HBRouterBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"url":"\/documentation\/hummingbird\/hbrouterbuilder","type":"topic","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestDecodable":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecodable","title":"HBRequestDecodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbrequestdecodable","type":"topic","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"type":"text","text":" which uses "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to initialize it"}],"role":"symbol","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","title":"HBRouterMethodOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutermethodoptions","type":"topic","abstract":[{"type":"text","text":"Options available to routes"}],"role":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","title":"HBRouteHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutehandler","type":"topic","abstract":[{"type":"text","text":"Object for handling requests."}],"role":"symbol","navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","type":"topic","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutergroup","title":"HBRouterGroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRouterGroup","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler/init(from:)-9q5p0":{"required":true,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler\/init(from:)-9q5p0","title":"init(from:)","url":"\/documentation\/hummingbird\/hbroutehandler\/init(from:)-9q5p0","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"defaultImplementations":2},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","title":"HBCallbackResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbcallbackresponder","type":"topic","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"role":"symbol","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","title":"HBRouterMethods","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"url":"\/documentation\/hummingbird\/hbroutermethods","type":"topic","abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"HBRouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","title":"HBResponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbresponder","type":"topic","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"role":"symbol","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncCallbackResponder":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder","title":"HBAsyncCallbackResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"url":"\/documentation\/hummingbird\/hbasynccallbackresponder","type":"topic","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}]}}}