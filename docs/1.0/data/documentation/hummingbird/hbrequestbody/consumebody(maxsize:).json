{"variants":[{"paths":["\/documentation\/hummingbird\/hbrequestbody\/consumebody(maxsize:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"HummingbirdCore"}],"externalID":"s:15HummingbirdCore13HBRequestBodyO07consumeD07maxSize7NIOCore10ByteBufferVSgSi_tYaKF","title":"consumeBody(maxSize:)","platforms":[{"deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false,"name":"iOS"},{"deprecated":false,"beta":false,"introducedAt":"10.15","unavailable":false,"name":"macOS"},{"beta":false,"name":"tvOS","deprecated":false,"introducedAt":"13.0","unavailable":false},{"beta":false,"name":"watchOS","deprecated":false,"introducedAt":"6.0","unavailable":false}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","extendedModule":"HummingbirdCore","role":"symbol","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody\/consumeBody(maxSize:)"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"EventLoopFuture that will be fulfilled with ByteBuffer. If no body is include then return "},{"code":"nil","type":"codeVoice"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Parameters"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"maxSize: Maximum size of ByteBuffer to generate","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"eventLoop: EventLoop to use","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody"]]},"abstract":[{"type":"text","text":"Provide body as a single ByteBuffer"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"kind":"symbol","title":"HBRequestBody","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"abstract":[{"type":"text","text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","url":"\/documentation\/hummingbird\/hbrequestbody"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody/consumeBody(maxSize:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"consumeBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":"?"}],"title":"consumeBody(maxSize:)","role":"symbol","url":"\/documentation\/hummingbird\/hbrequestbody\/consumebody(maxsize:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody\/consumeBody(maxSize:)","abstract":[{"text":"Provide body as a single ByteBuffer","type":"text"}]}}}