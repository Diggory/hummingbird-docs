{"metadata":{"title":"Lambdas","role":"article","modules":[{"name":"HummingbirdMustache"}],"roleHeading":"Article"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"title":"Additional Features","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","interfaceLanguage":"swift"},"abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature."}]},{"type":"paragraph","inlineContent":[{"text":"Add a ","type":"text"},{"code":"HBMustacheLambda","type":"codeVoice"},{"text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Given the object ","type":"text"},{"code":"person","type":"codeVoice"},{"text":" defined below","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct Person {","    let name: String","    let wrapped: HBMustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: HBMustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"and the following mustache template"}]},{"type":"codeListing","code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try HBMustacheTemplate(string: mustache)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Then ","type":"text"},{"code":"template.render(person)","type":"codeVoice"},{"text":" will output","type":"text"}]},{"type":"codeListing","code":["<b>John is awesome.<\/b>"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"In this example the template constructed from the contents of the ","type":"text"},{"type":"codeVoice","code":"wrapped"},{"text":" section of the mustache is passed to my ","type":"text"},{"type":"codeVoice","code":"wrapped"},{"text":" function inside the ","type":"text"},{"type":"codeVoice","code":"Person"},{"text":" type.","type":"text"}]}],"kind":"content"}],"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"url":"\/documentation\/hummingbirdmustache","kind":"symbol","role":"collection","abstract":[{"text":"Mustache template engine.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","title":"HummingbirdMustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"type":"topic","abstract":[{"type":"text","text":"Setting template render configuration settings."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","role":"article","url":"\/documentation\/hummingbird\/pragmas","title":"Pragmas\/Configuration variables","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Template-Inheritance":{"title":"Template Inheritance","url":"\/documentation\/hummingbird\/template-inheritance","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"type":"topic","abstract":[{"type":"text","text":"Transforming objects during render"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","role":"article","url":"\/documentation\/hummingbird\/transforms","title":"Transforms","kind":"article"}}}