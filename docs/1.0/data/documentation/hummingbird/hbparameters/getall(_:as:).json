{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAll"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"s"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11Hummingbird12HBParametersV6getAll_2asSayxGSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp"},{"kind":"text","text":".Type) -> ["},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11Hummingbird12HBParametersV6getAll_2asSayxGSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp"},{"kind":"text","text":"] "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"LosslessStringConvertible","preciseIdentifier":"s:s25LosslessStringConvertibleP"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"s","content":[{"type":"paragraph","inlineContent":[{"text":"parameter id","type":"text"}]}]},{"name":"as","content":[{"inlineContent":[{"text":"type we want returned","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbparameters\/getall(_:as:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParameters\/getAll(_:as:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParameters"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird12HBParametersV6getAll_2asSayxGSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":".Type) -> [","kind":"text"},{"preciseIdentifier":"s:11Hummingbird12HBParametersV6getAll_2asSayxGSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"symbolKind":"method","role":"symbol","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird12HBParametersV6getAll_2asSayxGSS_xmts25LosslessStringConvertibleRzlF","roleHeading":"Instance Method","title":"getAll(_:as:)"},"abstract":[{"text":"Return parameter with specified id as a certain type","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBParameters/getAll(_:as:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getAll","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird12HBParametersV6getAll_2asSayxGSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":".Type) -> [","kind":"text"},{"preciseIdentifier":"s:11Hummingbird12HBParametersV6getAll_2asSayxGSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"url":"\/documentation\/hummingbird\/hbparameters\/getall(_:as:)","title":"getAll(_:as:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParameters\/getAll(_:as:)","abstract":[{"type":"text","text":"Return parameter with specified id as a certain type"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBParameters":{"title":"HBParameters","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParameters"}],"url":"\/documentation\/hummingbird\/hbparameters","type":"topic","abstract":[{"type":"text","text":"Store for parameters key, value pairs extracted from URI"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParameters","navigatorTitle":[{"kind":"identifier","text":"HBParameters"}],"kind":"symbol","role":"symbol"}}}