{"abstract":[{"type":"text","text":"Add a header name\/value pair to the block."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"name","content":[{"inlineContent":[{"type":"text","text":"The header field name. For maximum compatibility this should be an"},{"type":"text","text":" "},{"type":"text","text":"ASCII string. For future-proofing with HTTP\/2 lowercase header names are strongly"},{"type":"text","text":" "},{"type":"text","text":"recommended."}],"type":"paragraph"}]},{"name":"value","content":[{"inlineContent":[{"text":"The header field value to add for the given name.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"This method is strictly additive: if there are other values for the given header name","type":"text"},{"text":" ","type":"text"},{"text":"already in the block, this will add a new entry.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch"]]},"metadata":{"externalID":"s:11Hummingbird16HTTPHeadersPatchV3add4name5valueySS_SStF","symbolKind":"method","roleHeading":"Instance Method","title":"add(name:value:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"modules":[{"name":"HummingbirdLambda"}]},"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/httpheaderspatch\/add(name:value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch\/add(name:value:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeadersPatch/add(name:value:)":{"abstract":[{"type":"text","text":"Add a header name\/value pair to the block."}],"url":"\/documentation\/hummingbird\/httpheaderspatch\/add(name:value:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch\/add(name:value:)","title":"add(name:value:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeadersPatch":{"abstract":[{"type":"text","text":"Used to Patch HTTPHeaders. Remembers if a header was added in with "},{"code":"add","type":"codeVoice"},{"type":"text","text":" or "},{"code":"replaceOrAdd","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeadersPatch","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HTTPHeadersPatch","kind":"identifier"}],"title":"HTTPHeadersPatch","url":"\/documentation\/hummingbird\/httpheaderspatch"}}}