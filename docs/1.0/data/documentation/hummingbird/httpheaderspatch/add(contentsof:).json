{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch"]]},"variants":[{"paths":["\/documentation\/hummingbird\/httpheaderspatch\/add(contentsof:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contentsOf"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"contentsOf","content":[{"inlineContent":[{"text":"The sequence of header name\/value pairs. For maximum compatibility","type":"text"},{"text":" ","type":"text"},{"text":"the header should be an ASCII string. For future-proofing with HTTP\/2 lowercase header","type":"text"},{"text":" ","type":"text"},{"text":"names are strongly recommended.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This method is strictly additive: if there are other entries with the same header"},{"type":"text","text":" "},{"type":"text","text":"name already in the block, this will add new entries."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"modules":[{"name":"HummingbirdLambda"}],"symbolKind":"method","externalID":"s:11Hummingbird16HTTPHeadersPatchV3add10contentsOfyx_tSTRzSS_SSt7ElementRtzlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"contentsOf","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"add(contentsOf:)","role":"symbol","roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch\/add(contentsOf:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","abstract":[{"text":"Add a sequence of header name\/value pairs to the block.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeadersPatch":{"abstract":[{"type":"text","text":"Used to Patch HTTPHeaders. Remembers if a header was added in with "},{"code":"add","type":"codeVoice"},{"type":"text","text":" or "},{"code":"replaceOrAdd","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeadersPatch","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HTTPHeadersPatch","kind":"identifier"}],"title":"HTTPHeadersPatch","url":"\/documentation\/hummingbird\/httpheaderspatch"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeadersPatch/add(contentsOf:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"add"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contentsOf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Add a sequence of header name\/value pairs to the block."}],"type":"topic","title":"add(contentsOf:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch\/add(contentsOf:)","url":"\/documentation\/hummingbird\/httpheaderspatch\/add(contentsof:)","kind":"symbol"}}}