{"metadata":{"role":"article","title":"Pragmas\/Configuration variables","modules":[{"name":"HummingbirdMustache"}],"roleHeading":"Article"},"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The syntax "},{"type":"codeVoice","code":"{{% var: value}}"},{"type":"text","text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is "},{"type":"codeVoice","code":"CONTENT_TYPE"},{"type":"text","text":". This can be set to either to "},{"type":"codeVoice","code":"HTML"},{"type":"text","text":" or "},{"type":"codeVoice","code":"TEXT"},{"type":"text","text":" and defines how variables are escaped. A content type of "},{"type":"codeVoice","code":"TEXT"},{"type":"text","text":" means no variables are escaped and a content type of "},{"type":"codeVoice","code":"HTML"},{"type":"text","text":" will do HTML escaping of the rendered text. The content type defaults to "},{"type":"codeVoice","code":"HTML"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"Given input object “<>”, template ","type":"text"},{"type":"codeVoice","code":"{{%CONTENT_TYPE: HTML}}{{.}}"},{"text":" will render as ","type":"text"},{"type":"codeVoice","code":"&lt;&gt;"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"{{%CONTENT_TYPE: TEXT}}{{.}}"},{"text":" will render as ","type":"text"},{"type":"codeVoice","code":"<>"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"kind":"article","abstract":[{"type":"text","text":"Setting template render configuration settings."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"title":"Additional Features","generated":true}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"title":"HummingbirdMustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdmustache","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Template-Inheritance":{"type":"topic","role":"article","title":"Template Inheritance","url":"\/documentation\/hummingbird\/template-inheritance","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"role":"article","url":"\/documentation\/hummingbird\/lambdas","title":"Lambdas","kind":"article","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"url":"\/documentation\/hummingbird\/transforms","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","abstract":[{"text":"Transforming objects during render","type":"text"}],"title":"Transforms","kind":"article","type":"topic"}}}