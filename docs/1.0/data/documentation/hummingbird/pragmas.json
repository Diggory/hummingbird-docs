{"kind":"article","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"metadata":{"title":"Pragmas\/Configuration variables","modules":[{"name":"HummingbirdMustache"}],"roleHeading":"Article","role":"article"},"abstract":[{"type":"text","text":"Setting template render configuration settings."}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"title":"Additional Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The syntax "},{"type":"codeVoice","code":"{{% var: value}}"},{"type":"text","text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is "},{"type":"codeVoice","code":"CONTENT_TYPE"},{"type":"text","text":". This can be set to either to "},{"type":"codeVoice","code":"HTML"},{"type":"text","text":" or "},{"type":"codeVoice","code":"TEXT"},{"type":"text","text":" and defines how variables are escaped. A content type of "},{"type":"codeVoice","code":"TEXT"},{"type":"text","text":" means no variables are escaped and a content type of "},{"type":"codeVoice","code":"HTML"},{"type":"text","text":" will do HTML escaping of the rendered text. The content type defaults to "},{"type":"codeVoice","code":"HTML"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given input object “<>”, template "},{"type":"codeVoice","code":"{{%CONTENT_TYPE: HTML}}{{.}}"},{"type":"text","text":" will render as "},{"type":"codeVoice","code":"&lt;&gt;"},{"type":"text","text":" and "},{"type":"codeVoice","code":"{{%CONTENT_TYPE: TEXT}}{{.}}"},{"type":"text","text":" will render as "},{"type":"codeVoice","code":"<>"},{"type":"text","text":"."}]}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"url":"\/documentation\/hummingbirdmustache","kind":"symbol","role":"collection","abstract":[{"text":"Mustache template engine.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","title":"HummingbirdMustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Template-Inheritance":{"title":"Template Inheritance","url":"\/documentation\/hummingbird\/template-inheritance","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"type":"topic","abstract":[{"type":"text","text":"Transforming objects during render"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","role":"article","url":"\/documentation\/hummingbird\/transforms","title":"Transforms","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"type":"topic","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","role":"article","url":"\/documentation\/hummingbird\/lambdas","title":"Lambdas","kind":"article"}}}