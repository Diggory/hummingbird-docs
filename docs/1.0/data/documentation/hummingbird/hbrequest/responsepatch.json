{"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch\/headers","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch\/status"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch\/setCookie(_:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Patches Response via ","type":"text"},{"type":"codeVoice","code":"HBResponse.apply(patch:)"}],"variants":[{"paths":["\/documentation\/hummingbird\/hbrequest\/responsepatch"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponsePatch","kind":"identifier"}]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"text":"Allow you to patch the response generated by your route handler via the ","type":"text"},{"code":"HBRequest","type":"codeVoice"},{"text":" supplied. If your handler is only","type":"text"},{"text":" ","type":"text"},{"text":"returning the payload you can edit the status and headers via ","type":"text"},{"code":"request.response","type":"codeVoice"},{"text":" eg.","type":"text"}],"type":"paragraph"},{"code":["func myHandler(_ request: HBRequest) -> String {","    request.response.status = .accepted","    return \"hello\"","}"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponsePatch"}],"title":"HBRequest.ResponsePatch","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}],"extendedModule":"Hummingbird","roleHeading":"Class","externalID":"s:11Hummingbird9HBRequestV13ResponsePatchC","modules":[{"name":"HummingbirdFoundation","relatedModules":["Hummingbird"]}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/ResponsePatch/headers":{"url":"\/documentation\/hummingbird\/hbrequest\/responsepatch\/headers","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HTTPHeadersPatchV","text":"HTTPHeadersPatch"}],"title":"headers","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"headers to add to response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch\/headers"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/ResponsePatch":{"type":"topic","navigatorTitle":[{"text":"ResponsePatch","kind":"identifier"}],"role":"symbol","title":"HBRequest.ResponsePatch","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch","abstract":[{"text":"Patches Response via ","type":"text"},{"code":"HBResponse.apply(patch:)","type":"codeVoice"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}],"url":"\/documentation\/hummingbird\/hbrequest\/responsepatch"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/ResponsePatch/status":{"type":"topic","url":"\/documentation\/hummingbird\/hbrequest\/responsepatch\/status","role":"symbol","title":"status","abstract":[{"type":"text","text":"patch status of reponse"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch\/status","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"status"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPResponseStatus","preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO"},{"kind":"text","text":"?"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbird\/hbrequest","title":"HBRequest"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/ResponsePatch/setCookie(_:)":{"abstract":[{"text":"Set cookie on reponse patch","type":"text"}],"url":"\/documentation\/hummingbird\/hbrequest\/responsepatch\/setcookie(_:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setCookie","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HBCookie","preciseIdentifier":"s:21HummingbirdFoundation8HBCookieV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch\/setCookie(_:)","title":"setCookie(_:)","kind":"symbol"}}}