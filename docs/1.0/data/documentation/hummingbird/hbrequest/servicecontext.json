{"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbird\/hbrequest\/servicecontext"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"serviceContext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20ServiceContextModule0aB0V","text":"ServiceContext"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Attaching serviceContext to the request should be used when we arenâ€™t inside an async"},{"type":"text","text":" "},{"type":"text","text":"function and serviceContext cannot be propagated via Task local variables. Otherwise"},{"type":"text","text":" "},{"type":"text","text":"serviceContext should be propagated using Task local variables using "},{"type":"codeVoice","code":"ServiceContext.$current.withValue(_)"}],"type":"paragraph"}]}],"metadata":{"extendedModule":"Hummingbird","title":"serviceContext","externalID":"s:11Hummingbird9HBRequestV14serviceContext07ServiceD6Module0eD0Vvp","roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"Hummingbird"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serviceContext","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:20ServiceContextModule0aB0V","text":"ServiceContext"}],"platforms":[{"introducedAt":"13.0","unavailable":false,"beta":false,"name":"iOS","deprecated":false},{"introducedAt":"10.15","unavailable":false,"beta":false,"name":"macOS","deprecated":false},{"introducedAt":"13.0","unavailable":false,"beta":false,"name":"tvOS","deprecated":false},{"introducedAt":"6.0","unavailable":false,"beta":false,"name":"watchOS","deprecated":false}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest"]]},"abstract":[{"type":"text","text":"ServiceContext attached to request. Used to propagate serviceContext to child functions"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/serviceContext"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"title":"HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbrequest","type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/serviceContext":{"title":"serviceContext","abstract":[{"text":"ServiceContext attached to request. Used to propagate serviceContext to child functions","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbrequest\/servicecontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/serviceContext","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"serviceContext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ServiceContext","preciseIdentifier":"s:20ServiceContextModule0aB0V"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection"}}}