{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbrequest\/withspan(_:ofkind:_:)-4bxhf"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operationName","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"kind","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"SpanKind","preciseIdentifier":"s:7Tracing8SpanKindO","kind":"typeIdentifier"},{"text":" = .internal, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"text":": (","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Span","preciseIdentifier":"s:7Tracing4SpanP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"operationName","content":[{"type":"paragraph","inlineContent":[{"text":"The name of the operation being traced. This may be a handler function, database call, …","type":"text"}]}]},{"name":"kind","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"SpanKind","type":"codeVoice"},{"text":" of the ","type":"text"},{"code":"Span","type":"codeVoice"},{"text":" to be created. Defaults to ","type":"text"},{"code":"SpanKind\/internal","type":"codeVoice"},{"text":".","type":"text"}]}]},{"name":"operation","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"operation to wrap in a span start\/end and execute immediately"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"the value returned by ","type":"text"},{"type":"codeVoice","code":"operation"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"text":"Calls operation with edited request that includes the serviceContext from span, and the span Be sure to use the","type":"text"},{"text":" ","type":"text"},{"code":"HBRequest","type":"codeVoice"},{"text":" passed to the closure as that includes the serviceContext","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This function should be used when we aren’t inside an async function and serviceContext cannot be propagated"},{"type":"text","text":" "},{"type":"text","text":"via Task local variables. The equivalent async version of this is"},{"type":"text","text":" "},{"type":"codeVoice","code":"InstrumentationSystem.tracer.withSpan(_:ofKind:_)"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"DO NOT "},{"type":"codeVoice","code":"end()"},{"type":"text","text":" the passed in span manually. It will be ended automatically when the "},{"type":"codeVoice","code":"operation"},{"type":"text","text":" returns."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"the error the ","type":"text"},{"code":"operation","type":"codeVoice"},{"text":" has thrown (if any)","type":"text"}]}],"style":"note","type":"aside","name":"Throws"}],"kind":"content"}],"sections":[],"abstract":[{"type":"text","text":"Execute the given operation within a newly created "},{"type":"codeVoice","code":"Span"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"roleHeading":"Instance Method","role":"symbol","platforms":[{"introducedAt":"13.0","deprecated":false,"beta":false,"unavailable":false,"name":"iOS"},{"introducedAt":"10.15","deprecated":false,"beta":false,"unavailable":false,"name":"macOS"},{"introducedAt":"13.0","deprecated":false,"beta":false,"unavailable":false,"name":"tvOS"},{"introducedAt":"6.0","deprecated":false,"beta":false,"unavailable":false,"name":"watchOS"}],"title":"withSpan(_:ofKind:_:)","symbolKind":"method","extendedModule":"Hummingbird","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdLambda"}],"externalID":"s:11Hummingbird9HBRequestV8withSpan_6ofKind_xSS_7Tracing0dF0OxAC_AF0D0_ptKXEtKlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withSpan"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ofKind"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Tracing8SpanKindO","kind":"typeIdentifier","text":"SpanKind"},{"kind":"text","text":", ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Tracing4SpanP","kind":"typeIdentifier","text":"Span"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/withSpan(_:ofKind:_:)-4bxhf":{"url":"\/documentation\/hummingbird\/hbrequest\/withspan(_:ofkind:_:)-4bxhf","title":"withSpan(_:ofKind:_:)","kind":"symbol","abstract":[{"text":"Execute the given operation within a newly created ","type":"text"},{"type":"codeVoice","code":"Span"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withSpan"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ofKind"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Tracing8SpanKindO","kind":"typeIdentifier","text":"SpanKind"},{"kind":"text","text":", ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Tracing4SpanP","kind":"typeIdentifier","text":"Span"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbrequest","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","title":"HBRequest","abstract":[{"text":"Holds all the values required to process a request","type":"text"}]}}}