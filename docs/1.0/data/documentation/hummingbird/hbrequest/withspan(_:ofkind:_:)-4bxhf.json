{"abstract":[{"text":"Execute the given operation within a newly created ","type":"text"},{"code":"Span","type":"codeVoice"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operationName","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"kind","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Tracing8SpanKindO","text":"SpanKind","kind":"typeIdentifier"},{"text":" = .internal, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Tracing4SpanP","text":"Span","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The name of the operation being traced. This may be a handler function, database call, …"}],"type":"paragraph"}],"name":"operationName"},{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SpanKind"},{"text":" of the ","type":"text"},{"type":"codeVoice","code":"Span"},{"text":" to be created. Defaults to ","type":"text"},{"type":"codeVoice","code":"SpanKind\/internal"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"kind"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"operation to wrap in a span start\/end and execute immediately"}]}],"name":"operation"}]},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"the value returned by "},{"type":"codeVoice","code":"operation"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Calls operation with edited request that includes the serviceContext from span, and the span Be sure to use the"},{"type":"text","text":" "},{"code":"HBRequest","type":"codeVoice"},{"type":"text","text":" passed to the closure as that includes the serviceContext"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This function should be used when we aren’t inside an async function and serviceContext cannot be propagated"},{"type":"text","text":" "},{"type":"text","text":"via Task local variables. The equivalent async version of this is"},{"type":"text","text":" "},{"code":"InstrumentationSystem.tracer.withSpan(_:ofKind:_)","type":"codeVoice"}],"type":"paragraph"},{"inlineContent":[{"text":"DO NOT ","type":"text"},{"code":"end()","type":"codeVoice"},{"text":" the passed in span manually. It will be ended automatically when the ","type":"text"},{"code":"operation","type":"codeVoice"},{"text":" returns.","type":"text"}],"type":"paragraph"},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":"the error the "},{"type":"codeVoice","code":"operation"},{"type":"text","text":" has thrown (if any)"}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"sections":[],"metadata":{"title":"withSpan(_:ofKind:_:)","platforms":[{"introducedAt":"13.0","unavailable":false,"deprecated":false,"name":"iOS","beta":false},{"introducedAt":"10.15","unavailable":false,"deprecated":false,"name":"macOS","beta":false},{"introducedAt":"13.0","unavailable":false,"deprecated":false,"name":"tvOS","beta":false},{"introducedAt":"6.0","unavailable":false,"deprecated":false,"name":"watchOS","beta":false}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Tracing8SpanKindO","text":"SpanKind","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Tracing4SpanP","text":"Span","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"modules":[{"name":"HummingbirdFoundation","relatedModules":["Hummingbird"]}],"externalID":"s:11Hummingbird9HBRequestV8withSpan_6ofKind_xSS_7Tracing0dF0OxAC_AF0D0_ptKXEtKlF","extendedModule":"Hummingbird","symbolKind":"method","role":"symbol","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbrequest\/withspan(_:ofkind:_:)-4bxhf"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbird\/hbrequest","title":"HBRequest"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/withSpan(_:ofKind:_:)-4bxhf":{"url":"\/documentation\/hummingbird\/hbrequest\/withspan(_:ofkind:_:)-4bxhf","abstract":[{"type":"text","text":"Execute the given operation within a newly created "},{"code":"Span","type":"codeVoice"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","title":"withSpan(_:ofKind:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withSpan"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ofKind"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Tracing8SpanKindO","kind":"typeIdentifier","text":"SpanKind"},{"kind":"text","text":", ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Tracing4SpanP","kind":"typeIdentifier","text":"Span"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"}],"kind":"symbol"}}}