{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/group(_:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"return new ","type":"text"},{"code":"RouterGroup","type":"codeVoice"}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"path","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" = \"\") -> "},{"preciseIdentifier":"s:11Hummingbird13HBRouterGroupV","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","text":"HBRouterGroup"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"prefix to add to paths inside the group","type":"text"}]}],"name":"path"}],"kind":"parameters"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV","text":"HBRouterGroup"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:11Hummingbird15HBRouterBuilderC5groupyAA0B5GroupVSSF","symbolKind":"method","modules":[{"name":"Hummingbird"}],"title":"group(_:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbird\/hbrouterbuilder\/group(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","url":"\/documentation\/index","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/group(_:)":{"role":"symbol","url":"\/documentation\/hummingbird\/hbrouterbuilder\/group(_:)","type":"topic","abstract":[{"type":"text","text":"return new "},{"code":"RouterGroup","type":"codeVoice"}],"kind":"symbol","title":"group(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"group"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV","text":"HBRouterGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/group(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"title":"HBRouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutergroup","type":"topic","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder":{"title":"HBRouterBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"url":"\/documentation\/hummingbird\/hbrouterbuilder","type":"topic","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","url":"\/documentation\/hummingbird\/router","type":"topic","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","kind":"article","role":"collectionGroup"}}}