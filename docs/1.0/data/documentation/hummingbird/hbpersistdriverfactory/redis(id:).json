{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriverFactory"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriverFactory"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriverFactory"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"redis","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RedisConnectionPoolGroupIdentifier","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV"},{"text":") -> ","kind":"text"},{"text":"HBPersistDriverFactory","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriverFactory","preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV"}],"platforms":["Linux"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbpersistdriverfactory\/redis(id:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriverFactory\/redis(id:)"},"metadata":{"extendedModule":"Hummingbird","title":"redis(id:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"redis"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","text":"RedisConnectionPoolGroupIdentifier","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV","text":"HBPersistDriverFactory","kind":"typeIdentifier"}],"role":"symbol","roleHeading":"Type Method","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird22HBPersistDriverFactoryV0A5RedisE5redis2idAcD0E29ConnectionPoolGroupIdentifierV_tFZ"},"abstract":[{"text":"Redis driver for persist system","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBPersistDriverFactory/redis(id:)":{"kind":"symbol","title":"redis(id:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriverFactory\/redis(id:)","url":"\/documentation\/hummingbird\/hbpersistdriverfactory\/redis(id:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"redis"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","kind":"typeIdentifier","text":"RedisConnectionPoolGroupIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV","kind":"typeIdentifier","text":"HBPersistDriverFactory"}],"abstract":[{"text":"Redis driver for persist system","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroupIdentifier":{"navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolGroupIdentifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolGroupIdentifier"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier","abstract":[],"role":"symbol","title":"RedisConnectionPoolGroupIdentifier","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupIdentifier","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBPersistDriverFactory":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriverFactory","title":"HBPersistDriverFactory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBPersistDriverFactory","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbpersistdriverfactory","type":"topic","abstract":[{"text":"Factory class for persist drivers","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"HBPersistDriverFactory","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data","url":"\/documentation\/hummingbird\/persistentdata","type":"topic","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","url":"\/documentation\/index","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection"}}}