{"variants":[{"paths":["\/documentation\/hummingbird\/asyncsequenceresponsebodystreamer\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseBodyStreamer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseBodyStreamer\/init(_:)"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"asyncSequence","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"ByteBufferSequence","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]}],"metadata":{"platforms":[{"introducedAt":"13.0","unavailable":false,"name":"iOS","deprecated":false,"beta":false},{"introducedAt":"10.15","unavailable":false,"name":"macOS","deprecated":false,"beta":false},{"introducedAt":"13.0","unavailable":false,"name":"tvOS","deprecated":false,"beta":false},{"introducedAt":"6.0","unavailable":false,"name":"watchOS","deprecated":false,"beta":false}],"title":"init(_:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ByteBufferSequence"},{"kind":"text","text":")"}],"externalID":"s:11Hummingbird33AsyncSequenceResponseBodyStreamerCyACyxGxcfc","modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Initializer","symbolKind":"init"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AsyncSequenceResponseBodyStreamer/init(_:)":{"title":"init(_:)","url":"\/documentation\/hummingbird\/asyncsequenceresponsebodystreamer\/init(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseBodyStreamer\/init(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ByteBufferSequence"},{"kind":"text","text":")"}],"type":"topic","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AsyncSequenceResponseBodyStreamer":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceResponseBodyStreamer"}],"kind":"symbol","title":"AsyncSequenceResponseBodyStreamer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceResponseBodyStreamer"}],"type":"topic","url":"\/documentation\/hummingbird\/asyncsequenceresponsebodystreamer","role":"symbol","abstract":[{"text":"Response body streamer which uses an AsyncSequence as its input.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseBodyStreamer"}}}