{"metadata":{"externalID":"s:11Hummingbird33AsyncSequenceResponseBodyStreamerC4read2on7NIOCore15EventLoopFutureCy0A4Core16HBStreamerOutputOGAF0jK0_p_tF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"HBStreamerOutput","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore16HBStreamerOutputO"},{"text":">","kind":"text"}],"title":"read(on:)","symbolKind":"method","modules":[{"name":"HummingbirdLambda"}],"role":"symbol","roleHeading":"Instance Method","platforms":[{"name":"iOS","deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false},{"name":"macOS","deprecated":false,"beta":false,"introducedAt":"10.15","unavailable":false},{"name":"tvOS","deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false},{"name":"watchOS","deprecated":false,"beta":false,"introducedAt":"6.0","unavailable":false}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"HBStreamerOutput","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput","preciseIdentifier":"s:15HummingbirdCore16HBStreamerOutputO"},{"kind":"text","text":">"}]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/asyncsequenceresponsebodystreamer\/read(on:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseBodyStreamer"]]},"abstract":[{"type":"text","text":"Inherited from "},{"code":"HBResponseBodyStreamer.read(on:)","type":"codeVoice"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseBodyStreamer\/read(on:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AsyncSequenceResponseBodyStreamer/read(on:)":{"kind":"symbol","title":"read(on:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore16HBStreamerOutputO","kind":"typeIdentifier","text":"HBStreamerOutput"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/hummingbird\/asyncsequenceresponsebodystreamer\/read(on:)","role":"symbol","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseBodyStreamer\/read(on:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerOutput":{"abstract":[{"text":"Values returned when we consume the contents of the streamer","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamerOutput","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBStreamerOutput","kind":"identifier"}],"title":"HBStreamerOutput","url":"\/documentation\/hummingbird\/hbstreameroutput"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AsyncSequenceResponseBodyStreamer":{"navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceResponseBodyStreamer"}],"kind":"symbol","title":"AsyncSequenceResponseBodyStreamer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceResponseBodyStreamer"}],"type":"topic","url":"\/documentation\/hummingbird\/asyncsequenceresponsebodystreamer","role":"symbol","abstract":[{"text":"Response body streamer which uses an AsyncSequence as its input.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AsyncSequenceResponseBodyStreamer"}}}