{"abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"title":"Additional Features","generated":true}],"metadata":{"modules":[{"name":"HummingbirdMustache"}],"title":"Template Inheritance","roleHeading":"Article","role":"article"},"kind":"article","primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature. Template inheritance allows you to override elements of an included partial. It allows you to create a base page template and override elements of it with your page content. A partial that includes overriding elements is indicated with a ","type":"text"},{"type":"codeVoice","code":"{{<partial}}"},{"text":". Note this is different from the normal partial reference which uses ","type":"text"},{"type":"codeVoice","code":">"},{"text":". This is a section tag so needs a ending tag as well. Inside the section the tagged sections to override are added using the syntax ","type":"text"},{"type":"codeVoice","code":"{{$tag}}contents{{\/tag}}"},{"text":". If your template and partial were as follows","type":"text"}]},{"code":["{{! mypage.mustache }}","{{<base}}","{{$head}}<title>My page title<\/title>{{\/head}}","{{$body}}Hello world{{\/body}}","{{\/base}}"],"type":"codeListing","syntax":null},{"code":["{{! base.mustache }}","<html>","<head>","{{$head}}{{\/head}}","<\/head>","<body>","{{$body}}Default text{{\/body}}","<\/body>","<\/html>"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You would get the following output when rendering "},{"type":"codeVoice","code":"mypage.mustache"},{"type":"text","text":"."}]},{"code":["<html>","<head>","<title>My page title<\/title>","<\/head>","<body>","Hello world","<\/body>"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note the "},{"type":"codeVoice","code":"{{$head}}"},{"type":"text","text":" section in "},{"type":"codeVoice","code":"base.mustache"},{"text":" is replaced with the ","type":"text"},{"code":"{{$head}}","type":"codeVoice"},{"text":" section included inside the ","type":"text"},{"code":"{{<base}}","type":"codeVoice"},{"text":" partial reference from ","type":"text"},{"code":"mypage.mustache","type":"codeVoice"},{"text":". The same occurs with the ","type":"text"},{"code":"{{$body}}","type":"codeVoice"},{"text":" section. In that case though a default value is supplied for the situation where a ","type":"text"},{"code":"{{$body}}","type":"codeVoice"},{"text":" section is not supplied.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","interfaceLanguage":"swift"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"url":"\/documentation\/hummingbird\/pragmas","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","type":"topic","title":"Pragmas\/Configuration variables","kind":"article","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"role":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"kind":"symbol","title":"HummingbirdMustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","url":"\/documentation\/hummingbirdmustache","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"kind":"article","type":"topic","title":"Lambdas","role":"article","url":"\/documentation\/hummingbird\/lambdas","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"kind":"article","title":"Transforms","abstract":[{"text":"Transforming objects during render","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","url":"\/documentation\/hummingbird\/transforms","role":"article"}}}