{"variants":[{"paths":["\/documentation\/hummingbirdxct\/xcttestingsetup"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/SH"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"languages":["swift"]}]}],"abstract":[{"text":"Type of test framework","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]]},"metadata":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"modules":[{"name":"HummingbirdXCT"}],"externalID":"s:14HummingbirdXCT15XCTTestingSetupO","navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"title":"XCTTestingSetup","symbolKind":"enum","role":"symbol","roleHeading":"Enumeration"},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations"]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/Equatable-Implementations":{"kind":"article","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations","role":"collectionGroup","type":"topic","title":"Equatable Implementations","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/equatable-implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/embedded":{"abstract":[{"text":"Test using SwiftNIO ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":". This is useful for testing where no actual IO or multi threading is required.","type":"text"}],"url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/embedded","role":"symbol","title":"XCTTestingSetup.embedded","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"embedded"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/live":{"title":"XCTTestingSetup.live","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/live","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"live"}],"type":"topic","abstract":[{"text":"Sets up a live server and execute tests using a HTTP client.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SH","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"title":"HummingbirdXCT","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"url":"\/documentation\/hummingbirdxct"},"doc://com.opticalaberration.hummingbird/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","title":"XCTTestingSetup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","abstract":[{"text":"Type of test framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/asyncTest":{"title":"XCTTestingSetup.asyncTest","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/asynctest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncTest"}],"type":"topic","abstract":[{"text":"Test using SwiftNIO ","type":"text"},{"type":"codeVoice","code":"NIOAsyncTestingChannel"},{"text":". This allows for testing of Swift Concurrency based routes.","type":"text"}],"role":"symbol","kind":"symbol"}}}