{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Type of test framework"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"modules":[{"name":"HummingbirdXCT"}],"role":"symbol","roleHeading":"Enumeration","externalID":"s:14HummingbirdXCT15XCTTestingSetupO","title":"XCTTestingSetup","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"symbolKind":"enum"},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/SH"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdxct\/xcttestingsetup"]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live"],"title":"Enumeration Cases"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations"],"title":"Default Implementations"}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/asyncTest":{"abstract":[{"text":"Test using SwiftNIO ","type":"text"},{"code":"NIOAsyncTestingChannel","type":"codeVoice"},{"text":". This allows for testing of Swift Concurrency based routes.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","title":"XCTTestingSetup.asyncTest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/asynctest","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncTest","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"title":"XCTTestingSetup","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","type":"topic","navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"abstract":[{"text":"Type of test framework","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SH","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/live":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"live","kind":"identifier"}],"abstract":[{"type":"text","text":"Sets up a live server and execute tests using a HTTP client."}],"title":"XCTTestingSetup.live","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/live","kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"url":"\/documentation\/hummingbirdxct","kind":"symbol","role":"collection","type":"topic","title":"HummingbirdXCT","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/Equatable-Implementations":{"abstract":[],"title":"Equatable Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/equatable-implementations","kind":"article","role":"collectionGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/embedded":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","title":"XCTTestingSetup.embedded","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"embedded","kind":"identifier"}],"abstract":[{"text":"Test using SwiftNIO ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":". This is useful for testing where no actual IO or multi threading is required.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/embedded","role":"symbol"}}}