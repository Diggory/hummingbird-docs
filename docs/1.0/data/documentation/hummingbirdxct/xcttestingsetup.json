{"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/SH"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdxct\/xcttestingsetup"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup"},"metadata":{"modules":[{"name":"HummingbirdXCT"}],"role":"symbol","symbolKind":"enum","title":"XCTTestingSetup","navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"roleHeading":"Enumeration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"externalID":"s:14HummingbirdXCT15XCTTestingSetupO"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live"]},{"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations"],"generated":true}],"abstract":[{"type":"text","text":"Type of test framework"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://com.opticalaberration.hummingbird/SQ":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/asyncTest":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncTest"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","title":"XCTTestingSetup.asyncTest","abstract":[{"type":"text","text":"Test using SwiftNIO "},{"type":"codeVoice","code":"NIOAsyncTestingChannel"},{"type":"text","text":". This allows for testing of Swift Concurrency based routes."}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/asynctest"},"doc://com.opticalaberration.hummingbird/SH":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"title":"HummingbirdXCT","url":"\/documentation\/hummingbirdxct","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/live":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live","type":"topic","abstract":[{"text":"Sets up a live server and execute tests using a HTTP client.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/live","title":"XCTTestingSetup.live","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"live","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XCTTestingSetup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","title":"XCTTestingSetup","abstract":[{"text":"Type of test framework","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","navigatorTitle":[{"kind":"identifier","text":"XCTTestingSetup"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/Equatable-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations","title":"Equatable Implementations","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/equatable-implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/embedded":{"url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/embedded","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Test using SwiftNIO "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":". This is useful for testing where no actual IO or multi threading is required."}],"title":"XCTTestingSetup.embedded","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"embedded"}]}}}