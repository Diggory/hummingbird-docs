{"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Type of test framework","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"XCTTestingSetup"}],"modules":[{"name":"HummingbirdXCT"}],"role":"symbol","roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"externalID":"s:14HummingbirdXCT15XCTTestingSetupO","title":"XCTTestingSetup","symbolKind":"enum"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]]},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/SH"],"type":"conformsTo","title":"Conforms To"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations"],"generated":true,"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdxct\/xcttestingsetup"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/asyncTest":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/asynctest","abstract":[{"text":"Test using SwiftNIO ","type":"text"},{"code":"NIOAsyncTestingChannel","type":"codeVoice"},{"text":". This allows for testing of Swift Concurrency based routes.","type":"text"}],"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncTest","kind":"identifier"}],"title":"XCTTestingSetup.asyncTest"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/live":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"live"}],"title":"XCTTestingSetup.live","abstract":[{"text":"Sets up a live server and execute tests using a HTTP client.","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/live","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/Equatable-Implementations":{"abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/equatable-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations","title":"Equatable Implementations","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","kind":"symbol","navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","abstract":[{"text":"Type of test framework","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"title":"XCTTestingSetup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/embedded":{"abstract":[{"text":"Test using SwiftNIO ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":". This is useful for testing where no actual IO or multi threading is required.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/embedded","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","title":"XCTTestingSetup.embedded","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"embedded"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/SH":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"type":"topic","title":"HummingbirdXCT","kind":"symbol","url":"\/documentation\/hummingbirdxct","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"},"doc://com.opticalaberration.hummingbird/SQ":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","title":"Swift.Equatable","type":"unresolvable"}}}