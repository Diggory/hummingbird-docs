{"interfaceLanguages":{"swift":[{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/migratingtov2","title":"Migrating to Hummingbird v2","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/init(context:options:)","title":"init(context: Context.Type, options: RouterOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/middlewares","title":"let middlewares: MiddlewareGroup<Context>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/buildresponder()","title":"func buildResponder() -> RouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/router\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/router\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/router","title":"Router","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routergroup\/add(middleware:)","title":"func add(middleware: any RouterMiddleware<Context>) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> RouterGroup<Context>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routergroup\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routergroup","title":"RouterGroup","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routermethods\/context","title":"Context","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routermethods\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/ws(_:shouldupgrade:onupgrade:)","title":"func ws(String, shouldUpgrade: (Request, Context) async throws -> RouterShouldUpgrade, onUpgrade: WebSocketDataHandler<WebSocketContextFromRouter<Context>>) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routermethods","title":"RouterMethods","type":"protocol"}],"path":"\/documentation\/hummingbird\/routerguide","title":"Router","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/decoder","title":"Decoder","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/encoder","title":"Encoder","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/corecontext","title":"var coreContext: CoreRequestContext","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/logger","title":"var logger: Logger","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/baserequestcontext\/maxuploadsize-572ur","title":"var maxUploadSize: Int","type":"property"}],"title":"BaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/baserequestcontext\/maxuploadsize-23mxy","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"children":[{"title":"BaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/baserequestcontext\/requestdecoder-9nsum","title":"var requestDecoder: Decoder","type":"property"},{"children":[{"title":"BaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/baserequestcontext\/responseencoder-65htn","title":"var responseEncoder: Encoder","type":"property"}],"path":"\/documentation\/hummingbird\/baserequestcontext","title":"BaseRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/corecontext","title":"var coreContext: CoreRequestContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/requestdecoder","title":"var requestDecoder: Decoder","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/responseencoder","title":"var responseEncoder: Encoder","type":"property"}],"path":"\/documentation\/hummingbird\/basicrequestcontext\/baserequestcontext-implementations","title":"BaseRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/basicrequestcontext","title":"BasicRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/init(context:options:)","title":"init(context: Context.Type, options: RouterOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/middlewares","title":"let middlewares: MiddlewareGroup<Context>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/buildresponder()","title":"func buildResponder() -> RouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/router\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/router\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/router","title":"Router","type":"class"}],"path":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestdecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: Request, context: some BaseRequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbird\/requestdecoder","title":"RequestDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/responseencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: Request, context: some BaseRequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/responseencoder","title":"ResponseEncoder","type":"protocol"}],"path":"\/documentation\/hummingbird\/encodinganddecoding","title":"Encoding and Decoding","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routermiddleware","title":"RouterMiddleware","type":"protocol"}],"path":"\/documentation\/hummingbird\/middlewareguide","title":"Middleware","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/init(_:)","title":"init(HTTPResponse.Status)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/httperror\/init(_:message:)","title":"init(HTTPResponse.Status, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/body","title":"var body: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/httperror\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/httperror\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/httperror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/httperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httperror\/httpresponseerror-implementations","title":"HTTPResponseError Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/httperror","title":"HTTPError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpresponseerror","title":"HTTPResponseError","type":"protocol"}],"path":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/init(arrayliteral:)","title":"init(arrayLiteral: ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/arrayliteralelement","title":"LogRequestsMiddleware.HeaderFilter.ArrayLiteralElement","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/none","title":"static var none: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/all(except:)","title":"static func all(except: [HTTPField.Name]) -> LogRequestsMiddleware<Context>.HeaderFilter","type":"method"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/some(_:)","title":"static func some([HTTPField.Name]) -> LogRequestsMiddleware<Context>.HeaderFilter","type":"method"}],"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter","title":"LogRequestsMiddleware.HeaderFilter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/init(_:includeheaders:redactheaders:)","title":"init(Logger.Level, includeHeaders: HeaderFilter, redactHeaders: [HTTPField.Name])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/logrequestsmiddleware","title":"LogRequestsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/metricsmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/metricsmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/metricsmiddleware","title":"MetricsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/tracingmiddleware\/init(recordingheaders:attributes:)","title":"init(recordingHeaders: some Collection<HTTPField.Name>, attributes: SpanAttributes?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/tracingmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/tracingmiddleware","title":"TracingMiddleware","type":"struct"}],"path":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","type":"symbol"},{"path":"\/documentation\/hummingbird\/servicelifecycle","title":"Service Lifecycle","type":"article"},{"path":"\/documentation\/hummingbird\/testing","title":"Testing","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"children":[{"title":"PersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/persistdriver\/shutdown()-3u3ne","title":"func shutdown() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/persistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persistdriver","title":"PersistDriver","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/persisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/persisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persisterror","title":"PersistError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/init(_:)","title":"init(C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/memorypersistdriver","title":"MemoryPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/init(fluent:databaseid:tidyupfrequency:)","title":"init(fluent: Fluent, databaseID: DatabaseID?, tidyUpFrequency: Duration) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","title":"FluentPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/init(client:migrations:tidyupfrequency:logger:)","title":"init(client: PostgresClient, migrations: PostgresMigrations, tidyUpFrequency: Duration, logger: Logger) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver","title":"PostgresPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/init(redisconnectionpoolservice:)","title":"init(redisConnectionPoolService: RedisConnectionPoolService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver","title":"RedisPersistDriver","type":"struct"}],"path":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(_:parameters:)","title":"init(String, parameters: Parameters.Type)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/init(_:numworkers:logger:)","title":"init(Queue, numWorkers: Int, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/queue","title":"let queue: Queue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(_:)","title":"func push<Parameters>(Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(id:parameters:)","title":"func push<Parameters>(id: JobIdentifier<Parameters>, parameters: Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(_:)","title":"func registerJob(JobDefinition<some Codable & Sendable>)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(id:maxretrycount:execute:)","title":"func registerJob<Parameters>(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(parameters:maxretrycount:execute:)","title":"func registerJob<Parameters>(parameters: Parameters.Type, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/run()","title":"func run() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue","title":"JobQueue","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobparameters\/jobid","title":"static var jobID: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobparameters","title":"JobParameters","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(id:maxretrycount:execute:)","title":"init(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(maxretrycount:execute:)","title":"init(maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/id","title":"let id: JobIdentifier<Parameters>","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobdefinition","title":"JobDefinition","type":"struct"}],"path":"\/documentation\/hummingbird\/jobsguide","title":"Jobs","type":"symbol"},{"title":"Tutorials","type":"groupMarker"},{"children":[{"title":"Application setup","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-1-setup","title":"Setup a Hummingbird application.","type":"project"},{"title":"API Setup","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-2-api","title":"Add your application API","type":"project"},{"title":"Testing your application","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-3-testing","title":"Testing your application","type":"project"},{"title":"Store Todos in a database","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-4-postgres","title":"Use PostgresNIO to store your Todos in a Postgres database","type":"project"}],"path":"\/tutorials\/todos","title":"Build a Todos application.","type":"overview"},{"title":"Application","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/init(responder:server:configuration:services:onserverrunning:eventloopgroupprovider:logger:)","title":"init(responder: Responder, server: HTTPServerBuilder, configuration: ApplicationConfiguration, services: [Service], onServerRunning: (Channel) async -> Void, eventLoopGroupProvider: EventLoopGroupProvider, logger: Logger?)","type":"init"},{"path":"\/documentation\/hummingbird\/application\/init(router:server:configuration:services:onserverrunning:eventloopgroupprovider:logger:)","title":"init<ResponderBuilder>(router: ResponderBuilder, server: HTTPServerBuilder, configuration: ApplicationConfiguration, services: [Service], onServerRunning: (Channel) async -> Void, eventLoopGroupProvider: EventLoopGroupProvider, logger: Logger?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/configuration","title":"var configuration: ApplicationConfiguration","type":"property"},{"path":"\/documentation\/hummingbird\/application\/eventloopgroup","title":"let eventLoopGroup: EventLoopGroup","type":"property"},{"path":"\/documentation\/hummingbird\/application\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbird\/application\/processesrunbeforeserverstart","title":"var processesRunBeforeServerStart: [() async throws -> Void]","type":"property"},{"path":"\/documentation\/hummingbird\/application\/responder-swift.property","title":"let responder: Responder","type":"property"},{"path":"\/documentation\/hummingbird\/application\/server","title":"let server: HTTPServerBuilder","type":"property"},{"path":"\/documentation\/hummingbird\/application\/services","title":"var services: [any Service]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/addservices(_:)","title":"func addServices(any Service...)","type":"method"},{"path":"\/documentation\/hummingbird\/application\/buildresponder()","title":"func buildResponder() async throws -> Responder","type":"method"},{"path":"\/documentation\/hummingbird\/application\/onserverrunning(_:)","title":"func onServerRunning(Channel) async","type":"method"},{"path":"\/documentation\/hummingbird\/application\/runbeforeserverstart(_:)","title":"func runBeforeServerStart(() async throws -> Void)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/context","title":"Application.Context","type":"typealias"},{"path":"\/documentation\/hummingbird\/application\/responder-swift.typealias","title":"Application.Responder","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/application\/runservice(gracefulshutdownsignals:)","title":"func runService(gracefulShutdownSignals: [UnixSignal]) async throws","type":"method"}],"path":"\/documentation\/hummingbird\/application\/applicationprotocol-implementations","title":"ApplicationProtocol Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/application\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/application\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/application","title":"Application","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype","title":"Responder","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/configuration-3a0f8","title":"var configuration: ApplicationConfiguration","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/configuration-8uajt","title":"var configuration: ApplicationConfiguration","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup-4nmtn","title":"var eventLoopGroup: EventLoopGroup","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup-57h5r","title":"var eventLoopGroup: EventLoopGroup","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/logger-7978o","title":"var logger: Logger","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/logger-8mlwz","title":"var logger: Logger","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart-8eefe","title":"var processesRunBeforeServerStart: [() async throws -> Void]","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart-5w24n","title":"var processesRunBeforeServerStart: [() async throws -> Void]","type":"property"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property","title":"var responder: Responder","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/server-oml4","title":"var server: HTTPServerBuilder","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/server-ajjq","title":"var server: HTTPServerBuilder","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/services-1v35v","title":"var services: [any Service]","type":"property"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/services-6oxjb","title":"var services: [any Service]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-58g9y","title":"func onServerRunning(Channel) async","type":"method"}],"title":"ApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-1xv91","title":"func onServerRunning(Channel) async","type":"method"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)","title":"func runService(gracefulShutdownSignals: [UnixSignal]) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/context","title":"ApplicationProtocol.Context","type":"typealias"}],"path":"\/documentation\/hummingbird\/applicationprotocol","title":"ApplicationProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/init(address:servername:backlog:reuseaddress:)","title":"init(address: BindAddress, serverName: String?, backlog: Int, reuseAddress: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/address","title":"var address: BindAddress","type":"property"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/backlog","title":"var backlog: Int","type":"property"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/reuseaddress","title":"var reuseAddress: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/servername","title":"var serverName: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/applicationconfiguration\/with(address:servername:backlog:reuseaddress:)","title":"func with(address: BindAddress?, serverName: String?, backlog: Int?, reuseAddress: Bool?) -> ApplicationConfiguration","type":"method"}],"path":"\/documentation\/hummingbird\/applicationconfiguration","title":"ApplicationConfiguration","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/eventloopgroupprovider\/shared(_:)","title":"case shared(EventLoopGroup)","type":"case"},{"path":"\/documentation\/hummingbird\/eventloopgroupprovider\/singleton","title":"case singleton","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/eventloopgroupprovider\/eventloopgroup","title":"var eventLoopGroup: EventLoopGroup","type":"property"}],"path":"\/documentation\/hummingbird\/eventloopgroupprovider","title":"EventLoopGroupProvider","type":"enum"},{"title":"Router","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/init(context:options:)","title":"init(context: Context.Type, options: RouterOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/middlewares","title":"let middlewares: MiddlewareGroup<Context>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/buildresponder()","title":"func buildResponder() -> RouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/router\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/router\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/router","title":"Router","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routergroup\/add(middleware:)","title":"func add(middleware: any RouterMiddleware<Context>) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> RouterGroup<Context>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routergroup\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routergroup","title":"RouterGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routecollection\/init(context:)","title":"init(context: Context.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routecollection\/add(middleware:)","title":"func add(middleware: any RouterMiddleware<Context>) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routecollection\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routecollection\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routecollection\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routecollection","title":"RouteCollection","type":"class"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routermethods\/context","title":"Context","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routermethods\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/ws(_:shouldupgrade:onupgrade:)","title":"func ws(String, shouldUpgrade: (Request, Context) async throws -> RouterShouldUpgrade, onUpgrade: WebSocketDataHandler<WebSocketContextFromRouter<Context>>) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routermethods","title":"RouterMethods","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/autogenerateheadendpoints","title":"static var autoGenerateHeadEndpoints: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/routeroptions\/caseinsensitive","title":"static var caseInsensitive: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/routeroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/hummingbird\/routeroptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/init(_:)-5uqgq","title":"init<Source>(Source) async rethrows","type":"init"},{"path":"\/documentation\/hummingbird\/routeroptions\/init(_:)-6njx4","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/hummingbird\/routeroptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routeroptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/routeroptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routeroptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routeroptions","title":"RouterOptions","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httpresponder\/context","title":"Context","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httpresponder\/respond(to:context:)","title":"func respond(to: Request, context: Context) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/httpresponder","title":"HTTPResponder","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httpresponderbuilder\/responder","title":"Responder","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/httpresponderbuilder\/buildresponder()","title":"func buildResponder() -> Responder","type":"method"}],"path":"\/documentation\/hummingbird\/httpresponderbuilder","title":"HTTPResponderBuilder","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/callbackresponder\/init(callback:)","title":"init(callback: (Request, Context) async throws -> Response)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/callbackresponder\/respond(to:context:)","title":"func respond(to: Request, context: Context) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/callbackresponder","title":"CallbackResponder","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerresponder\/respond(to:context:)","title":"func respond(to: Request, context: Context) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/routerresponder","title":"RouterResponder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/endpointpath\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/endpointpath\/value","title":"var value: String?","type":"property"}],"path":"\/documentation\/hummingbird\/endpointpath","title":"EndpointPath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbird\/routerpath\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/components","title":"let components: [Element]","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/description","title":"var description: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/capture(_:)","title":"case capture(Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/null","title":"case null","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/path(_:)","title":"case path(Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/prefixcapture(suffix:parameter:)","title":"case prefixCapture(suffix: Substring, parameter: Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/prefixwildcard(_:)","title":"case prefixWildcard(Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/recursivewildcard","title":"case recursiveWildcard","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/suffixcapture(prefix:parameter:)","title":"case suffixCapture(prefix: Substring, parameter: Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/suffixwildcard(_:)","title":"case suffixWildcard(Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/wildcard","title":"case wildcard","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/routerpath\/element\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routerpath\/element","title":"RouterPath.Element","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/map(_:)-5sp8a","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/subscript(_:)","title":"subscript(Int) -> RouterPath.Element","type":"subscript"}],"path":"\/documentation\/hummingbird\/routerpath\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbird\/routerpath\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbird\/routerpath\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/async","title":"var async: AsyncSyncSequence<Self>","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/flatmap(_:)-5m8ks","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/flatmap(_:)-8xo8l","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/map(_:)-6po7e","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/hummingbird\/routerpath\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routerpath","title":"RouterPath","type":"struct"},{"title":"Request\/Response","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/init(head:body:)","title":"init(head: HTTPRequest, body: RequestBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/body","title":"var body: RequestBody","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/cookies","title":"var cookies: Cookies","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/head","title":"let head: HTTPRequest","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/method","title":"var method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/uri","title":"let uri: URI","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/collatebody(context:)","title":"func collateBody(context: some BaseRequestContext) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/decode(as:context:)","title":"func decode<Type>(as: Type.Type, context: some BaseRequestContext) async throws -> Type","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/request\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/request","title":"Request","type":"struct"},{"path":"\/documentation\/hummingbird\/parameters","title":"Parameters","type":"typealias"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/~=(_:_:)","title":"static func ~= (`Self`, `Self`) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/init(from:)","title":"init?(from: String)","type":"init"},{"path":"\/documentation\/hummingbird\/mediatype\/init(type:subtype:parameter:)","title":"init(type: Category, subType: String, parameter: (String, String)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/parameter","title":"let parameter: (name: String, value: String)?","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/subtype","title":"let subType: String","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/type","title":"let type: Category","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/istype(_:)","title":"func isType(MediaType) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/mediatype\/withparameter(name:value:)","title":"func withParameter(name: String, value: String) -> MediaType","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/application","title":"static var application: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/application7z","title":"static var application7z: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationabiword","title":"static var applicationAbiWord: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationamzkindleebook","title":"static var applicationAmzKindleEBook: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationarc","title":"static var applicationArc: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationbinary","title":"static var applicationBinary: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationbzip","title":"static var applicationBzip: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationbzip2","title":"static var applicationBzip2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationcsh","title":"static var applicationCsh: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationdocx","title":"static var applicationDocx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationeot","title":"static var applicationEot: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationepub","title":"static var applicationEpub: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationgzip","title":"static var applicationGzip: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationjar","title":"static var applicationJar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationjson","title":"static var applicationJson: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationjsonld","title":"static var applicationJsonLD: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationmpkg","title":"static var applicationMpkg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationmsword","title":"static var applicationMsword: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationodp","title":"static var applicationOdp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationods","title":"static var applicationOds: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationodt","title":"static var applicationOdt: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationogg","title":"static var applicationOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationpdf","title":"static var applicationPdf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationphp","title":"static var applicationPhp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationppt","title":"static var applicationPpt: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationpptx","title":"static var applicationPptx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationrar","title":"static var applicationRar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationrtf","title":"static var applicationRtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationsh","title":"static var applicationSh: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationswf","title":"static var applicationSwf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationtar","title":"static var applicationTar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationurlencoded","title":"static var applicationUrlEncoded: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationvsd","title":"static var applicationVsd: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationxhtml","title":"static var applicationXhtml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationxls","title":"static var applicationXls: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationxlsx","title":"static var applicationXlsx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationxml","title":"static var applicationXml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/applicationzip","title":"static var applicationZip: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audio","title":"static var audio: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audio3g2","title":"static var audio3g2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audio3gp","title":"static var audio3gp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audioaac","title":"static var audioAac: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audiomidi","title":"static var audioMidi: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audiompeg","title":"static var audioMpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audioogg","title":"static var audioOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audioopus","title":"static var audioOpus: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audiowave","title":"static var audioWave: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/audiowebm","title":"static var audioWebm: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/example","title":"static var example: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/font","title":"static var font: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fontotf","title":"static var fontOtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fontttf","title":"static var fontTtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fontwoff","title":"static var fontWoff: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/fontwoff2","title":"static var fontWoff2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/image","title":"static var image: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagebmp","title":"static var imageBmp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagegif","title":"static var imageGif: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imageico","title":"static var imageIco: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagejpeg","title":"static var imageJpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagepng","title":"static var imagePng: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagesvg","title":"static var imageSvg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagetiff","title":"static var imageTiff: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/imagewebp","title":"static var imageWebp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/message","title":"static var message: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/model","title":"static var model: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/multipart","title":"static var multipart: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/multipartform","title":"static var multipartForm: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/text","title":"static var text: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/textcss","title":"static var textCss: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/textcsv","title":"static var textCsv: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/texthtml","title":"static var textHtml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/texticalendar","title":"static var textICalendar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/textjavascript","title":"static var textJavascript: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/textplain","title":"static var textPlain: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/video","title":"static var video: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/video3g2","title":"static var video3g2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/video3gp","title":"static var video3gp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/videomp4","title":"static var videoMp4: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/videompeg","title":"static var videoMpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/videoogg","title":"static var videoOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/videots","title":"static var videoTs: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/mediatype\/videowebm","title":"static var videoWebm: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/getmediatype(forextension:)","title":"static func getMediaType(forExtension: String) -> MediaType?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/==(_:_:)","title":"static func == (Category, Category) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/any","title":"case any","type":"case"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/application","title":"case application","type":"case"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/audio","title":"case audio","type":"case"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/example","title":"case example","type":"case"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/font","title":"case font","type":"case"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/image","title":"case image","type":"case"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/message","title":"case message","type":"case"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/model","title":"case model","type":"case"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/multipart","title":"case multipart","type":"case"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/text","title":"case text","type":"case"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/mediatype\/category\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mediatype\/category\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbird\/mediatype\/category\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/mediatype\/category","title":"MediaType.Category","type":"enum"}],"path":"\/documentation\/hummingbird\/mediatype","title":"MediaType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cachecontrol\/init(_:)","title":"init([(MediaType, [Value])])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cachecontrol\/getcachecontrolheader(for:)","title":"func getCacheControlHeader(for: String) -> String?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cachecontrol\/value\/maxage(_:)","title":"case maxAge(Int)","type":"case"},{"path":"\/documentation\/hummingbird\/cachecontrol\/value\/mustrevalidate","title":"case mustRevalidate","type":"case"},{"path":"\/documentation\/hummingbird\/cachecontrol\/value\/nocache","title":"case noCache","type":"case"},{"path":"\/documentation\/hummingbird\/cachecontrol\/value\/nostore","title":"case noStore","type":"case"},{"path":"\/documentation\/hummingbird\/cachecontrol\/value\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/hummingbird\/cachecontrol\/value\/public","title":"case `public`","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cachecontrol\/value\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/cachecontrol\/value","title":"CacheControl.Value","type":"enum"}],"path":"\/documentation\/hummingbird\/cachecontrol","title":"CacheControl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/init(status:headers:body:)","title":"init(status: HTTPResponse.Status, headers: HTTPFields, body: ResponseBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/body","title":"var body: ResponseBody","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/head","title":"var head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/createheadresponse()","title":"func createHeadResponse() -> Response","type":"method"},{"path":"\/documentation\/hummingbirdcore\/response\/setcookie(_:)","title":"func setCookie(Cookie)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirect(to:type:)","title":"static func redirect(to: String, type: RedirectType) -> Response","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/found","title":"case found","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/permanent","title":"case permanent","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/temporary","title":"case temporary","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/response\/redirecttype","title":"Response.RedirectType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/response\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/response(from:context:)","title":"func response(from: Request, context: some BaseRequestContext) -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcore\/response\/responsegenerator-implementations","title":"ResponseGenerator Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/response","title":"Response","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/write(_:)","title":"func write(ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/hummingbirdcore\/responsebodywriter","title":"ResponseBodyWriter","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/editedresponse\/init(status:headers:response:)","title":"init(status: HTTPResponse.Status?, headers: HTTPFields, response: Generator)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/editedresponse\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/editedresponse\/responsegenerator","title":"var responseGenerator: Generator","type":"property"},{"path":"\/documentation\/hummingbird\/editedresponse\/status","title":"var status: HTTPResponse.Status?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/editedresponse\/response(from:context:)","title":"func response(from: Request, context: some BaseRequestContext) throws -> Response","type":"method"},{"path":"\/documentation\/hummingbird\/editedresponse\/setcookie(_:)","title":"func setCookie(Cookie)","type":"method"}],"path":"\/documentation\/hummingbird\/editedresponse","title":"EditedResponse","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/properties-swift.struct\/subscript(_:)","title":"subscript(Substring) -> String?","type":"subscript"}],"path":"\/documentation\/hummingbird\/cookie\/properties-swift.struct","title":"Cookie.Properties","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/init(name:value:expires:maxage:domain:path:secure:httponly:)","title":"init(name: String, value: String, expires: Date?, maxAge: Int?, domain: String?, path: String?, secure: Bool, httpOnly: Bool)","type":"init"},{"path":"\/documentation\/hummingbird\/cookie\/init(name:value:expires:maxage:domain:path:secure:httponly:samesite:)","title":"init(name: String, value: String, expires: Date?, maxAge: Int?, domain: String?, path: String?, secure: Bool, httpOnly: Bool, sameSite: SameSite)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/domain","title":"var domain: String?","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/expires","title":"var expires: Date?","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/httponly","title":"var httpOnly: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/maxage","title":"var maxAge: Int?","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/path","title":"var path: String?","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/properties-swift.property","title":"let properties: Properties","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.property","title":"var sameSite: SameSite?","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/secure","title":"var secure: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/cookie\/value","title":"let value: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/lax","title":"case lax","type":"case"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/secure","title":"case secure","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/cookie\/samesite-swift.enum","title":"Cookie.SameSite","type":"enum"}],"path":"\/documentation\/hummingbird\/cookie","title":"Cookie","type":"struct"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/cookies\/subscript(_:)","title":"subscript(String) -> Cookie?","type":"subscript"}],"path":"\/documentation\/hummingbird\/cookies","title":"Cookies","type":"struct"},{"title":"Request context","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/decoder","title":"Decoder","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/encoder","title":"Encoder","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/corecontext","title":"var coreContext: CoreRequestContext","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/logger","title":"var logger: Logger","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/baserequestcontext\/maxuploadsize-572ur","title":"var maxUploadSize: Int","type":"property"}],"title":"BaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/baserequestcontext\/maxuploadsize-23mxy","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"children":[{"title":"BaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/baserequestcontext\/requestdecoder-9nsum","title":"var requestDecoder: Decoder","type":"property"},{"children":[{"title":"BaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/baserequestcontext\/responseencoder-65htn","title":"var responseEncoder: Encoder","type":"property"}],"path":"\/documentation\/hummingbird\/baserequestcontext","title":"BaseRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/corerequestcontext\/init(allocator:logger:)","title":"init(allocator: ByteBufferAllocator, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/corerequestcontext\/endpointpath","title":"var endpointPath: EndpointPath","type":"property"},{"path":"\/documentation\/hummingbird\/corerequestcontext\/parameters","title":"var parameters: Parameters","type":"property"}],"path":"\/documentation\/hummingbird\/corerequestcontext","title":"CoreRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/corecontext","title":"var coreContext: CoreRequestContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/requestdecoder","title":"var requestDecoder: Decoder","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/responseencoder","title":"var responseEncoder: Encoder","type":"property"}],"path":"\/documentation\/hummingbird\/basicrequestcontext\/baserequestcontext-implementations","title":"BaseRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/basicrequestcontext","title":"BasicRequestContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/remoteaddressrequestcontext\/remoteaddress","title":"var remoteAddress: SocketAddress?","type":"property"}],"path":"\/documentation\/hummingbird\/remoteaddressrequestcontext","title":"RemoteAddressRequestContext","type":"protocol"},{"title":"Encoding\/Decoding","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestdecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: Request, context: some BaseRequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbird\/requestdecoder","title":"RequestDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/responseencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: Request, context: some BaseRequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/responseencoder","title":"ResponseEncoder","type":"protocol"},{"path":"\/documentation\/hummingbird\/responseencodable","title":"ResponseEncodable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/responsegenerator\/response(from:context:)-6q3cp","title":"func response(from: Request, context: some BaseRequestContext) throws -> Response","type":"method"}],"title":"ResponseGenerator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/responsegenerator\/response(from:context:)-6kbd6","title":"func response(from: Request, context: some BaseRequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/responsegenerator","title":"ResponseGenerator","type":"protocol"},{"path":"\/documentation\/hummingbird\/responsecodable","title":"ResponseCodable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/init(datedecodingstrategy:userinfo:)","title":"init(dateDecodingStrategy: URLEncodedFormDecoder.DateDecodingStrategy, userInfo: [CodingUserInfoKey : Sendable])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.property","title":"var dateDecodingStrategy: DateDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Sendable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: String) throws -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/custom(_:)","title":"case custom((_ decoder: Decoder) throws -> Date)","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/datedecodingstrategy-swift.enum","title":"URLEncodedFormDecoder.DateDecodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: Request, context: some BaseRequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbird\/urlencodedformdecoder\/requestdecoder-implementations","title":"RequestDecoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/urlencodedformdecoder","title":"URLEncodedFormDecoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/init(dateencodingstrategy:userinfo:additionalkeys:)","title":"init(dateEncodingStrategy: URLEncodedFormEncoder.DateEncodingStrategy, userInfo: [CodingUserInfoKey : Sendable], additionalKeys: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.property","title":"var dateEncodingStrategy: DateEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Sendable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/encode(_:)","title":"func encode(some Encodable) throws -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/custom(_:)","title":"case custom((Date, Encoder) throws -> Void)","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum","title":"URLEncodedFormEncoder.DateEncodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/urlencodedformencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: Request, context: some BaseRequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/urlencodedformencoder\/responseencoder-implementations","title":"ResponseEncoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/urlencodedformencoder","title":"URLEncodedFormEncoder","type":"struct"},{"title":"Middleware","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/context","title":"Context","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/input","title":"Input","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/output","title":"Output","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"}],"path":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","type":"protocol"},{"path":"\/documentation\/hummingbird\/routermiddleware","title":"RouterMiddleware","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/middlewaregroup\/add(_:)","title":"func add(any RouterMiddleware<Context>)","type":"method"},{"path":"\/documentation\/hummingbird\/middlewaregroup\/constructresponder(finalresponder:)","title":"func constructResponder(finalResponder: any HTTPResponder<Context>) -> any HTTPResponder<Context>","type":"method"}],"path":"\/documentation\/hummingbird\/middlewaregroup","title":"MiddlewareGroup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","title":"init(allowOrigin: AllowOrigin, allowHeaders: [HTTPField.Name], allowMethods: [HTTPRequest.Method], allowCredentials: Bool, exposedHeaders: [String]?, maxAge: TimeAmount?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin\/all","title":"case all","type":"case"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin\/none","title":"case none","type":"case"},{"path":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin\/originbased","title":"case originBased","type":"case"}],"path":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin","title":"CORSMiddleware.AllowOrigin","type":"enum"}],"path":"\/documentation\/hummingbird\/corsmiddleware","title":"CORSMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/filemiddleware\/init(_:cachecontrol:searchforindexhtml:threadpool:logger:)","title":"init(String, cacheControl: CacheControl, searchForIndexHtml: Bool, threadPool: NIOThreadPool, logger: Logger)","type":"init"},{"path":"\/documentation\/hummingbird\/filemiddleware\/init(fileprovider:cachecontrol:searchforindexhtml:)","title":"init(fileProvider: Provider, cacheControl: CacheControl, searchForIndexHtml: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/filemiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/filemiddleware","title":"FileMiddleware","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/init(arrayliteral:)","title":"init(arrayLiteral: ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/arrayliteralelement","title":"LogRequestsMiddleware.HeaderFilter.ArrayLiteralElement","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/none","title":"static var none: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/all(except:)","title":"static func all(except: [HTTPField.Name]) -> LogRequestsMiddleware<Context>.HeaderFilter","type":"method"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/some(_:)","title":"static func some([HTTPField.Name]) -> LogRequestsMiddleware<Context>.HeaderFilter","type":"method"}],"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter","title":"LogRequestsMiddleware.HeaderFilter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/init(_:includeheaders:redactheaders:)","title":"init(Logger.Level, includeHeaders: HeaderFilter, redactHeaders: [HTTPField.Name])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/logrequestsmiddleware","title":"LogRequestsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/metricsmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/metricsmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/metricsmiddleware","title":"MetricsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/tracingmiddleware\/init(recordingheaders:attributes:)","title":"init(recordingHeaders: some Collection<HTTPField.Name>, attributes: SpanAttributes?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/tracingmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/tracingmiddleware","title":"TracingMiddleware","type":"struct"},{"title":"Storage","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"children":[{"title":"PersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/persistdriver\/shutdown()-3u3ne","title":"func shutdown() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/persistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persistdriver","title":"PersistDriver","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/init(_:)","title":"init(C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/memorypersistdriver","title":"MemoryPersistDriver","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/persisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/persisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persisterror","title":"PersistError","type":"struct"},{"title":"File management","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/fileio\/init(threadpool:)","title":"init(threadPool: NIOThreadPool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/fileio\/loadfile(path:context:)","title":"func loadFile(path: String, context: some BaseRequestContext) async throws -> ResponseBody","type":"method"},{"path":"\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:)","title":"func loadFile(path: String, range: ClosedRange<Int>, context: some BaseRequestContext) async throws -> ResponseBody","type":"method"},{"path":"\/documentation\/hummingbird\/fileio\/writefile(buffer:path:context:)","title":"func writeFile(buffer: ByteBuffer, path: String, context: some BaseRequestContext) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/fileio\/writefile(contents:path:context:)","title":"func writeFile<AS>(contents: AS, path: String, context: some BaseRequestContext) async throws","type":"method"}],"path":"\/documentation\/hummingbird\/fileio","title":"FileIO","type":"struct"},{"title":"Miscellaneous","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbird\/environment\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, String)...)","type":"init"},{"path":"\/documentation\/hummingbird\/environment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/hummingbird\/environment\/init(values:)","title":"init(values: [String : String])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/get(_:)","title":"func get(String) -> String?","type":"method"},{"path":"\/documentation\/hummingbird\/environment\/get(_:as:)","title":"func get<T>(String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/hummingbird\/environment\/merging(with:)","title":"func merging(with: Environment) -> Environment","type":"method"},{"path":"\/documentation\/hummingbird\/environment\/set(_:value:)","title":"func set(String, value: String?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/shared","title":"static let shared: Environment","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/dotenv(_:)","title":"static func dotEnv(String) async throws -> Environment","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/environment\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/environment\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/environment","title":"Environment","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/datecache\/date","title":"var date: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/datecache\/run()","title":"func run() async throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/datecache\/formatrfc1123date(_:)","title":"static func formatRFC1123Date(Int) -> String","type":"method"}],"path":"\/documentation\/hummingbird\/datecache","title":"DateCache","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/filemiddlewarefileattributes\/isfolder","title":"var isFolder: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/filemiddlewarefileattributes\/modificationdate","title":"var modificationDate: Date","type":"property"},{"path":"\/documentation\/hummingbird\/filemiddlewarefileattributes\/size","title":"var size: Int","type":"property"}],"path":"\/documentation\/hummingbird\/filemiddlewarefileattributes","title":"FileMiddlewareFileAttributes","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/fileprovider\/fileattributes","title":"FileAttributes","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/fileprovider\/getattributes(path:)","title":"func getAttributes(path: String) async throws -> FileAttributes?","type":"method"},{"path":"\/documentation\/hummingbird\/fileprovider\/getfullpath(_:)","title":"func getFullPath(String) -> String","type":"method"},{"path":"\/documentation\/hummingbird\/fileprovider\/loadfile(path:context:)","title":"func loadFile(path: String, context: some BaseRequestContext) async throws -> ResponseBody","type":"method"},{"path":"\/documentation\/hummingbird\/fileprovider\/loadfile(path:range:context:)","title":"func loadFile(path: String, range: ClosedRange<Int>, context: some BaseRequestContext) async throws -> ResponseBody","type":"method"}],"path":"\/documentation\/hummingbird\/fileprovider","title":"FileProvider","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/localfilesystem\/fileattributes\/isfolder","title":"let isFolder: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/localfilesystem\/fileattributes\/modificationdate","title":"let modificationDate: Date","type":"property"},{"path":"\/documentation\/hummingbird\/localfilesystem\/fileattributes\/size","title":"let size: Int","type":"property"}],"path":"\/documentation\/hummingbird\/localfilesystem\/fileattributes","title":"LocalFileSystem.FileAttributes","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/localfilesystem\/init(rootfolder:threadpool:logger:)","title":"init(rootFolder: String, threadPool: NIOThreadPool, logger: Logger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/localfilesystem\/getattributes(path:)","title":"func getAttributes(path: String) async throws -> FileAttributes?","type":"method"},{"path":"\/documentation\/hummingbird\/localfilesystem\/getfullpath(_:)","title":"func getFullPath(String) -> String","type":"method"},{"path":"\/documentation\/hummingbird\/localfilesystem\/loadfile(path:context:)","title":"func loadFile(path: String, context: some BaseRequestContext) async throws -> ResponseBody","type":"method"},{"path":"\/documentation\/hummingbird\/localfilesystem\/loadfile(path:range:context:)","title":"func loadFile(path: String, range: ClosedRange<Int>, context: some BaseRequestContext) async throws -> ResponseBody","type":"method"}],"path":"\/documentation\/hummingbird\/localfilesystem","title":"LocalFileSystem","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestid\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestid\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/requestid","title":"RequestID","type":"struct"}],"path":"\/documentation\/hummingbird","title":"Hummingbird","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/migratingtov2","title":"Migrating to Hummingbird v2","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/init(context:options:)","title":"init(context: Context.Type, options: RouterOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/middlewares","title":"let middlewares: MiddlewareGroup<Context>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/buildresponder()","title":"func buildResponder() -> RouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/router\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/router\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/router","title":"Router","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routergroup\/add(middleware:)","title":"func add(middleware: any RouterMiddleware<Context>) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> RouterGroup<Context>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routergroup\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routergroup\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routergroup","title":"RouterGroup","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routermethods\/context","title":"Context","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routermethods\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/routermethods\/ws(_:shouldupgrade:onupgrade:)","title":"func ws(String, shouldUpgrade: (Request, Context) async throws -> RouterShouldUpgrade, onUpgrade: WebSocketDataHandler<WebSocketContextFromRouter<Context>>) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/routermethods","title":"RouterMethods","type":"protocol"}],"path":"\/documentation\/hummingbird\/routerguide","title":"Router","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/decoder","title":"Decoder","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/encoder","title":"Encoder","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/corecontext","title":"var coreContext: CoreRequestContext","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/logger","title":"var logger: Logger","type":"property"},{"children":[{"title":"BaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/baserequestcontext\/maxuploadsize-23mxy","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/baserequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"children":[{"title":"BaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/baserequestcontext\/requestdecoder-9nsum","title":"var requestDecoder: Decoder","type":"property"},{"children":[{"title":"BaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/baserequestcontext\/responseencoder-65htn","title":"var responseEncoder: Encoder","type":"property"}],"path":"\/documentation\/hummingbird\/baserequestcontext","title":"BaseRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/corecontext","title":"var coreContext: CoreRequestContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/requestdecoder","title":"var requestDecoder: Decoder","type":"property"},{"path":"\/documentation\/hummingbird\/basicrequestcontext\/responseencoder","title":"var responseEncoder: Encoder","type":"property"}],"path":"\/documentation\/hummingbird\/basicrequestcontext\/baserequestcontext-implementations","title":"BaseRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/basicrequestcontext","title":"BasicRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/init(context:options:)","title":"init(context: Context.Type, options: RouterOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/middlewares","title":"let middlewares: MiddlewareGroup<Context>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/buildresponder()","title":"func buildResponder() -> RouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/group(_:)","title":"func group(String) -> RouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:responder:)","title":"func on<Responder>(String, method: HTTPRequest.Method, responder: Responder) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/router\/addroutes(_:atpath:)","title":"func addRoutes(RouteCollection<Context>, atPath: String)","type":"method"},{"path":"\/documentation\/hummingbird\/router\/delete(_:use:)","title":"func delete(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/get(_:use:)","title":"func get(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/head(_:use:)","title":"func head(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/on(_:method:use:)","title":"func on(String, method: HTTPRequest.Method, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/patch(_:use:)","title":"func patch(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/post(_:use:)","title":"func post(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/router\/put(_:use:)","title":"func put(String, use: (Request, Context) async throws -> some ResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/router\/routermethods-implementations","title":"RouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/router","title":"Router","type":"class"}],"path":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/requestdecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: Request, context: some BaseRequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbird\/requestdecoder","title":"RequestDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/responseencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: Request, context: some BaseRequestContext) throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/responseencoder","title":"ResponseEncoder","type":"protocol"}],"path":"\/documentation\/hummingbird\/encodinganddecoding","title":"Encoding and Decoding","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routermiddleware","title":"RouterMiddleware","type":"protocol"}],"path":"\/documentation\/hummingbird\/middlewareguide","title":"Middleware","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/init(_:)","title":"init(HTTPResponse.Status)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/httperror\/init(_:message:)","title":"init(HTTPResponse.Status, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/body","title":"var body: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/httperror\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/httperror\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/httperror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/httperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httperror\/httpresponseerror-implementations","title":"HTTPResponseError Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/httperror","title":"HTTPError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpresponseerror","title":"HTTPResponseError","type":"protocol"}],"path":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/init(arrayliteral:)","title":"init(arrayLiteral: ArrayLiteralElement...)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/arrayliteralelement","title":"LogRequestsMiddleware.HeaderFilter.ArrayLiteralElement","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/none","title":"static var none: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/all(except:)","title":"static func all(except: [HTTPField.Name]) -> LogRequestsMiddleware<Context>.HeaderFilter","type":"method"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter\/some(_:)","title":"static func some([HTTPField.Name]) -> LogRequestsMiddleware<Context>.HeaderFilter","type":"method"}],"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/headerfilter","title":"LogRequestsMiddleware.HeaderFilter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/init(_:includeheaders:redactheaders:)","title":"init(Logger.Level, includeHeaders: HeaderFilter, redactHeaders: [HTTPField.Name])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/logrequestsmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/logrequestsmiddleware","title":"LogRequestsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/metricsmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/metricsmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/metricsmiddleware","title":"MetricsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/tracingmiddleware\/init(recordingheaders:attributes:)","title":"init(recordingHeaders: some Collection<HTTPField.Name>, attributes: SpanAttributes?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/tracingmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbird\/tracingmiddleware","title":"TracingMiddleware","type":"struct"}],"path":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","type":"symbol"},{"path":"\/documentation\/hummingbird\/servicelifecycle","title":"Service Lifecycle","type":"article"},{"path":"\/documentation\/hummingbird\/testing","title":"Testing","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"children":[{"title":"PersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/persistdriver\/shutdown()-3u3ne","title":"func shutdown() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/persistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persistdriver","title":"PersistDriver","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/persisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/persisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persisterror","title":"PersistError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/init(_:)","title":"init(C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/memorypersistdriver","title":"MemoryPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/init(fluent:databaseid:tidyupfrequency:)","title":"init(fluent: Fluent, databaseID: DatabaseID?, tidyUpFrequency: Duration) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","title":"FluentPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/init(client:migrations:tidyupfrequency:logger:)","title":"init(client: PostgresClient, migrations: PostgresMigrations, tidyUpFrequency: Duration, logger: Logger) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver","title":"PostgresPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/init(redisconnectionpoolservice:)","title":"init(redisConnectionPoolService: RedisConnectionPoolService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver","title":"RedisPersistDriver","type":"struct"}],"path":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(_:parameters:)","title":"init(String, parameters: Parameters.Type)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/init(_:numworkers:logger:)","title":"init(Queue, numWorkers: Int, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/queue","title":"let queue: Queue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(_:)","title":"func push<Parameters>(Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(id:parameters:)","title":"func push<Parameters>(id: JobIdentifier<Parameters>, parameters: Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(_:)","title":"func registerJob(JobDefinition<some Codable & Sendable>)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(id:maxretrycount:execute:)","title":"func registerJob<Parameters>(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(parameters:maxretrycount:execute:)","title":"func registerJob<Parameters>(parameters: Parameters.Type, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/run()","title":"func run() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue","title":"JobQueue","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobparameters\/jobid","title":"static var jobID: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobparameters","title":"JobParameters","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(id:maxretrycount:execute:)","title":"init(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(maxretrycount:execute:)","title":"init(maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/id","title":"let id: JobIdentifier<Parameters>","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobdefinition","title":"JobDefinition","type":"struct"}],"path":"\/documentation\/hummingbird\/jobsguide","title":"Jobs","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"title":"AuthenticatorMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)-9d1lq","title":"func authenticate(request: Request, context: Context) async throws -> Value?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware","title":"AuthenticatorMiddleware","type":"protocol"},{"path":"\/documentation\/hummingbirdauth\/authenticatable","title":"Authenticatable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/init(_:)","title":"init(Auth.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","title":"IsAuthenticatedMiddleware","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authrequestcontext\/auth","title":"var auth: LoginCache","type":"property"}],"path":"\/documentation\/hummingbirdauth\/authrequestcontext","title":"AuthRequestContext","type":"protocol"}],"path":"\/documentation\/hummingbird\/authenticatormiddleware","title":"Authenticator Middleware","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/sessiondoesnotexist","title":"static var sessionDoesNotExist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error","title":"SessionStorage.Error","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/init(_:sessioncookie:)","title":"init(any PersistDriver, sessionCookie: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/delete(request:)","title":"func delete(request: Request) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/load(as:request:)","title":"func load<Session>(as: Session.Type, request: Request) async throws -> Session?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/save(session:expiresin:)","title":"func save(session: some Codable, expiresIn: Duration) async throws -> Cookie","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/update(session:expiresin:request:)","title":"func update(session: some Codable, expiresIn: Duration, request: Request) async throws","type":"method"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage","title":"SessionStorage","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/session","title":"Session","type":"associatedtype"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/sessionstorage","title":"var sessionStorage: SessionStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/getvalue(from:request:context:)","title":"func getValue(from: Session, request: Request, context: Context) async throws -> Value?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/sessionmiddleware","title":"SessionMiddleware","type":"protocol"}],"path":"\/documentation\/hummingbird\/sessions","title":"Sessions","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/init(secret:length:hashfunction:)","title":"init(secret: String, length: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/secret","title":"let secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/compute(counter:)","title":"func compute(counter: UInt64) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hotp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hotp","title":"HOTP","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/init(secret:length:timestep:hashfunction:)","title":"init(secret: String, length: Int, timeStep: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/secret","title":"let secret: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/timestep","title":"let timeStep: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/compute(date:)","title":"func compute(date: Date) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/totp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/totp","title":"TOTP","type":"struct"}],"path":"\/documentation\/hummingbird\/onetimepasswords","title":"One Time Passwords","type":"symbol"},{"title":"Tutorials","type":"groupMarker"},{"children":[{"title":"Application setup","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-1-setup","title":"Setup a Hummingbird application.","type":"project"},{"title":"API Setup","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-2-api","title":"Add your application API","type":"project"},{"title":"Testing your application","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-3-testing","title":"Testing your application","type":"project"},{"title":"Store Todos in a database","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-4-postgres","title":"Use PostgresNIO to store your Todos in a Postgres database","type":"project"}],"path":"\/tutorials\/todos","title":"Build a Todos application.","type":"overview"}],"path":"\/documentation\/index","title":"Hummingbird","type":"module"},{"children":[{"title":"Articles","type":"groupMarker"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)-4uomh","title":"func authenticate(request: Request, context: Context) async throws -> Value?","type":"method"}],"title":"AuthenticatorMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)-9d1lq","title":"func authenticate(request: Request, context: Context) async throws -> Value?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware","title":"AuthenticatorMiddleware","type":"protocol"},{"path":"\/documentation\/hummingbirdauth\/authenticatable","title":"Authenticatable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/init(_:)","title":"init(Auth.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","title":"IsAuthenticatedMiddleware","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authrequestcontext\/auth","title":"var auth: LoginCache","type":"property"}],"path":"\/documentation\/hummingbirdauth\/authrequestcontext","title":"AuthRequestContext","type":"protocol"}],"path":"\/documentation\/hummingbird\/authenticatormiddleware","title":"Authenticator Middleware","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/sessiondoesnotexist","title":"static var sessionDoesNotExist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error","title":"SessionStorage.Error","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/init(_:sessioncookie:)","title":"init(any PersistDriver, sessionCookie: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/delete(request:)","title":"func delete(request: Request) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/load(as:request:)","title":"func load<Session>(as: Session.Type, request: Request) async throws -> Session?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/save(session:expiresin:)","title":"func save(session: some Codable, expiresIn: Duration) async throws -> Cookie","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/update(session:expiresin:request:)","title":"func update(session: some Codable, expiresIn: Duration, request: Request) async throws","type":"method"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage","title":"SessionStorage","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/session","title":"Session","type":"associatedtype"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/sessionstorage","title":"var sessionStorage: SessionStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/getvalue(from:request:context:)","title":"func getValue(from: Session, request: Request, context: Context) async throws -> Value?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/sessionmiddleware","title":"SessionMiddleware","type":"protocol"}],"path":"\/documentation\/hummingbird\/sessions","title":"Sessions","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/init(secret:length:hashfunction:)","title":"init(secret: String, length: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/secret","title":"let secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/compute(counter:)","title":"func compute(counter: UInt64) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hotp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hotp","title":"HOTP","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/init(secret:length:timestep:hashfunction:)","title":"init(secret: String, length: Int, timeStep: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/secret","title":"let secret: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/timestep","title":"let timeStep: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/compute(date:)","title":"func compute(date: Date) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/totp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/totp","title":"TOTP","type":"struct"}],"path":"\/documentation\/hummingbird\/onetimepasswords","title":"One Time Passwords","type":"symbol"},{"title":"Request Contexts","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/auth","title":"var auth: LoginCache","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/corecontext","title":"var coreContext: CoreRequestContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/responseencoder","title":"var responseEncoder: JSONEncoder","type":"property"}],"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext\/baserequestcontext-implementations","title":"BaseRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","title":"BasicAuthRequestContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authrequestcontext\/auth","title":"var auth: LoginCache","type":"property"}],"path":"\/documentation\/hummingbirdauth\/authrequestcontext","title":"AuthRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/logincache\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/logincache\/get(_:)","title":"func get<Auth>(Auth.Type) -> Auth?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/logincache\/has(_:)","title":"func has<Auth>(Auth.Type) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdauth\/logincache\/login(_:)","title":"func login<Auth>(Auth)","type":"method"},{"path":"\/documentation\/hummingbirdauth\/logincache\/logout(_:)","title":"func logout<Auth>(Auth.Type)","type":"method"},{"path":"\/documentation\/hummingbirdauth\/logincache\/require(_:)","title":"func require<Auth>(Auth.Type) throws -> Auth","type":"method"}],"path":"\/documentation\/hummingbirdauth\/logincache","title":"LoginCache","type":"struct"},{"title":"Authenticators","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)-4uomh","title":"func authenticate(request: Request, context: Context) async throws -> Value?","type":"method"}],"title":"AuthenticatorMiddleware Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)-9d1lq","title":"func authenticate(request: Request, context: Context) async throws -> Value?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdauth\/authenticatormiddleware","title":"AuthenticatorMiddleware","type":"protocol"},{"path":"\/documentation\/hummingbirdauth\/authenticatable","title":"Authenticatable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/init(_:)","title":"init(Auth.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","title":"IsAuthenticatedMiddleware","type":"struct"},{"title":"Header Authentication","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthentication\/password","title":"let password: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthentication\/username","title":"let username: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/basicauthentication","title":"BasicAuthentication","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/bearerauthentication\/token","title":"let token: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/bearerauthentication","title":"BearerAuthentication","type":"struct"},{"title":"Encryption","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/bcrypt\/hash(_:cost:)","title":"static func hash(String, cost: UInt8) -> String","type":"method"},{"path":"\/documentation\/hummingbirdauth\/bcrypt\/verify(_:hash:)","title":"static func verify(String, hash: String) -> Bool","type":"method"}],"path":"\/documentation\/hummingbirdauth\/bcrypt","title":"Bcrypt","type":"enum"},{"title":"Sessions","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/session","title":"Session","type":"associatedtype"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/sessionstorage","title":"var sessionStorage: SessionStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionmiddleware\/getvalue(from:request:context:)","title":"func getValue(from: Session, request: Request, context: Context) async throws -> Value?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/sessionmiddleware","title":"SessionMiddleware","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/sessiondoesnotexist","title":"static var sessionDoesNotExist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage\/error","title":"SessionStorage.Error","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/init(_:sessioncookie:)","title":"init(any PersistDriver, sessionCookie: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/delete(request:)","title":"func delete(request: Request) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/load(as:request:)","title":"func load<Session>(as: Session.Type, request: Request) async throws -> Session?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/save(session:expiresin:)","title":"func save(session: some Codable, expiresIn: Duration) async throws -> Cookie","type":"method"},{"path":"\/documentation\/hummingbirdauth\/sessionstorage\/update(session:expiresin:request:)","title":"func update(session: some Codable, expiresIn: Duration, request: Request) async throws","type":"method"}],"path":"\/documentation\/hummingbirdauth\/sessionstorage","title":"SessionStorage","type":"struct"},{"title":"OTP","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/init(secret:length:hashfunction:)","title":"init(secret: String, length: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/secret","title":"let secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/compute(counter:)","title":"func compute(counter: UInt64) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hotp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hotp","title":"HOTP","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/init(secret:length:timestep:hashfunction:)","title":"init(secret: String, length: Int, timeStep: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/secret","title":"let secret: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/timestep","title":"let timeStep: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/compute(date:)","title":"func compute(date: Date) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/totp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/totp","title":"TOTP","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/sha1","title":"case sha1","type":"case"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/sha256","title":"case sha256","type":"case"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/sha512","title":"case sha512","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/otphashfunction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdauth\/otphashfunction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/otphashfunction","title":"OTPHashFunction","type":"enum"}],"path":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware\/init(windowsize:)","title":"init(windowSize: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","title":"RequestDecompressionMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware\/init(windowsize:minimumresponsesizetocompress:)","title":"init(windowSize: Int, minimumResponseSizeToCompress: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","title":"ResponseCompressionMiddleware","type":"struct"}],"path":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression","type":"module"},{"children":[{"title":"Server","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/init(childchannelsetup:configuration:onserverrunning:eventloopgroup:logger:)","title":"init(childChannelSetup: ChildChannel, configuration: ServerConfiguration, onServerRunning: ((Channel) async -> Void)?, eventLoopGroup: EventLoopGroup, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/logger","title":"let logger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/server\/shutdowngracefully()","title":"func shutdownGracefully() async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/asyncchildchannel","title":"Server.AsyncChildChannel","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/server\/asyncserverchannel","title":"Server.AsyncServerChannel","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/error\/servershutdown","title":"case serverShutdown","type":"case"},{"path":"\/documentation\/hummingbirdcore\/server\/error\/servershuttingdown","title":"case serverShuttingDown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/server\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/server\/error","title":"Server.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/server\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbirdcore\/server\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/server\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/server\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/server\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/server","title":"Server","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/init(address:servername:backlog:reuseaddress:)","title":"init(address: BindAddress, serverName: String?, backlog: Int, reuseAddress: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/address","title":"let address: BindAddress","type":"property"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/backlog","title":"let backlog: Int","type":"property"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/reuseaddress","title":"let reuseAddress: Bool","type":"property"},{"path":"\/documentation\/hummingbirdcore\/serverconfiguration\/servername","title":"let serverName: String?","type":"property"}],"path":"\/documentation\/hummingbirdcore\/serverconfiguration","title":"ServerConfiguration","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/serverchildchannel\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/serverchildchannel\/handle(value:logger:)","title":"func handle(value: Value, logger: Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdcore\/serverchildchannel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((Channel) async -> Void)?, eventLoopGroup: EventLoopGroup, logger: Logger) -> Service","type":"method"},{"path":"\/documentation\/hummingbirdcore\/serverchildchannel\/setup(channel:logger:)","title":"func setup(channel: Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"}],"path":"\/documentation\/hummingbirdcore\/serverchildchannel","title":"ServerChildChannel","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/init(_:)","title":"init((HTTPChannelHandler.Responder) throws -> any ServerChildChannel)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/buildserver(configuration:eventloopgroup:logger:responder:onserverrunning:)","title":"func buildServer(configuration: ServerConfiguration, eventLoopGroup: EventLoopGroup, logger: Logger, responder: HTTPChannelHandler.Responder, onServerRunning: ((Channel) async -> Void)?) throws -> Service","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1(additionalchannelhandlers:)","title":"static func http1(additionalChannelHandlers: () -> [any RemovableChannelHandler]) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(configuration:additionalchannelhandlers:shouldupgrade:)-42n4w","title":"static func http1WebSocketUpgrade(configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) async throws -> ShouldUpgradeResult<WebSocketDataHandler<BasicWebSocketContext>>) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(configuration:additionalchannelhandlers:shouldupgrade:)-4ozg7","title":"static func http1WebSocketUpgrade(configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) throws -> ShouldUpgradeResult<WebSocketDataHandler<BasicWebSocketContext>>) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http1websocketupgrade(websocketrouter:configuration:additionalchannelhandlers:)","title":"static func http1WebSocketUpgrade<WSResponderBuilder>(webSocketRouter: WSResponderBuilder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler]) -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/http2upgrade(tlsconfiguration:additionalchannelhandlers:)","title":"static func http2Upgrade(tlsConfiguration: TLSConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler]) throws -> HTTPServerBuilder","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:tlsconfiguration:)","title":"static func tls(HTTPServerBuilder, tlsConfiguration: TLSConfiguration) throws -> HTTPServerBuilder","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpserverbuilder","title":"HTTPServerBuilder","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpchannelhandler\/responder-swift.property","title":"var responder: Responder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpchannelhandler\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpchannelhandler\/responder-swift.typealias","title":"HTTPChannelHandler.Responder","type":"typealias"}],"path":"\/documentation\/hummingbirdcore\/httpchannelhandler","title":"HTTPChannelHandler","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/init(responder:additionalchannelhandlers:)","title":"init(responder: (Request, Channel) async throws -> Response, additionalChannelHandlers: () -> [any RemovableChannelHandler])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/responder","title":"let responder: (Request, Channel) async throws -> Response","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/handle(value:logger:)","title":"func handle(value: NIOCore.NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logging.Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/setup(channel:logger:)","title":"func setup(channel: Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/value","title":"HTTP1Channel.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdcore\/http1channel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((Channel) async -> Void)?, eventLoopGroup: EventLoopGroup, logger: Logger) -> Service","type":"method"}],"path":"\/documentation\/hummingbirdcore\/http1channel\/serverchildchannel-implementations","title":"ServerChildChannel Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/http1channel","title":"HTTP1Channel","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/bindaddress\/hostname(_:port:)","title":"static func hostname(String, port: Int) -> BindAddress","type":"method"},{"path":"\/documentation\/hummingbirdcore\/bindaddress\/unixdomainsocket(path:)","title":"static func unixDomainSocket(path: String) -> BindAddress","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/bindaddress\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/bindaddress\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/bindaddress","title":"BindAddress","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/init(logger:)","title":"init(logger: Logger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channelread(context:data:)","title":"func channelRead(context: ChannelHandlerContext, data: NIOAny)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/userinboundeventtriggered(context:event:)","title":"func userInboundEventTriggered(context: ChannelHandlerContext, event: Any)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/write(context:data:promise:)","title":"func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/inboundin","title":"HTTPUserEventHandler.InboundIn","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/inboundout","title":"HTTPUserEventHandler.InboundOut","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/outboundin","title":"HTTPUserEventHandler.OutboundIn","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/outboundout","title":"HTTPUserEventHandler.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpusereventhandler\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/httpusereventhandler","title":"HTTPUserEventHandler","type":"class"},{"title":"Request","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/init(head:body:)","title":"init(head: HTTPRequest, body: RequestBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/body","title":"var body: RequestBody","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/cookies","title":"var cookies: Cookies","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/head","title":"let head: HTTPRequest","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/method","title":"var method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/hummingbirdcore\/request\/uri","title":"let uri: URI","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/collatebody(context:)","title":"func collateBody(context: some BaseRequestContext) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/request\/decode(as:context:)","title":"func decode<Type>(as: Type.Type, context: some BaseRequestContext) async throws -> Type","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/request\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/request\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/request","title":"Request","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/http","title":"static var http: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/http_unix","title":"static var http_unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/https","title":"static var https: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/https_unix","title":"static var https_unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/unix","title":"static var unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/ws","title":"static var ws: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/wss","title":"static var wss: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.struct","title":"URI.Scheme","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/uri\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/host","title":"var host: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/port","title":"var port: Int?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/queryparameters","title":"var queryParameters: FlatDictionary<Substring, Substring>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/scheme-swift.property","title":"var scheme: Scheme?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/uri\/string","title":"let string: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdcore\/uri\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/uri\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdcore\/uri\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/uri","title":"URI","type":"struct"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/source\/finish()","title":"func finish()","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/source\/finish(_:)","title":"func finish(Error)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/source\/yield(_:)","title":"func yield(ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/hummingbirdcore\/requestbody\/source","title":"RequestBody.Source","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/init(asyncsequence:)","title":"init<AS>(asyncSequence: AS)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/init(buffer:)","title":"init(buffer: ByteBuffer)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/makestream()","title":"static func makeStream() -> (RequestBody, Source)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/asynciterator\/next()","title":"func next() async throws -> ByteBuffer?","type":"method"}],"path":"\/documentation\/hummingbirdcore\/requestbody\/asynciterator","title":"RequestBody.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(by:into:)-26e0t","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(by:into:)-77p0y","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:or:)-5c6go","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:or:)-eqob","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:or:into:)-6pa41","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/chunks(ofcount:or:into:)-8bkkk","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/collect(upto:)","title":"func collect(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/collect(upto:into:)","title":"func collect(upTo: Int, into: inout ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/compactmap(_:)-9cm7g","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/compactmap(_:)-9nvqb","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/flatmap(_:)-12atf","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/flatmap(_:)-7dcrv","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/interspersed(every:with:)-3knen","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/interspersed(every:with:)-4zinn","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/interspersed(every:with:)-5t3wz","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/interspersed(every:with:)-725gh","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/interspersed(every:with:)-96rse","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/map(_:)-9cjiw","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/map(_:)-r9yt","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reductions(_:_:)-3yrmx","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reductions(_:_:)-5dhf0","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reductions(into:_:)-6kxnp","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/reductions(into:_:)-7j5yc","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/requestbody\/element","title":"RequestBody.Element","type":"typealias"}],"path":"\/documentation\/hummingbirdcore\/requestbody\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/requestbody","title":"RequestBody","type":"struct"},{"title":"Response","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/init(status:headers:body:)","title":"init(status: HTTPResponse.Status, headers: HTTPFields, body: ResponseBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/body","title":"var body: ResponseBody","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/head","title":"var head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/response\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/createheadresponse()","title":"func createHeadResponse() -> Response","type":"method"},{"path":"\/documentation\/hummingbirdcore\/response\/setcookie(_:)","title":"func setCookie(Cookie)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirect(to:type:)","title":"static func redirect(to: String, type: RedirectType) -> Response","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/found","title":"case found","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/permanent","title":"case permanent","type":"case"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/temporary","title":"case temporary","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/response\/redirecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/response\/redirecttype","title":"Response.RedirectType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/response\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/response\/response(from:context:)","title":"func response(from: Request, context: some BaseRequestContext) -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcore\/response\/responsegenerator-implementations","title":"ResponseGenerator Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/response","title":"Response","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/init(asyncsequence:)","title":"init<BufferSequence>(asyncSequence: BufferSequence)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/init(bytebuffer:)","title":"init(byteBuffer: ByteBuffer)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)","title":"init(contentLength: Int?, (any ResponseBodyWriter) async throws -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/contentlength","title":"let contentLength: Int?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/write","title":"let write: (any ResponseBodyWriter) async throws -> HTTPFields?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsebody\/withtrailingheaders(contentlength:_:)","title":"static func withTrailingHeaders(contentLength: Int?, (any ResponseBodyWriter) async throws -> HTTPFields?) -> ResponseBody","type":"method"}],"path":"\/documentation\/hummingbirdcore\/responsebody","title":"ResponseBody","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/responsebodywriter\/write(_:)","title":"func write(ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/hummingbirdcore\/responsebodywriter","title":"ResponseBodyWriter","type":"protocol"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/init(_:)","title":"init(HTTPResponse.Status)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/httperror\/init(_:message:)","title":"init(HTTPResponse.Status, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/body","title":"var body: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/httperror\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/httperror\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/httperror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/httperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httperror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httperror\/httpresponseerror-implementations","title":"HTTPResponseError Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/httperror","title":"HTTPError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/httpresponseerror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> Response","type":"method"}],"path":"\/documentation\/hummingbirdcore\/httpresponseerror","title":"HTTPResponseError","type":"protocol"},{"title":"Miscellaneous","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/init(_:)","title":"init([Element])","type":"init"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (Key, Value)...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/startindex","title":"var startIndex: Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/append(key:value:)","title":"func append(key: Key, value: Value)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:)","title":"func get(String) -> String?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:as:)-2owlj","title":"func get<T>(String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:as:)-3fdsi","title":"func get<T>(String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:as:)-5ewlr","title":"func get(String, as: UUID.Type) -> UUID?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:)","title":"func getAll(String) -> [String]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:as:)-261y8","title":"func getAll<T>(String, as: T.Type) -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:as:)-4h655","title":"func getAll<T>(String, as: T.Type) -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:as:)-5ftdw","title":"func getAll(String, as: UUID.Type) -> [UUID]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()","title":"func getCatchAll() -> [Substring]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/has(_:)","title":"func has(Key) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:)","title":"func require(String) throws -> String","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:as:)-516jy","title":"func require(String, as: UUID.Type) throws -> UUID","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:as:)-8wfem","title":"func require<T>(String, as: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:as:)-zo5p","title":"func require<T>(String, as: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/requireall(_:as:)-3sj8s","title":"func requireAll(String, as: UUID.Type) throws -> [UUID]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/requireall(_:as:)-52rco","title":"func requireAll<T>(String, as: T.Type) throws -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/requireall(_:as:)-8n9if","title":"func requireAll<T>(String, as: T.Type) throws -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/setcatchall(_:)","title":"func setCatchAll(Substring)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-2eyqb","title":"subscript(Key) -> Value?","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-4wq5d","title":"subscript(Index) -> Element","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(values:)","title":"subscript(values _: Key) -> [Value]","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/element","title":"FlatDictionary.Element","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index","title":"FlatDictionary.Index","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/recursivecapturekey","title":"static let recursiveCaptureKey: Substring","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/map(_:)-9wqbv","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-1tjum","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-4c4bj","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-5ino","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/hummingbirdcore\/flatdictionary\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/async","title":"var async: AsyncSyncSequence<Self>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/flatmap(_:)-4fci6","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/flatmap(_:)-92qvw","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/map(_:)-1i1pr","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/hummingbirdcore\/flatdictionary\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/flatdictionary","title":"FlatDictionary","type":"struct"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/serverchildchannelvalue\/channel","title":"var channel: Channel","type":"property"}],"path":"\/documentation\/hummingbirdcore\/serverchildchannelvalue","title":"ServerChildChannelValue","type":"protocol"}],"path":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirddocs\/hummingbird_docs\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirddocs\/hummingbird_docs\/text","title":"var text: String","type":"property"}],"path":"\/documentation\/hummingbirddocs\/hummingbird_docs","title":"hummingbird_docs","type":"struct"}],"path":"\/documentation\/hummingbirddocs","title":"HummingbirdDocs","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/persistdriver\/shutdown()-6sz67","title":"func shutdown() async throws","type":"method"}],"title":"PersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/persistdriver\/shutdown()-3u3ne","title":"func shutdown() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/persistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persistdriver","title":"PersistDriver","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/persisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/persisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persisterror","title":"PersistError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/init(_:)","title":"init(C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/memorypersistdriver","title":"MemoryPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/init(fluent:databaseid:tidyupfrequency:)","title":"init(fluent: Fluent, databaseID: DatabaseID?, tidyUpFrequency: Duration) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","title":"FluentPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/init(client:migrations:tidyupfrequency:logger:)","title":"init(client: PostgresClient, migrations: PostgresMigrations, tidyUpFrequency: Duration, logger: Logger) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver","title":"PostgresPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/init(redisconnectionpoolservice:)","title":"init(redisConnectionPoolService: RedisConnectionPoolService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver","title":"RedisPersistDriver","type":"struct"}],"path":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"symbol"},{"title":"Fluent","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/init(eventloopgroupprovider:threadpool:logger:)","title":"init(eventLoopGroupProvider: EventLoopGroupProvider, threadPool: NIOThreadPool, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/databases","title":"var databases: Databases","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/eventloopgroup","title":"var eventLoopGroup: EventLoopGroup","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/migrations","title":"var migrations: FluentMigrations","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/db(_:logger:history:pagesizelimit:)","title":"func db(DatabaseID?, logger: Logger?, history: QueryHistory?, pageSizeLimit: Int?) -> Database","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/migrate()","title":"func migrate() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/revert()","title":"func revert() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluent\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluent","title":"Fluent","type":"struct"},{"title":"Storage","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/init(fluent:databaseid:tidyupfrequency:)","title":"init(fluent: Fluent, databaseID: DatabaseID?, tidyUpFrequency: Duration) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","title":"FluentPersistDriver","type":"class"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/add(_:to:)-2ovat","title":"func add([Migration], to: DatabaseID?)","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/add(_:to:)-2qcos","title":"func add(Migration..., to: DatabaseID?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentmigrations\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/fluentmigrations","title":"FluentMigrations","type":"class"}],"path":"\/documentation\/hummingbirdfluent","title":"HummingbirdFluent","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/value\/channel","title":"let channel: Channel","type":"property"}],"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/value","title":"HTTP2UpgradeChannel.Value","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/init(tlsconfiguration:additionalchannelhandlers:responder:)","title":"init(tlsConfiguration: TLSConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], responder: (Request, Channel) async throws -> Response) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/responder","title":"var responder: (Request, Channel) async throws -> Response","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/handle(value:logger:)","title":"func handle(value: Value, logger: Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/setup(channel:logger:)","title":"func setup(channel: Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger) -> any Service","type":"method"}],"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel\/serverchildchannel-implementations","title":"ServerChildChannel Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdhttp2\/http2upgradechannel","title":"HTTP2UpgradeChannel","type":"struct"}],"path":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(_:parameters:)","title":"init(String, parameters: Parameters.Type)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/init(_:numworkers:logger:)","title":"init(Queue, numWorkers: Int, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/queue","title":"let queue: Queue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(_:)","title":"func push<Parameters>(Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(id:parameters:)","title":"func push<Parameters>(id: JobIdentifier<Parameters>, parameters: Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(_:)","title":"func registerJob(JobDefinition<some Codable & Sendable>)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(id:maxretrycount:execute:)","title":"func registerJob<Parameters>(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(parameters:maxretrycount:execute:)","title":"func registerJob<Parameters>(parameters: Parameters.Type, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/run()","title":"func run() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue","title":"JobQueue","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobparameters\/jobid","title":"static var jobID: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobparameters","title":"JobParameters","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(id:maxretrycount:execute:)","title":"init(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(maxretrycount:execute:)","title":"init(maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/id","title":"let id: JobIdentifier<Parameters>","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobdefinition","title":"JobDefinition","type":"struct"}],"path":"\/documentation\/hummingbird\/jobsguide","title":"Jobs","type":"symbol"},{"title":"Jobs","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobcontext\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobcontext","title":"JobContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(id:maxretrycount:execute:)","title":"init(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(maxretrycount:execute:)","title":"init(maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/id","title":"let id: JobIdentifier<Parameters>","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobdefinition","title":"JobDefinition","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(_:parameters:)","title":"init(String, parameters: Parameters.Type)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobparameters\/jobid","title":"static var jobID: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobparameters","title":"JobParameters","type":"protocol"},{"title":"Queues","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/init(_:numworkers:logger:)","title":"init(Queue, numWorkers: Int, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/queue","title":"let queue: Queue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(_:)","title":"func push<Parameters>(Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(id:parameters:)","title":"func push<Parameters>(id: JobIdentifier<Parameters>, parameters: Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(_:)","title":"func registerJob(JobDefinition<some Codable & Sendable>)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(id:maxretrycount:execute:)","title":"func registerJob<Parameters>(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(parameters:maxretrycount:execute:)","title":"func registerJob<Parameters>(parameters: Parameters.Type, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/run()","title":"func run() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue","title":"JobQueue","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/jobid","title":"JobID","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/failed(jobid:error:)","title":"func failed(jobId: JobID, error: any Error) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/finished(jobid:)","title":"func finished(jobId: JobID) async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/oninit()-2ce16","title":"func onInit() async throws","type":"method"}],"title":"JobQueueDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/oninit()-273at","title":"func onInit() async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/push(_:)","title":"func push(ByteBuffer) async throws -> JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/stop()","title":"func stop() async","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/memory","title":"static var memory: MemoryQueue","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/postgres(client:migrations:configuration:logger:)","title":"static func postgres(client: PostgresClient, migrations: PostgresMigrations, configuration: PostgresQueue.Configuration, logger: Logger) async -> Self","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver\/redis(_:configuration:)","title":"static func redis(RedisConnectionPoolService, configuration: RedisQueue.Configuration) -> Self","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/jobqueuedriver","title":"JobQueueDriver","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/queuedjob\/init(id:jobbuffer:)","title":"init(id: JobID, jobBuffer: ByteBuffer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/queuedjob\/id","title":"let id: JobID","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/queuedjob\/jobbuffer","title":"let jobBuffer: ByteBuffer","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/queuedjob","title":"QueuedJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/init(onfailedjob:)","title":"init(onFailedJob: (QueuedJob<JobID>, any Error) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/failed(jobid:error:)","title":"func failed(jobId: JobID, error: any Error) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/finished(jobid:)","title":"func finished(jobId: JobID) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/push(_:)","title":"func push(ByteBuffer) async throws -> JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/stop()","title":"func stop() async","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/element","title":"MemoryQueue.Element","type":"typealias"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/jobid","title":"MemoryQueue.JobID","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/asynciterator","title":"MemoryQueue.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunked(by:into:)-4mmvb","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunked(by:into:)-8z2gm","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunks(ofcount:or:)-3cv31","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunks(ofcount:or:)-8f1za","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunks(ofcount:or:into:)-39kbm","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/chunks(ofcount:or:into:)-6sz9k","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/compactmap(_:)-5liqu","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/compactmap(_:)-9xkzw","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/flatmap(_:)-1pqr3","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/flatmap(_:)-6sajg","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/interspersed(every:with:)-36j0d","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/interspersed(every:with:)-4h0yf","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/interspersed(every:with:)-60tw5","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/interspersed(every:with:)-7vfqr","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/interspersed(every:with:)-8meuz","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/map(_:)-5rof6","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/map(_:)-nvzd","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/reductions(_:_:)-1b4lx","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/reductions(_:_:)-1uqq2","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/reductions(into:_:)-299vm","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/reductions(into:_:)-6bv2y","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/oninit()","title":"func onInit() async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/memory","title":"static var memory: MemoryQueue","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/memoryqueue\/jobqueuedriver-implementations","title":"JobQueueDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/memoryqueue","title":"MemoryQueue","type":"class"},{"title":"Error","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/decodejobfailed","title":"static var decodeJobFailed: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/dequeueerror","title":"static var dequeueError: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/unrecognisedjobid","title":"static var unrecognisedJobId: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobqueueerror","title":"JobQueueError","type":"struct"}],"path":"\/documentation\/hummingbirdjobs","title":"HummingbirdJobs","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(_:parameters:)","title":"init(String, parameters: Parameters.Type)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/init(_:numworkers:logger:)","title":"init(Queue, numWorkers: Int, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/queue","title":"let queue: Queue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(_:)","title":"func push<Parameters>(Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(id:parameters:)","title":"func push<Parameters>(id: JobIdentifier<Parameters>, parameters: Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(_:)","title":"func registerJob(JobDefinition<some Codable & Sendable>)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(id:maxretrycount:execute:)","title":"func registerJob<Parameters>(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(parameters:maxretrycount:execute:)","title":"func registerJob<Parameters>(parameters: Parameters.Type, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/run()","title":"func run() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue","title":"JobQueue","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobparameters\/jobid","title":"static var jobID: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobparameters","title":"JobParameters","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(id:maxretrycount:execute:)","title":"init(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(maxretrycount:execute:)","title":"init(maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/id","title":"let id: JobIdentifier<Parameters>","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobdefinition","title":"JobDefinition","type":"struct"}],"path":"\/documentation\/hummingbird\/jobsguide","title":"Jobs","type":"symbol"},{"title":"Job Queue","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/configuration-swift.struct\/init(pendingjobsinitialization:failedjobsinitialization:processingjobsinitialization:polltime:)","title":"init(pendingJobsInitialization: JobInitialization, failedJobsInitialization: JobInitialization, processingJobsInitialization: JobInitialization, pollTime: Duration)","type":"init"}],"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/configuration-swift.struct","title":"PostgresQueue.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/init(client:migrations:configuration:logger:)","title":"init(client: PostgresClient, migrations: PostgresMigrations, configuration: Configuration, logger: Logger) async","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/client","title":"let client: PostgresClient","type":"property"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/configuration-swift.property","title":"let configuration: Configuration","type":"property"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/logger","title":"let logger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/failed(jobid:error:)","title":"func failed(jobId: JobID, error: Error) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/finished(jobid:)","title":"func finished(jobId: JobID) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/oninit()","title":"func onInit() async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/push(_:)","title":"func push(ByteBuffer) async throws -> JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/stop()","title":"func stop() async","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/jobid","title":"PostgresQueue.JobID","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/jobinitialization\/donothing","title":"case doNothing","type":"case"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/jobinitialization\/remove","title":"case remove","type":"case"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/jobinitialization\/rerun","title":"case rerun","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/jobinitialization\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/jobinitialization\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/jobinitialization","title":"PostgresQueue.JobInitialization","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/postgresqueueerror\/failedtoadd","title":"case failedToAdd","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/postgresqueueerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/postgresqueueerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/postgresqueueerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/postgresqueueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/postgresqueueerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/postgresqueueerror","title":"PostgresQueue.PostgresQueueError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"}],"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/asynciterator","title":"PostgresQueue.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunked(by:into:)-4pcp1","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunked(by:into:)-5ukts","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunks(ofcount:or:)-2a9dm","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunks(ofcount:or:)-54i1","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunks(ofcount:or:into:)-42x5i","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/chunks(ofcount:or:into:)-6j1rd","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/compactmap(_:)-17px6","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/compactmap(_:)-1bbeq","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/flatmap(_:)-1immb","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/flatmap(_:)-7ocqp","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/interspersed(every:with:)-5uzb8","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/interspersed(every:with:)-6sik3","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/interspersed(every:with:)-87vd","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/interspersed(every:with:)-98jxl","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/interspersed(every:with:)-9svw1","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/map(_:)-5hkr0","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/map(_:)-871me","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/reductions(_:_:)-997cx","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/reductions(_:_:)-9m8b6","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/reductions(into:_:)-2qo07","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/reductions(into:_:)-nhe0","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/postgres(client:migrations:configuration:logger:)","title":"static func postgres(client: PostgresClient, migrations: PostgresMigrations, configuration: PostgresQueue.Configuration, logger: Logger) async -> Self","type":"method"}],"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue\/jobqueuedriver-implementations","title":"JobQueueDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobspostgres\/postgresqueue","title":"PostgresQueue","type":"class"}],"path":"\/documentation\/hummingbirdjobspostgres","title":"HummingbirdJobsPostgres","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(_:parameters:)","title":"init(String, parameters: Parameters.Type)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/init(_:numworkers:logger:)","title":"init(Queue, numWorkers: Int, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/queue","title":"let queue: Queue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(_:)","title":"func push<Parameters>(Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/push(id:parameters:)","title":"func push<Parameters>(id: JobIdentifier<Parameters>, parameters: Parameters) async throws -> Queue.JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(_:)","title":"func registerJob(JobDefinition<some Codable & Sendable>)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(id:maxretrycount:execute:)","title":"func registerJob<Parameters>(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/registerjob(parameters:maxretrycount:execute:)","title":"func registerJob<Parameters>(parameters: Parameters.Type, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/run()","title":"func run() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueue\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobqueue","title":"JobQueue","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobparameters\/jobid","title":"static var jobID: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobparameters","title":"JobParameters","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(id:maxretrycount:execute:)","title":"init(id: JobIdentifier<Parameters>, maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/init(maxretrycount:execute:)","title":"init(maxRetryCount: Int, execute: (Parameters, JobContext) async throws -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobdefinition\/id","title":"let id: JobIdentifier<Parameters>","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobdefinition","title":"JobDefinition","type":"struct"}],"path":"\/documentation\/hummingbird\/jobsguide","title":"Jobs","type":"symbol"},{"title":"Job Queue","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/configuration\/init(queuekey:polltime:pendingjobinitialization:processingjobsinitialization:failedjobsinitialization:)","title":"init(queueKey: String, pollTime: Duration, pendingJobInitialization: JobInitialization, processingJobsInitialization: JobInitialization, failedJobsInitialization: JobInitialization)","type":"init"}],"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/configuration","title":"RedisQueue.Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobid\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobid\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobid\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobid\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobid\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobid","title":"RedisQueue.JobID","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/init(_:configuration:)","title":"init(RedisConnectionPoolService, configuration: Configuration)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/failed(jobid:error:)","title":"func failed(jobId: JobID, error: Error) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/finished(jobid:)","title":"func finished(jobId: JobID) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/oninit()","title":"func onInit() async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/push(_:)","title":"func push(ByteBuffer) async throws -> JobID","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/stop()","title":"func stop() async","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobinitialization\/donothing","title":"case doNothing","type":"case"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobinitialization\/remove","title":"case remove","type":"case"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobinitialization\/rerun","title":"case rerun","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobinitialization\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobinitialization\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobinitialization","title":"RedisQueue.JobInitialization","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/redisqueueerror\/jobmissing(_:)","title":"case jobMissing(JobID)","type":"case"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/redisqueueerror\/unexpectedrediskeytype","title":"case unexpectedRedisKeyType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/redisqueueerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/redisqueueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/redisqueueerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/redisqueueerror","title":"RedisQueue.RedisQueueError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"}],"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/asynciterator","title":"RedisQueue.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunked(by:into:)-5jy6y","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunked(by:into:)-7etr3","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunks(ofcount:or:)-5qldh","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunks(ofcount:or:)-j55r","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunks(ofcount:or:into:)-2mf7i","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/chunks(ofcount:or:into:)-6ply5","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/compactmap(_:)-6fjrt","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/compactmap(_:)-8qo3q","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/flatmap(_:)-21lzu","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/flatmap(_:)-31f4b","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/interspersed(every:with:)-2hz0","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/interspersed(every:with:)-34eli","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/interspersed(every:with:)-4ps9l","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/interspersed(every:with:)-57njv","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/interspersed(every:with:)-8y6hy","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/map(_:)-7f5xm","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/map(_:)-8wsbn","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/reductions(_:_:)-319b","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/reductions(_:_:)-4g9v9","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/reductions(into:_:)-345u6","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/reductions(into:_:)-9rjfx","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/element","title":"RedisQueue.Element","type":"typealias"}],"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/redis(_:configuration:)","title":"static func redis(RedisConnectionPoolService, configuration: RedisQueue.Configuration) -> Self","type":"method"}],"path":"\/documentation\/hummingbirdjobsredis\/redisqueue\/jobqueuedriver-implementations","title":"JobQueueDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobsredis\/redisqueue","title":"RedisQueue","type":"class"}],"path":"\/documentation\/hummingbirdjobsredis","title":"HummingbirdJobsRedis","type":"module"},{"children":[{"title":"Lambda protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/context","title":"Context","type":"associatedtype"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/event","title":"Event","type":"associatedtype"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/output","title":"Output","type":"associatedtype"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","title":"Responder","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(context:)","title":"init(context: LambdaInitializationContext) async throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/buildresponder()","title":"func buildResponder() -> Responder","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/output(from:)-8cmca","title":"func output(from: Response) async throws -> Output","type":"method"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/output(from:)-8rb7","title":"func output(from: Response) async throws -> Output","type":"method"}],"title":"LambdaFunction Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/output(from:)-41rdr","title":"func output(from: Response) async throws -> Output","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/request(context:from:)-1qr85","title":"func request(context: LambdaContext, from: Event) throws -> Request","type":"method"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/request(context:from:)-34733","title":"func request(context: LambdaContext, from: Event) throws -> Request","type":"method"}],"title":"LambdaFunction Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/request(context:from:)-2wtco","title":"func request(context: LambdaContext, from: Event) throws -> Request","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/shutdown()-3jxy1","title":"func shutdown() async throws","type":"method"}],"title":"LambdaFunction Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/shutdown()-1wnul","title":"func shutdown() async throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/main()","title":"static func main() throws","type":"method"},{"path":"\/documentation\/hummingbirdlambda\/lambdafunction\/test(loglevel:_:)","title":"static func test<Value>(logLevel: Logger.Level, (LambdaTestClient<Self>) async throws -> Value) async throws -> Value","type":"method"}],"path":"\/documentation\/hummingbirdlambda\/lambdafunction","title":"LambdaFunction","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction\/context","title":"Context","type":"associatedtype"}],"path":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","title":"APIGatewayLambdaFunction","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction\/context","title":"Context","type":"associatedtype"}],"path":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","title":"APIGatewayV2LambdaFunction","type":"protocol"},{"title":"Request context","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdarequestcontext\/event","title":"Event","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/lambdarequestcontext\/init(_:lambdacontext:)","title":"init(Event, lambdaContext: LambdaContext)","type":"init"}],"path":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","title":"LambdaRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/init(_:lambdacontext:)","title":"init(Event, lambdaContext: LambdaContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/corecontext","title":"var coreContext: CoreRequestContext","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/event","title":"let event: Event","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/responseencoder","title":"var responseEncoder: JSONEncoder","type":"property"}],"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/baserequestcontext-implementations","title":"BaseRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","title":"BasicLambdaRequestContext","type":"struct"}],"path":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","type":"module"},{"children":[{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambdatesting\/lambdatestableevent\/init(uri:method:headers:body:)","title":"init(uri: String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?) throws","type":"init"}],"path":"\/documentation\/hummingbirdlambdatesting\/lambdatestableevent","title":"LambdaTestableEvent","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient\/execute(uri:method:headers:body:testcallback:)","title":"func execute<Return>(uri: String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?, testCallback: (Lambda.Output) async throws -> Return) async throws -> Return","type":"method"}],"path":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient","title":"LambdaTestClient","type":"struct"}],"path":"\/documentation\/hummingbirdlambdatesting","title":"HummingbirdLambdaTesting","type":"module"},{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/migrationsguide","title":"Migrations","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"children":[{"title":"PersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/persistdriver\/shutdown()-3u3ne","title":"func shutdown() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/persistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persistdriver","title":"PersistDriver","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/persisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/persisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persisterror","title":"PersistError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/init(_:)","title":"init(C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/memorypersistdriver","title":"MemoryPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/init(fluent:databaseid:tidyupfrequency:)","title":"init(fluent: Fluent, databaseID: DatabaseID?, tidyUpFrequency: Duration) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","title":"FluentPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/init(client:migrations:tidyupfrequency:logger:)","title":"init(client: PostgresClient, migrations: PostgresMigrations, tidyUpFrequency: Duration, logger: Logger) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver","title":"PostgresPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/init(redisconnectionpoolservice:)","title":"init(redisConnectionPoolService: RedisConnectionPoolService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver","title":"RedisPersistDriver","type":"struct"}],"path":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"symbol"},{"title":"Persist","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/init(client:migrations:tidyupfrequency:logger:)","title":"init(client: PostgresClient, migrations: PostgresMigrations, tidyUpFrequency: Duration, logger: Logger) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver","title":"PostgresPersistDriver","type":"class"},{"title":"Migrations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations\/add(_:)","title":"func add(PostgresMigration)","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations\/apply(client:groups:logger:dryrun:)","title":"func apply(client: PostgresClient, groups: [PostgresMigrationGroup], logger: Logger, dryRun: Bool) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations\/register(_:)","title":"func register(PostgresMigration)","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations\/revert(client:groups:logger:dryrun:)","title":"func revert(client: PostgresClient, groups: [PostgresMigrationGroup], logger: Logger, dryRun: Bool) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations\/waituntilcompleted()","title":"func waitUntilCompleted() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdpostgres\/postgresmigrations","title":"PostgresMigrations","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdpostgres\/postgresmigration\/group-1r59g","title":"var group: PostgresMigrationGroup","type":"property"}],"title":"PostgresMigration Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdpostgres\/postgresmigration\/group-88lxc","title":"var group: PostgresMigrationGroup","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdpostgres\/postgresmigration\/name-5ufuq","title":"var name: String","type":"property"}],"title":"PostgresMigration Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdpostgres\/postgresmigration\/name-76gt1","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigration\/apply(connection:logger:)","title":"func apply(connection: PostgresConnection, logger: Logger) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigration\/revert(connection:logger:)","title":"func revert(connection: PostgresConnection, logger: Logger) async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgresmigration","title":"PostgresMigration","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationgroup\/init(_:)","title":"init(String)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationgroup\/default","title":"static var `default`: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationgroup\/jobqueue","title":"static var jobQueue: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationgroup\/persist","title":"static var persist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationgroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationgroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationgroup","title":"PostgresMigrationGroup","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdpostgres\/postgresmigrationerror","title":"PostgresMigrationError","type":"struct"}],"path":"\/documentation\/hummingbirdpostgres","title":"HummingbirdPostgres","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"children":[{"title":"PersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/persistdriver\/shutdown()-3u3ne","title":"func shutdown() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/persistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persistdriver","title":"PersistDriver","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/persisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/persisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/persisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/persisterror","title":"PersistError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/init(_:)","title":"init(C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable & Sendable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)","title":"func create(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/set(key:value:)","title":"func set(key: String, value: some Codable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/memorypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/memorypersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/memorypersistdriver","title":"MemoryPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/init(fluent:databaseid:tidyupfrequency:)","title":"init(fluent: Fluent, databaseID: DatabaseID?, tidyUpFrequency: Duration) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","title":"FluentPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/init(client:migrations:tidyupfrequency:logger:)","title":"init(client: PostgresClient, migrations: PostgresMigrations, tidyUpFrequency: Duration, logger: Logger) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver","title":"PostgresPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/init(redisconnectionpoolservice:)","title":"init(redisConnectionPoolService: RedisConnectionPoolService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver","title":"RedisPersistDriver","type":"struct"}],"path":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"symbol"},{"title":"Connection Pool","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/init(_:eventloopgroupprovider:logger:)","title":"init(RedisConfiguration, eventLoopGroupProvider: EventLoopGroupProvider, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/availableconnectioncount","title":"var availableConnectionCount: Int","type":"property"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leasedconnectioncount","title":"var leasedConnectionCount: Int","type":"property"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/pool","title":"let pool: RedisConnectionPool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/activate(logger:)","title":"func activate(logger: Logger?)","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/close()","title":"func close() async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)","title":"func leaseConnection<T>((RedisConnection) -> EventLoopFuture<T>) -> EventLoopFuture<T>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/updateconnectionaddresses(_:logger:)","title":"func updateConnectionAddresses([SocketAddress], logger: Logger?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/eventloop","title":"var eventLoop: NIOCore.EventLoop","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/activechannels(matching:)","title":"func activeChannels(matching: String?) -> EventLoopFuture<[RedisChannelName]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/append(_:to:)","title":"func append<Value>(Value, to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/authorize(username:password:)","title":"func authorize(username: String, password: String) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/authorize(with:)","title":"func authorize(with: String) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/blpop(from:as:timeout:)","title":"func blpop<Value>(from: RedisKey, as: Value.Type, timeout: TimeAmount) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/blpop(from:timeout:)-5hufb","title":"func blpop(from: RedisKey..., timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/blpop(from:timeout:)-6n3s8","title":"func blpop(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/blpop(from:timeout:)-7jtre","title":"func blpop(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/blpop(from:timeout:valuetype:)-4xloh","title":"func blpop<Value>(from: [RedisKey], timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/blpop(from:timeout:valuetype:)-ys2s","title":"func blpop<Value>(from: RedisKey..., timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/brpop(from:as:timeout:)","title":"func brpop<Value>(from: RedisKey, as: Value.Type, timeout: TimeAmount) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/brpop(from:timeout:)-279cr","title":"func brpop(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/brpop(from:timeout:)-3e51","title":"func brpop(from: RedisKey..., timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/brpop(from:timeout:)-8kfa0","title":"func brpop(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/brpop(from:timeout:valuetype:)-10bvf","title":"func brpop<Value>(from: [RedisKey], timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/brpop(from:timeout:valuetype:)-7x1bd","title":"func brpop<Value>(from: RedisKey..., timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/brpoplpush(from:to:timeout:)","title":"func brpoplpush(from: RedisKey, to: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/brpoplpush(from:to:timeout:valuetype:)","title":"func brpoplpush<Value>(from: RedisKey, to: RedisKey, timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/bzpopmax(from:timeout:)-1sfat","title":"func bzpopmax(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<(Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/bzpopmax(from:timeout:)-4entj","title":"func bzpopmax(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(String, Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/bzpopmin(from:timeout:)-9agla","title":"func bzpopmin(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(String, Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/bzpopmin(from:timeout:)-l8p6","title":"func bzpopmin(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<(Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/decrement(_:)","title":"func decrement(RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/decrement(_:by:)","title":"func decrement<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/delete(_:)","title":"func delete([RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/echo(_:)","title":"func echo(String) -> EventLoopFuture<String>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/exists(_:)","title":"func exists([RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/expire(_:after:)","title":"func expire(RedisKey, after: TimeAmount) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/get(_:)","title":"func get(RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/get(_:as:)","title":"func get<StoredType>(RedisKey, as: StoredType.Type) -> EventLoopFuture<StoredType?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/get(_:asjson:)","title":"func get<D>(RedisKey, asJSON: D.Type) -> EventLoopFuture<D?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hdel(_:from:)","title":"func hdel([String], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hexists(_:in:)","title":"func hexists(String, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hget(_:from:)","title":"func hget(String, from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hget(_:from:as:)","title":"func hget<Value>(String, from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hgetall(from:)","title":"func hgetall(from: RedisKey) -> EventLoopFuture<[String : RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hgetall(from:as:)","title":"func hgetall<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<[String : Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hincrby(_:field:in:)","title":"func hincrby<Value>(Value, field: String, in: RedisKey) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hincrbyfloat(_:field:in:)","title":"func hincrbyfloat<Value>(Value, field: String, in: RedisKey) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hkeys(in:)","title":"func hkeys(in: RedisKey) -> EventLoopFuture<[String]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hlen(of:)","title":"func hlen(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hmget(_:from:)","title":"func hmget([String], from: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hmget(_:from:as:)-5a9ll","title":"func hmget<Value>(String..., from: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hmget(_:from:as:)-7braq","title":"func hmget<Value>([String], from: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hmset(_:in:)","title":"func hmset<Value>([String : Value], in: RedisKey) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hscan(_:startingfrom:matching:count:)","title":"func hscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [String : RESPValue])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hscan(_:startingfrom:matching:count:valuetype:)","title":"func hscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [String : Value?])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hset(_:to:in:)","title":"func hset<Value>(String, to: Value, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hsetnx(_:to:in:)","title":"func hsetnx<Value>(String, to: Value, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hstrlen(of:in:)","title":"func hstrlen(of: String, in: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hvals(in:)","title":"func hvals(in: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/hvals(in:as:)","title":"func hvals<Value>(in: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/increment(_:)","title":"func increment(RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/increment(_:by:)-203wl","title":"func increment<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/increment(_:by:)-7d8b1","title":"func increment<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lindex(_:from:)","title":"func lindex(Int, from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lindex(_:from:as:)","title":"func lindex<Value>(Int, from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/linsert(_:into:after:)","title":"func linsert<Value>(Value, into: RedisKey, after: Value) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/linsert(_:into:before:)","title":"func linsert<Value>(Value, into: RedisKey, before: Value) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/llen(of:)","title":"func llen(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/logging(to:)","title":"func logging(to: Logging.Logger) -> RediStack.RedisClient","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lpop(from:)","title":"func lpop(from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lpop(from:as:)","title":"func lpop<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lpush(_:into:)-2wdeb","title":"func lpush<Value>(Value..., into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lpush(_:into:)-9wu21","title":"func lpush<Value>([Value], into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lpushx(_:into:)","title":"func lpushx<Value>(Value, into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:firstindex:lastindex:)","title":"func lrange(from: RedisKey, firstIndex: Int, lastIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:firstindex:lastindex:as:)","title":"func lrange<Value>(from: RedisKey, firstIndex: Int, lastIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:fromindex:)","title":"func lrange(from: RedisKey, fromIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:fromindex:as:)","title":"func lrange<Value>(from: RedisKey, fromIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:indices:)-7w17k","title":"func lrange(from: RedisKey, indices: Range<Int>) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:indices:)-8f9sl","title":"func lrange(from: RedisKey, indices: ClosedRange<Int>) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:indices:as:)-7rhsg","title":"func lrange<Value>(from: RedisKey, indices: ClosedRange<Int>, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:indices:as:)-86jpj","title":"func lrange<Value>(from: RedisKey, indices: Range<Int>, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:throughindex:)","title":"func lrange(from: RedisKey, throughIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:throughindex:as:)","title":"func lrange<Value>(from: RedisKey, throughIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:uptoindex:)","title":"func lrange(from: RedisKey, upToIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrange(from:uptoindex:as:)","title":"func lrange<Value>(from: RedisKey, upToIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lrem(_:from:count:)","title":"func lrem<Value>(Value, from: RedisKey, count: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/lset(index:to:in:)","title":"func lset<Value>(index: Int, to: Value, in: RedisKey) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/ltrim(_:before:after:)","title":"func ltrim(RedisKey, before: Int, after: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/ltrim(_:keepingindices:)-3y219","title":"func ltrim(RedisKey, keepingIndices: PartialRangeFrom<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/ltrim(_:keepingindices:)-51cpw","title":"func ltrim(RedisKey, keepingIndices: ClosedRange<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/ltrim(_:keepingindices:)-6jnz5","title":"func ltrim(RedisKey, keepingIndices: Range<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/ltrim(_:keepingindices:)-6ltuz","title":"func ltrim(RedisKey, keepingIndices: PartialRangeThrough<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/ltrim(_:keepingindices:)-9d09r","title":"func ltrim(RedisKey, keepingIndices: PartialRangeUpTo<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/mget(_:)","title":"func mget([RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/mget(_:as:)-4zvm2","title":"func mget<Value>([RedisKey], as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/mget(_:as:)-7fp5z","title":"func mget<Value>(RedisKey..., as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/mset(_:)","title":"func mset<Value>([RedisKey : Value]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/msetnx(_:)","title":"func msetnx<Value>([RedisKey : Value]) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/patternsubscribercount()","title":"func patternSubscriberCount() -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/ping(with:)","title":"func ping(with: String?) -> EventLoopFuture<String>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/psetex(_:to:expirationinmilliseconds:)","title":"func psetex<Value>(RedisKey, to: Value, expirationInMilliseconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/psetex(_:tojson:expirationinmilliseconds:)","title":"func psetex(RedisKey, toJSON: some Encodable, expirationInMilliseconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/psubscribe(to:messagereceiver:onsubscribe:onunsubscribe:)","title":"func psubscribe(to: [String], messageReceiver: RedisSubscriptionMessageReceiver, onSubscribe: RedisSubscriptionChangeHandler?, onUnsubscribe: RedisSubscriptionChangeHandler?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/pttl(_:)","title":"func pttl(RedisKey) -> EventLoopFuture<RedisKey.Lifetime>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/publish(_:to:)","title":"func publish<Message>(Message, to: RedisChannelName) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/punsubscribe()","title":"func punsubscribe() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/punsubscribe(from:)","title":"func punsubscribe(from: [String]) -> NIOCore.EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/rpop(from:)","title":"func rpop(from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/rpop(from:as:)","title":"func rpop<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/rpoplpush(from:to:)","title":"func rpoplpush(from: RedisKey, to: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/rpoplpush(from:to:valuetype:)","title":"func rpoplpush<Value>(from: RedisKey, to: RedisKey, valueType: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/rpush(_:into:)-3y1xf","title":"func rpush<Value>(Value..., into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/rpush(_:into:)-9rasp","title":"func rpush<Value>([Value], into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/rpushx(_:into:)","title":"func rpushx<Value>(Value, into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sadd(_:to:)-3guzq","title":"func sadd<Value>(Value..., to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sadd(_:to:)-7u6a8","title":"func sadd<Value>([Value], to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/scan(startingfrom:matching:count:)","title":"func scan(startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [String])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/scard(of:)","title":"func scard(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sdiff(of:)","title":"func sdiff(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sdiff(of:valuetype:)-2cobe","title":"func sdiff<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sdiff(of:valuetype:)-48gj4","title":"func sdiff<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sdiffstore(as:sources:)","title":"func sdiffstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/select(database:)","title":"func select(database: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/send(command:)","title":"func send(command: String) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/send(command:with:)","title":"func send(command: String, with: [RediStack.RESPValue]) -> NIOCore.EventLoopFuture<RediStack.RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:to:)","title":"func set<Value>(RedisKey, to: Value) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:to:oncondition:expiration:)","title":"func set<Value>(RedisKey, to: Value, onCondition: RedisSetCommandCondition, expiration: RedisSetCommandExpiration?) -> EventLoopFuture<RedisSetCommandResult>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:)","title":"func set(RedisKey, toJSON: some Encodable) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:oncondition:expiration:)","title":"func set(RedisKey, toJSON: some Encodable, onCondition: RedisSetCommandCondition, expiration: RedisSetCommandExpiration?) -> EventLoopFuture<RedisSetCommandResult>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/setex(_:to:expirationinseconds:)","title":"func setex<Value>(RedisKey, to: Value, expirationInSeconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/setex(_:tojson:expirationinseconds:)","title":"func setex(RedisKey, toJSON: some Encodable, expirationInSeconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/setnx(_:to:)","title":"func setnx<Value>(RedisKey, to: Value) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/setnx(_:tojson:)","title":"func setnx(RedisKey, toJSON: some Encodable) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sinter(of:)","title":"func sinter(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sinter(of:valuetype:)-1dnf8","title":"func sinter<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sinter(of:valuetype:)-klqo","title":"func sinter<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sinterstore(as:sources:)","title":"func sinterstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sismember(_:of:)","title":"func sismember<Value>(Value, of: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/smembers(of:)","title":"func smembers(of: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/smembers(of:as:)","title":"func smembers<Value>(of: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/smove(_:from:to:)","title":"func smove<Value>(Value, from: RedisKey, to: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/spop(from:as:max:)","title":"func spop<Value>(from: RedisKey, as: Value.Type, max: Int) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/spop(from:max:)","title":"func spop(from: RedisKey, max: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/srandmember(from:as:max:)","title":"func srandmember<Value>(from: RedisKey, as: Value.Type, max: Int) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/srandmember(from:max:)","title":"func srandmember(from: RedisKey, max: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/srem(_:from:)-1x2qy","title":"func srem<Value>([Value], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/srem(_:from:)-4qjt5","title":"func srem<Value>(Value..., from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sscan(_:startingfrom:matching:count:)","title":"func sscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [RESPValue])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sscan(_:startingfrom:matching:count:valuetype:)","title":"func sscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [Value?])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/subscribe(to:messagereceiver:onsubscribe:onunsubscribe:)","title":"func subscribe(to: [RedisChannelName], messageReceiver: RedisSubscriptionMessageReceiver, onSubscribe: RedisSubscriptionChangeHandler?, onUnsubscribe: RedisSubscriptionChangeHandler?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/subscribercount(forchannels:)","title":"func subscriberCount(forChannels: [RedisChannelName]) -> EventLoopFuture<[RedisChannelName : Int]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sunion(of:)","title":"func sunion(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sunion(of:valuetype:)-32ts5","title":"func sunion<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sunion(of:valuetype:)-8anuo","title":"func sunion<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/sunionstore(as:sources:)","title":"func sunionstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/swapdatabase(_:with:)","title":"func swapDatabase(Int, with: Int) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/ttl(_:)","title":"func ttl(RedisKey) -> EventLoopFuture<RedisKey.Lifetime>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/unsubscribe()","title":"func unsubscribe() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/unsubscribe(from:)","title":"func unsubscribe(from: [RediStack.RedisChannelName]) -> NIOCore.EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zadd(_:to:inserting:returning:)-2cvqq","title":"func zadd<Value>([(element: Value, score: Double)], to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zadd(_:to:inserting:returning:)-2nxif","title":"func zadd<Value>((element: Value, score: Double)..., to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zadd(_:to:inserting:returning:)-73pnp","title":"func zadd<Value>((element: Value, score: Double), to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zcard(of:)","title":"func zcard(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zcount(of:withmaximumscoreof:)","title":"func zcount(of: RedisKey, withMaximumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zcount(of:withminimumscoreof:)","title":"func zcount(of: RedisKey, withMinimumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zcount(of:withscores:)-26xbl","title":"func zcount(of: RedisKey, withScores: Range<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zcount(of:withscores:)-87r3j","title":"func zcount(of: RedisKey, withScores: ClosedRange<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zcount(of:withscoresbetween:)","title":"func zcount(of: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zincrby(_:element:in:)","title":"func zincrby<Value>(Double, element: Value, in: RedisKey) -> EventLoopFuture<Double>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zinterstore(as:sources:weights:aggregatemethod:)","title":"func zinterstore(as: RedisKey, sources: [RedisKey], weights: [Int]?, aggregateMethod: RedisSortedSetAggregateMethod?) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zlexcount(of:withmaximumvalueof:)","title":"func zlexcount<Value>(of: RedisKey, withMaximumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zlexcount(of:withminimumvalueof:)","title":"func zlexcount<Value>(of: RedisKey, withMinimumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zlexcount(of:withvaluesbetween:)","title":"func zlexcount<Value>(of: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zpopmax(from:)","title":"func zpopmax(from: RedisKey) -> EventLoopFuture<(RESPValue, Double)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zpopmax(from:max:)","title":"func zpopmax(from: RedisKey, max: Int) -> EventLoopFuture<[(RESPValue, Double)]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zpopmin(from:)","title":"func zpopmin(from: RedisKey) -> EventLoopFuture<(RESPValue, Double)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zpopmin(from:max:)","title":"func zpopmin(from: RedisKey, max: Int) -> EventLoopFuture<[(RESPValue, Double)]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrange(from:firstindex:lastindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, firstIndex: Int, lastIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrange(from:fromindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, fromIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrange(from:indices:includescoresinresponse:)-1l3wi","title":"func zrange(from: RedisKey, indices: Range<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrange(from:indices:includescoresinresponse:)-3ou5d","title":"func zrange(from: RedisKey, indices: ClosedRange<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrange(from:throughindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, throughIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrange(from:uptoindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, upToIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrangebylex(from:withmaximumvalueof:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrangebylex(from:withminimumvalueof:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrangebylex(from:withvaluesbetween:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>), limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrangebyscore(from:withmaximumscoreof:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrangebyscore(from:withminimumscoreof:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrangebyscore(from:withscores:limitby:includescoresinresponse:)-1zxl5","title":"func zrangebyscore(from: RedisKey, withScores: Range<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrangebyscore(from:withscores:limitby:includescoresinresponse:)-2eze4","title":"func zrangebyscore(from: RedisKey, withScores: ClosedRange<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrangebyscore(from:withscoresbetween:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound), limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrank(of:in:)","title":"func zrank<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Int?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrem(_:from:)-3rvrg","title":"func zrem<Value>(Value..., from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrem(_:from:)-56l7r","title":"func zrem<Value>([Value], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebylex(from:withmaximumvalueof:)","title":"func zremrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebylex(from:withminimumvalueof:)","title":"func zremrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebylex(from:withvaluesbetween:)","title":"func zremrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyrank(from:firstindex:lastindex:)","title":"func zremrangebyrank(from: RedisKey, firstIndex: Int, lastIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyrank(from:fromindex:)","title":"func zremrangebyrank(from: RedisKey, fromIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyrank(from:indices:)-5atmk","title":"func zremrangebyrank(from: RedisKey, indices: ClosedRange<Int>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyrank(from:indices:)-5wqp6","title":"func zremrangebyrank(from: RedisKey, indices: Range<Int>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyrank(from:throughindex:)","title":"func zremrangebyrank(from: RedisKey, throughIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyrank(from:uptoindex:)","title":"func zremrangebyrank(from: RedisKey, upToIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyscore(from:withmaximumscoreof:)","title":"func zremrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyscore(from:withminimumscoreof:)","title":"func zremrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyscore(from:withscores:)-49p6e","title":"func zremrangebyscore(from: RedisKey, withScores: ClosedRange<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyscore(from:withscores:)-5cmd","title":"func zremrangebyscore(from: RedisKey, withScores: Range<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zremrangebyscore(from:withscoresbetween:)","title":"func zremrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrange(from:firstindex:lastindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, firstIndex: Int, lastIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrange(from:fromindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, fromIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrange(from:indices:includescoresinresponse:)-2byru","title":"func zrevrange(from: RedisKey, indices: Range<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrange(from:indices:includescoresinresponse:)-7r0e8","title":"func zrevrange(from: RedisKey, indices: ClosedRange<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrange(from:throughindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, throughIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrange(from:uptoindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, upToIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrangebylex(from:withmaximumvalueof:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrangebylex(from:withminimumvalueof:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrangebylex(from:withvaluesbetween:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>), limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrangebyscore(from:withmaximumscoreof:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrangebyscore(from:withminimumscoreof:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrangebyscore(from:withscores:limitby:includescoresinresponse:)-4q39i","title":"func zrevrangebyscore(from: RedisKey, withScores: ClosedRange<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrangebyscore(from:withscores:limitby:includescoresinresponse:)-943qw","title":"func zrevrangebyscore(from: RedisKey, withScores: Range<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrangebyscore(from:withscoresbetween:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound), limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zrevrank(of:in:)","title":"func zrevrank<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Int?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zscan(_:startingfrom:matching:count:)","title":"func zscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [(RESPValue, Double)])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zscan(_:startingfrom:matching:count:valuetype:)","title":"func zscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [(Value, Double)?])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zscore(of:in:)","title":"func zscore<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Double?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/zunionstore(as:sources:weights:aggregatemethod:)","title":"func zunionstore(as: RedisKey, sources: [RedisKey], weights: [Int]?, aggregateMethod: RedisSortedSetAggregateMethod?) -> EventLoopFuture<Int>","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations","title":"RedisClient Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","title":"RedisConnectionPoolService","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/pooloptions\/init(maximumconnectioncount:minimumconnectioncount:connectionbackofffactor:initialconnectionbackoffdelay:connectionretrytimeout:)","title":"init(maximumConnectionCount: RedisConnectionPoolSize, minimumConnectionCount: Int, connectionBackoffFactor: Float32, initialConnectionBackoffDelay: TimeAmount, connectionRetryTimeout: TimeAmount?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/pooloptions\/connectionbackofffactor","title":"var connectionBackoffFactor: Float32","type":"property"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/pooloptions\/connectionretrytimeout","title":"var connectionRetryTimeout: TimeAmount?","type":"property"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/pooloptions\/initialconnectionbackoffdelay","title":"var initialConnectionBackoffDelay: TimeAmount","type":"property"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/pooloptions\/maximumconnectioncount","title":"var maximumConnectionCount: RedisConnectionPoolSize","type":"property"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/pooloptions\/minimumconnectioncount","title":"var minimumConnectionCount: Int","type":"property"}],"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/pooloptions","title":"RedisConfiguration.PoolOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/init(hostname:port:password:database:pool:)","title":"init(hostname: String, port: Int, password: String?, database: Int?, pool: PoolOptions) throws","type":"init"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/init(serveraddresses:password:database:pool:)","title":"init(serverAddresses: [SocketAddress], password: String?, database: Int?, pool: PoolOptions) throws","type":"init"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/init(url:pool:)-6kbfb","title":"init(url: String, pool: PoolOptions) throws","type":"init"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/init(url:pool:)-9fi0v","title":"init(url: URL, pool: PoolOptions) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/database","title":"var database: Int?","type":"property"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/password","title":"var password: String?","type":"property"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/pool","title":"var pool: PoolOptions","type":"property"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/serveraddresses","title":"var serverAddresses: [SocketAddress]","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redisconfiguration\/validationerror","title":"RedisConfiguration.ValidationError","type":"typealias"}],"path":"\/documentation\/hummingbirdredis\/redisconfiguration","title":"RedisConfiguration","type":"struct"},{"title":"Storage","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/init(redisconnectionpoolservice:)","title":"init(redisConnectionPoolService: RedisConnectionPoolService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:expires:)","title":"func create(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:expires:)","title":"func set(key: String, value: some Codable, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/create(key:value:)","title":"func create(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/set(key:value:)","title":"func set(key: String, value: some Decodable & Encodable & Sendable) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/persistdriver-implementations","title":"PersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/redispersistdriver","title":"RedisPersistDriver","type":"struct"}],"path":"\/documentation\/hummingbirdredis","title":"HummingbirdRedis","type":"module"},{"children":[{"title":"RouterBuilder","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/init(context:builder:)","title":"init(context: Context.Type, builder: () -> Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/input","title":"RouterBuilder.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/output","title":"RouterBuilder.Output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)","title":"func respond(to: Input, context: Context) async throws -> Output","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/httpresponder-implementations","title":"HTTPResponder Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/buildresponder()","title":"func buildResponder() -> RouterBuilder<Context, Handler>","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/httpresponderbuilder-implementations","title":"HTTPResponderBuilder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder","title":"RouterBuilder","type":"struct"},{"title":"Request Context","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerrequestcontext\/routercontext","title":"var routerContext: RouterBuilderContext","type":"property"}],"path":"\/documentation\/hummingbirdrouter\/routerrequestcontext","title":"RouterRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/corecontext","title":"var coreContext: CoreRequestContext","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/routercontext","title":"var routerContext: RouterBuilderContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/responseencoder","title":"var responseEncoder: JSONEncoder","type":"property"}],"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/baserequestcontext-implementations","title":"BaseRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","title":"BasicRouterRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuildercontext\/init()","title":"init()","type":"init"}],"path":"\/documentation\/hummingbirdrouter\/routerbuildercontext","title":"RouterBuilderContext","type":"struct"},{"title":"Result Builder","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/init(context:builder:)","title":"init(context: Context.Type, builder: () -> Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/input","title":"RouterBuilder.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/output","title":"RouterBuilder.Output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)","title":"func respond(to: Input, context: Context) async throws -> Output","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/httpresponder-implementations","title":"HTTPResponder Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/buildresponder()","title":"func buildResponder() -> RouterBuilder<Context, Handler>","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder\/httpresponderbuilder-implementations","title":"HTTPResponderBuilder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdrouter\/routerbuilder","title":"RouterBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/init(_:builder:)","title":"init(RouterPath, builder: () -> Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/input","title":"RouteGroup.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/output","title":"RouteGroup.Output","type":"typealias"}],"path":"\/documentation\/hummingbirdrouter\/routegroup","title":"RouteGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/route\/init(_:_:builder:)","title":"init<M0>(HTTPRequest.Method, RouterPath, builder: () -> M0)","type":"init"},{"path":"\/documentation\/hummingbirdrouter\/route\/init(_:_:handler:)","title":"init<RouteOutput>(HTTPRequest.Method, RouterPath, handler: (Input, Context) async throws -> RouteOutput)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/route\/fullpath","title":"let fullPath: String","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/route\/handler","title":"let handler: Handler","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/route\/method","title":"let method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/route\/routerpath","title":"let routerPath: RouterPath","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/route\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/route","title":"Route","type":"struct"},{"path":"\/documentation\/hummingbirdrouter\/get(_:builder:)","title":"func Get<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/get(_:handler:)","title":"func Get<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/head(_:builder:)","title":"func Head<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/head(_:handler:)","title":"func Head<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/put(_:builder:)","title":"func Put<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/put(_:handler:)","title":"func Put<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/post(_:builder:)","title":"func Post<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/post(_:handler:)","title":"func Post<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/patch(_:builder:)","title":"func Patch<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/patch(_:handler:)","title":"func Patch<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/delete(_:builder:)","title":"func Delete<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/delete(_:handler:)","title":"func Delete<RouteOutput, Context>(RouterPath, handler: (Request, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/handle\/init(_:)","title":"init(Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/handle\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/handle\/handler","title":"Handle.Handler","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/handle\/input","title":"Handle.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/handle\/output","title":"Handle.Output","type":"typealias"}],"path":"\/documentation\/hummingbirdrouter\/handle","title":"Handle","type":"struct"},{"title":"Result Builders","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/middlewarefixedtypebuilder\/buildblock(_:)","title":"static func buildBlock<M0>(M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/middlewarefixedtypebuilder\/buildexpression(_:)","title":"static func buildExpression<M0>(M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/middlewarefixedtypebuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<M0, M1>(accumulated: M0, next: M1) -> _Middleware2<M0, M1>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/middlewarefixedtypebuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<M0>(first: M0) -> M0","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/middlewarefixedtypebuilder","title":"MiddlewareFixedTypeBuilder","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildblock(_:)","title":"static func buildBlock<RouteOutput>(Handle<RouteOutput, Context>) -> Handle<RouteOutput, Context>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildexpression(_:)-1z59f","title":"static func buildExpression<M0>(M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildexpression(_:)-330hz","title":"static func buildExpression<HandlerOutput>((Request, Context) async throws -> HandlerOutput) -> Handle<HandlerOutput, Context>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildfinalresult(_:)-2hb10","title":"static func buildFinalResult<RouteOutput>(Handle<RouteOutput, Context>) -> Handle<RouteOutput, Context>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildfinalresult(_:)-7r9pz","title":"static func buildFinalResult<M0, RouteOutput>(_Middleware2<M0, Handle<RouteOutput, M0.Context>>) -> _Middleware2<M0, Handle<RouteOutput, M0.Context>>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<M0, M1>(accumulated: M0, next: M1) -> _Middleware2<M0, M1>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<M0>(first: M0) -> M0","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routebuilder","title":"RouteBuilder","type":"enum"}],"path":"\/documentation\/hummingbirdrouter","title":"HummingbirdRouter","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/init(_:tlsconfiguration:)","title":"init(BaseChannel, tlsConfiguration: TLSConfiguration) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/handle(value:logger:)","title":"func handle(value: BaseChannel.Value, logger: Logging.Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/setup(channel:logger:)","title":"func setup(channel: Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/value","title":"TLSChannel.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/responder","title":"var responder: (Request, Channel) async throws -> Response","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdtls\/tlschannel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger) -> any Service","type":"method"}],"path":"\/documentation\/hummingbirdtls\/tlschannel\/serverchildchannel-implementations","title":"ServerChildChannel Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdtls\/tlschannel","title":"TLSChannel","type":"struct"}],"path":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/testing","title":"Testing","type":"article"},{"title":"Test Setup","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testingsetup\/live","title":"static var live: TestingSetup","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testingsetup\/router","title":"static var router: TestingSetup","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testingsetup\/ahc(_:)","title":"static func ahc(TestHTTPScheme) -> TestingSetup","type":"method"}],"path":"\/documentation\/hummingbirdtesting\/testingsetup","title":"TestingSetup","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/http","title":"case http","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/https","title":"case https","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdtesting\/testhttpscheme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdtesting\/testhttpscheme","title":"TestHTTPScheme","type":"enum"},{"path":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","title":"func test<Value>(TestingSetup, (any TestClientProtocol) async throws -> Value) async throws -> Value","type":"method"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclientprotocol\/port","title":"var port: Int?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclientprotocol\/execute(uri:method:headers:body:testcallback:)","title":"func execute<Return>(uri: String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?, testCallback: (TestResponse) async throws -> Return) async throws -> Return","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclientprotocol\/executerequest(uri:method:headers:body:)","title":"func executeRequest(uri: String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?) async throws -> TestResponse","type":"method"}],"path":"\/documentation\/hummingbirdtesting\/testclientprotocol","title":"TestClientProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/configuration\/init(tlsconfiguration:timeout:servername:)","title":"init(tlsConfiguration: TLSConfiguration?, timeout: Duration, serverName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/configuration\/servername","title":"let serverName: String?","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/configuration\/timeout","title":"let timeout: Duration","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/configuration\/tlsconfiguration","title":"let tlsConfiguration: TLSConfiguration?","type":"property"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/configuration","title":"TestClient.Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/request\/init(_:method:authority:headers:body:)","title":"init(String, method: HTTPRequest.Method, authority: String?, headers: HTTPFields, body: ByteBuffer?)","type":"init"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/request\/init(_:method:headers:body:)","title":"init(String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/request\/body","title":"var body: ByteBuffer?","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/request\/head","title":"var head: HTTPRequest","type":"property"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/request","title":"TestClient.Request","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/init(head:body:trailerheaders:)","title":"init(head: HTTPResponse, body: ByteBuffer?, trailerHeaders: HTTPFields?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/body","title":"var body: ByteBuffer?","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/head","title":"var head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/status","title":"var status: HTTPResponse.Status","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/response\/trailerheaders","title":"var trailerHeaders: HTTPFields?","type":"property"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/response","title":"TestClient.Response","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/init(host:port:configuration:eventloopgroupprovider:)","title":"init(host: String, port: Int, configuration: Configuration, eventLoopGroupProvider: NIOEventLoopGroupProvider)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/channelpromise","title":"let channelPromise: EventLoopPromise<Channel>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/close()","title":"func close() async throws","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/connect()","title":"func connect()","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/delete(_:headers:body:)","title":"func delete(String, headers: HTTPFields, body: ByteBuffer) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/execute(_:)","title":"func execute(TestClient.Request) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/get(_:headers:)","title":"func get(String, headers: HTTPFields) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/getchannel()","title":"func getChannel() async throws -> Channel","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/head(_:headers:)","title":"func head(String, headers: HTTPFields) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/post(_:headers:body:)","title":"func post(String, headers: HTTPFields, body: ByteBuffer) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/put(_:headers:body:)","title":"func put(String, headers: HTTPFields, body: ByteBuffer) async throws -> TestClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/shutdown()","title":"func shutdown() async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/connectionclosing","title":"case connectionClosing","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/connectionnotopen","title":"case connectionNotOpen","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/invalidurl","title":"case invalidURL","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/malformedresponse","title":"case malformedResponse","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/noresponse","title":"case noResponse","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/readtimeout","title":"case readTimeout","type":"case"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/tlssetupfailed","title":"case tlsSetupFailed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdtesting\/testclient\/error","title":"TestClient.Error","type":"enum"}],"path":"\/documentation\/hummingbirdtesting\/testclient","title":"TestClient","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtesting\/testresponse\/body","title":"let body: ByteBuffer","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testresponse\/head","title":"let head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testresponse\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testresponse\/status","title":"var status: HTTPResponse.Status","type":"property"},{"path":"\/documentation\/hummingbirdtesting\/testresponse\/trailerheaders","title":"let trailerHeaders: HTTPFields?","type":"property"}],"path":"\/documentation\/hummingbirdtesting\/testresponse","title":"TestResponse","type":"struct"}],"path":"\/documentation\/hummingbirdtesting","title":"HummingbirdTesting","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/websocketclientguide","title":"WebSocket Client","type":"article"},{"title":"Client","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclient\/init(url:configuration:tlsconfiguration:eventloopgroup:logger:handler:)","title":"init(url: String, configuration: WebSocketClientConfiguration, tlsConfiguration: TLSConfiguration?, eventLoopGroup: EventLoopGroup, logger: Logger, handler: WebSocketDataHandler<BasicWebSocketContext>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclient\/run()","title":"func run() async throws -> WebSocketCloseFrame?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclient\/connect(url:configuration:tlsconfiguration:eventloopgroup:logger:handler:)","title":"static func connect(url: String, configuration: WebSocketClientConfiguration, tlsConfiguration: TLSConfiguration?, eventLoopGroup: EventLoopGroup, logger: Logger, handler: WebSocketDataHandler<BasicWebSocketContext>) async throws -> WebSocketCloseFrame?","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketclient","title":"WebSocketClient","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclientconfiguration\/init(maxframesize:additionalheaders:extensions:autoping:)","title":"init(maxFrameSize: Int, additionalHeaders: HTTPFields, extensions: [WebSocketExtensionFactory], autoPing: AutoPingSetup)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclientconfiguration\/additionalheaders","title":"var additionalHeaders: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclientconfiguration\/autoping","title":"var autoPing: AutoPingSetup","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclientconfiguration\/extensions","title":"var extensions: [any WebSocketExtensionBuilder]","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclientconfiguration\/maxframesize","title":"var maxFrameSize: Int","type":"property"}],"path":"\/documentation\/hummingbirdwsclient\/websocketclientconfiguration","title":"WebSocketClientConfiguration","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/autopingsetup\/disabled","title":"static var disabled: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/autopingsetup\/enabled(timeperiod:)","title":"static func enabled(timePeriod: Duration) -> AutoPingSetup","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/autopingsetup","title":"AutoPingSetup","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclienterror\/invalidurl","title":"static var invalidURL: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclienterror\/websocketupgradefailed","title":"static var webSocketUpgradeFailed: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclienterror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdwsclient\/websocketclienterror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclienterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketclienterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketclienterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdwsclient\/websocketclienterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketclienterror","title":"WebSocketClientError","type":"struct"},{"title":"Handler","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdatahandler","title":"WebSocketDataHandler","type":"typealias"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/asynciterator\/next()","title":"func next() async throws -> WebSocketDataFrame?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/asynciterator\/nextmessage(maxsize:)","title":"func nextMessage(maxSize: Int) async throws -> WebSocketMessage?","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/asynciterator","title":"WebSocketInboundStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/messages(maxsize:)","title":"func messages(maxSize: Int) -> WebSocketInboundMessageStream","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/element","title":"WebSocketInboundStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(by:into:)-2oz7m","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(by:into:)-5khjw","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:or:)-5638n","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:or:)-8qsom","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:or:into:)-5y1xx","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:or:into:)-8xvzo","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/compactmap(_:)-45sup","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/compactmap(_:)-5vdwm","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/flatmap(_:)-9gxqc","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/flatmap(_:)-9majl","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/interspersed(every:with:)-3xsnh","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/interspersed(every:with:)-4s0pm","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/interspersed(every:with:)-8jrqq","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/interspersed(every:with:)-92m7x","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/interspersed(every:with:)-93bd","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/map(_:)-33foz","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/map(_:)-3fvp3","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reductions(_:_:)-15z3v","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reductions(_:_:)-5qlqi","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reductions(into:_:)-59glv","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reductions(into:_:)-8p6sz","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream","title":"WebSocketInboundStream","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-3ud30","title":"func callAsFunction(ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-m6w1","title":"func callAsFunction(String) async throws","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/messagewriter","title":"WebSocketOutboundWriter.MessageWriter","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/close(_:reason:)","title":"func close(WebSocketErrorCode, reason: String?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/withbinarymessagewriter(_:)","title":"func withBinaryMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/withtextmessagewriter(_:)","title":"func withTextMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/write(_:)","title":"func write(OutboundFrame) async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/outboundframe\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/outboundframe\/custom(_:)","title":"case custom(WebSocketFrame)","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/outboundframe\/pong","title":"case pong","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/outboundframe\/text(_:)","title":"case text(String)","type":"case"}],"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/outboundframe","title":"WebSocketOutboundWriter.OutboundFrame","type":"enum"}],"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter","title":"WebSocketOutboundWriter","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/data","title":"var data: ByteBuffer","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/fin","title":"var fin: Bool","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.property","title":"var opcode: Opcode","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/binary","title":"case binary","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/continuation","title":"case continuation","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum","title":"WebSocketDataFrame.Opcode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe","title":"WebSocketDataFrame","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketcontext\/logger","title":"var logger: Logger","type":"property"}],"path":"\/documentation\/hummingbirdwsclient\/websocketcontext","title":"WebSocketContext","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/basicwebsocketcontext\/allocator","title":"let allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/basicwebsocketcontext\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/hummingbirdwsclient\/basicwebsocketcontext","title":"BasicWebSocketContext","type":"struct"},{"title":"Messages","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/text(_:)","title":"case text(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketmessage","title":"WebSocketMessage","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/asynciterator","title":"WebSocketInboundMessageStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/element","title":"WebSocketInboundMessageStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(by:into:)-2c9l9","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(by:into:)-3jy46","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:or:)-6qdcq","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:or:)-75tkg","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-25ssd","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-4tobq","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/compactmap(_:)-4927f","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/compactmap(_:)-9efdw","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/flatmap(_:)-213v0","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/flatmap(_:)-9lrf5","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/interspersed(every:with:)-2bgur","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/interspersed(every:with:)-4a2gq","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/interspersed(every:with:)-4nrgv","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/interspersed(every:with:)-7qbak","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/interspersed(every:with:)-91qal","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/map(_:)-7vdu3","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/map(_:)-hztx","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reductions(_:_:)-1s19","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reductions(_:_:)-2cfx2","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reductions(into:_:)-5livy","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reductions(into:_:)-i803","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream","title":"WebSocketInboundMessageStream","type":"struct"},{"title":"Extensions","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextension\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextension\/processframetosend(_:context:)","title":"func processFrameToSend(WebSocketFrame, context: some WebSocketContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextension\/processreceivedframe(_:context:)","title":"func processReceivedFrame(WebSocketFrame, context: some WebSocketContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextension\/shutdown()","title":"func shutdown() async","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextension","title":"WebSocketExtension","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/clientextension(from:)-4o1by","title":"func clientExtension(from: [WebSocketExtensionHTTPParameters]) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/clientextension(from:)-4o1by","title":"func clientExtension(from: [WebSocketExtensionHTTPParameters]) throws -> (any WebSocketExtension)?","type":"method"}],"title":"WebSocketExtensionBuilder Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/clientextension(from:)-5b3x5","title":"func clientExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/clientrequestheader()","title":"func clientRequestHeader() -> String","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/serverextension(from:)-76a2z","title":"func serverExtension(from: [WebSocketExtensionHTTPParameters]) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/serverextension(from:)-76a2z","title":"func serverExtension(from: [WebSocketExtensionHTTPParameters]) throws -> (any WebSocketExtension)?","type":"method"}],"title":"WebSocketExtensionBuilder Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/serverextension(from:)-3ekyh","title":"func serverExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/serverreponseheader(to:)","title":"func serverReponseHeader(to: WebSocketExtensionHTTPParameters) -> String?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/serverresponseheader(to:)","title":"func serverResponseHeader(to: [WebSocketExtensionHTTPParameters]) -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/name","title":"static var name: String","type":"property"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder","title":"WebSocketExtensionBuilder","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameters","title":"let parameters: [String : Parameter]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parseheaders(_:)","title":"static func parseHeaders(HTTPFields) -> [WebSocketExtensionHTTPParameters]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/null","title":"case null","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/value(_:)","title":"case value(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/integer","title":"var integer: Int?","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/optional","title":"var optional: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter","title":"WebSocketExtensionHTTPParameters.Parameter","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters","title":"WebSocketExtensionHTTPParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionfactory\/init(_:)","title":"init(() -> any WebSocketExtensionBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionfactory\/build","title":"let build: () -> any WebSocketExtensionBuilder","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(clientMaxWindow: Int?, clientNoContextTakeover: Bool, serverMaxWindow: Int?, serverNoContextTakeover: Bool, compressionLevel: Int?, memoryLevel: Int?, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(maxWindow: Int?, noContextTakeover: Bool, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionfactory","title":"WebSocketExtensionFactory","type":"struct"}],"path":"\/documentation\/hummingbirdwsclient","title":"HummingbirdWSClient","type":"module"},{"path":"\/documentation\/hummingbirdwscompression","title":"HummingbirdWSCompression","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketcloseframe\/closecode","title":"let closeCode: WebSocketErrorCode","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketcloseframe\/reason","title":"let reason: String?","type":"property"}],"path":"\/documentation\/hummingbirdwsclient\/websocketcloseframe","title":"WebSocketCloseFrame","type":"struct"}],"path":"\/documentation\/hummingbirdwscore","title":"HummingbirdWSCore","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/websocketserverupgrade","title":"WebSocket Server Upgrade","type":"article"},{"title":"Server","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/value\/channel","title":"let channel: Channel","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/value","title":"HTTP1WebSocketUpgradeChannel.Value","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/init(responder:configuration:additionalchannelhandlers:shouldupgrade:)-3mg65","title":"init(responder: (Request, Channel) async throws -> Response, configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) async throws -> ShouldUpgradeResult<WebSocketDataHandler<BasicWebSocketContext>>)","type":"init"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/init(responder:configuration:additionalchannelhandlers:shouldupgrade:)-4k1oo","title":"init(responder: (Request, Channel) async throws -> Response, configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], shouldUpgrade: (HTTPRequest, Channel, Logger) throws -> ShouldUpgradeResult<WebSocketDataHandler<BasicWebSocketContext>>)","type":"init"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/init(responder:websocketresponder:configuration:additionalchannelhandlers:)","title":"init<WSResponder>(responder: (Request, Channel) async throws -> Response, webSocketResponder: WSResponder, configuration: WebSocketServerConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/responder","title":"var responder: (Request, Channel) async throws -> Response","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/handle(value:logger:)","title":"func handle(value: Value, logger: Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/setup(channel:logger:)","title":"func setup(channel: Channel, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/websocketchannelhandler","title":"HTTP1WebSocketUpgradeChannel.WebSocketChannelHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult\/failedupgrade(_:_:)","title":"case failedUpgrade(NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, Logger)","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult\/notupgraded(_:)","title":"case notUpgraded(NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>)","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult\/websocket(_:_:_:)","title":"case websocket(NIOAsyncChannel<WebSocketFrame, WebSocketFrame>, WebSocketChannelHandler, Logger)","type":"case"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/upgraderesult","title":"HTTP1WebSocketUpgradeChannel.UpgradeResult","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/server(configuration:onserverrunning:eventloopgroup:logger:)","title":"func server(configuration: ServerConfiguration, onServerRunning: ((any Channel) async -> Void)?, eventLoopGroup: any EventLoopGroup, logger: Logger) -> any Service","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel\/serverchildchannel-implementations","title":"ServerChildChannel Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwebsocket\/http1websocketupgradechannel","title":"HTTP1WebSocketUpgradeChannel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/init(maxframesize:extensions:autoping:)","title":"init(maxFrameSize: Int, extensions: [WebSocketExtensionFactory], autoPing: AutoPingSetup)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/autoping","title":"var autoPing: AutoPingSetup","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/extensions","title":"var extensions: [any WebSocketExtensionBuilder]","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration\/maxframesize","title":"var maxFrameSize: Int","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketserverconfiguration","title":"WebSocketServerConfiguration","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/autopingsetup\/disabled","title":"static var disabled: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/autopingsetup\/enabled(timeperiod:)","title":"static func enabled(timePeriod: Duration) -> AutoPingSetup","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/autopingsetup","title":"AutoPingSetup","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/shouldupgraderesult\/dontupgrade","title":"case dontUpgrade","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/shouldupgraderesult\/upgrade(_:_:)","title":"case upgrade(HTTPFields, Value)","type":"case"}],"path":"\/documentation\/hummingbirdwebsocket\/shouldupgraderesult","title":"ShouldUpgradeResult","type":"enum"},{"title":"Handler","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdatahandler","title":"WebSocketDataHandler","type":"typealias"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/asynciterator\/next()","title":"func next() async throws -> WebSocketDataFrame?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/asynciterator\/nextmessage(maxsize:)","title":"func nextMessage(maxSize: Int) async throws -> WebSocketMessage?","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/asynciterator","title":"WebSocketInboundStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/messages(maxsize:)","title":"func messages(maxSize: Int) -> WebSocketInboundMessageStream","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/element","title":"WebSocketInboundStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(by:into:)-2oz7m","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(by:into:)-5khjw","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:or:)-5638n","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:or:)-8qsom","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:or:into:)-5y1xx","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/chunks(ofcount:or:into:)-8xvzo","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/compactmap(_:)-45sup","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/compactmap(_:)-5vdwm","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/flatmap(_:)-9gxqc","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/flatmap(_:)-9majl","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/interspersed(every:with:)-3xsnh","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/interspersed(every:with:)-4s0pm","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/interspersed(every:with:)-8jrqq","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/interspersed(every:with:)-92m7x","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/interspersed(every:with:)-93bd","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/map(_:)-33foz","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/map(_:)-3fvp3","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reductions(_:_:)-15z3v","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reductions(_:_:)-5qlqi","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reductions(into:_:)-59glv","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/reductions(into:_:)-8p6sz","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundstream","title":"WebSocketInboundStream","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-3ud30","title":"func callAsFunction(ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/messagewriter\/callasfunction(_:)-m6w1","title":"func callAsFunction(String) async throws","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/messagewriter","title":"WebSocketOutboundWriter.MessageWriter","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/close(_:reason:)","title":"func close(WebSocketErrorCode, reason: String?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/withbinarymessagewriter(_:)","title":"func withBinaryMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/withtextmessagewriter(_:)","title":"func withTextMessageWriter<Value>((inout MessageWriter) async throws -> Value) async throws -> Value","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/write(_:)","title":"func write(OutboundFrame) async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/outboundframe\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/outboundframe\/custom(_:)","title":"case custom(WebSocketFrame)","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/outboundframe\/pong","title":"case pong","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/outboundframe\/text(_:)","title":"case text(String)","type":"case"}],"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter\/outboundframe","title":"WebSocketOutboundWriter.OutboundFrame","type":"enum"}],"path":"\/documentation\/hummingbirdwsclient\/websocketoutboundwriter","title":"WebSocketOutboundWriter","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/data","title":"var data: ByteBuffer","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/fin","title":"var fin: Bool","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.property","title":"var opcode: Opcode","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/binary","title":"case binary","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/continuation","title":"case continuation","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/opcode-swift.enum","title":"WebSocketDataFrame.Opcode","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketdataframe","title":"WebSocketDataFrame","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketcontext\/logger","title":"var logger: Logger","type":"property"}],"path":"\/documentation\/hummingbirdwsclient\/websocketcontext","title":"WebSocketContext","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/basicwebsocketcontext\/allocator","title":"let allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/basicwebsocketcontext\/logger","title":"let logger: Logger","type":"property"}],"path":"\/documentation\/hummingbirdwsclient\/basicwebsocketcontext","title":"BasicWebSocketContext","type":"struct"},{"title":"Messages","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/binary(_:)","title":"case binary(ByteBuffer)","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/text(_:)","title":"case text(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketmessage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketmessage","title":"WebSocketMessage","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/asynciterator","title":"WebSocketInboundMessageStream.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/element","title":"WebSocketInboundMessageStream.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(by:into:)-2c9l9","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(by:into:)-3jy46","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:or:)-6qdcq","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:or:)-75tkg","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-25ssd","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/chunks(ofcount:or:into:)-4tobq","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/compactmap(_:)-4927f","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/compactmap(_:)-9efdw","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/flatmap(_:)-213v0","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/flatmap(_:)-9lrf5","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/interspersed(every:with:)-2bgur","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/interspersed(every:with:)-4a2gq","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/interspersed(every:with:)-4nrgv","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/interspersed(every:with:)-7qbak","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/interspersed(every:with:)-91qal","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/map(_:)-7vdu3","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/map(_:)-hztx","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reductions(_:_:)-1s19","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reductions(_:_:)-2cfx2","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reductions(into:_:)-5livy","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/reductions(into:_:)-i803","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketinboundmessagestream","title":"WebSocketInboundMessageStream","type":"struct"},{"title":"Router","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketcontextfromrouter\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketcontextfromrouter\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketcontextfromrouter\/request","title":"let request: Request","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketcontextfromrouter\/requestcontext","title":"let requestContext: Context","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketcontextfromrouter","title":"WebSocketContextFromRouter","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext\/websocket","title":"var webSocket: WebSocketHandlerReference<Self>","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","title":"WebSocketRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websockethandlerreference\/init()","title":"init()","type":"init"}],"path":"\/documentation\/hummingbirdwebsocket\/websockethandlerreference","title":"WebSocketHandlerReference","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/corecontext","title":"var coreContext: CoreRequestContext","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/websocket","title":"let webSocket: WebSocketHandlerReference<`Self`>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/parameters","title":"var parameters: Parameters","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/requestdecoder","title":"var requestDecoder: JSONDecoder","type":"property"},{"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/responseencoder","title":"var responseEncoder: JSONEncoder","type":"property"}],"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext\/baserequestcontext-implementations","title":"BaseRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","title":"BasicWebSocketRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware\/init(shouldupgrade:onupgrade:)","title":"init(shouldUpgrade: (Request, Context) async throws -> RouterShouldUpgrade, onUpgrade: WebSocketDataHandler<WebSocketContextFromRouter<Context>>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware\/handle(_:context:next:)","title":"func handle(Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response","type":"method"}],"path":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware","title":"WebSocketUpgradeMiddleware","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwebsocket\/routershouldupgrade\/dontupgrade","title":"case dontUpgrade","type":"case"},{"path":"\/documentation\/hummingbirdwebsocket\/routershouldupgrade\/upgrade(_:)","title":"case upgrade(HTTPFields)","type":"case"}],"path":"\/documentation\/hummingbirdwebsocket\/routershouldupgrade","title":"RouterShouldUpgrade","type":"enum"},{"title":"Extensions","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextension\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextension\/processframetosend(_:context:)","title":"func processFrameToSend(WebSocketFrame, context: some WebSocketContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextension\/processreceivedframe(_:context:)","title":"func processReceivedFrame(WebSocketFrame, context: some WebSocketContext) async throws -> WebSocketFrame","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextension\/shutdown()","title":"func shutdown() async","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextension","title":"WebSocketExtension","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/clientextension(from:)-4o1by","title":"func clientExtension(from: [WebSocketExtensionHTTPParameters]) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/clientextension(from:)-4o1by","title":"func clientExtension(from: [WebSocketExtensionHTTPParameters]) throws -> (any WebSocketExtension)?","type":"method"}],"title":"WebSocketExtensionBuilder Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/clientextension(from:)-5b3x5","title":"func clientExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/clientrequestheader()","title":"func clientRequestHeader() -> String","type":"method"},{"children":[{"title":"WebSocketExtensionBuilder Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/serverextension(from:)-3ekyh","title":"func serverExtension(from: WebSocketExtensionHTTPParameters) throws -> (any WebSocketExtension)?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/serverreponseheader(to:)","title":"func serverReponseHeader(to: WebSocketExtensionHTTPParameters) -> String?","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/serverresponseheader(to:)","title":"func serverResponseHeader(to: [WebSocketExtensionHTTPParameters]) -> String?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder\/name","title":"static var name: String","type":"property"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionbuilder","title":"WebSocketExtensionBuilder","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameters","title":"let parameters: [String : Parameter]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parseheaders(_:)","title":"static func parseHeaders(HTTPFields) -> [WebSocketExtensionHTTPParameters]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/null","title":"case null","type":"case"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/value(_:)","title":"case value(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/integer","title":"var integer: Int?","type":"property"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/optional","title":"var optional: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/parameter","title":"WebSocketExtensionHTTPParameters.Parameter","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionhttpparameters","title":"WebSocketExtensionHTTPParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionfactory\/init(_:)","title":"init(() -> any WebSocketExtensionBuilder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionfactory\/build","title":"let build: () -> any WebSocketExtensionBuilder","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(clientMaxWindow: Int?, clientNoContextTakeover: Bool, serverMaxWindow: Int?, serverNoContextTakeover: Bool, compressionLevel: Int?, memoryLevel: Int?, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"},{"path":"\/documentation\/hummingbirdwsclient\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","title":"static func perMessageDeflate(maxWindow: Int?, noContextTakeover: Bool, maxDecompressedFrameSize: Int, minFrameSizeToCompress: Int) -> WebSocketExtensionFactory","type":"method"}],"path":"\/documentation\/hummingbirdwsclient\/websocketextensionfactory","title":"WebSocketExtensionFactory","type":"struct"}],"path":"\/documentation\/hummingbirdwebsocket","title":"HummingbirdWebSocket","type":"module"},{"children":[{"title":"Additional Features","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/lambdas","title":"Lambdas","type":"article"},{"path":"\/documentation\/hummingbird\/pragmas","title":"Pragmas\/Configuration variables","type":"article"},{"path":"\/documentation\/hummingbird\/templateinheritance","title":"Template Inheritance","type":"article"},{"path":"\/documentation\/hummingbird\/transforms","title":"Transforms","type":"article"},{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/mustachesyntax","title":"Mustache Syntax","type":"article"},{"title":"Template Library","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelibrary\/parsererror\/context","title":"let context: MustacheParserContext","type":"property"},{"path":"\/documentation\/mustache\/mustachelibrary\/parsererror\/error","title":"let error: Error","type":"property"},{"path":"\/documentation\/mustache\/mustachelibrary\/parsererror\/filename","title":"let filename: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelibrary\/parsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mustache\/mustachelibrary\/parsererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mustache\/mustachelibrary\/parsererror","title":"MustacheLibrary.ParserError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelibrary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mustache\/mustachelibrary\/init(directory:withextension:)","title":"init(directory: String, withExtension: String) async throws","type":"init"},{"path":"\/documentation\/mustache\/mustachelibrary\/init(templates:)","title":"init(templates: [String : MustacheTemplate])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelibrary\/gettemplate(named:)","title":"func getTemplate(named: String) -> MustacheTemplate?","type":"method"},{"path":"\/documentation\/mustache\/mustachelibrary\/register(_:named:)-3g2vh","title":"func register(MustacheTemplate, named: String)","type":"method"},{"path":"\/documentation\/mustache\/mustachelibrary\/register(_:named:)-5yzy0","title":"func register(String, named: String) throws","type":"method"},{"path":"\/documentation\/mustache\/mustachelibrary\/render(_:withtemplate:)","title":"func render(Any, withTemplate: String) -> String?","type":"method"}],"path":"\/documentation\/mustache\/mustachelibrary","title":"MustacheLibrary","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/parsererror\/context","title":"let context: MustacheParserContext","type":"property"},{"path":"\/documentation\/mustache\/mustachetemplate\/parsererror\/error","title":"let error: Swift.Error","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/parsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mustache\/mustachetemplate\/parsererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mustache\/mustachetemplate\/parsererror","title":"MustacheTemplate.ParserError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/init(string:)","title":"init(string: String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/render(_:library:)","title":"func render(Any, library: MustacheLibrary?) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/expectedsectionend","title":"case expectedSectionEnd","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/illegaltokeninsideinheritsection","title":"case illegalTokenInsideInheritSection","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/invalidconfigvariablesyntax","title":"case invalidConfigVariableSyntax","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/invalidsetdelimiter","title":"case invalidSetDelimiter","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/sectionclosenameincorrect","title":"case sectionCloseNameIncorrect","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/textinsideinheritsection","title":"case textInsideInheritSection","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/transformappliedtoinheritancesection","title":"case transformAppliedToInheritanceSection","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/unfinishedname","title":"case unfinishedName","type":"case"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/unrecognisedconfigvariable","title":"case unrecognisedConfigVariable","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mustache\/mustachetemplate\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetemplate\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mustache\/mustachetemplate\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mustache\/mustachetemplate\/error","title":"MustacheTemplate.Error","type":"enum"}],"path":"\/documentation\/mustache\/mustachetemplate","title":"MustacheTemplate","type":"struct"},{"title":"Rendering","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachecustomrenderable\/isnull","title":"var isNull: Bool","type":"property"},{"path":"\/documentation\/mustache\/mustachecustomrenderable\/rendertext","title":"var renderText: String","type":"property"}],"path":"\/documentation\/mustache\/mustachecustomrenderable","title":"MustacheCustomRenderable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustacheparent\/child(named:)","title":"func child(named: String) -> Any?","type":"method"}],"path":"\/documentation\/mustache\/mustacheparent","title":"MustacheParent","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachetransformable\/transform(_:)","title":"func transform(String) -> Any?","type":"method"}],"path":"\/documentation\/mustache\/mustachetransformable","title":"MustacheTransformable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelambda\/init(_:)","title":"init(Callback)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachelambda\/callback","title":"MustacheLambda.Callback","type":"typealias"}],"path":"\/documentation\/mustache\/mustachelambda","title":"MustacheLambda","type":"struct"},{"title":"Content Types","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachecontenttype\/escapetext(_:)","title":"func escapeText(String) -> String","type":"method"}],"path":"\/documentation\/mustache\/mustachecontenttype","title":"MustacheContentType","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustachecontenttypes\/register(_:named:)","title":"static func register(MustacheContentType, named: String)","type":"method"}],"path":"\/documentation\/mustache\/mustachecontenttypes","title":"MustacheContentTypes","type":"enum"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mustache\/mustacheparsercontext\/columnnumber","title":"let columnNumber: Int","type":"property"},{"path":"\/documentation\/mustache\/mustacheparsercontext\/line","title":"let line: String","type":"property"},{"path":"\/documentation\/mustache\/mustacheparsercontext\/linenumber","title":"let lineNumber: Int","type":"property"}],"path":"\/documentation\/mustache\/mustacheparsercontext","title":"MustacheParserContext","type":"struct"}],"path":"\/documentation\/mustache","title":"Mustache","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}