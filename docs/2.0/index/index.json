{"interfaceLanguages":{"swift":[{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/migratingtov2","title":"Migrating to Hummingbird v2","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/init(context:)","title":"init(context: Context.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/middlewares","title":"let middlewares: HBMiddlewareGroup<Context>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/add(_:method:responder:)","title":"func add(String, method: HTTPRequest.Method, responder: any HBResponder<Context>)","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/buildresponder()","title":"func buildResponder() -> HBRouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-1zuke","title":"func on(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/delete(_:options:use:)-3bg4","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/delete(_:options:use:)-6j6n4","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/get(_:options:use:)-1t86c","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/get(_:options:use:)-8uimo","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/head(_:options:use:)-52e8x","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/head(_:options:use:)-8q4p","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-2bpfn","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/patch(_:options:use:)-5su56","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/patch(_:options:use:)-66grh","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/post(_:options:use:)-3jkdt","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/post(_:options:use:)-vtrq","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/put(_:options:use:)-k0xp","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/put(_:options:use:)-vtjg","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbrouter\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbrouter","title":"HBRouter","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/add(middleware:)","title":"func add(middleware: any HBMiddlewareProtocol<Context>) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/on(_:method:options:use:)-7ivlv","title":"func on(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> HBRouterGroup<Context>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/delete(_:options:use:)-3wuof","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/delete(_:options:use:)-7g9l1","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/get(_:options:use:)-2iowr","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/get(_:options:use:)-9a0j9","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/head(_:options:use:)-95hb9","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/head(_:options:use:)-9n7nk","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/on(_:method:options:use:)-8h4ri","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/patch(_:options:use:)-3kzzm","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/patch(_:options:use:)-9qpgl","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/post(_:options:use:)-3jf66","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/post(_:options:use:)-9phy4","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/put(_:options:use:)-1gzxh","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/put(_:options:use:)-2vpsj","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbroutergroup\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbroutergroup","title":"HBRouterGroup","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/context","title":"Context","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/delete(_:options:use:)-6jbt0","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/delete(_:options:use:)-8620c","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/get(_:options:use:)-3e2pe","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/get(_:options:use:)-8ajnt","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/head(_:options:use:)-3hjgz","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/head(_:options:use:)-55k71","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbroutermethods\/on(_:method:options:use:)-9rvew","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"}],"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbroutermethods\/on(_:method:options:use:)-5ck4h","title":"func on<Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/patch(_:options:use:)-3srzb","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/patch(_:options:use:)-6qiiv","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/post(_:options:use:)-262iy","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/post(_:options:use:)-7n4q0","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/put(_:options:use:)-7wfkp","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/put(_:options:use:)-8koj5","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbroutermethods","title":"HBRouterMethods","type":"protocol"}],"path":"\/documentation\/hummingbird\/router","title":"Router","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbrequestcontext\/init(channel:logger:)-80zpw","title":"init(channel: Channel, logger: Logger)","type":"init"}],"title":"HBRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbrequestcontext\/init(channel:logger:)-1xy10","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbird\/hbrequestcontext","title":"HBRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/init(allocator:logger:)","title":"init(allocator: ByteBufferAllocator, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/corecontext","title":"var coreContext: HBCoreRequestContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/parameters","title":"var parameters: HBParameters","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/requestdecoder","title":"var requestDecoder: HBRequestDecoder","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/responseencoder","title":"var responseEncoder: HBResponseEncoder","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/threadpool","title":"var threadPool: NIOThreadPool","type":"property"}],"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/hbbaserequestcontext-implementations","title":"HBBaseRequestContext Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/hbrequestcontext-implementations","title":"HBRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbbasicrequestcontext","title":"HBBasicRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/init(context:)","title":"init(context: Context.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/middlewares","title":"let middlewares: HBMiddlewareGroup<Context>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/add(_:method:responder:)","title":"func add(String, method: HTTPRequest.Method, responder: any HBResponder<Context>)","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/buildresponder()","title":"func buildResponder() -> HBRouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-1zuke","title":"func on(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/delete(_:options:use:)-3bg4","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/delete(_:options:use:)-6j6n4","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/get(_:options:use:)-1t86c","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/get(_:options:use:)-8uimo","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/head(_:options:use:)-52e8x","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/head(_:options:use:)-8q4p","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-2bpfn","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/patch(_:options:use:)-5su56","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/patch(_:options:use:)-66grh","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/post(_:options:use:)-3jkdt","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/post(_:options:use:)-vtrq","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/put(_:options:use:)-k0xp","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/put(_:options:use:)-vtjg","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbrouter\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbrouter","title":"HBRouter","type":"class"}],"path":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequestdecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: HBRequest, context: some HBBaseRequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbird\/hbrequestdecoder","title":"HBRequestDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponseencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: HBRequest, context: some HBBaseRequestContext) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponseencoder","title":"HBResponseEncoder","type":"protocol"}],"path":"\/documentation\/hummingbird\/encodinganddecoding","title":"Encoding and Decoding","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/init(_:)","title":"init(HTTPResponse.Status)","type":"init"},{"path":"\/documentation\/hummingbird\/hbhttperror\/init(_:message:)","title":"init(HTTPResponse.Status, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/body","title":"let body: String?","type":"property"},{"path":"\/documentation\/hummingbird\/hbhttperror\/headers","title":"let headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbhttperror\/status","title":"let status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbhttperror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbhttperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbhttperror\/hbhttpresponseerror-implementations","title":"HBHTTPResponseError Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbhttperror","title":"HBHTTPError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbhttpresponseerror","title":"HBHTTPResponseError","type":"protocol"}],"path":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hblogrequestsmiddleware\/init(_:includeheaders:)","title":"init(Logger.Level, includeHeaders: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hblogrequestsmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hblogrequestsmiddleware","title":"HBLogRequestsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmetricsmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmetricsmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbmetricsmiddleware","title":"HBMetricsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbtracingmiddleware\/init(recordingheaders:attributes:)","title":"init(recordingHeaders: some Collection<HTTPField.Name>, attributes: SpanAttributes?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbtracingmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbtracingmiddleware","title":"HBTracingMiddleware","type":"struct"}],"path":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbpersistdriver\/shutdown()-1ssh","title":"func shutdown() async throws","type":"method"}],"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbpersistdriver\/shutdown()-9ump6","title":"func shutdown() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/hbpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbpersistdriver","title":"HBPersistDriver","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/hbpersisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbpersisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbpersisterror","title":"HBPersistError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/init(_:)","title":"init(C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbmemorypersistdriver","title":"HBMemoryPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/init(redisconnectionpoolservice:)","title":"init(redisConnectionPoolService: HBRedisConnectionPoolService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver","title":"HBRedisPersistDriver","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/init(fluent:databaseid:tidyupfrequency:)","title":"init(fluent: HBFluent, databaseID: DatabaseID?, tidyUpFrequency: Duration) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver","title":"HBFluentPersistDriver","type":"class"}],"path":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"symbol"},{"path":"\/documentation\/hummingbird\/testing","title":"Testing","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:context:)-c4v9","title":"func authenticate(request: HBRequest, context: Context) async throws -> Value?","type":"method"}],"title":"HBAuthenticator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:context:)-5xiri","title":"func authenticate(request: HBRequest, context: Context) async throws -> Value?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbauthenticator","title":"HBAuthenticator","type":"protocol"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticatable","title":"HBAuthenticatable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/init(_:)","title":"init(Auth.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","title":"IsAuthenticatedMiddleware","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol\/auth","title":"var auth: HBLoginCache","type":"property"}],"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","title":"HBAuthRequestContextProtocol","type":"protocol"}],"path":"\/documentation\/hummingbird\/authenticators","title":"Authenticators","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/sessiondoesnotexist","title":"static var sessionDoesNotExist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error","title":"HBSessionStorage.Error","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/init(_:sessioncookie:)","title":"init(any HBPersistDriver, sessionCookie: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/delete(request:)","title":"func delete(request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/load(as:request:)","title":"func load<Session>(as: Session.Type, request: HBRequest) async throws -> Session?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/save(session:expiresin:)","title":"func save<Session>(session: Session, expiresIn: Duration) async throws -> HBCookie","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/update(session:expiresin:request:)","title":"func update<Session>(session: Session, expiresIn: Duration, request: HBRequest) async throws","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage","title":"HBSessionStorage","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/session","title":"Session","type":"associatedtype"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/sessionstorage","title":"var sessionStorage: HBSessionStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/getvalue(from:request:context:)","title":"func getValue(from: Session, request: HBRequest, context: Context) async throws -> Value?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","title":"HBSessionAuthenticator","type":"protocol"}],"path":"\/documentation\/hummingbird\/sessions","title":"Sessions","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/init(secret:length:hashfunction:)","title":"init(secret: String, length: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/secret","title":"let secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/compute(counter:)","title":"func compute(counter: UInt64) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hotp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hotp","title":"HOTP","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/init(secret:length:timestep:hashfunction:)","title":"init(secret: String, length: Int, timeStep: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/secret","title":"let secret: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/timestep","title":"let timeStep: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/compute(date:)","title":"func compute(date: Date) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/totp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/totp","title":"TOTP","type":"struct"}],"path":"\/documentation\/hummingbird\/onetimepasswords","title":"One Time Passwords","type":"symbol"},{"title":"Tutorials","type":"groupMarker"},{"children":[{"title":"Application setup","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-1-setup","title":"Setup a Hummingbird application.","type":"project"},{"title":"API Setup","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-2-api","title":"Add your application API","type":"project"},{"title":"Testing your application","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-3-testing","title":"Testing your application","type":"project"},{"title":"Store Todos in a database","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-4-postgres","title":"Use PostgresNIO to store your Todos in a Postgres database","type":"project"}],"path":"\/tutorials\/todos","title":"Build a Todos application.","type":"overview"}],"path":"\/documentation\/index","title":"Hummingbird","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/migratingtov2","title":"Migrating to Hummingbird v2","type":"article"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/init(context:)","title":"init(context: Context.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/middlewares","title":"let middlewares: HBMiddlewareGroup<Context>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/add(_:method:responder:)","title":"func add(String, method: HTTPRequest.Method, responder: any HBResponder<Context>)","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/buildresponder()","title":"func buildResponder() -> HBRouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-1zuke","title":"func on(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/delete(_:options:use:)-3bg4","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/delete(_:options:use:)-6j6n4","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/get(_:options:use:)-1t86c","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/get(_:options:use:)-8uimo","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/head(_:options:use:)-52e8x","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/head(_:options:use:)-8q4p","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-2bpfn","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/patch(_:options:use:)-5su56","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/patch(_:options:use:)-66grh","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/post(_:options:use:)-3jkdt","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/post(_:options:use:)-vtrq","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/put(_:options:use:)-k0xp","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/put(_:options:use:)-vtjg","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbrouter\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbrouter","title":"HBRouter","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/add(middleware:)","title":"func add(middleware: any HBMiddlewareProtocol<Context>) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/on(_:method:options:use:)-7ivlv","title":"func on(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> HBRouterGroup<Context>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/delete(_:options:use:)-3wuof","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/delete(_:options:use:)-7g9l1","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/get(_:options:use:)-2iowr","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/get(_:options:use:)-9a0j9","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/head(_:options:use:)-95hb9","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/head(_:options:use:)-9n7nk","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/on(_:method:options:use:)-8h4ri","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/patch(_:options:use:)-3kzzm","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/patch(_:options:use:)-9qpgl","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/post(_:options:use:)-3jf66","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/post(_:options:use:)-9phy4","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/put(_:options:use:)-1gzxh","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/put(_:options:use:)-2vpsj","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbroutergroup\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbroutergroup","title":"HBRouterGroup","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/context","title":"Context","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/delete(_:options:use:)-6jbt0","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/delete(_:options:use:)-8620c","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/get(_:options:use:)-3e2pe","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/get(_:options:use:)-8ajnt","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/head(_:options:use:)-3hjgz","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/head(_:options:use:)-55k71","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbroutermethods\/on(_:method:options:use:)-9rvew","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"}],"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbroutermethods\/on(_:method:options:use:)-5ck4h","title":"func on<Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/patch(_:options:use:)-3srzb","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/patch(_:options:use:)-6qiiv","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/post(_:options:use:)-262iy","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/post(_:options:use:)-7n4q0","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/put(_:options:use:)-7wfkp","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/put(_:options:use:)-8koj5","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbroutermethods","title":"HBRouterMethods","type":"protocol"}],"path":"\/documentation\/hummingbird\/router","title":"Router","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbrequestcontext\/init(channel:logger:)-80zpw","title":"init(channel: Channel, logger: Logger)","type":"init"}],"title":"HBRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbrequestcontext\/init(channel:logger:)-1xy10","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbird\/hbrequestcontext","title":"HBRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/init(allocator:logger:)","title":"init(allocator: ByteBufferAllocator, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/corecontext","title":"var coreContext: HBCoreRequestContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/parameters","title":"var parameters: HBParameters","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/requestdecoder","title":"var requestDecoder: HBRequestDecoder","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/responseencoder","title":"var responseEncoder: HBResponseEncoder","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/threadpool","title":"var threadPool: NIOThreadPool","type":"property"}],"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/hbbaserequestcontext-implementations","title":"HBBaseRequestContext Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/hbrequestcontext-implementations","title":"HBRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbbasicrequestcontext","title":"HBBasicRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/init(context:)","title":"init(context: Context.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/middlewares","title":"let middlewares: HBMiddlewareGroup<Context>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/add(_:method:responder:)","title":"func add(String, method: HTTPRequest.Method, responder: any HBResponder<Context>)","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/buildresponder()","title":"func buildResponder() -> HBRouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-1zuke","title":"func on(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/delete(_:options:use:)-3bg4","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/delete(_:options:use:)-6j6n4","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/get(_:options:use:)-1t86c","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/get(_:options:use:)-8uimo","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/head(_:options:use:)-52e8x","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/head(_:options:use:)-8q4p","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-2bpfn","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/patch(_:options:use:)-5su56","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/patch(_:options:use:)-66grh","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/post(_:options:use:)-3jkdt","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/post(_:options:use:)-vtrq","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/put(_:options:use:)-k0xp","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/put(_:options:use:)-vtjg","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbrouter\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbrouter","title":"HBRouter","type":"class"}],"path":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequestdecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: HBRequest, context: some HBBaseRequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbird\/hbrequestdecoder","title":"HBRequestDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponseencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: HBRequest, context: some HBBaseRequestContext) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponseencoder","title":"HBResponseEncoder","type":"protocol"}],"path":"\/documentation\/hummingbird\/encodinganddecoding","title":"Encoding and Decoding","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/init(_:)","title":"init(HTTPResponse.Status)","type":"init"},{"path":"\/documentation\/hummingbird\/hbhttperror\/init(_:message:)","title":"init(HTTPResponse.Status, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/body","title":"let body: String?","type":"property"},{"path":"\/documentation\/hummingbird\/hbhttperror\/headers","title":"let headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbhttperror\/status","title":"let status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbhttperror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbhttperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbhttperror\/hbhttpresponseerror-implementations","title":"HBHTTPResponseError Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbhttperror","title":"HBHTTPError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbhttpresponseerror","title":"HBHTTPResponseError","type":"protocol"}],"path":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hblogrequestsmiddleware\/init(_:includeheaders:)","title":"init(Logger.Level, includeHeaders: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hblogrequestsmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hblogrequestsmiddleware","title":"HBLogRequestsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmetricsmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmetricsmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbmetricsmiddleware","title":"HBMetricsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbtracingmiddleware\/init(recordingheaders:attributes:)","title":"init(recordingHeaders: some Collection<HTTPField.Name>, attributes: SpanAttributes?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbtracingmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbtracingmiddleware","title":"HBTracingMiddleware","type":"struct"}],"path":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbpersistdriver\/shutdown()-1ssh","title":"func shutdown() async throws","type":"method"}],"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbpersistdriver\/shutdown()-9ump6","title":"func shutdown() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/hbpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbpersistdriver","title":"HBPersistDriver","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/hbpersisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbpersisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbpersisterror","title":"HBPersistError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/init(_:)","title":"init(C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbmemorypersistdriver","title":"HBMemoryPersistDriver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/init(redisconnectionpoolservice:)","title":"init(redisConnectionPoolService: HBRedisConnectionPoolService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver","title":"HBRedisPersistDriver","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/init(fluent:databaseid:tidyupfrequency:)","title":"init(fluent: HBFluent, databaseID: DatabaseID?, tidyUpFrequency: Duration) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver","title":"HBFluentPersistDriver","type":"class"}],"path":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"symbol"},{"path":"\/documentation\/hummingbird\/testing","title":"Testing","type":"article"},{"title":"Tutorials","type":"groupMarker"},{"children":[{"title":"Application setup","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-1-setup","title":"Setup a Hummingbird application.","type":"project"},{"title":"API Setup","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-2-api","title":"Add your application API","type":"project"},{"title":"Testing your application","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-3-testing","title":"Testing your application","type":"project"},{"title":"Store Todos in a database","type":"groupMarker"},{"path":"\/tutorials\/hummingbird\/todos-4-postgres","title":"Use PostgresNIO to store your Todos in a Postgres database","type":"project"}],"path":"\/tutorials\/todos","title":"Build a Todos application.","type":"overview"},{"title":"Application","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplication\/init(responder:server:configuration:onserverrunning:eventloopgroupprovider:logger:)","title":"init(responder: Responder, server: HBHTTPChannelBuilder<ChildChannel>, configuration: HBApplicationConfiguration, onServerRunning: (Channel) async -> Void, eventLoopGroupProvider: EventLoopGroupProvider, logger: Logger?)","type":"init"},{"path":"\/documentation\/hummingbird\/hbapplication\/init(router:server:configuration:onserverrunning:eventloopgroupprovider:logger:)","title":"init<ResponderBuilder>(router: ResponderBuilder, server: HBHTTPChannelBuilder<ChildChannel>, configuration: HBApplicationConfiguration, onServerRunning: (Channel) async -> Void, eventLoopGroupProvider: EventLoopGroupProvider, logger: Logger?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplication\/configuration","title":"var configuration: HBApplicationConfiguration","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplication\/eventloopgroup","title":"let eventLoopGroup: EventLoopGroup","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplication\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplication\/processesrunbeforeserverstart","title":"var processesRunBeforeServerStart: [() async throws -> Void]","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplication\/responder-swift.property","title":"let responder: Responder","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplication\/server","title":"let server: HBHTTPChannelBuilder<ChildChannel>","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplication\/services","title":"var services: [any Service]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplication\/addservices(_:)","title":"func addServices(any Service...)","type":"method"},{"path":"\/documentation\/hummingbird\/hbapplication\/buildresponder()","title":"func buildResponder() async throws -> Responder","type":"method"},{"path":"\/documentation\/hummingbird\/hbapplication\/onserverrunning(_:)","title":"func onServerRunning(Channel) async","type":"method"},{"path":"\/documentation\/hummingbird\/hbapplication\/runbeforeserverstart(_:)","title":"func runBeforeServerStart(() async throws -> Void)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplication\/childchannel","title":"HBApplication.ChildChannel","type":"typealias"},{"path":"\/documentation\/hummingbird\/hbapplication\/context","title":"HBApplication.Context","type":"typealias"},{"path":"\/documentation\/hummingbird\/hbapplication\/responder-swift.typealias","title":"HBApplication.Responder","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplication\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbapplication\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplication\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbapplication\/runservice(gracefulshutdownsignals:)","title":"func runService(gracefulShutdownSignals: [UnixSignal]) async throws","type":"method"}],"path":"\/documentation\/hummingbird\/hbapplication\/hbapplicationprotocol-implementations","title":"HBApplicationProtocol Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbapplication","title":"HBApplication","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/childchannel","title":"ChildChannel","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/responder-swift.associatedtype","title":"Responder","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/configuration-3x06y","title":"var configuration: HBApplicationConfiguration","type":"property"}],"title":"HBApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/configuration-9zgf2","title":"var configuration: HBApplicationConfiguration","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/eventloopgroup-43lsw","title":"var eventLoopGroup: EventLoopGroup","type":"property"}],"title":"HBApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/eventloopgroup-2765w","title":"var eventLoopGroup: EventLoopGroup","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/logger-ir2o","title":"var logger: Logger","type":"property"}],"title":"HBApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/logger-7nhk6","title":"var logger: Logger","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/processesrunbeforeserverstart-1hb1d","title":"var processesRunBeforeServerStart: [() async throws -> Void]","type":"property"}],"title":"HBApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/processesrunbeforeserverstart-3nv5a","title":"var processesRunBeforeServerStart: [() async throws -> Void]","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/responder-swift.property","title":"var responder: Responder","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/server-2g555","title":"var server: HBHTTPChannelBuilder<HTTP1Channel>","type":"property"}],"title":"HBApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/server-2pvsc","title":"var server: HBHTTPChannelBuilder<ChildChannel>","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/services-2ottg","title":"var services: [any Service]","type":"property"}],"title":"HBApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/services-77oyf","title":"var services: [any Service]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/onserverrunning(_:)-2buhc","title":"func onServerRunning(Channel) async","type":"method"}],"title":"HBApplicationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/onserverrunning(_:)-5q8bt","title":"func onServerRunning(Channel) async","type":"method"},{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/runservice(gracefulshutdownsignals:)","title":"func runService(gracefulShutdownSignals: [UnixSignal]) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/context","title":"HBApplicationProtocol.Context","type":"typealias"}],"path":"\/documentation\/hummingbird\/hbapplicationprotocol","title":"HBApplicationProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplicationconfiguration\/init(address:servername:backlog:reuseaddress:threadpoolsize:nohttpserver:)","title":"init(address: HBBindAddress, serverName: String?, backlog: Int, reuseAddress: Bool, threadPoolSize: Int, noHTTPServer: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplicationconfiguration\/address","title":"let address: HBBindAddress","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplicationconfiguration\/backlog","title":"let backlog: Int","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplicationconfiguration\/nohttpserver","title":"let noHTTPServer: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplicationconfiguration\/reuseaddress","title":"let reuseAddress: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/hbapplicationconfiguration\/servername","title":"let serverName: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbapplicationconfiguration\/with(address:servername:backlog:reuseaddress:)","title":"func with(address: HBBindAddress?, serverName: String?, backlog: Int?, reuseAddress: Bool?) -> HBApplicationConfiguration","type":"method"}],"path":"\/documentation\/hummingbird\/hbapplicationconfiguration","title":"HBApplicationConfiguration","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/eventloopgroupprovider\/shared(_:)","title":"case shared(EventLoopGroup)","type":"case"},{"path":"\/documentation\/hummingbird\/eventloopgroupprovider\/singleton","title":"case singleton","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/eventloopgroupprovider\/eventloopgroup","title":"var eventLoopGroup: EventLoopGroup","type":"property"}],"path":"\/documentation\/hummingbird\/eventloopgroupprovider","title":"EventLoopGroupProvider","type":"enum"},{"title":"Router","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/init(context:)","title":"init(context: Context.Type)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/middlewares","title":"let middlewares: HBMiddlewareGroup<Context>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/add(_:method:responder:)","title":"func add(String, method: HTTPRequest.Method, responder: any HBResponder<Context>)","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/buildresponder()","title":"func buildResponder() -> HBRouterResponder<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-1zuke","title":"func on(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouter\/delete(_:options:use:)-3bg4","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/delete(_:options:use:)-6j6n4","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/get(_:options:use:)-1t86c","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/get(_:options:use:)-8uimo","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/head(_:options:use:)-52e8x","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/head(_:options:use:)-8q4p","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-2bpfn","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/patch(_:options:use:)-5su56","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/patch(_:options:use:)-66grh","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/post(_:options:use:)-3jkdt","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/post(_:options:use:)-vtrq","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/put(_:options:use:)-k0xp","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbrouter\/put(_:options:use:)-vtjg","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbrouter\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbrouter","title":"HBRouter","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/add(middleware:)","title":"func add(middleware: any HBMiddlewareProtocol<Context>) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/on(_:method:options:use:)-7ivlv","title":"func on(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> HBRouterGroup<Context>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/delete(_:options:use:)-3wuof","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/delete(_:options:use:)-7g9l1","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/get(_:options:use:)-2iowr","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/get(_:options:use:)-9a0j9","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/head(_:options:use:)-95hb9","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/head(_:options:use:)-9n7nk","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/on(_:method:options:use:)-8h4ri","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/patch(_:options:use:)-3kzzm","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/patch(_:options:use:)-9qpgl","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/post(_:options:use:)-3jf66","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/post(_:options:use:)-9phy4","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/put(_:options:use:)-1gzxh","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutergroup\/put(_:options:use:)-2vpsj","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbroutergroup\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbroutergroup","title":"HBRouterGroup","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/context","title":"Context","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/delete(_:options:use:)-6jbt0","title":"func delete<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/delete(_:options:use:)-8620c","title":"func delete(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/get(_:options:use:)-3e2pe","title":"func get<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/get(_:options:use:)-8ajnt","title":"func get(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/group(_:)","title":"func group(String) -> HBRouterGroup<Context>","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/head(_:options:use:)-3hjgz","title":"func head(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/head(_:options:use:)-55k71","title":"func head<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbroutermethods\/on(_:method:options:use:)-9rvew","title":"func on<Handler, Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"}],"title":"HBRouterMethods Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbroutermethods\/on(_:method:options:use:)-5ck4h","title":"func on<Output>(String, method: HTTPRequest.Method, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> Output) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/patch(_:options:use:)-3srzb","title":"func patch(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/patch(_:options:use:)-6qiiv","title":"func patch<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/post(_:options:use:)-262iy","title":"func post(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/post(_:options:use:)-7n4q0","title":"func post<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/put(_:options:use:)-7wfkp","title":"func put(String, options: HBRouterMethodOptions, use: (HBRequest, Context) async throws -> some HBResponseGenerator) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethods\/put(_:options:use:)-8koj5","title":"func put<Handler, Output>(String, options: HBRouterMethodOptions, use: Handler.Type) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbroutermethods","title":"HBRouterMethods","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/init(_:)-2dg71","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/init(_:)-43eod","title":"init<Source>(Source) async rethrows","type":"init"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/hummingbird\/hbroutermethodoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbroutermethodoptions","title":"HBRouterMethodOptions","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutehandler\/output","title":"Output","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutehandler\/init(from:context:)","title":"init(from: HBRequest, context: some HBBaseRequestContext) async throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbroutehandler\/handle(context:)","title":"func handle(context: some HBBaseRequestContext) async throws -> Output","type":"method"}],"path":"\/documentation\/hummingbird\/hbroutehandler","title":"HBRouteHandler","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponder\/context","title":"Context","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponder\/respond(to:context:)","title":"func respond(to: HBRequest, context: Context) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponder","title":"HBResponder","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcallbackresponder\/init(callback:)","title":"init(callback: (HBRequest, Context) async throws -> HBResponse)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcallbackresponder\/respond(to:context:)","title":"func respond(to: HBRequest, context: Context) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbcallbackresponder","title":"HBCallbackResponder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/endpointpath\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/endpointpath\/value","title":"var value: String?","type":"property"}],"path":"\/documentation\/hummingbird\/endpointpath","title":"EndpointPath","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbird\/routerpath\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/components","title":"let components: [Element]","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/description","title":"var description: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/capture(_:)","title":"case capture(Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/null","title":"case null","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/path(_:)","title":"case path(Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/prefixcapture(suffix:parameter:)","title":"case prefixCapture(suffix: Substring, parameter: Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/prefixwildcard(_:)","title":"case prefixWildcard(Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/recursivewildcard","title":"case recursiveWildcard","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/suffixcapture(prefix:parameter:)","title":"case suffixCapture(prefix: Substring, parameter: Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/suffixwildcard(_:)","title":"case suffixWildcard(Substring)","type":"case"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/wildcard","title":"case wildcard","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/element\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/routerpath\/element\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routerpath\/element","title":"RouterPath.Element","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/startindex","title":"var startIndex: Int","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/map(_:)-5sp8a","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/subscript(_:)","title":"subscript(Int) -> RouterPath.Element","type":"subscript"}],"path":"\/documentation\/hummingbird\/routerpath\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbird\/routerpath\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbird\/routerpath\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/async","title":"var async: AsyncSyncSequence<Self>","type":"property"},{"path":"\/documentation\/hummingbird\/routerpath\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/routerpath\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/flatmap(_:)-5m8ks","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/flatmap(_:)-8xo8l","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/map(_:)-6po7e","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/routerpath\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/hummingbird\/routerpath\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/routerpath","title":"RouterPath","type":"struct"},{"title":"Request\/Response","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequest\/init(head:body:)","title":"init(head: HTTPRequest, body: HBRequestBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequest\/body","title":"var body: HBRequestBody","type":"property"},{"path":"\/documentation\/hummingbird\/hbrequest\/cookies","title":"var cookies: HBCookies","type":"property"},{"path":"\/documentation\/hummingbird\/hbrequest\/head","title":"let head: HTTPRequest","type":"property"},{"path":"\/documentation\/hummingbird\/hbrequest\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbrequest\/method","title":"var method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/hummingbird\/hbrequest\/uri","title":"let uri: HBURL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequest\/collatebody(context:)","title":"func collateBody(context: some HBBaseRequestContext) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequest\/decode(as:context:)","title":"func decode<Type>(as: Type.Type, context: some HBBaseRequestContext) async throws -> Type","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequest\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbrequest\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbrequest","title":"HBRequest","type":"struct"},{"path":"\/documentation\/hummingbird\/hbparameters","title":"HBParameters","type":"typealias"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/~=(_:_:)","title":"static func ~= (`Self`, `Self`) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/init(from:)","title":"init?(from: String)","type":"init"},{"path":"\/documentation\/hummingbird\/hbmediatype\/init(type:subtype:parameter:)","title":"init(type: Category, subType: String, parameter: (String, String)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/parameter","title":"let parameter: (name: String, value: String)?","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/subtype","title":"let subType: String","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/type","title":"let type: Category","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/istype(_:)","title":"func isType(HBMediaType) -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/hbmediatype\/withparameter(name:value:)","title":"func withParameter(name: String, value: String) -> HBMediaType","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/application","title":"static var application: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/application7z","title":"static var application7z: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationabiword","title":"static var applicationAbiWord: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationamzkindleebook","title":"static var applicationAmzKindleEBook: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationarc","title":"static var applicationArc: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationbinary","title":"static var applicationBinary: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationbzip","title":"static var applicationBzip: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationbzip2","title":"static var applicationBzip2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationcsh","title":"static var applicationCsh: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationdocx","title":"static var applicationDocx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationeot","title":"static var applicationEot: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationepub","title":"static var applicationEpub: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationgzip","title":"static var applicationGzip: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationjar","title":"static var applicationJar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationjson","title":"static var applicationJson: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationjsonld","title":"static var applicationJsonLD: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationmpkg","title":"static var applicationMpkg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationmsword","title":"static var applicationMsword: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationodp","title":"static var applicationOdp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationods","title":"static var applicationOds: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationodt","title":"static var applicationOdt: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationogg","title":"static var applicationOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationpdf","title":"static var applicationPdf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationphp","title":"static var applicationPhp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationppt","title":"static var applicationPpt: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationpptx","title":"static var applicationPptx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationrar","title":"static var applicationRar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationrtf","title":"static var applicationRtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationsh","title":"static var applicationSh: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationswf","title":"static var applicationSwf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationtar","title":"static var applicationTar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationurlencoded","title":"static var applicationUrlEncoded: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationvsd","title":"static var applicationVsd: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationxhtml","title":"static var applicationXhtml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationxls","title":"static var applicationXls: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationxlsx","title":"static var applicationXlsx: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationxml","title":"static var applicationXml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/applicationzip","title":"static var applicationZip: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/audio","title":"static var audio: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/audio3g2","title":"static var audio3g2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/audio3gp","title":"static var audio3gp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/audioaac","title":"static var audioAac: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/audiomidi","title":"static var audioMidi: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/audiompeg","title":"static var audioMpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/audioogg","title":"static var audioOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/audioopus","title":"static var audioOpus: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/audiowave","title":"static var audioWave: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/audiowebm","title":"static var audioWebm: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/example","title":"static var example: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/font","title":"static var font: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/fontotf","title":"static var fontOtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/fontttf","title":"static var fontTtf: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/fontwoff","title":"static var fontWoff: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/fontwoff2","title":"static var fontWoff2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/image","title":"static var image: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/imagebmp","title":"static var imageBmp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/imagegif","title":"static var imageGif: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/imageico","title":"static var imageIco: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/imagejpeg","title":"static var imageJpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/imagepng","title":"static var imagePng: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/imagesvg","title":"static var imageSvg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/imagetiff","title":"static var imageTiff: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/imagewebp","title":"static var imageWebp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/message","title":"static var message: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/model","title":"static var model: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/multipart","title":"static var multipart: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/multipartform","title":"static var multipartForm: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/text","title":"static var text: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/textcss","title":"static var textCss: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/textcsv","title":"static var textCsv: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/texthtml","title":"static var textHtml: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/texticalendar","title":"static var textICalendar: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/textjavascript","title":"static var textJavascript: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/textplain","title":"static var textPlain: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/video","title":"static var video: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/video3g2","title":"static var video3g2: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/video3gp","title":"static var video3gp: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/videomp4","title":"static var videoMp4: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/videompeg","title":"static var videoMpeg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/videoogg","title":"static var videoOgg: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/videots","title":"static var videoTs: `Self`","type":"property"},{"path":"\/documentation\/hummingbird\/hbmediatype\/videowebm","title":"static var videoWebm: `Self`","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/getmediatype(forextension:)","title":"static func getMediaType(forExtension: String) -> HBMediaType?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/==(_:_:)","title":"static func == (Category, Category) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/any","title":"case any","type":"case"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/application","title":"case application","type":"case"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/audio","title":"case audio","type":"case"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/example","title":"case example","type":"case"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/font","title":"case font","type":"case"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/image","title":"case image","type":"case"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/message","title":"case message","type":"case"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/model","title":"case model","type":"case"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/multipart","title":"case multipart","type":"case"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/text","title":"case text","type":"case"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/hbmediatype\/category\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmediatype\/category\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbird\/hbmediatype\/category\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbmediatype\/category","title":"HBMediaType.Category","type":"enum"}],"path":"\/documentation\/hummingbird\/hbmediatype","title":"HBMediaType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcachecontrol\/init(_:)","title":"init([(HBMediaType, [Value])])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcachecontrol\/getcachecontrolheader(for:)","title":"func getCacheControlHeader(for: String) -> String?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcachecontrol\/value\/maxage(_:)","title":"case maxAge(Int)","type":"case"},{"path":"\/documentation\/hummingbird\/hbcachecontrol\/value\/mustrevalidate","title":"case mustRevalidate","type":"case"},{"path":"\/documentation\/hummingbird\/hbcachecontrol\/value\/nocache","title":"case noCache","type":"case"},{"path":"\/documentation\/hummingbird\/hbcachecontrol\/value\/nostore","title":"case noStore","type":"case"},{"path":"\/documentation\/hummingbird\/hbcachecontrol\/value\/private","title":"case `private`","type":"case"},{"path":"\/documentation\/hummingbird\/hbcachecontrol\/value\/public","title":"case `public`","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcachecontrol\/value\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbcachecontrol\/value","title":"HBCacheControl.Value","type":"enum"}],"path":"\/documentation\/hummingbird\/hbcachecontrol","title":"HBCacheControl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/init(status:headers:body:)","title":"init(status: HTTPResponse.Status, headers: HTTPFields, body: HBResponseBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/body","title":"var body: HBResponseBody","type":"property"},{"path":"\/documentation\/hummingbird\/hbresponse\/head","title":"var head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbird\/hbresponse\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbresponse\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/setcookie(_:)","title":"func setCookie(HBCookie)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirect(to:type:)","title":"static func redirect(to: String, type: RedirectType) -> HBResponse","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/found","title":"case found","type":"case"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/permanent","title":"case permanent","type":"case"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/temporary","title":"case temporary","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype","title":"HBResponse.RedirectType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbresponse\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/response(from:context:)","title":"func response(from: HBRequest, context: some HBBaseRequestContext) -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponse\/hbresponsegenerator-implementations","title":"HBResponseGenerator Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbresponse","title":"HBResponse","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponsebodywriter\/write(_:)","title":"func write(ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponsebodywriter","title":"HBResponseBodyWriter","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbeditedresponse\/init(status:headers:response:)","title":"init(status: HTTPResponse.Status?, headers: HTTPFields, response: Generator)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbeditedresponse\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbeditedresponse\/responsegenerator","title":"var responseGenerator: Generator","type":"property"},{"path":"\/documentation\/hummingbird\/hbeditedresponse\/status","title":"var status: HTTPResponse.Status?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbeditedresponse\/response(from:context:)","title":"func response(from: HBRequest, context: some HBBaseRequestContext) throws -> HBResponse","type":"method"},{"path":"\/documentation\/hummingbird\/hbeditedresponse\/setcookie(_:)","title":"func setCookie(HBCookie)","type":"method"}],"path":"\/documentation\/hummingbird\/hbeditedresponse","title":"HBEditedResponse","type":"struct"},{"title":"Request context","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/init(allocator:logger:)","title":"init(allocator: ByteBufferAllocator, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/corecontext","title":"var coreContext: HBCoreRequestContext","type":"property"},{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/logger","title":"var logger: Logger","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/maxuploadsize-3nybp","title":"var maxUploadSize: Int","type":"property"}],"title":"HBBaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/maxuploadsize-5c8td","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/parameters","title":"var parameters: HBParameters","type":"property"},{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/requestdecoder","title":"var requestDecoder: HBRequestDecoder","type":"property"},{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/responseencoder","title":"var responseEncoder: HBResponseEncoder","type":"property"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/threadpool-1f3tn","title":"var threadPool: NIOThreadPool","type":"property"}],"title":"HBBaseRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbbaserequestcontext\/threadpool-71fzk","title":"var threadPool: NIOThreadPool","type":"property"}],"path":"\/documentation\/hummingbird\/hbbaserequestcontext","title":"HBBaseRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbrequestcontext\/init(channel:logger:)-80zpw","title":"init(channel: Channel, logger: Logger)","type":"init"}],"title":"HBRequestContext Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbrequestcontext\/init(channel:logger:)-1xy10","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbird\/hbrequestcontext","title":"HBRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcorerequestcontext\/init(requestdecoder:responseencoder:allocator:logger:)","title":"init(requestDecoder: HBRequestDecoder, responseEncoder: HBResponseEncoder, allocator: ByteBufferAllocator, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcorerequestcontext\/endpointpath","title":"var endpointPath: EndpointPath","type":"property"},{"path":"\/documentation\/hummingbird\/hbcorerequestcontext\/parameters","title":"var parameters: HBParameters","type":"property"}],"path":"\/documentation\/hummingbird\/hbcorerequestcontext","title":"HBCoreRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/init(allocator:logger:)","title":"init(allocator: ByteBufferAllocator, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/corecontext","title":"var coreContext: HBCoreRequestContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/parameters","title":"var parameters: HBParameters","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/requestdecoder","title":"var requestDecoder: HBRequestDecoder","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/responseencoder","title":"var responseEncoder: HBResponseEncoder","type":"property"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/threadpool","title":"var threadPool: NIOThreadPool","type":"property"}],"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/hbbaserequestcontext-implementations","title":"HBBaseRequestContext Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbird\/hbbasicrequestcontext\/hbrequestcontext-implementations","title":"HBRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbbasicrequestcontext","title":"HBBasicRequestContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext\/remoteaddress","title":"var remoteAddress: SocketAddress?","type":"property"}],"path":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","title":"HBRemoteAddressRequestContext","type":"protocol"},{"title":"Encoding\/Decoding","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequestdecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: HBRequest, context: some HBBaseRequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbird\/hbrequestdecoder","title":"HBRequestDecoder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponseencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: HBRequest, context: some HBBaseRequestContext) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponseencoder","title":"HBResponseEncoder","type":"protocol"},{"path":"\/documentation\/hummingbird\/hbresponseencodable","title":"HBResponseEncodable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbresponsegenerator\/response(from:context:)-53v3a","title":"func response(from: HBRequest, context: some HBBaseRequestContext) throws -> HBResponse","type":"method"}],"title":"HBResponseGenerator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbresponsegenerator\/response(from:context:)-31qxr","title":"func response(from: HBRequest, context: some HBBaseRequestContext) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponsegenerator","title":"HBResponseGenerator","type":"protocol"},{"path":"\/documentation\/hummingbird\/hbresponsecodable","title":"HBResponseCodable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/nulldecoder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/nulldecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: HBRequest, context: some HBBaseRequestContext) throws -> T","type":"method"}],"path":"\/documentation\/hummingbird\/nulldecoder","title":"NullDecoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/nullencoder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/nullencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: HBRequest, context: some HBBaseRequestContext) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/nullencoder","title":"NullEncoder","type":"struct"},{"title":"Middleware","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/middleware","title":"Middleware","type":"typealias"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/context","title":"Context","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/input","title":"Input","type":"associatedtype"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/output","title":"Output","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/middlewareprotocol\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"}],"path":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","type":"protocol"},{"path":"\/documentation\/hummingbird\/hbmiddlewareprotocol","title":"HBMiddlewareProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmiddlewaregroup\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmiddlewaregroup\/add(_:)","title":"func add(any HBMiddlewareProtocol<Context>)","type":"method"},{"path":"\/documentation\/hummingbird\/hbmiddlewaregroup\/constructresponder(finalresponder:)","title":"func constructResponder(finalResponder: any HBResponder<Context>) -> any HBResponder<Context>","type":"method"}],"path":"\/documentation\/hummingbird\/hbmiddlewaregroup","title":"HBMiddlewareGroup","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcorsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","title":"init(allowOrigin: AllowOrigin, allowHeaders: [HTTPField.Name], allowMethods: [HTTPRequest.Method], allowCredentials: Bool, exposedHeaders: [String]?, maxAge: TimeAmount?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcorsmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbcorsmiddleware\/alloworigin\/all","title":"case all","type":"case"},{"path":"\/documentation\/hummingbird\/hbcorsmiddleware\/alloworigin\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/hummingbird\/hbcorsmiddleware\/alloworigin\/none","title":"case none","type":"case"},{"path":"\/documentation\/hummingbird\/hbcorsmiddleware\/alloworigin\/originbased","title":"case originBased","type":"case"}],"path":"\/documentation\/hummingbird\/hbcorsmiddleware\/alloworigin","title":"HBCORSMiddleware.AllowOrigin","type":"enum"}],"path":"\/documentation\/hummingbird\/hbcorsmiddleware","title":"HBCORSMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hblogrequestsmiddleware\/init(_:includeheaders:)","title":"init(Logger.Level, includeHeaders: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hblogrequestsmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hblogrequestsmiddleware","title":"HBLogRequestsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmetricsmiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmetricsmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbmetricsmiddleware","title":"HBMetricsMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbtracingmiddleware\/init(recordingheaders:attributes:)","title":"init(recordingHeaders: some Collection<HTTPField.Name>, attributes: SpanAttributes?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbtracingmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbtracingmiddleware","title":"HBTracingMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbsetcodablemiddleware\/init(decoder:encoder:)","title":"init(decoder: () -> Decoder, encoder: () -> Encoder)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbsetcodablemiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbsetcodablemiddleware","title":"HBSetCodableMiddleware","type":"struct"},{"title":"Storage","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbird\/hbpersistdriver\/shutdown()-1ssh","title":"func shutdown() async throws","type":"method"}],"title":"HBPersistDriver Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbird\/hbpersistdriver\/shutdown()-9ump6","title":"func shutdown() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/hbpersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbpersistdriver","title":"HBPersistDriver","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/init(_:)","title":"init(C)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbird\/hbmemorypersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbmemorypersistdriver","title":"HBMemoryPersistDriver","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersisterror\/duplicate","title":"static var duplicate: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersisterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/hbpersisterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbpersisterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbpersisterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbpersisterror","title":"HBPersistError","type":"struct"},{"title":"File management","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbfileio\/init(eventloopgroupprovider:threadpool:)","title":"init(eventLoopGroupProvider: EventLoopGroupProvider, threadPool: NIOThreadPool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbfileio\/loadfile(path:context:logger:)","title":"func loadFile(path: String, context: some HBBaseRequestContext, logger: Logger) async throws -> HBResponseBody","type":"method"},{"path":"\/documentation\/hummingbird\/hbfileio\/loadfile(path:range:context:logger:)","title":"func loadFile(path: String, range: ClosedRange<Int>, context: some HBBaseRequestContext, logger: Logger) async throws -> (HBResponseBody, Int)","type":"method"},{"path":"\/documentation\/hummingbird\/hbfileio\/writefile(contents:path:context:logger:)","title":"func writeFile(contents: HBRequestBody, path: String, context: some HBBaseRequestContext, logger: Logger) async throws","type":"method"}],"path":"\/documentation\/hummingbird\/hbfileio","title":"HBFileIO","type":"struct"},{"title":"Miscellaneous","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbenvironment\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbird\/hbenvironment\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, String)...)","type":"init"},{"path":"\/documentation\/hummingbird\/hbenvironment\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/hummingbird\/hbenvironment\/init(values:)","title":"init(values: [String : String])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbenvironment\/get(_:)","title":"func get(String) -> String?","type":"method"},{"path":"\/documentation\/hummingbird\/hbenvironment\/get(_:as:)","title":"func get<T>(String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/hummingbird\/hbenvironment\/merging(with:)","title":"func merging(with: HBEnvironment) -> HBEnvironment","type":"method"},{"path":"\/documentation\/hummingbird\/hbenvironment\/set(_:value:)","title":"func set(String, value: String?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbenvironment\/shared","title":"static let shared: HBEnvironment","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbenvironment\/dotenv(_:)","title":"static func dotEnv(String) throws -> HBEnvironment","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbenvironment\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbenvironment\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbenvironment","title":"HBEnvironment","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbdatecache\/date","title":"var date: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbdatecache\/run()","title":"func run() async throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbdatecache\/formatrfc1123date(_:)","title":"static func formatRFC1123Date(Int) -> String","type":"method"}],"path":"\/documentation\/hummingbird\/hbdatecache","title":"HBDateCache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/gracefulshutdownwaiter\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/gracefulshutdownwaiter\/wait()","title":"func wait() async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/gracefulshutdownwaiter\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbird\/gracefulshutdownwaiter\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbird\/gracefulshutdownwaiter\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbird\/gracefulshutdownwaiter\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/gracefulshutdownwaiter","title":"GracefulShutdownWaiter","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponderbuilder\/responder","title":"Responder","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponderbuilder\/buildresponder()","title":"func buildResponder() -> Responder","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponderbuilder","title":"HBResponderBuilder","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrouterresponder\/respond(to:context:)","title":"func respond(to: HBRequest, context: Context) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbrouterresponder","title":"HBRouterResponder","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/loggerwithrequestid(_:)","title":"func loggerWithRequestId(Logger) -> Logger","type":"func"}],"path":"\/documentation\/hummingbird","title":"Hummingbird","type":"module"},{"children":[{"title":"Articles","type":"groupMarker"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"title":"HBAuthenticator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:context:)-5xiri","title":"func authenticate(request: HBRequest, context: Context) async throws -> Value?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbauthenticator","title":"HBAuthenticator","type":"protocol"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticatable","title":"HBAuthenticatable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/init(_:)","title":"init(Auth.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","title":"IsAuthenticatedMiddleware","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol\/auth","title":"var auth: HBLoginCache","type":"property"}],"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","title":"HBAuthRequestContextProtocol","type":"protocol"}],"path":"\/documentation\/hummingbird\/authenticators","title":"Authenticators","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/sessiondoesnotexist","title":"static var sessionDoesNotExist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error","title":"HBSessionStorage.Error","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/init(_:sessioncookie:)","title":"init(any HBPersistDriver, sessionCookie: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/delete(request:)","title":"func delete(request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/load(as:request:)","title":"func load<Session>(as: Session.Type, request: HBRequest) async throws -> Session?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/save(session:expiresin:)","title":"func save<Session>(session: Session, expiresIn: Duration) async throws -> HBCookie","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/update(session:expiresin:request:)","title":"func update<Session>(session: Session, expiresIn: Duration, request: HBRequest) async throws","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage","title":"HBSessionStorage","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/session","title":"Session","type":"associatedtype"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/sessionstorage","title":"var sessionStorage: HBSessionStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/getvalue(from:request:context:)","title":"func getValue(from: Session, request: HBRequest, context: Context) async throws -> Value?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","title":"HBSessionAuthenticator","type":"protocol"}],"path":"\/documentation\/hummingbird\/sessions","title":"Sessions","type":"symbol"},{"children":[{"title":"Reference","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/init(secret:length:hashfunction:)","title":"init(secret: String, length: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/secret","title":"let secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/compute(counter:)","title":"func compute(counter: UInt64) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hotp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hotp","title":"HOTP","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/init(secret:length:timestep:hashfunction:)","title":"init(secret: String, length: Int, timeStep: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/secret","title":"let secret: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/timestep","title":"let timeStep: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/compute(date:)","title":"func compute(date: Date) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/totp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/totp","title":"TOTP","type":"struct"}],"path":"\/documentation\/hummingbird\/onetimepasswords","title":"One Time Passwords","type":"symbol"},{"title":"Request Contexts","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/init(allocator:logger:)","title":"init(allocator: ByteBufferAllocator, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/auth","title":"var auth: HBLoginCache","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/corecontext","title":"var coreContext: HBCoreRequestContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/parameters","title":"var parameters: HBParameters","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/requestdecoder","title":"var requestDecoder: HBRequestDecoder","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/responseencoder","title":"var responseEncoder: HBResponseEncoder","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/threadpool","title":"var threadPool: NIOThreadPool","type":"property"}],"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/hbbaserequestcontext-implementations","title":"HBBaseRequestContext Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext\/hbrequestcontext-implementations","title":"HBRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontext","title":"HBAuthRequestContext","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol\/auth","title":"var auth: HBLoginCache","type":"property"}],"path":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","title":"HBAuthRequestContextProtocol","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hblogincache\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hblogincache\/get(_:)","title":"func get<Auth>(Auth.Type) -> Auth?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hblogincache\/has(_:)","title":"func has<Auth>(Auth.Type) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hblogincache\/login(_:)","title":"func login<Auth>(Auth)","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hblogincache\/logout(_:)","title":"func logout<Auth>(Auth.Type)","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hblogincache\/require(_:)","title":"func require<Auth>(Auth.Type) throws -> Auth","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hblogincache","title":"HBLoginCache","type":"struct"},{"title":"Authenticators","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"title":"HBAuthenticator Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:context:)-5xiri","title":"func authenticate(request: HBRequest, context: Context) async throws -> Value?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticator\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbauthenticator","title":"HBAuthenticator","type":"protocol"},{"path":"\/documentation\/hummingbirdauth\/hbauthenticatable","title":"HBAuthenticatable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/init(_:)","title":"init(Auth.Type)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","title":"IsAuthenticatedMiddleware","type":"struct"},{"title":"Header Authentication","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/basicauthentication\/password","title":"let password: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/basicauthentication\/username","title":"let username: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/basicauthentication","title":"BasicAuthentication","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/bearerauthentication\/token","title":"let token: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/bearerauthentication","title":"BearerAuthentication","type":"struct"},{"title":"Encryption","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/bcrypt\/hash(_:cost:)","title":"static func hash(String, cost: UInt8) -> String","type":"method"},{"path":"\/documentation\/hummingbirdauth\/bcrypt\/hash(_:cost:context:)","title":"static func hash<Context>(String, cost: UInt8, context: Context) async throws -> String","type":"method"},{"path":"\/documentation\/hummingbirdauth\/bcrypt\/verify(_:hash:)","title":"static func verify(String, hash: String) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdauth\/bcrypt\/verify(_:hash:context:)","title":"static func verify<Context>(String, hash: String, context: Context) async throws -> Bool","type":"method"}],"path":"\/documentation\/hummingbirdauth\/bcrypt","title":"Bcrypt","type":"enum"},{"title":"Sessions","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/session","title":"Session","type":"associatedtype"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/sessionstorage","title":"var sessionStorage: HBSessionStorage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator\/getvalue(from:request:context:)","title":"func getValue(from: Session, request: HBRequest, context: Context) async throws -> Value?","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","title":"HBSessionAuthenticator","type":"protocol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/sessiondoesnotexist","title":"static var sessionDoesNotExist: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/error","title":"HBSessionStorage.Error","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/init(_:sessioncookie:)","title":"init(any HBPersistDriver, sessionCookie: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/delete(request:)","title":"func delete(request: HBRequest) async throws","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/load(as:request:)","title":"func load<Session>(as: Session.Type, request: HBRequest) async throws -> Session?","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/save(session:expiresin:)","title":"func save<Session>(session: Session, expiresIn: Duration) async throws -> HBCookie","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hbsessionstorage\/update(session:expiresin:request:)","title":"func update<Session>(session: Session, expiresIn: Duration, request: HBRequest) async throws","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hbsessionstorage","title":"HBSessionStorage","type":"struct"},{"title":"OTP","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/init(secret:length:hashfunction:)","title":"init(secret: String, length: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/hotp\/secret","title":"let secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/hotp\/compute(counter:)","title":"func compute(counter: UInt64) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/hotp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/hotp","title":"HOTP","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/init(secret:length:timestep:hashfunction:)","title":"init(secret: String, length: Int, timeStep: Int, hashFunction: OTPHashFunction)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/hashfunction","title":"let hashFunction: OTPHashFunction","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/length","title":"let length: Int","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/secret","title":"let secret: String","type":"property"},{"path":"\/documentation\/hummingbirdauth\/totp\/timestep","title":"let timeStep: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/totp\/compute(date:)","title":"func compute(date: Date) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdauth\/totp\/createauthenticatorurl(label:issuer:)","title":"func createAuthenticatorURL(label: String, issuer: String?) -> String","type":"method"}],"path":"\/documentation\/hummingbirdauth\/totp","title":"TOTP","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/sha1","title":"case sha1","type":"case"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/sha256","title":"case sha256","type":"case"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/sha512","title":"case sha512","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdauth\/otphashfunction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdauth\/otphashfunction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdauth\/otphashfunction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdauth\/otphashfunction","title":"OTPHashFunction","type":"enum"}],"path":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","type":"module"},{"children":[{"title":"Server","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/init(childchannelsetup:configuration:onserverrunning:eventloopgroup:logger:)","title":"init(childChannelSetup: ChildChannel, configuration: HBServerConfiguration, onServerRunning: ((Channel) async -> Void)?, eventLoopGroup: EventLoopGroup, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/logger","title":"let logger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/makeserver(childchannelsetup:configuration:)","title":"func makeServer(childChannelSetup: ChildChannel, configuration: HBServerConfiguration) async throws -> AsyncServerChannel","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/shutdowngracefully()","title":"func shutdownGracefully() async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/asyncchildchannel","title":"HBServer.AsyncChildChannel","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/asyncserverchannel","title":"HBServer.AsyncServerChannel","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/error\/servershutdown","title":"case serverShutdown","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/error\/servershuttingdown","title":"case serverShuttingDown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/hbserver\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbserver\/error","title":"HBServer.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbserver\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbserver\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbserver\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbserver","title":"HBServer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbserverconfiguration\/init(address:servername:backlog:reuseaddress:)","title":"init(address: HBBindAddress, serverName: String?, backlog: Int, reuseAddress: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbserverconfiguration\/address","title":"let address: HBBindAddress","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbserverconfiguration\/backlog","title":"let backlog: Int","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbserverconfiguration\/reuseaddress","title":"let reuseAddress: Bool","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbserverconfiguration\/servername","title":"let serverName: String?","type":"property"}],"path":"\/documentation\/hummingbirdcore\/hbserverconfiguration","title":"HBServerConfiguration","type":"struct"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbchildchannel\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbchildchannel\/handle(value:logger:)","title":"func handle(value: Value, logger: Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbchildchannel\/setup(channel:configuration:logger:)","title":"func setup(channel: Channel, configuration: HBServerConfiguration, logger: Logger) -> EventLoopFuture<Value>","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbchildchannel","title":"HBChildChannel","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpchannelhandler\/responder-swift.property","title":"var responder: Responder","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpchannelhandler\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/httpchannelhandler\/responder-swift.typealias","title":"HTTPChannelHandler.Responder","type":"typealias"}],"path":"\/documentation\/hummingbirdcore\/httpchannelhandler","title":"HTTPChannelHandler","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/init(responder:additionalchannelhandlers:)","title":"init(responder: (HBRequest, Channel) async throws -> HBResponse, additionalChannelHandlers: () -> [any RemovableChannelHandler])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/responder","title":"let responder: (HBRequest, Channel) async throws -> HBResponse","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/handle(value:logger:)","title":"func handle(value: NIOCore.NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logging.Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/setup(channel:configuration:logger:)","title":"func setup(channel: Channel, configuration: HBServerConfiguration, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/value","title":"HTTP1Channel.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/http1channel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdcore\/http1channel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/http1channel","title":"HTTP1Channel","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbindaddress\/hostname(_:port:)","title":"case hostname(String, port: Int)","type":"case"},{"path":"\/documentation\/hummingbird\/hbbindaddress\/unixdomainsocket(path:)","title":"case unixDomainSocket(path: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbbindaddress\/host","title":"var host: String?","type":"property"},{"path":"\/documentation\/hummingbird\/hbbindaddress\/port","title":"var port: Int?","type":"property"},{"path":"\/documentation\/hummingbird\/hbbindaddress\/unixdomainsocketpath","title":"var unixDomainSocketPath: String?","type":"property"}],"path":"\/documentation\/hummingbird\/hbbindaddress","title":"HBBindAddress","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/init(logger:)","title":"init(logger: Logger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/channelread(context:data:)","title":"func channelRead(context: ChannelHandlerContext, data: NIOAny)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/userinboundeventtriggered(context:event:)","title":"func userInboundEventTriggered(context: ChannelHandlerContext, event: Any)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/write(context:data:promise:)","title":"func write(context: ChannelHandlerContext, data: NIOAny, promise: EventLoopPromise<Void>?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/inboundin","title":"HBHTTPUserEventHandler.InboundIn","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/inboundout","title":"HBHTTPUserEventHandler.InboundOut","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/outboundin","title":"HBHTTPUserEventHandler.OutboundIn","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/outboundout","title":"HBHTTPUserEventHandler.OutboundOut","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/handleradded(context:)","title":"func handlerAdded(context: ChannelHandlerContext)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/handlerremoved(context:)","title":"func handlerRemoved(context: ChannelHandlerContext)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/channelhandler-implementations","title":"ChannelHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/unwrapinboundin(_:)","title":"func unwrapInboundIn(NIOAny) -> Self.InboundIn","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/wrapinboundout(_:)","title":"func wrapInboundOut(Self.InboundOut) -> NIOAny","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/unwrapoutboundin(_:)","title":"func unwrapOutboundIn(NIOAny) -> Self.OutboundIn","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/channeloutboundhandler-implementations","title":"ChannelOutboundHandler Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/removehandler(context:removaltoken:)","title":"func removeHandler(context: ChannelHandlerContext, removalToken: ChannelHandlerContext.RemovalToken)","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler\/removablechannelhandler-implementations","title":"RemovableChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler","title":"HBHTTPUserEventHandler","type":"class"},{"title":"Request","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequest\/init(head:body:)","title":"init(head: HTTPRequest, body: HBRequestBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequest\/body","title":"var body: HBRequestBody","type":"property"},{"path":"\/documentation\/hummingbird\/hbrequest\/cookies","title":"var cookies: HBCookies","type":"property"},{"path":"\/documentation\/hummingbird\/hbrequest\/head","title":"let head: HTTPRequest","type":"property"},{"path":"\/documentation\/hummingbird\/hbrequest\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbrequest\/method","title":"var method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/hummingbird\/hbrequest\/uri","title":"let uri: HBURL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequest\/collatebody(context:)","title":"func collateBody(context: some HBBaseRequestContext) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequest\/decode(as:context:)","title":"func decode<Type>(as: Type.Type, context: some HBBaseRequestContext) async throws -> Type","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequest\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbrequest\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbrequest","title":"HBRequest","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/asynciterator\/next()","title":"func next() async throws -> ByteBuffer?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/asynciterator\/element","title":"HBStreamedRequestBody.AsyncIterator.Element","type":"typealias"}],"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/asynciterator","title":"HBStreamedRequestBody.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/element","title":"HBStreamedRequestBody.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunked(by:into:)-1z3fw","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunked(by:into:)-9vlkt","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunks(ofcount:or:)-5y34l","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunks(ofcount:or:)-68v84","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunks(ofcount:or:into:)-5xn9k","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/chunks(ofcount:or:into:)-6ykgx","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/collect(upto:)","title":"func collect(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/collect(upto:into:)","title":"func collect(upTo: Int, into: inout ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/compactmap(_:)-6jalw","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/compactmap(_:)-7mdwo","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/flatmap(_:)-6odj2","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/flatmap(_:)-80qad","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/interspersed(every:with:)-1efcf","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/interspersed(every:with:)-1eq83","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/interspersed(every:with:)-2ynly","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/interspersed(every:with:)-8my5","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/interspersed(every:with:)-95fve","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/map(_:)-37up","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/map(_:)-5zyt0","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/reductions(_:_:)-3z23t","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/reductions(_:_:)-97qw0","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/reductions(into:_:)-16kuq","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/reductions(into:_:)-28n6w","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody","title":"HBStreamedRequestBody","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/http","title":"static var http: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/http_unix","title":"static var http_unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/https","title":"static var https: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/https_unix","title":"static var https_unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/unix","title":"static var unix: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/ws","title":"static var ws: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/wss","title":"static var wss: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.struct","title":"HBURL.Scheme","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hburl\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/hburl\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hburl\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/host","title":"var host: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/port","title":"var port: Int?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/queryparameters","title":"var queryParameters: FlatDictionary<Substring, Substring>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/scheme-swift.property","title":"var scheme: Scheme?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hburl\/string","title":"let string: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hburl\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdcore\/hburl\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hburl\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/hummingbirdcore\/hburl\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hburl","title":"HBURL","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/bytebuffer(_:)","title":"case byteBuffer(ByteBuffer)","type":"case"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/stream(_:)","title":"case stream(HBStreamedRequestBody)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/collate(maxsize:)","title":"func collate(maxSize: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/makeasynciterator()","title":"func makeAsyncIterator() -> HBStreamedRequestBody.AsyncIterator","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/asynciterator","title":"HBRequestBody.AsyncIterator","type":"typealias"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/element","title":"HBRequestBody.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunked(by:into:)-19i0m","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunked(by:into:)-4tm1x","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunks(ofcount:or:)-2m2yb","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunks(ofcount:or:)-6phky","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunks(ofcount:or:into:)-5cu15","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/chunks(ofcount:or:into:)-7dj14","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/collect(upto:)","title":"func collect(upTo: Int) async throws -> ByteBuffer","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/collect(upto:into:)","title":"func collect(upTo: Int, into: inout ByteBuffer) async throws","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/compactmap(_:)-32mpb","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/compactmap(_:)-4itpc","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/contains(_:)","title":"func contains(Self.Element) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/flatmap(_:)-2mqbe","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/flatmap(_:)-6vawi","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/interspersed(every:with:)-1epir","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/interspersed(every:with:)-1k271","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/interspersed(every:with:)-1vt9y","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/interspersed(every:with:)-4dfwp","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/interspersed(every:with:)-mu10","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/map(_:)-6tdbu","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/map(_:)-86146","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/reductions(_:_:)-4ilsv","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/reductions(_:_:)-4pdkq","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/reductions(into:_:)-2fbr9","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/reductions(into:_:)-88bev","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/removeduplicates()","title":"func removeDuplicates() -> AsyncRemoveDuplicatesSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbird\/hbrequestbody\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/hummingbird\/hbrequestbody\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbrequestbody","title":"HBRequestBody","type":"enum"},{"title":"Response","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/init(status:headers:body:)","title":"init(status: HTTPResponse.Status, headers: HTTPFields, body: HBResponseBody)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/body","title":"var body: HBResponseBody","type":"property"},{"path":"\/documentation\/hummingbird\/hbresponse\/head","title":"var head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbird\/hbresponse\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbresponse\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/setcookie(_:)","title":"func setCookie(HBCookie)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirect(to:type:)","title":"static func redirect(to: String, type: RedirectType) -> HBResponse","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/found","title":"case found","type":"case"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/permanent","title":"case permanent","type":"case"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/temporary","title":"case temporary","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbresponse\/redirecttype","title":"HBResponse.RedirectType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbresponse\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponse\/response(from:context:)","title":"func response(from: HBRequest, context: some HBBaseRequestContext) -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponse\/hbresponsegenerator-implementations","title":"HBResponseGenerator Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbresponse","title":"HBResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponsebody\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbird\/hbresponsebody\/init(asyncsequence:)","title":"init<BufferSequence>(asyncSequence: BufferSequence)","type":"init"},{"path":"\/documentation\/hummingbird\/hbresponsebody\/init(bytebuffer:)","title":"init(byteBuffer: ByteBuffer)","type":"init"},{"path":"\/documentation\/hummingbird\/hbresponsebody\/init(contentlength:_:)","title":"init(contentLength: Int?, (HBResponseBodyWriter) async throws -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponsebody\/contentlength","title":"let contentLength: Int?","type":"property"},{"path":"\/documentation\/hummingbird\/hbresponsebody\/write","title":"let write: (HBResponseBodyWriter) async throws -> HTTPFields?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponsebody\/withtrailingheaders(contentlength:_:)","title":"static func withTrailingHeaders(contentLength: Int?, (HBResponseBodyWriter) async throws -> HTTPFields?) -> HBResponseBody","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponsebody","title":"HBResponseBody","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbresponsebodywriter\/write(_:)","title":"func write(ByteBuffer) async throws","type":"method"}],"path":"\/documentation\/hummingbird\/hbresponsebodywriter","title":"HBResponseBodyWriter","type":"protocol"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/init(_:)","title":"init(HTTPResponse.Status)","type":"init"},{"path":"\/documentation\/hummingbird\/hbhttperror\/init(_:message:)","title":"init(HTTPResponse.Status, message: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/body","title":"let body: String?","type":"property"},{"path":"\/documentation\/hummingbird\/hbhttperror\/headers","title":"let headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbhttperror\/status","title":"let status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbhttperror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbird\/hbhttperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttperror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbhttperror\/hbhttpresponseerror-implementations","title":"HBHTTPResponseError Implementations","type":"symbol"}],"path":"\/documentation\/hummingbird\/hbhttperror","title":"HBHTTPError","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/status","title":"var status: HTTPResponse.Status","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/body(allocator:)","title":"func body(allocator: ByteBufferAllocator) -> ByteBuffer?","type":"method"},{"path":"\/documentation\/hummingbird\/hbhttpresponseerror\/response(allocator:)","title":"func response(allocator: ByteBufferAllocator) -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbird\/hbhttpresponseerror","title":"HBHTTPResponseError","type":"protocol"},{"title":"Miscellaneous","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/init(_:)","title":"init([Element])","type":"init"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (Key, Value)...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/startindex","title":"var startIndex: Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/append(key:value:)","title":"func append(key: Key, value: Value)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:)","title":"func get(String) -> String?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:as:)-3fdsi","title":"func get<T>(String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:as:)-6ksnn","title":"func get(String, as: UUID.Type) -> UUID?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:as:)-4h655","title":"func getAll<T>(String, as: T.Type) -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:as:)-8wrfc","title":"func getAll(String, as: UUID.Type) -> [UUID]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()","title":"func getCatchAll() -> [Substring]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/has(_:)","title":"func has(Key) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:)","title":"func require(String) throws -> String","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:as:)-8gvkn","title":"func require(String, as: UUID.Type) throws -> UUID","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/require(_:as:)-8wfem","title":"func require<T>(String, as: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/requireall(_:as:)-52rco","title":"func requireAll<T>(String, as: T.Type) throws -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/requireall(_:as:)-6re97","title":"func requireAll(String, as: UUID.Type) throws -> [UUID]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/setcatchall(_:)","title":"func setCatchAll(Substring)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-2eyqb","title":"subscript(Key) -> Value?","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-4wq5d","title":"subscript(Index) -> Element","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(values:)","title":"subscript(values _: Key) -> [Value]","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/element","title":"FlatDictionary.Element","type":"typealias"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index","title":"FlatDictionary.Index","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/recursivecapturekey","title":"static let recursiveCaptureKey: Substring","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/map(_:)-9wqbv","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-1tjum","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-4c4bj","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/subscript(_:)-5ino","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/hummingbirdcore\/flatdictionary\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/async","title":"var async: AsyncSyncSequence<Self>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/flatmap(_:)-4fci6","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/flatmap(_:)-92qvw","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/map(_:)-1i1pr","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/flatdictionary\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/hummingbirdcore\/flatdictionary\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/flatdictionary","title":"FlatDictionary","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/init(_:validateutf8:)","title":"init?<Bytes>(Bytes, validateUTF8: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/advance()","title":"func advance() throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/advance(by:)","title":"func advance(by: Int) throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/character()","title":"func character() throws -> Unicode.Scalar","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/current()","title":"func current() -> Unicode.Scalar","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/movetoend()","title":"func moveToEnd()","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/movetostart()","title":"func moveToStart()","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/percentdecode()","title":"func percentDecode() -> String?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/reachedend()","title":"func reachedEnd() -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(_:)-15lu3","title":"func read(Unicode.Scalar) throws -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(_:)-441oj","title":"func read(Set<Unicode.Scalar>) throws -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(_:)-5os16","title":"func read(String) throws -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(count:)","title":"func read(count: Int) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(until:throwonoverflow:)-3hch3","title":"func read(until: Unicode.Scalar, throwOnOverflow: Bool) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(until:throwonoverflow:)-7dn1l","title":"func read(until: Set<Unicode.Scalar>, throwOnOverflow: Bool) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(until:throwonoverflow:)-8os69","title":"func read(until: (Unicode.Scalar) -> Bool, throwOnOverflow: Bool) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(until:throwonoverflow:)-8vgs8","title":"func read(until: KeyPath<Unicode.Scalar, Bool>, throwOnOverflow: Bool) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(untilstring:throwonoverflow:skiptoend:)","title":"func read(untilString: String, throwOnOverflow: Bool, skipToEnd: Bool) throws -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(while:)-3vgcx","title":"func read(while: Set<Unicode.Scalar>) -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(while:)-4koql","title":"func read(while: KeyPath<Unicode.Scalar, Bool>) -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(while:)-6h1wl","title":"func read(while: (Unicode.Scalar) -> Bool) -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/read(while:)-cx5f","title":"func read(while: Unicode.Scalar) -> Int","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/readuntiltheend()","title":"func readUntilTheEnd() -> HBParser","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/retreat()","title":"func retreat() throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/retreat(by:)","title":"func retreat(by: Int) throws","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/split(separator:)","title":"func split(separator: Unicode.Scalar) -> [HBParser]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/unsafeadvance()","title":"func unsafeAdvance()","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/unsafeadvance(by:)","title":"func unsafeAdvance(by: Int)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/error\/emptystring","title":"case emptyString","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/error\/invalidutf8","title":"case invalidUTF8","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/error\/overflow","title":"case overflow","type":"case"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/error\/unexpected","title":"case unexpected","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdcore\/hbparser\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbparser\/error","title":"HBParser.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/iterator\/next()","title":"func next() -> Unicode.Scalar?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/iterator\/element","title":"HBParser.Iterator.Element","type":"typealias"}],"path":"\/documentation\/hummingbirdcore\/hbparser\/iterator","title":"HBParser.Iterator","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/async","title":"var async: AsyncSyncSequence<Self>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/flatmap(_:)-9j3ix","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/flatmap(_:)-n60b","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/makeiterator()","title":"func makeIterator() -> Iterator","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbparser\/element","title":"HBParser.Element","type":"typealias"}],"path":"\/documentation\/hummingbirdcore\/hbparser\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdcore\/hbparser","title":"HBParser","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder\/init(_:)","title":"init((HTTPChannelHandler.Responder) throws -> ChildChannel)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder\/build","title":"let build: (HTTPChannelHandler.Responder) throws -> ChildChannel","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder\/http1(additionalchannelhandlers:)","title":"static func http1(additionalChannelHandlers: () -> [any RemovableChannelHandler]) -> HBHTTPChannelBuilder<HTTP1Channel>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder\/http2(tlsconfiguration:additionalchannelhandlers:)","title":"static func http2(tlsConfiguration: TLSConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler]) throws -> HBHTTPChannelBuilder<HTTP2Channel>","type":"method"},{"path":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder\/tls(_:tlsconfiguration:)","title":"static func tls<BaseChannel>(HBHTTPChannelBuilder<BaseChannel>, tlsConfiguration: TLSConfiguration) throws -> HBHTTPChannelBuilder<TLSChannel<BaseChannel>>","type":"method"}],"path":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder","title":"HBHTTPChannelBuilder","type":"struct"}],"path":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirddocs\/hummingbird_docs\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirddocs\/hummingbird_docs\/text","title":"var text: String","type":"property"}],"path":"\/documentation\/hummingbirddocs\/hummingbird_docs","title":"hummingbird_docs","type":"struct"}],"path":"\/documentation\/hummingbirddocs","title":"HummingbirdDocs","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/init(eventloopgroupprovider:threadpool:logger:)","title":"init(eventLoopGroupProvider: EventLoopGroupProvider, threadPool: NIOThreadPool, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/databases","title":"var databases: Databases","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/eventloopgroup","title":"let eventLoopGroup: EventLoopGroup","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/migrations","title":"var migrations: Migrations","type":"property"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/migrator","title":"var migrator: Migrator","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/db(_:history:pagesizelimit:)","title":"func db(DatabaseID?, history: QueryHistory?, pageSizeLimit: Int?) -> Database","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/migrate()","title":"func migrate() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/revert()","title":"func revert() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbirdfluent\/hbfluent\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdfluent\/hbfluent","title":"HBFluent","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/mainactorbox\/value","title":"let value: Value","type":"property"}],"path":"\/documentation\/hummingbirdfluent\/mainactorbox","title":"MainActorBox","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfluent\/niopreconcurrencysendable","title":"NIOPreconcurrencySendable","type":"typealias"},{"path":"\/documentation\/hummingbirdfluent\/niosendable","title":"NIOSendable","type":"typealias"}],"path":"\/documentation\/hummingbirdfluent","title":"HummingbirdFluent","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.property","title":"var dataDecodingStrategy: JSONDecoder.DataDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.property","title":"var dateDecodingStrategy: JSONDecoder.DateDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.property","title":"var keyDecodingStrategy: JSONDecoder.KeyDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","title":"var nonConformingFloatDecodingStrategy: JSONDecoder.NonConformingFloatDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: Data) throws -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/base64","title":"case base64","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/custom(_:)","title":"case custom((Decoder) throws -> Data)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/deferredtodata","title":"case deferredToData","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum","title":"JSONDecoder.DataDecodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/custom(_:)","title":"case custom((Decoder) throws -> Date)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum","title":"JSONDecoder.DateDecodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","title":"case convertFromSnakeCase","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum\/custom(_:)","title":"case custom(([CodingKey]) -> CodingKey)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum\/usedefaultkeys","title":"case useDefaultKeys","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum","title":"JSONDecoder.KeyDecodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/convertfromstring(positiveinfinity:negativeinfinity:nan:)","title":"case convertFromString(positiveInfinity: String, negativeInfinity: String, nan: String)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/throw","title":"case `throw`","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","title":"JSONDecoder.NonConformingFloatDecodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: HBRequest, context: some HBBaseRequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder\/hbrequestdecoder-implementations","title":"HBRequestDecoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/jsondecoder","title":"JSONDecoder","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(rawvalue:)","title":"init(rawValue: UInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/rawvalue","title":"let rawValue: UInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/prettyprinted","title":"static let prettyPrinted: JSONEncoder.OutputFormatting","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/sortedkeys","title":"static let sortedKeys: JSONEncoder.OutputFormatting","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/withoutescapingslashes","title":"static let withoutEscapingSlashes: JSONEncoder.OutputFormatting","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(_:)-3gzhb","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(_:)-534dx","title":"init<Source>(Source) async rethrows","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct","title":"JSONEncoder.OutputFormatting","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.property","title":"var dataEncodingStrategy: JSONEncoder.DataEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.property","title":"var dateEncodingStrategy: JSONEncoder.DateEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.property","title":"var keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.property","title":"var nonConformingFloatEncodingStrategy: JSONEncoder.NonConformingFloatEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.property","title":"var outputFormatting: JSONEncoder.OutputFormatting","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Any]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/encode(_:)","title":"func encode<T>(T) throws -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum\/base64","title":"case base64","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum\/custom(_:)","title":"case custom((Data, Encoder) throws -> Void)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum\/deferredtodata","title":"case deferredToData","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum","title":"JSONEncoder.DataEncodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/custom(_:)","title":"case custom((Date, Encoder) throws -> Void)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dateencodingstrategy-swift.enum","title":"JSONEncoder.DateEncodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/converttosnakecase","title":"case convertToSnakeCase","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/custom(_:)","title":"case custom(([CodingKey]) -> CodingKey)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/usedefaultkeys","title":"case useDefaultKeys","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum","title":"JSONEncoder.KeyEncodingStrategy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/converttostring(positiveinfinity:negativeinfinity:nan:)","title":"case convertToString(positiveInfinity: String, negativeInfinity: String, nan: String)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw","title":"case `throw`","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","title":"JSONEncoder.NonConformingFloatEncodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: HBRequest, context: some HBBaseRequestContext) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder\/hbresponseencoder-implementations","title":"HBResponseEncoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/jsonencoder","title":"JSONEncoder","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/properties-swift.struct\/subscript(_:)","title":"subscript(Substring) -> String?","type":"subscript"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/properties-swift.struct","title":"HBCookie.Properties","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/init(name:value:expires:maxage:domain:path:secure:httponly:)","title":"init(name: String, value: String, expires: Date?, maxAge: Int?, domain: String?, path: String?, secure: Bool, httpOnly: Bool)","type":"init"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/init(name:value:expires:maxage:domain:path:secure:httponly:samesite:)","title":"init(name: String, value: String, expires: Date?, maxAge: Int?, domain: String?, path: String?, secure: Bool, httpOnly: Bool, sameSite: SameSite)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/domain","title":"var domain: String?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/expires","title":"var expires: Date?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/httponly","title":"var httpOnly: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/maxage","title":"var maxAge: Int?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/path","title":"var path: String?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/properties-swift.property","title":"let properties: Properties","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.property","title":"var sameSite: SameSite?","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/secure","title":"var secure: Bool","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/value","title":"let value: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/lax","title":"case lax","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/secure","title":"case secure","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookie\/samesite-swift.enum","title":"HBCookie.SameSite","type":"enum"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookie","title":"HBCookie","type":"struct"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbcookies\/subscript(_:)","title":"subscript(String) -> HBCookie?","type":"subscript"}],"path":"\/documentation\/hummingbirdfoundation\/hbcookies","title":"HBCookies","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware\/init(_:cachecontrol:searchforindexhtml:threadpool:logger:)","title":"init(String, cacheControl: HBCacheControl, searchForIndexHtml: Bool, threadPool: NIOThreadPool, logger: Logger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware","title":"HBFileMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/init(datedecodingstrategy:userinfo:)","title":"init(dateDecodingStrategy: URLEncodedFormDecoder.DateDecodingStrategy, userInfo: [CodingUserInfoKey : Sendable])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.property","title":"var dateDecodingStrategy: DateDecodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Sendable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/decode(_:from:)","title":"func decode<T>(T.Type, from: String) throws -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/custom(_:)","title":"case custom((_ decoder: Decoder) throws -> Date)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/datedecodingstrategy-swift.enum","title":"URLEncodedFormDecoder.DateDecodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/decode(_:from:context:)","title":"func decode<T>(T.Type, from: HBRequest, context: some HBBaseRequestContext) async throws -> T","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder\/hbrequestdecoder-implementations","title":"HBRequestDecoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformdecoder","title":"URLEncodedFormDecoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/init(dateencodingstrategy:userinfo:additionalkeys:)","title":"init(dateEncodingStrategy: URLEncodedFormEncoder.DateEncodingStrategy, userInfo: [CodingUserInfoKey : Sendable], additionalKeys: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.property","title":"var dateEncodingStrategy: DateEncodingStrategy","type":"property"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/userinfo","title":"var userInfo: [CodingUserInfoKey : Sendable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/encode(_:)","title":"func encode<T>(T) throws -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/custom(_:)","title":"case custom((Date, Encoder) throws -> Void)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/deferredtodate","title":"case deferredToDate","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/formatted(_:)","title":"case formatted(DateFormatter)","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/iso8601","title":"case iso8601","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/millisecondssince1970","title":"case millisecondsSince1970","type":"case"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/secondssince1970","title":"case secondsSince1970","type":"case"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/dateencodingstrategy-swift.enum","title":"URLEncodedFormEncoder.DateEncodingStrategy","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/encode(_:from:context:)","title":"func encode(some Encodable, from: HBRequest, context: some HBBaseRequestContext) throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder\/hbresponseencoder-implementations","title":"HBResponseEncoder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdfoundation\/urlencodedformencoder","title":"URLEncodedFormEncoder","type":"struct"}],"path":"\/documentation\/hummingbirdfoundation","title":"HummingbirdFoundation","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/init(tlsconfiguration:additionalchannelhandlers:responder:)","title":"init(tlsConfiguration: TLSConfiguration, additionalChannelHandlers: () -> [any RemovableChannelHandler], responder: (HBRequest, Channel) async throws -> HBResponse) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/responder","title":"var responder: (HBRequest, Channel) async throws -> HBResponse","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/handle(value:logger:)","title":"func handle(value: Value, logger: Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/setup(channel:configuration:logger:)","title":"func setup(channel: Channel, configuration: HBServerConfiguration, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/value","title":"HTTP2Channel.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdhttp2\/http2channel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdhttp2\/http2channel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdhttp2\/http2channel","title":"HTTP2Channel","type":"struct"}],"path":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","type":"module"},{"children":[{"title":"Jobs","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjob\/execute(logger:)","title":"func execute(logger: Logger) async throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdjobs\/hbjob\/maxretrycount-5xtww","title":"static var maxRetryCount: Int","type":"property"}],"title":"HBJob Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdjobs\/hbjob\/maxretrycount-7lh34","title":"static var maxRetryCount: Int","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/hbjob\/name","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjob\/register()","title":"static func register()","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbjob","title":"HBJob","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(_:)","title":"init(String)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobinstance\/init(_:)","title":"init(HBJob)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/hbjobinstance\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobinstance\/createdat","title":"let createdAt: Date","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/hbjobinstance\/job","title":"let job: HBJob","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobinstance\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbjobinstance","title":"HBJobInstance","type":"struct"},{"title":"Queues","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/failed(jobid:error:)","title":"func failed(jobId: JobIdentifier, error: any Error) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/finished(jobid:)","title":"func finished(jobId: JobIdentifier) async throws","type":"method"},{"children":[{"children":[{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/oninit()-95xio","title":"func onInit() async throws","type":"method"}],"title":"HBJobQueue Implementations","type":"groupMarker"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/oninit()-5hhq4","title":"func onInit() async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/push(_:)","title":"func push(HBJob) async throws -> JobIdentifier","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueue\/stop()","title":"func stop() async","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueue","title":"HBJobQueue","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob\/init(_:)","title":"init(HBJob)","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob\/init(id:job:)","title":"init(id: JobIdentifier, job: HBJobInstance)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob\/id","title":"let id: JobIdentifier","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob\/job","title":"let job: HBJobInstance","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/hbqueuedjob","title":"HBQueuedJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/init(onfailedjob:)","title":"init(onFailedJob: (HBQueuedJob, any Error) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/failed(jobid:error:)","title":"func failed(jobId: JobIdentifier, error: any Error) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/finished(jobid:)","title":"func finished(jobId: JobIdentifier) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/push(_:)","title":"func push(HBJob) async throws -> JobIdentifier","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/stop()","title":"func stop() async","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/element","title":"HBMemoryJobQueue.Element","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/asynciterator","title":"HBMemoryJobQueue.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunked(by:into:)-3awug","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunked(by:into:)-99ime","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunks(ofcount:or:)-1uml9","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunks(ofcount:or:)-s5wm","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunks(ofcount:or:into:)-3ysd4","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/chunks(ofcount:or:into:)-7pxwm","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/compactmap(_:)-5ztqo","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/compactmap(_:)-6e9id","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/flatmap(_:)-1ab3o","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/flatmap(_:)-2cirl","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/interspersed(every:with:)-3g5l5","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/interspersed(every:with:)-6e4bl","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/interspersed(every:with:)-7f61s","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/interspersed(every:with:)-7vsg5","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/interspersed(every:with:)-851mc","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/map(_:)-4zdw2","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/map(_:)-4zs6j","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/reductions(_:_:)-3rza3","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/reductions(_:_:)-7i9gg","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/reductions(into:_:)-5trrl","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/reductions(into:_:)-66zo6","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/oninit()","title":"func onInit() async throws","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/hbjobqueue-implementations","title":"HBJobQueue Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","title":"HBMemoryJobQueue","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler\/init(queue:numworkers:logger:)","title":"init(queue: Queue, numWorkers: Int, logger: Logger)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","title":"HBJobQueueHandler","type":"class"},{"title":"Error","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/decodejobfailed","title":"static var decodeJobFailed: `Self`","type":"property"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/dequeueerror","title":"static var dequeueError: `Self`","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdjobs\/jobqueueerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobs\/jobqueueerror","title":"JobQueueError","type":"struct"}],"path":"\/documentation\/hummingbirdjobs","title":"HummingbirdJobs","type":"module"},{"children":[{"title":"Job Queue","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/configuration\/init(queuekey:polltime:pendingjobinitialization:processingjobsinitialization:failedjobsinitialization:)","title":"init(queueKey: String, pollTime: Duration, pendingJobInitialization: JobInitialization, processingJobsInitialization: JobInitialization, failedJobsInitialization: JobInitialization)","type":"init"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/configuration","title":"HBRedisJobQueue.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/init(_:configuration:)","title":"init(HBRedisConnectionPoolService, configuration: Configuration)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/failed(jobid:error:)","title":"func failed(jobId: JobIdentifier, error: Error) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/finished(jobid:)","title":"func finished(jobId: JobIdentifier) async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/oninit()","title":"func onInit() async throws","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/push(_:)","title":"func push(any HBJob) async throws -> JobIdentifier","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/shutdowngracefully()","title":"func shutdownGracefully() async","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/stop()","title":"func stop() async","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/jobinitialization\/donothing","title":"case doNothing","type":"case"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/jobinitialization\/remove","title":"case remove","type":"case"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/jobinitialization\/rerun","title":"case rerun","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/jobinitialization\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/jobinitialization\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/jobinitialization","title":"HBRedisJobQueue.JobInitialization","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror\/jobmissing(_:)","title":"case jobMissing(JobIdentifier)","type":"case"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror\/unexpectedrediskeytype","title":"case unexpectedRedisKeyType","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/redisqueueerror","title":"HBRedisJobQueue.RedisQueueError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/asynciterator\/next()","title":"func next() async throws -> Element?","type":"method"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/asynciterator","title":"HBRedisJobQueue.AsyncIterator","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/adjacentpairs()","title":"func adjacentPairs() -> AsyncAdjacentPairsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/buffer(policy:)","title":"func buffer(policy: AsyncBufferSequencePolicy) -> AsyncBufferSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/cancelongracefulshutdown()","title":"func cancelOnGracefulShutdown() -> AsyncCancelOnGracefulShutdownSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunked(by:)","title":"func chunked(by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunked(by:into:)-5fb0o","title":"func chunked<C, Collected>(by: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunked(by:into:)-5nfuz","title":"func chunked<Signal, Collected>(by: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunked(into:by:)","title":"func chunked<Collected>(into: Collected.Type, by: (Self.Element, Self.Element) -> Bool) -> AsyncChunkedByGroupSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunked(into:on:)","title":"func chunked<Subject, Collected>(into: Collected.Type, on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunked(on:)","title":"func chunked<Subject>(on: (Self.Element) -> Subject) -> AsyncChunkedOnProjectionSequence<Self, Subject, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunks(ofcount:)","title":"func chunks(ofCount: Int) -> AsyncChunksOfCountSequence<Self, [Self.Element]>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunks(ofcount:into:)","title":"func chunks<Collected>(ofCount: Int, into: Collected.Type) -> AsyncChunksOfCountSequence<Self, Collected>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunks(ofcount:or:)-3jssq","title":"func chunks<C>(ofCount: Int, or: AsyncTimerSequence<C>) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunks(ofcount:or:)-3yebd","title":"func chunks<Signal>(ofCount: Int, or: Signal) -> AsyncChunksOfCountOrSignalSequence<Self, [Self.Element], Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunks(ofcount:or:into:)-4a1c","title":"func chunks<Signal, Collected>(ofCount: Int, or: Signal, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, Signal>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/chunks(ofcount:or:into:)-6ils6","title":"func chunks<C, Collected>(ofCount: Int, or: AsyncTimerSequence<C>, into: Collected.Type) -> AsyncChunksOfCountOrSignalSequence<Self, Collected, AsyncTimerSequence<C>>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/compactmap(_:)-3begu","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/compactmap(_:)-dtsu","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/compacted()","title":"func compacted<Unwrapped>() -> AsyncCompactedSequence<Self, Unwrapped>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/contains(where:)","title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/debounce(for:tolerance:)","title":"func debounce(for: Duration, tolerance: Duration?) -> AsyncDebounceSequence<Self, ContinuousClock>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/debounce(for:tolerance:clock:)","title":"func debounce<C>(for: C.Instant.Duration, tolerance: C.Instant.Duration?, clock: C) -> AsyncDebounceSequence<Self, C>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/drop(while:)","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/dropfirst(_:)","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/filter(_:)","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/first(where:)","title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/flatmap(_:)-7ae60","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/flatmap(_:)-9bx10","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/interspersed(every:with:)-2g2y7","title":"func interspersed(every: Int, with: () async -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/interspersed(every:with:)-3l5dr","title":"func interspersed(every: Int, with: () -> Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/interspersed(every:with:)-5ash1","title":"func interspersed(every: Int, with: Self.Element) -> AsyncInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/interspersed(every:with:)-5l0c5","title":"func interspersed(every: Int, with: () throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/interspersed(every:with:)-8hnu8","title":"func interspersed(every: Int, with: () async throws -> Self.Element) -> AsyncThrowingInterspersedSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/makeasynciterator()","title":"func makeAsyncIterator() -> AsyncIterator","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/map(_:)-4f04b","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/map(_:)-6q7p2","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/max(by:)","title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/min(by:)","title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/prefix(_:)","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/prefix(while:)","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/reductions(_:)","title":"func reductions((Self.Element, Self.Element) async -> Self.Element) -> AsyncInclusiveReductionsSequence<Self>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/reductions(_:_:)-7dujf","title":"func reductions<Result>(Result, (Result, Self.Element) async -> Result) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/reductions(_:_:)-8a54w","title":"func reductions<Result>(Result, (Result, Self.Element) async throws -> Result) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/reductions(into:_:)-3067r","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async -> Void) -> AsyncExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/reductions(into:_:)-4iiqm","title":"func reductions<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) -> AsyncThrowingExclusiveReductionsSequence<Self, Result>","type":"method"},{"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/removeduplicates(by:)","title":"func removeDuplicates(by: (Self.Element, Self.Element) async -> Bool) -> AsyncRemoveDuplicatesSequence<Self>","type":"method"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue","title":"HBRedisJobQueue","type":"class"}],"path":"\/documentation\/hummingbirdjobsredis","title":"HummingbirdJobsRedis","type":"module"},{"children":[{"title":"Additional Features","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/lambdas","title":"Lambdas","type":"article"},{"path":"\/documentation\/hummingbird\/pragmas","title":"Pragmas\/Configuration variables","type":"article"},{"path":"\/documentation\/hummingbird\/templateinheritance","title":"Template Inheritance","type":"article"},{"path":"\/documentation\/hummingbird\/transforms","title":"Transforms","type":"article"},{"title":"Template Library","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror\/context","title":"let context: HBParser.Context","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror\/error","title":"let error: Error","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror\/filename","title":"let filename: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/parsererror","title":"HBMustacheLibrary.ParserError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/init(directory:withextension:)","title":"init(directory: String, withExtension: String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/gettemplate(named:)","title":"func getTemplate(named: String) -> HBMustacheTemplate?","type":"method"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/register(_:named:)-7rcdq","title":"func register(String, named: String) throws","type":"method"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/register(_:named:)-n0oe","title":"func register(HBMustacheTemplate, named: String)","type":"method"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary\/render(_:withtemplate:)","title":"func render(Any, withTemplate: String) -> String?","type":"method"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachelibrary","title":"HBMustacheLibrary","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/parsererror\/context","title":"let context: HBParser.Context","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/parsererror\/error","title":"let error: Swift.Error","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/parsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/parsererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/parsererror","title":"HBMustacheTemplate.ParserError","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/init(string:)","title":"init(string: String) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/render(_:)","title":"func render(Any) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/expectedsectionend","title":"case expectedSectionEnd","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/illegaltokeninsideinheritsection","title":"case illegalTokenInsideInheritSection","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/invalidconfigvariablesyntax","title":"case invalidConfigVariableSyntax","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/invalidsetdelimiter","title":"case invalidSetDelimiter","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/sectionclosenameincorrect","title":"case sectionCloseNameIncorrect","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/textinsideinheritsection","title":"case textInsideInheritSection","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/transformappliedtoinheritancesection","title":"case transformAppliedToInheritanceSection","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/unfinishedname","title":"case unfinishedName","type":"case"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/unrecognisedconfigvariable","title":"case unrecognisedConfigVariable","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate\/error","title":"HBMustacheTemplate.Error","type":"enum"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetemplate","title":"HBMustacheTemplate","type":"class"},{"title":"Rendering","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable\/isnull","title":"var isNull: Bool","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable\/rendertext","title":"var renderText: String","type":"property"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable","title":"HBMustacheCustomRenderable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustacheparent\/child(named:)","title":"func child(named: String) -> Any?","type":"method"}],"path":"\/documentation\/hummingbirdmustache\/hbmustacheparent","title":"HBMustacheParent","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachetransformable\/transform(_:)","title":"func transform(String) -> Any?","type":"method"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachetransformable","title":"HBMustacheTransformable","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelambda\/init(_:)","title":"init(Callback)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachelambda\/callback","title":"HBMustacheLambda.Callback","type":"typealias"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachelambda","title":"HBMustacheLambda","type":"struct"},{"title":"Content Types","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachecontenttype\/escapetext(_:)","title":"func escapeText(String) -> String","type":"method"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachecontenttype","title":"HBMustacheContentType","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbmustachecontenttypes\/register(_:named:)","title":"static func register(HBMustacheContentType, named: String)","type":"method"}],"path":"\/documentation\/hummingbirdmustache\/hbmustachecontenttypes","title":"HBMustacheContentTypes","type":"enum"},{"title":"Miscellaneous","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdmustache\/hbparser\/context\/columnnumber","title":"let columnNumber: Int","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbparser\/context\/line","title":"let line: String","type":"property"},{"path":"\/documentation\/hummingbirdmustache\/hbparser\/context\/linenumber","title":"let lineNumber: Int","type":"property"}],"path":"\/documentation\/hummingbirdmustache\/hbparser\/context","title":"HBParser.Context","type":"struct"}],"path":"\/documentation\/hummingbirdmustache\/hbparser","title":"HBParser","type":"struct"}],"path":"\/documentation\/hummingbirdmustache","title":"HummingbirdMustache","type":"module"},{"children":[{"title":"Connection Pool","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/init(_:eventloopgroupprovider:logger:)","title":"init(HBRedisConfiguration, eventLoopGroupProvider: EventLoopGroupProvider, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/availableconnectioncount","title":"var availableConnectionCount: Int","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leasedconnectioncount","title":"var leasedConnectionCount: Int","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/pool","title":"let pool: RedisConnectionPool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/activate(logger:)","title":"func activate(logger: Logger?)","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/close()","title":"func close() async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leaseconnection(_:)","title":"func leaseConnection<T>((RedisConnection) -> EventLoopFuture<T>) -> EventLoopFuture<T>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/run()","title":"func run() async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/updateconnectionaddresses(_:logger:)","title":"func updateConnectionAddresses([SocketAddress], logger: Logger?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/eventloop","title":"var eventLoop: NIOCore.EventLoop","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/activechannels(matching:)","title":"func activeChannels(matching: String?) -> EventLoopFuture<[RedisChannelName]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/append(_:to:)","title":"func append<Value>(Value, to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/authorize(username:password:)","title":"func authorize(username: String, password: String) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/authorize(with:)","title":"func authorize(with: String) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/blpop(from:as:timeout:)","title":"func blpop<Value>(from: RedisKey, as: Value.Type, timeout: TimeAmount) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/blpop(from:timeout:)-2xslg","title":"func blpop(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/blpop(from:timeout:)-59eai","title":"func blpop(from: RedisKey..., timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/blpop(from:timeout:)-5z0ir","title":"func blpop(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/blpop(from:timeout:valuetype:)-28jze","title":"func blpop<Value>(from: [RedisKey], timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/blpop(from:timeout:valuetype:)-96hgg","title":"func blpop<Value>(from: RedisKey..., timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/brpop(from:as:timeout:)","title":"func brpop<Value>(from: RedisKey, as: Value.Type, timeout: TimeAmount) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/brpop(from:timeout:)-1fvb","title":"func brpop(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/brpop(from:timeout:)-507zf","title":"func brpop(from: RedisKey..., timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/brpop(from:timeout:)-758my","title":"func brpop(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(RedisKey, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/brpop(from:timeout:valuetype:)-2d2aw","title":"func brpop<Value>(from: RedisKey..., timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/brpop(from:timeout:valuetype:)-91blq","title":"func brpop<Value>(from: [RedisKey], timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<(RedisKey, Value)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/brpoplpush(from:to:timeout:)","title":"func brpoplpush(from: RedisKey, to: RedisKey, timeout: TimeAmount) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/brpoplpush(from:to:timeout:valuetype:)","title":"func brpoplpush<Value>(from: RedisKey, to: RedisKey, timeout: TimeAmount, valueType: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/bzpopmax(from:timeout:)-8af9c","title":"func bzpopmax(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(String, Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/bzpopmax(from:timeout:)-vggj","title":"func bzpopmax(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<(Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/bzpopmin(from:timeout:)-3p2yn","title":"func bzpopmin(from: RedisKey, timeout: TimeAmount) -> EventLoopFuture<(Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/bzpopmin(from:timeout:)-6hvkr","title":"func bzpopmin(from: [RedisKey], timeout: TimeAmount) -> EventLoopFuture<(String, Double, RESPValue)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/decrement(_:)","title":"func decrement(RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/decrement(_:by:)","title":"func decrement<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/delete(_:)","title":"func delete([RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/echo(_:)","title":"func echo(String) -> EventLoopFuture<String>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/exists(_:)","title":"func exists([RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/expire(_:after:)","title":"func expire(RedisKey, after: TimeAmount) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/get(_:)","title":"func get(RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/get(_:as:)","title":"func get<StoredType>(RedisKey, as: StoredType.Type) -> EventLoopFuture<StoredType?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/get(_:asjson:)","title":"func get<D>(RedisKey, asJSON: D.Type) -> EventLoopFuture<D?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hdel(_:from:)","title":"func hdel([String], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hexists(_:in:)","title":"func hexists(String, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hget(_:from:)","title":"func hget(String, from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hget(_:from:as:)","title":"func hget<Value>(String, from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hgetall(from:)","title":"func hgetall(from: RedisKey) -> EventLoopFuture<[String : RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hgetall(from:as:)","title":"func hgetall<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<[String : Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hincrby(_:field:in:)","title":"func hincrby<Value>(Value, field: String, in: RedisKey) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hincrbyfloat(_:field:in:)","title":"func hincrbyfloat<Value>(Value, field: String, in: RedisKey) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hkeys(in:)","title":"func hkeys(in: RedisKey) -> EventLoopFuture<[String]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hlen(of:)","title":"func hlen(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hmget(_:from:)","title":"func hmget([String], from: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hmget(_:from:as:)-2gcx7","title":"func hmget<Value>(String..., from: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hmget(_:from:as:)-czhf","title":"func hmget<Value>([String], from: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hmset(_:in:)","title":"func hmset<Value>([String : Value], in: RedisKey) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hscan(_:startingfrom:matching:count:)","title":"func hscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [String : RESPValue])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hscan(_:startingfrom:matching:count:valuetype:)","title":"func hscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [String : Value?])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hset(_:to:in:)","title":"func hset<Value>(String, to: Value, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hsetnx(_:to:in:)","title":"func hsetnx<Value>(String, to: Value, in: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hstrlen(of:in:)","title":"func hstrlen(of: String, in: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hvals(in:)","title":"func hvals(in: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/hvals(in:as:)","title":"func hvals<Value>(in: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/increment(_:)","title":"func increment(RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/increment(_:by:)-6ck60","title":"func increment<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/increment(_:by:)-9k3rb","title":"func increment<Value>(RedisKey, by: Value) -> EventLoopFuture<Value>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lindex(_:from:)","title":"func lindex(Int, from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lindex(_:from:as:)","title":"func lindex<Value>(Int, from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/linsert(_:into:after:)","title":"func linsert<Value>(Value, into: RedisKey, after: Value) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/linsert(_:into:before:)","title":"func linsert<Value>(Value, into: RedisKey, before: Value) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/llen(of:)","title":"func llen(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/logging(to:)","title":"func logging(to: Logging.Logger) -> RediStack.RedisClient","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lpop(from:)","title":"func lpop(from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lpop(from:as:)","title":"func lpop<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lpush(_:into:)-1f3dh","title":"func lpush<Value>([Value], into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lpush(_:into:)-3t9gx","title":"func lpush<Value>(Value..., into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lpushx(_:into:)","title":"func lpushx<Value>(Value, into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:firstindex:lastindex:)","title":"func lrange(from: RedisKey, firstIndex: Int, lastIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:firstindex:lastindex:as:)","title":"func lrange<Value>(from: RedisKey, firstIndex: Int, lastIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:fromindex:)","title":"func lrange(from: RedisKey, fromIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:fromindex:as:)","title":"func lrange<Value>(from: RedisKey, fromIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:indices:)-16bff","title":"func lrange(from: RedisKey, indices: Range<Int>) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:indices:)-ef52","title":"func lrange(from: RedisKey, indices: ClosedRange<Int>) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:indices:as:)-3mck2","title":"func lrange<Value>(from: RedisKey, indices: Range<Int>, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:indices:as:)-87163","title":"func lrange<Value>(from: RedisKey, indices: ClosedRange<Int>, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:throughindex:)","title":"func lrange(from: RedisKey, throughIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:throughindex:as:)","title":"func lrange<Value>(from: RedisKey, throughIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:uptoindex:)","title":"func lrange(from: RedisKey, upToIndex: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrange(from:uptoindex:as:)","title":"func lrange<Value>(from: RedisKey, upToIndex: Int, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lrem(_:from:count:)","title":"func lrem<Value>(Value, from: RedisKey, count: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/lset(index:to:in:)","title":"func lset<Value>(index: Int, to: Value, in: RedisKey) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/ltrim(_:before:after:)","title":"func ltrim(RedisKey, before: Int, after: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/ltrim(_:keepingindices:)-16pa4","title":"func ltrim(RedisKey, keepingIndices: ClosedRange<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/ltrim(_:keepingindices:)-2kvl9","title":"func ltrim(RedisKey, keepingIndices: PartialRangeFrom<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/ltrim(_:keepingindices:)-70i4e","title":"func ltrim(RedisKey, keepingIndices: PartialRangeUpTo<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/ltrim(_:keepingindices:)-7qg9","title":"func ltrim(RedisKey, keepingIndices: PartialRangeThrough<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/ltrim(_:keepingindices:)-refa","title":"func ltrim(RedisKey, keepingIndices: Range<Int>) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/mget(_:)","title":"func mget([RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/mget(_:as:)-2or7e","title":"func mget<Value>([RedisKey], as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/mget(_:as:)-822ep","title":"func mget<Value>(RedisKey..., as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/mset(_:)","title":"func mset<Value>([RedisKey : Value]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/msetnx(_:)","title":"func msetnx<Value>([RedisKey : Value]) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/patternsubscribercount()","title":"func patternSubscriberCount() -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/ping(with:)","title":"func ping(with: String?) -> EventLoopFuture<String>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/psetex(_:to:expirationinmilliseconds:)","title":"func psetex<Value>(RedisKey, to: Value, expirationInMilliseconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/psetex(_:tojson:expirationinmilliseconds:)","title":"func psetex<Value>(RedisKey, toJSON: Value, expirationInMilliseconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/psubscribe(to:messagereceiver:onsubscribe:onunsubscribe:)","title":"func psubscribe(to: [String], messageReceiver: RedisSubscriptionMessageReceiver, onSubscribe: RedisSubscriptionChangeHandler?, onUnsubscribe: RedisSubscriptionChangeHandler?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/pttl(_:)","title":"func pttl(RedisKey) -> EventLoopFuture<RedisKey.Lifetime>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/publish(_:to:)","title":"func publish<Message>(Message, to: RedisChannelName) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/punsubscribe()","title":"func punsubscribe() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/punsubscribe(from:)","title":"func punsubscribe(from: [String]) -> NIOCore.EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/rpop(from:)","title":"func rpop(from: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/rpop(from:as:)","title":"func rpop<Value>(from: RedisKey, as: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/rpoplpush(from:to:)","title":"func rpoplpush(from: RedisKey, to: RedisKey) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/rpoplpush(from:to:valuetype:)","title":"func rpoplpush<Value>(from: RedisKey, to: RedisKey, valueType: Value.Type) -> EventLoopFuture<Value?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/rpush(_:into:)-1ba70","title":"func rpush<Value>(Value..., into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/rpush(_:into:)-7n769","title":"func rpush<Value>([Value], into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/rpushx(_:into:)","title":"func rpushx<Value>(Value, into: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sadd(_:to:)-13xlj","title":"func sadd<Value>(Value..., to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sadd(_:to:)-4tgav","title":"func sadd<Value>([Value], to: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/scan(startingfrom:matching:count:)","title":"func scan(startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [String])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/scard(of:)","title":"func scard(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sdiff(of:)","title":"func sdiff(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sdiff(of:valuetype:)-2s78r","title":"func sdiff<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sdiff(of:valuetype:)-46hgl","title":"func sdiff<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sdiffstore(as:sources:)","title":"func sdiffstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/select(database:)","title":"func select(database: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/send(command:)","title":"func send(command: String) -> EventLoopFuture<RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/send(command:with:)","title":"func send(command: String, with: [RediStack.RESPValue]) -> NIOCore.EventLoopFuture<RediStack.RESPValue>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/set(_:to:)","title":"func set<Value>(RedisKey, to: Value) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/set(_:to:oncondition:expiration:)","title":"func set<Value>(RedisKey, to: Value, onCondition: RedisSetCommandCondition, expiration: RedisSetCommandExpiration?) -> EventLoopFuture<RedisSetCommandResult>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/set(_:tojson:)","title":"func set<Value>(RedisKey, toJSON: Value) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/set(_:tojson:oncondition:expiration:)","title":"func set<Value>(RedisKey, toJSON: Value, onCondition: RedisSetCommandCondition, expiration: RedisSetCommandExpiration?) -> EventLoopFuture<RedisSetCommandResult>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/setex(_:to:expirationinseconds:)","title":"func setex<Value>(RedisKey, to: Value, expirationInSeconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/setex(_:tojson:expirationinseconds:)","title":"func setex<Value>(RedisKey, toJSON: Value, expirationInSeconds: Int) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/setnx(_:to:)","title":"func setnx<Value>(RedisKey, to: Value) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/setnx(_:tojson:)","title":"func setnx<Value>(RedisKey, toJSON: Value) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sinter(of:)","title":"func sinter(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sinter(of:valuetype:)-11l74","title":"func sinter<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sinter(of:valuetype:)-7i7oj","title":"func sinter<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sinterstore(as:sources:)","title":"func sinterstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sismember(_:of:)","title":"func sismember<Value>(Value, of: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/smembers(of:)","title":"func smembers(of: RedisKey) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/smembers(of:as:)","title":"func smembers<Value>(of: RedisKey, as: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/smove(_:from:to:)","title":"func smove<Value>(Value, from: RedisKey, to: RedisKey) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/spop(from:as:max:)","title":"func spop<Value>(from: RedisKey, as: Value.Type, max: Int) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/spop(from:max:)","title":"func spop(from: RedisKey, max: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/srandmember(from:as:max:)","title":"func srandmember<Value>(from: RedisKey, as: Value.Type, max: Int) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/srandmember(from:max:)","title":"func srandmember(from: RedisKey, max: Int) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/srem(_:from:)-3hzv9","title":"func srem<Value>(Value..., from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/srem(_:from:)-h0gx","title":"func srem<Value>([Value], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sscan(_:startingfrom:matching:count:)","title":"func sscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [RESPValue])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sscan(_:startingfrom:matching:count:valuetype:)","title":"func sscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [Value?])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/subscribe(to:messagereceiver:onsubscribe:onunsubscribe:)","title":"func subscribe(to: [RedisChannelName], messageReceiver: RedisSubscriptionMessageReceiver, onSubscribe: RedisSubscriptionChangeHandler?, onUnsubscribe: RedisSubscriptionChangeHandler?) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/subscribercount(forchannels:)","title":"func subscriberCount(forChannels: [RedisChannelName]) -> EventLoopFuture<[RedisChannelName : Int]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sunion(of:)","title":"func sunion(of: [RedisKey]) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sunion(of:valuetype:)-3j7gh","title":"func sunion<Value>(of: [RedisKey], valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sunion(of:valuetype:)-816es","title":"func sunion<Value>(of: RedisKey..., valueType: Value.Type) -> EventLoopFuture<[Value?]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/sunionstore(as:sources:)","title":"func sunionstore(as: RedisKey, sources: [RedisKey]) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/swapdatabase(_:with:)","title":"func swapDatabase(Int, with: Int) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/ttl(_:)","title":"func ttl(RedisKey) -> EventLoopFuture<RedisKey.Lifetime>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/unsubscribe()","title":"func unsubscribe() -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/unsubscribe(from:)","title":"func unsubscribe(from: [RediStack.RedisChannelName]) -> NIOCore.EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zadd(_:to:inserting:returning:)-77s80","title":"func zadd<Value>((element: Value, score: Double), to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Bool>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zadd(_:to:inserting:returning:)-79hfa","title":"func zadd<Value>([(element: Value, score: Double)], to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zadd(_:to:inserting:returning:)-88k6z","title":"func zadd<Value>((element: Value, score: Double)..., to: RedisKey, inserting: RedisZaddInsertBehavior, returning: RedisZaddReturnBehavior) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zcard(of:)","title":"func zcard(of: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zcount(of:withmaximumscoreof:)","title":"func zcount(of: RedisKey, withMaximumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zcount(of:withminimumscoreof:)","title":"func zcount(of: RedisKey, withMinimumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zcount(of:withscores:)-1obn0","title":"func zcount(of: RedisKey, withScores: ClosedRange<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zcount(of:withscores:)-8sqs2","title":"func zcount(of: RedisKey, withScores: Range<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zcount(of:withscoresbetween:)","title":"func zcount(of: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zincrby(_:element:in:)","title":"func zincrby<Value>(Double, element: Value, in: RedisKey) -> EventLoopFuture<Double>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zinterstore(as:sources:weights:aggregatemethod:)","title":"func zinterstore(as: RedisKey, sources: [RedisKey], weights: [Int]?, aggregateMethod: RedisSortedSetAggregateMethod?) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zlexcount(of:withmaximumvalueof:)","title":"func zlexcount<Value>(of: RedisKey, withMaximumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zlexcount(of:withminimumvalueof:)","title":"func zlexcount<Value>(of: RedisKey, withMinimumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zlexcount(of:withvaluesbetween:)","title":"func zlexcount<Value>(of: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zpopmax(from:)","title":"func zpopmax(from: RedisKey) -> EventLoopFuture<(RESPValue, Double)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zpopmax(from:max:)","title":"func zpopmax(from: RedisKey, max: Int) -> EventLoopFuture<[(RESPValue, Double)]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zpopmin(from:)","title":"func zpopmin(from: RedisKey) -> EventLoopFuture<(RESPValue, Double)?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zpopmin(from:max:)","title":"func zpopmin(from: RedisKey, max: Int) -> EventLoopFuture<[(RESPValue, Double)]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrange(from:firstindex:lastindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, firstIndex: Int, lastIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrange(from:fromindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, fromIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrange(from:indices:includescoresinresponse:)-7ea6f","title":"func zrange(from: RedisKey, indices: Range<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrange(from:indices:includescoresinresponse:)-7ew16","title":"func zrange(from: RedisKey, indices: ClosedRange<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrange(from:throughindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, throughIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrange(from:uptoindex:includescoresinresponse:)","title":"func zrange(from: RedisKey, upToIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrangebylex(from:withmaximumvalueof:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrangebylex(from:withminimumvalueof:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrangebylex(from:withvaluesbetween:limitby:)","title":"func zrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>), limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrangebyscore(from:withmaximumscoreof:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrangebyscore(from:withminimumscoreof:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrangebyscore(from:withscores:limitby:includescoresinresponse:)-44k71","title":"func zrangebyscore(from: RedisKey, withScores: ClosedRange<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrangebyscore(from:withscores:limitby:includescoresinresponse:)-8p7y3","title":"func zrangebyscore(from: RedisKey, withScores: Range<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrangebyscore(from:withscoresbetween:limitby:includescoresinresponse:)","title":"func zrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound), limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrank(of:in:)","title":"func zrank<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Int?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrem(_:from:)-1p3kr","title":"func zrem<Value>(Value..., from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrem(_:from:)-8ojad","title":"func zrem<Value>([Value], from: RedisKey) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebylex(from:withmaximumvalueof:)","title":"func zremrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebylex(from:withminimumvalueof:)","title":"func zremrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebylex(from:withvaluesbetween:)","title":"func zremrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyrank(from:firstindex:lastindex:)","title":"func zremrangebyrank(from: RedisKey, firstIndex: Int, lastIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyrank(from:fromindex:)","title":"func zremrangebyrank(from: RedisKey, fromIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyrank(from:indices:)-1d92z","title":"func zremrangebyrank(from: RedisKey, indices: Range<Int>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyrank(from:indices:)-25bgz","title":"func zremrangebyrank(from: RedisKey, indices: ClosedRange<Int>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyrank(from:throughindex:)","title":"func zremrangebyrank(from: RedisKey, throughIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyrank(from:uptoindex:)","title":"func zremrangebyrank(from: RedisKey, upToIndex: Int) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyscore(from:withmaximumscoreof:)","title":"func zremrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyscore(from:withminimumscoreof:)","title":"func zremrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyscore(from:withscores:)-11gs7","title":"func zremrangebyscore(from: RedisKey, withScores: Range<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyscore(from:withscores:)-orkr","title":"func zremrangebyscore(from: RedisKey, withScores: ClosedRange<Double>) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zremrangebyscore(from:withscoresbetween:)","title":"func zremrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound)) -> EventLoopFuture<Int>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrange(from:firstindex:lastindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, firstIndex: Int, lastIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrange(from:fromindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, fromIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrange(from:indices:includescoresinresponse:)-4hgm0","title":"func zrevrange(from: RedisKey, indices: ClosedRange<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrange(from:indices:includescoresinresponse:)-9wlpb","title":"func zrevrange(from: RedisKey, indices: Range<Int>, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrange(from:throughindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, throughIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrange(from:uptoindex:includescoresinresponse:)","title":"func zrevrange(from: RedisKey, upToIndex: Int, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrangebylex(from:withmaximumvalueof:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withMaximumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrangebylex(from:withminimumvalueof:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withMinimumValueOf: RedisZLexBound<Value>, limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrangebylex(from:withvaluesbetween:limitby:)","title":"func zrevrangebylex<Value>(from: RedisKey, withValuesBetween: (min: RedisZLexBound<Value>, max: RedisZLexBound<Value>), limitBy: (offset: Int, count: Int)?) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrangebyscore(from:withmaximumscoreof:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withMaximumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrangebyscore(from:withminimumscoreof:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withMinimumScoreOf: RedisZScoreBound, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrangebyscore(from:withscores:limitby:includescoresinresponse:)-4zlo7","title":"func zrevrangebyscore(from: RedisKey, withScores: Range<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrangebyscore(from:withscores:limitby:includescoresinresponse:)-78cx7","title":"func zrevrangebyscore(from: RedisKey, withScores: ClosedRange<Double>, limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrangebyscore(from:withscoresbetween:limitby:includescoresinresponse:)","title":"func zrevrangebyscore(from: RedisKey, withScoresBetween: (min: RedisZScoreBound, max: RedisZScoreBound), limitBy: (offset: Int, count: Int)?, includeScoresInResponse: Bool) -> EventLoopFuture<[RESPValue]>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zrevrank(of:in:)","title":"func zrevrank<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Int?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zscan(_:startingfrom:matching:count:)","title":"func zscan(RedisKey, startingFrom: Int, matching: String?, count: Int?) -> EventLoopFuture<(Int, [(RESPValue, Double)])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zscan(_:startingfrom:matching:count:valuetype:)","title":"func zscan<Value>(RedisKey, startingFrom: Int, matching: String?, count: Int?, valueType: Value.Type) -> EventLoopFuture<(Int, [(Value, Double)?])>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zscore(of:in:)","title":"func zscore<Value>(of: Value, in: RedisKey) -> EventLoopFuture<Double?>","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/zunionstore(as:sources:weights:aggregatemethod:)","title":"func zunionstore(as: RedisKey, sources: [RedisKey], weights: [Int]?, aggregateMethod: RedisSortedSetAggregateMethod?) -> EventLoopFuture<Int>","type":"method"}],"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/redisclient-implementations","title":"RedisClient Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","title":"HBRedisConnectionPoolService","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/init(maximumconnectioncount:minimumconnectioncount:connectionbackofffactor:initialconnectionbackoffdelay:connectionretrytimeout:)","title":"init(maximumConnectionCount: RedisConnectionPoolSize, minimumConnectionCount: Int, connectionBackoffFactor: Float32, initialConnectionBackoffDelay: TimeAmount, connectionRetryTimeout: TimeAmount?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/connectionbackofffactor","title":"var connectionBackoffFactor: Float32","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/connectionretrytimeout","title":"var connectionRetryTimeout: TimeAmount?","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/initialconnectionbackoffdelay","title":"var initialConnectionBackoffDelay: TimeAmount","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/maximumconnectioncount","title":"var maximumConnectionCount: RedisConnectionPoolSize","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions\/minimumconnectioncount","title":"var minimumConnectionCount: Int","type":"property"}],"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pooloptions","title":"HBRedisConfiguration.PoolOptions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/init(hostname:port:password:database:pool:)","title":"init(hostname: String, port: Int, password: String?, database: Int?, pool: PoolOptions) throws","type":"init"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/init(serveraddresses:password:database:pool:)","title":"init(serverAddresses: [SocketAddress], password: String?, database: Int?, pool: PoolOptions) throws","type":"init"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/init(url:pool:)-5y2mz","title":"init(url: URL, pool: PoolOptions) throws","type":"init"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/init(url:pool:)-6wkm4","title":"init(url: String, pool: PoolOptions) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/database","title":"var database: Int?","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/password","title":"var password: String?","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/pool","title":"var pool: PoolOptions","type":"property"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/serveraddresses","title":"var serverAddresses: [SocketAddress]","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration\/validationerror","title":"HBRedisConfiguration.ValidationError","type":"typealias"}],"path":"\/documentation\/hummingbirdredis\/hbredisconfiguration","title":"HBRedisConfiguration","type":"struct"},{"title":"Persist","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/init(redisconnectionpoolservice:)","title":"init(redisConnectionPoolService: HBRedisConnectionPoolService)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/create(key:value:expires:)","title":"func create<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/get(key:as:)","title":"func get<Object>(key: String, as: Object.Type) async throws -> Object?","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/remove(key:)","title":"func remove(key: String) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/set(key:value:expires:)","title":"func set<Object>(key: String, value: Object, expires: Duration?) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/create(key:value:)","title":"func create<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/set(key:value:)","title":"func set<Object>(key: String, value: Object) async throws","type":"method"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/shutdown()","title":"func shutdown() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/hbpersistdriver-implementations","title":"HBPersistDriver Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/run()","title":"func run() async throws","type":"method"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver\/service-implementations","title":"Service Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdredis\/hbredispersistdriver","title":"HBRedisPersistDriver","type":"struct"}],"path":"\/documentation\/hummingbirdredis","title":"HummingbirdRedis","type":"module"},{"children":[{"title":"RouterBuilder","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/init(context:builder:)","title":"init(context: Context.Type, builder: () -> Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/input","title":"HBRouterBuilder.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/output","title":"HBRouterBuilder.Output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/respond(to:context:)","title":"func respond(to: Input, context: Context) async throws -> Output","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/hbresponder-implementations","title":"HBResponder Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/buildresponder()","title":"func buildResponder() -> HBRouterBuilder<Context, Handler>","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/hbresponderbuilder-implementations","title":"HBResponderBuilder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder","title":"HBRouterBuilder","type":"struct"},{"title":"Request Context","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterrequestcontext\/routercontext","title":"var routerContext: HBRouterBuilderContext","type":"property"}],"path":"\/documentation\/hummingbirdrouter\/hbrouterrequestcontext","title":"HBRouterRequestContext","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/init(allocator:logger:)","title":"init(allocator: ByteBufferAllocator, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/corecontext","title":"var coreContext: HBCoreRequestContext","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/routercontext","title":"var routerContext: HBRouterBuilderContext","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/allocator","title":"var allocator: ByteBufferAllocator","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/endpointpath","title":"var endpointPath: String?","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/maxuploadsize","title":"var maxUploadSize: Int","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/parameters","title":"var parameters: HBParameters","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/requestdecoder","title":"var requestDecoder: HBRequestDecoder","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/responseencoder","title":"var responseEncoder: HBResponseEncoder","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/threadpool","title":"var threadPool: NIOThreadPool","type":"property"}],"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/hbbaserequestcontext-implementations","title":"HBBaseRequestContext Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/init(channel:logger:)","title":"init(channel: Channel, logger: Logger)","type":"init"}],"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/hbrequestcontext-implementations","title":"HBRequestContext Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext","title":"HBBasicRouterRequestContext","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuildercontext\/init()","title":"init()","type":"init"}],"path":"\/documentation\/hummingbirdrouter\/hbrouterbuildercontext","title":"HBRouterBuilderContext","type":"struct"},{"title":"Result Builder","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/init(context:builder:)","title":"init(context: Context.Type, builder: () -> Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/input","title":"HBRouterBuilder.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/output","title":"HBRouterBuilder.Output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/respond(to:context:)","title":"func respond(to: Input, context: Context) async throws -> Output","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/hbresponder-implementations","title":"HBResponder Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/buildresponder()","title":"func buildResponder() -> HBRouterBuilder<Context, Handler>","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder\/hbresponderbuilder-implementations","title":"HBResponderBuilder Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdrouter\/hbrouterbuilder","title":"HBRouterBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/init(_:builder:)","title":"init(RouterPath, builder: () -> Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/input","title":"RouteGroup.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/routegroup\/output","title":"RouteGroup.Output","type":"typealias"}],"path":"\/documentation\/hummingbirdrouter\/routegroup","title":"RouteGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/route\/init(_:_:builder:)","title":"init<M0>(HTTPRequest.Method, RouterPath, builder: () -> M0)","type":"init"},{"path":"\/documentation\/hummingbirdrouter\/route\/init(_:_:handler:)","title":"init<RouteOutput>(HTTPRequest.Method, RouterPath, handler: (Input, Context) async throws -> RouteOutput)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/route\/fullpath","title":"let fullPath: String","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/route\/handler","title":"let handler: Handler","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/route\/method","title":"let method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/hummingbirdrouter\/route\/routerpath","title":"let routerPath: RouterPath","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/route\/handle(_:context:next:)","title":"func handle(HBRequest, context: Context, next: (HBRequest, Context) async throws -> HBResponse) async throws -> HBResponse","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/route","title":"Route","type":"struct"},{"path":"\/documentation\/hummingbirdrouter\/get(_:builder:)","title":"func Get<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/get(_:handler:)","title":"func Get<RouteOutput, Context>(RouterPath, handler: (HBRequest, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/head(_:builder:)","title":"func Head<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/head(_:handler:)","title":"func Head<RouteOutput, Context>(RouterPath, handler: (HBRequest, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/put(_:builder:)","title":"func Put<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/put(_:handler:)","title":"func Put<RouteOutput, Context>(RouterPath, handler: (HBRequest, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/post(_:builder:)","title":"func Post<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/post(_:handler:)","title":"func Post<RouteOutput, Context>(RouterPath, handler: (HBRequest, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/patch(_:builder:)","title":"func Patch<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/patch(_:handler:)","title":"func Patch<RouteOutput, Context>(RouterPath, handler: (HBRequest, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/delete(_:builder:)","title":"func Delete<M0, Context>(RouterPath, builder: () -> M0) -> Route<_RouteHandlerMiddleware<M0>, Context>","type":"func"},{"path":"\/documentation\/hummingbirdrouter\/delete(_:handler:)","title":"func Delete<RouteOutput, Context>(RouterPath, handler: (HBRequest, Context) async throws -> RouteOutput) -> Route<_RouteHandlerClosure<RouteOutput, Context>, Context>","type":"func"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/handle\/init(_:)","title":"init(Handler)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/handle\/handle(_:context:next:)","title":"func handle(Input, context: Context, next: (Input, Context) async throws -> Output) async throws -> Output","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/handle\/handler","title":"Handle.Handler","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/handle\/input","title":"Handle.Input","type":"typealias"},{"path":"\/documentation\/hummingbirdrouter\/handle\/output","title":"Handle.Output","type":"typealias"}],"path":"\/documentation\/hummingbirdrouter\/handle","title":"Handle","type":"struct"},{"title":"Result Builders","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/middlewarefixedtypebuilder\/buildblock(_:)","title":"static func buildBlock<M0>(M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/middlewarefixedtypebuilder\/buildexpression(_:)","title":"static func buildExpression<M0>(M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/middlewarefixedtypebuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<M0, M1>(accumulated: M0, next: M1) -> _Middleware2<M0, M1>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/middlewarefixedtypebuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<M0>(first: M0) -> M0","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/middlewarefixedtypebuilder","title":"MiddlewareFixedTypeBuilder","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildblock(_:)","title":"static func buildBlock<RouteOutput>(Handle<RouteOutput, Context>) -> Handle<RouteOutput, Context>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildexpression(_:)-5vz84","title":"static func buildExpression<M0>(M0) -> M0","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildexpression(_:)-9srpf","title":"static func buildExpression<HandlerOutput>((HBRequest, Context) async throws -> HandlerOutput) -> Handle<HandlerOutput, Context>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildfinalresult(_:)-6ipxr","title":"static func buildFinalResult<M0, RouteOutput>(_Middleware2<M0, Handle<RouteOutput, M0.Context>>) -> _Middleware2<M0, Handle<RouteOutput, M0.Context>>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildfinalresult(_:)-xj4t","title":"static func buildFinalResult<RouteOutput>(Handle<RouteOutput, Context>) -> Handle<RouteOutput, Context>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildpartialblock(accumulated:next:)","title":"static func buildPartialBlock<M0, M1>(accumulated: M0, next: M1) -> _Middleware2<M0, M1>","type":"method"},{"path":"\/documentation\/hummingbirdrouter\/routebuilder\/buildpartialblock(first:)","title":"static func buildPartialBlock<M0>(first: M0) -> M0","type":"method"}],"path":"\/documentation\/hummingbirdrouter\/routebuilder","title":"RouteBuilder","type":"enum"}],"path":"\/documentation\/hummingbirdrouter","title":"HummingbirdRouter","type":"module"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/init(_:tlsconfiguration:)","title":"init(BaseChannel, tlsConfiguration: TLSConfiguration) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/handle(value:logger:)","title":"func handle(value: BaseChannel.Value, logger: Logging.Logger) async","type":"method"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/setup(channel:configuration:logger:)","title":"func setup(channel: Channel, configuration: HBServerConfiguration, logger: Logger) -> EventLoopFuture<Value>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/value","title":"TLSChannel.Value","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/responder","title":"var responder: (HBRequest, Channel) async throws -> HBResponse","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdtls\/tlschannel\/handlehttp(asyncchannel:logger:)","title":"func handleHTTP(asyncChannel: NIOAsyncChannel<HTTPRequestPart, HTTPResponsePart>, logger: Logger) async","type":"method"}],"path":"\/documentation\/hummingbirdtls\/tlschannel\/httpchannelhandler-implementations","title":"HTTPChannelHandler Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdtls\/tlschannel","title":"TLSChannel","type":"struct"}],"path":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS","type":"module"},{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/hummingbird\/testing","title":"Testing","type":"article"},{"title":"Test Setup","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/xcttestingsetup\/live","title":"static var live: XCTTestingSetup","type":"property"},{"path":"\/documentation\/hummingbirdxct\/xcttestingsetup\/router","title":"static var router: XCTTestingSetup","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/xcttestingsetup\/ahc(_:)","title":"static func ahc(XCTScheme) -> XCTTestingSetup","type":"method"}],"path":"\/documentation\/hummingbirdxct\/xcttestingsetup","title":"XCTTestingSetup","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/xctscheme\/http","title":"case http","type":"case"},{"path":"\/documentation\/hummingbirdxct\/xctscheme\/https","title":"case https","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/xctscheme\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/xctscheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdxct\/xctscheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/xctscheme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/xctscheme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/hummingbirdxct\/xctscheme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdxct\/xctscheme","title":"XCTScheme","type":"enum"},{"path":"\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)","title":"func test<Value>(XCTTestingSetup, (any HBXCTClientProtocol) async throws -> Value) async throws -> Value","type":"method"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclientprotocol\/xctexecute(uri:method:headers:body:testcallback:)","title":"func XCTExecute<Return>(uri: String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?, testCallback: (HBXCTResponse) async throws -> Return) async throws -> Return","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclientprotocol\/execute(uri:method:headers:body:)","title":"func execute(uri: String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?) async throws -> HBXCTResponse","type":"method"}],"path":"\/documentation\/hummingbirdxct\/hbxctclientprotocol","title":"HBXCTClientProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/configuration\/init(tlsconfiguration:timeout:servername:)","title":"init(tlsConfiguration: TLSConfiguration?, timeout: Duration, serverName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/configuration\/servername","title":"let serverName: String?","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/configuration\/timeout","title":"let timeout: Duration","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/configuration\/tlsconfiguration","title":"let tlsConfiguration: TLSConfiguration?","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/configuration","title":"HBXCTClient.Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request\/init(_:method:authority:headers:body:)","title":"init(String, method: HTTPRequest.Method, authority: String?, headers: HTTPFields, body: ByteBuffer?)","type":"init"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request\/init(_:method:headers:body:)","title":"init(String, method: HTTPRequest.Method, headers: HTTPFields, body: ByteBuffer?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request\/body","title":"var body: ByteBuffer?","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request\/head","title":"var head: HTTPRequest","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/request","title":"HBXCTClient.Request","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response\/init(head:body:trailerheaders:)","title":"init(head: HTTPResponse, body: ByteBuffer?, trailerHeaders: HTTPFields?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response\/body","title":"var body: ByteBuffer?","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response\/head","title":"var head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response\/status","title":"var status: HTTPResponse.Status","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response\/trailerheaders","title":"var trailerHeaders: HTTPFields?","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/response","title":"HBXCTClient.Response","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/init(host:port:configuration:eventloopgroupprovider:)","title":"init(host: String, port: Int, configuration: Configuration, eventLoopGroupProvider: NIOEventLoopGroupProvider)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/channelpromise","title":"let channelPromise: EventLoopPromise<Channel>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/close()","title":"func close() async throws","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/connect()","title":"func connect()","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/delete(_:headers:body:)","title":"func delete(String, headers: HTTPFields, body: ByteBuffer) async throws -> HBXCTClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/execute(_:)","title":"func execute(HBXCTClient.Request) async throws -> HBXCTClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/get(_:headers:)","title":"func get(String, headers: HTTPFields) async throws -> HBXCTClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/getchannel()","title":"func getChannel() async throws -> Channel","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/head(_:headers:)","title":"func head(String, headers: HTTPFields) async throws -> HBXCTClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/post(_:headers:body:)","title":"func post(String, headers: HTTPFields, body: ByteBuffer) async throws -> HBXCTClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/put(_:headers:body:)","title":"func put(String, headers: HTTPFields, body: ByteBuffer) async throws -> HBXCTClient.Response","type":"method"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/shutdown()","title":"func shutdown() async throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/connectionclosing","title":"case connectionClosing","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/connectionnotopen","title":"case connectionNotOpen","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/invalidurl","title":"case invalidURL","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/malformedresponse","title":"case malformedResponse","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/noresponse","title":"case noResponse","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/readtimeout","title":"case readTimeout","type":"case"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/tlssetupfailed","title":"case tlsSetupFailed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient\/error","title":"HBXCTClient.Error","type":"enum"}],"path":"\/documentation\/hummingbirdxct\/hbxctclient","title":"HBXCTClient","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/hummingbirdxct\/hbxctresponse\/body","title":"let body: ByteBuffer","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctresponse\/head","title":"let head: HTTPResponse","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctresponse\/headers","title":"var headers: HTTPFields","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctresponse\/status","title":"var status: HTTPResponse.Status","type":"property"},{"path":"\/documentation\/hummingbirdxct\/hbxctresponse\/trailerheaders","title":"let trailerHeaders: HTTPFields?","type":"property"}],"path":"\/documentation\/hummingbirdxct\/hbxctresponse","title":"HBXCTResponse","type":"struct"}],"path":"\/documentation\/hummingbirdxct","title":"HummingbirdXCT","type":"module"},{"path":"\/documentation\/hummingbird\/mustache-syntax","title":"Mustache Syntax","type":"article"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}