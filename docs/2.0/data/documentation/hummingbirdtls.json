{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","interfaceLanguage":"swift"},"metadata":{"externalID":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}],"roleHeading":"Framework","title":"HummingbirdTLS","symbolKind":"module","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}],"topicSections":[{"generated":true,"anchor":"Structures","title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]}],"seeAlsoSections":[{"anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"],"title":"Related Documentation"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"text":"HummingbirdTLS provides TLS support via ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"},{"text":". You can add this to your application using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The function "},{"code":"tls","type":"codeVoice"},{"text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel.","type":"text"}]}],"kind":"content"}],"references":{"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","url":"\/documentation\/hummingbirdhttp2","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","type":"topic","title":"HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder/tls(_:tlsConfiguration:)":{"abstract":[{"text":"Build server supporting HTTP with TLS","type":"text"}],"url":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:tlsconfiguration:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)","title":"tls(_:tlsConfiguration:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tls"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"HTTPServerBuilder","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV"},{"kind":"text","text":", "},{"text":"tlsConfiguration","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TLSConfiguration","preciseIdentifier":"s:6NIOSSL16TLSConfigurationV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"HTTPServerBuilder","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","kind":"typeIdentifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","title":"HummingbirdCore","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"kind":"symbol","url":"\/documentation\/hummingbirdtls\/tlschannel","abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TLSChannel","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"topic","title":"TLSChannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"kind":"symbol","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}],"url":"\/documentation\/hummingbirdtls","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","type":"topic","title":"HummingbirdTLS"}}}