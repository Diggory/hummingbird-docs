{"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single type "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","isActive":true},{"type":"text","text":". If you want a server to support TLS then build a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","isActive":true},{"type":"text","text":" with your base channel setup type and a "},{"type":"codeVoice","code":"TLSConfiguration"},{"type":"text","text":" struct from "},{"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"reference","isActive":true},{"type":"text","text":" as parameters."}],"type":"paragraph"},{"syntax":"swift","code":["let http1Channel = HTTP1Channel { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create TLS Channel","let tlsChannel = TLSChannel(http1Channel, tlsConfiguration: tlsConfiguration)","let server = HBServer(","    childChannelSetup: tlsChannel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"type":"codeListing"}]}],"metadata":{"role":"collection","externalID":"HummingbirdTLS","symbolKind":"module","roleHeading":"Framework","title":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}]},"kind":"symbol","topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"sections":[],"hierarchy":{"paths":[[]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","title":"HummingbirdHTTP2","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"role":"collection"},"https://github.com/apple/swift-nio-ssl":{"url":"https:\/\/github.com\/apple\/swift-nio-ssl","title":"NIOSSL","type":"link","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","titleInlineContent":[{"text":"NIOSSL","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"kind":"symbol","title":"HummingbirdTLS","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","url":"\/documentation\/hummingbirdtls","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"kind":"symbol","navigatorTitle":[{"text":"TLSChannel","kind":"identifier"}],"title":"TLSChannel","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}],"url":"\/documentation\/hummingbirdtls\/tlschannel","abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","kind":"symbol"}}}