{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"metadata":{"externalID":"HummingbirdTLS","role":"collection","modules":[{"name":"HummingbirdTLS"}],"symbolKind":"module","roleHeading":"Framework","title":"HummingbirdTLS"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"],"title":"Related Documentation"}],"sections":[],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"HummingbirdTLS adds a single type ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference"},{"text":". If you want a server to support TLS then build a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference"},{"text":" with your base channel setup type and a ","type":"text"},{"code":"TLSConfiguration","type":"codeVoice"},{"text":" struct from ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"reference"},{"text":" as parameters.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let http1Channel = HTTP1Channel { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create TLS Channel","let tlsChannel = TLSChannel(http1Channel, tlsConfiguration: tlsConfiguration)","let server = HBServer(","    childChannelSetup: tlsChannel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]}],"kind":"content"}],"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"hierarchy":{"paths":[[]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"],"title":"Structures"}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic"},"https://github.com/apple/swift-nio-ssl":{"titleInlineContent":[{"text":"NIOSSL","type":"text"}],"url":"https:\/\/github.com\/apple\/swift-nio-ssl","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"link","title":"NIOSSL"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}],"abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"navigatorTitle":[{"text":"TLSChannel","kind":"identifier"}],"url":"\/documentation\/hummingbirdtls\/tlschannel","title":"TLSChannel","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","url":"\/documentation\/hummingbirdhttp2","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","title":"HummingbirdHTTP2","kind":"symbol","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","role":"collection","kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic"}}}