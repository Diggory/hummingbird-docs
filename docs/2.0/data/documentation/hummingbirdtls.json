{"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"sections":[],"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"],"title":"Related Documentation"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel"],"title":"Structures"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdTLS provides TLS support via ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference","isActive":true},{"text":". You can add this to your application using ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)","type":"reference","isActive":true},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"]},{"type":"paragraph","inlineContent":[{"text":"The function ","type":"text"},{"type":"codeVoice","code":"tls"},{"text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Framework","role":"collection","symbolKind":"module","modules":[{"name":"HummingbirdTLS"}],"externalID":"HummingbirdTLS","title":"HummingbirdTLS"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"type":"topic","title":"HummingbirdTLS","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"url":"\/documentation\/hummingbirdtls","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSClientChannel":{"title":"TLSClientChannel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSClientChannel"}],"abstract":[{"type":"text","text":"Sets up client channel to use TLS before accessing base channel setup"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel","url":"\/documentation\/hummingbirdtls\/tlsclientchannel","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TLSClientChannel"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder/tls(_:tlsConfiguration:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tls"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"BaseChannel"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"HTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"BaseChannel","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"tlsConfiguration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TLSConfiguration","preciseIdentifier":"s:6NIOSSL16TLSConfigurationV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","text":"HTTPChannelBuilder"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdTLS10TLSChannelV","text":"TLSChannel"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp","text":"BaseChannel"},{"kind":"text","text":">>"}],"url":"\/documentation\/hummingbirdcore\/httpchannelbuilder\/tls(_:tlsconfiguration:)","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"ChildChannel"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ServerChildChannel"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"type":"text","text":"Build child channel supporting HTTP with TLS"}],"title":"tls(_:tlsConfiguration:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"type":"topic","title":"TLSChannel","url":"\/documentation\/hummingbirdtls\/tlschannel","abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection"}}}