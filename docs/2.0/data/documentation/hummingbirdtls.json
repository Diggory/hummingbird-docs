{"kind":"symbol","hierarchy":{"paths":[[]]},"metadata":{"title":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}],"externalID":"HummingbirdTLS","roleHeading":"Framework","symbolKind":"module","role":"collection"},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single type "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference"},{"type":"text","text":". If you want a server to support TLS then build a "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference"},{"type":"text","text":" with your base channel setup type and a "},{"code":"TLSConfiguration","type":"codeVoice"},{"type":"text","text":" struct from "},{"isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"reference"},{"text":" as parameters.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let http1Channel = HTTP1Channel { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create TLS Channel","let tlsChannel = TLSChannel(http1Channel, tlsConfiguration: tlsConfiguration)","let server = HBServer(","    childChannelSetup: tlsChannel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"type":"codeListing"}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"url":"\/documentation\/hummingbirdtls","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","kind":"symbol","title":"HummingbirdTLS","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"role":"collection","kind":"symbol","title":"HummingbirdHTTP2","type":"topic"},"https://github.com/apple/swift-nio-ssl":{"titleInlineContent":[{"type":"text","text":"NIOSSL"}],"title":"NIOSSL","type":"link","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","url":"https:\/\/github.com\/apple\/swift-nio-ssl"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"url":"\/documentation\/hummingbirdtls\/tlschannel","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","title":"TLSChannel"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","type":"topic","kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"}}}