{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel"]}],"metadata":{"title":"HummingbirdTLS","externalID":"HummingbirdTLS","symbolKind":"module","modules":[{"name":"HummingbirdTLS"}],"roleHeading":"Framework","role":"collection"},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"inlineContent":[{"text":"HummingbirdTLS provides TLS support via ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"},{"text":". You can add this to your application using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder\/tls(_:tlsConfiguration:)"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = HBRouter()","let app = HBApplication(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The function "},{"code":"tls","type":"codeVoice"},{"type":"text","text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"type":"topic","kind":"symbol","title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder/tls(_:tlsConfiguration:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder\/tls(_:tlsConfiguration:)","type":"topic","abstract":[{"text":"Build child channel supporting HTTP with TLS","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder\/tls(_:tlsconfiguration:)","title":"tls(_:tlsConfiguration:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tls","kind":"identifier"},{"text":"<","kind":"text"},{"text":"BaseChannel","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"HBHTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"BaseChannel","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA14HBChildChannelRd__lFZ04BaseL0L_qd__mfp","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"tlsConfiguration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TLSConfiguration","preciseIdentifier":"s:6NIOSSL16TLSConfigurationV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBHTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"TLSChannel","preciseIdentifier":"s:14HummingbirdTLS10TLSChannelV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"BaseChannel","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA14HBChildChannelRd__lFZ04BaseL0L_qd__mfp","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ChildChannel","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"HBChildChannel","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}],"abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"kind":"symbol","url":"\/documentation\/hummingbirdtls\/tlschannel","navigatorTitle":[{"text":"TLSChannel","kind":"identifier"}],"title":"TLSChannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"type":"topic","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSClientChannel":{"abstract":[{"type":"text","text":"Sets up client channel to use TLS before accessing base channel setup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TLSClientChannel"}],"title":"TLSClientChannel","type":"topic","url":"\/documentation\/hummingbirdtls\/tlsclientchannel","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TLSClientChannel","kind":"identifier"}],"role":"symbol"}}}