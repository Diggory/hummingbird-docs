{"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[[]]},"metadata":{"title":"HummingbirdTLS","symbolKind":"module","roleHeading":"Framework","externalID":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}],"role":"collection"},"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdTLS provides TLS support via "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference","isActive":true},{"type":"text","text":". You can add this to your application using "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder\/tls(_:tlsConfiguration:)","type":"reference","isActive":true},{"type":"text","text":"."}]},{"syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = HBRouter()","let app = HBApplication(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The function "},{"code":"tls","type":"codeVoice"},{"type":"text","text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel."}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"url":"\/documentation\/hummingbirdtls\/tlschannel","kind":"symbol","title":"TLSChannel","navigatorTitle":[{"text":"TLSChannel","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"topic","role":"symbol","abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"url":"\/documentation\/hummingbirdhttp2","type":"topic","title":"HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"url":"\/documentation\/hummingbirdtls","type":"topic","title":"HummingbirdTLS","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","kind":"symbol","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder/tls(_:tlsConfiguration:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder\/tls(_:tlsConfiguration:)","url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder\/tls(_:tlsconfiguration:)","type":"topic","kind":"symbol","title":"tls(_:tlsConfiguration:)","abstract":[{"type":"text","text":"Build child channel supporting HTTP with TLS"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"ChildChannel"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"HBChildChannel"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tls"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"BaseChannel"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"HBHTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"BaseChannel","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA14HBChildChannelRd__lFZ04BaseL0L_qd__mfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"tlsConfiguration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TLSConfiguration","preciseIdentifier":"s:6NIOSSL16TLSConfigurationV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HBHTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"TLSChannel","preciseIdentifier":"s:14HummingbirdTLS10TLSChannelV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"BaseChannel","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA14HBChildChannelRd__lFZ04BaseL0L_qd__mfp"},{"kind":"text","text":">>"}]}}}