{"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdTLS provides TLS support via "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","isActive":true},{"type":"text","text":". You can add this to your application using "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)","isActive":true},{"type":"text","text":"."}]},{"type":"codeListing","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The function "},{"type":"codeVoice","code":"tls"},{"text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel.","type":"text"}]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","interfaceLanguage":"swift"},"sections":[],"metadata":{"externalID":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}],"roleHeading":"Framework","title":"HummingbirdTLS","role":"collection","symbolKind":"module"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"],"title":"Related Documentation"}],"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel"],"title":"Structures"}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","role":"collection","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSClientChannel":{"url":"\/documentation\/hummingbirdtls\/tlsclientchannel","navigatorTitle":[{"text":"TLSClientChannel","kind":"identifier"}],"type":"topic","title":"TLSClientChannel","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSClientChannel","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel","kind":"symbol","abstract":[{"type":"text","text":"Sets up client channel to use TLS before accessing base channel setup"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"title":"HummingbirdHTTP2","type":"topic","url":"\/documentation\/hummingbirdhttp2","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"url":"\/documentation\/hummingbirdtls\/tlschannel","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"title":"TLSChannel","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder/tls(_:tlsConfiguration:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)","title":"tls(_:tlsConfiguration:)","conformance":{"constraints":[{"type":"codeVoice","code":"ChildChannel"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ServerChildChannel"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tls"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"BaseChannel"},{"kind":"text","text":">("},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","kind":"typeIdentifier","text":"HTTPChannelBuilder"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp","text":"BaseChannel","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"tlsConfiguration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6NIOSSL16TLSConfigurationV","text":"TLSConfiguration","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","text":"HTTPChannelBuilder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:14HummingbirdTLS10TLSChannelV","text":"TLSChannel","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp","text":"BaseChannel","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/httpchannelbuilder\/tls(_:tlsconfiguration:)","abstract":[{"type":"text","text":"Build child channel supporting HTTP with TLS"}]}}}