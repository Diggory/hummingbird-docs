{"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"],"generated":true,"anchor":"Structures","title":"Structures"}],"metadata":{"title":"HummingbirdTLS","images":[{"identifier":"logo.png","type":"icon"}],"symbolKind":"module","roleHeading":"Framework","role":"collection","externalID":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}]},"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"HummingbirdTLS provides TLS support via "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","isActive":true},{"type":"text","text":". You can add this to your application using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"]},{"type":"paragraph","inlineContent":[{"text":"The function ","type":"text"},{"type":"codeVoice","code":"tls"},{"type":"text","text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"],"anchor":"Related-Documentation"}],"abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"type":"topic","url":"\/documentation\/hummingbirdhttp2","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"text":"Add HTTP2 support to Hummingbird server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","title":"HummingbirdHTTP2","role":"collection"},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"title":"TLSChannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","url":"\/documentation\/hummingbirdtls\/tlschannel","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TLSChannel"}],"navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"url":"\/documentation\/hummingbirdtls","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","title":"HummingbirdTLS","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder/tls(_:tlsConfiguration:)":{"url":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:tlsconfiguration:)","title":"tls(_:tlsConfiguration:)","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"tls","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HTTPServerBuilder","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"tlsConfiguration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6NIOSSL16TLSConfigurationV","text":"TLSConfiguration","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"HTTPServerBuilder","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)","abstract":[{"type":"text","text":"Build server supporting HTTP with TLS"}]}}}