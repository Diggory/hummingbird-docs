{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel"]}],"hierarchy":{"paths":[[]]},"sections":[],"kind":"symbol","metadata":{"roleHeading":"Framework","symbolKind":"module","title":"HummingbirdTLS","externalID":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}],"role":"collection"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"HummingbirdTLS provides TLS support via "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference"},{"type":"text","text":". You can add this to your application using "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The function ","type":"text"},{"code":"tls","type":"codeVoice"},{"text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel.","type":"text"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"kind":"symbol","title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSClientChannel":{"type":"topic","title":"TLSClientChannel","url":"\/documentation\/hummingbirdtls\/tlsclientchannel","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSClientChannel","kind":"identifier"}],"abstract":[{"text":"Sets up client channel to use TLS before accessing base channel setup","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel","navigatorTitle":[{"text":"TLSClientChannel","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","url":"\/documentation\/hummingbirdhttp2","type":"topic","title":"HummingbirdHTTP2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder/tls(_:tlsConfiguration:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tls"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"BaseChannel"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","text":"HTTPChannelBuilder"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp","text":"BaseChannel"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"tlsConfiguration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6NIOSSL16TLSConfigurationV","kind":"typeIdentifier","text":"TLSConfiguration"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","kind":"typeIdentifier","text":"HTTPChannelBuilder"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:14HummingbirdTLS10TLSChannelV","kind":"typeIdentifier","text":"TLSChannel"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp","kind":"typeIdentifier","text":"BaseChannel"},{"kind":"text","text":">>"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)","abstract":[{"type":"text","text":"Build child channel supporting HTTP with TLS"}],"title":"tls(_:tlsConfiguration:)","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"ChildChannel"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ServerChildChannel"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/hummingbirdcore\/httpchannelbuilder\/tls(_:tlsconfiguration:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","url":"\/documentation\/hummingbirdtls\/tlschannel","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}],"navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"kind":"symbol","abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"type":"topic","title":"TLSChannel"}}}