{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"sections":[],"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}],"metadata":{"title":"HummingbirdTLS","role":"collection","symbolKind":"module","roleHeading":"Framework","externalID":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"hierarchy":{"paths":[[]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"HummingbirdTLS provides TLS support via ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"},{"text":". You can add this to your application using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The function "},{"type":"codeVoice","code":"tls"},{"type":"text","text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","url":"\/documentation\/hummingbirdtls\/tlschannel","abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"title":"TLSChannel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","abstract":[{"text":"Add HTTP2 support to Hummingbird server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","kind":"symbol","type":"topic","title":"HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"role":"collection","abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","url":"\/documentation\/hummingbirdtls","kind":"symbol","type":"topic","title":"HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder/tls(_:tlsConfiguration:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tls","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HTTPServerBuilder","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV"},{"text":", ","kind":"text"},{"text":"tlsConfiguration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TLSConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:6NIOSSL16TLSConfigurationV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HTTPServerBuilder","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","kind":"typeIdentifier"}],"kind":"symbol","title":"tls(_:tlsConfiguration:)","url":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:tlsconfiguration:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Build server supporting HTTP with TLS"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","kind":"symbol","type":"topic","title":"HummingbirdCore"}}}