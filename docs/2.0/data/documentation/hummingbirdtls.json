{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"],"title":"Related Documentation"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdTLS provides TLS support via "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference","isActive":true},{"type":"text","text":". You can add this to your application using "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)","type":"reference","isActive":true},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The function "},{"type":"codeVoice","code":"tls"},{"type":"text","text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel."}]}]}],"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel"],"title":"Structures"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"metadata":{"symbolKind":"module","title":"HummingbirdTLS","role":"collection","modules":[{"name":"HummingbirdTLS"}],"externalID":"HummingbirdTLS","roleHeading":"Framework"},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","type":"topic","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","title":"TLSChannel","url":"\/documentation\/hummingbirdtls\/tlschannel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSClientChannel":{"url":"\/documentation\/hummingbirdtls\/tlsclientchannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel","type":"topic","title":"TLSClientChannel","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSClientChannel"}],"abstract":[{"type":"text","text":"Sets up client channel to use TLS before accessing base channel setup"}],"navigatorTitle":[{"kind":"identifier","text":"TLSClientChannel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","title":"HummingbirdCore","role":"collection","kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder/tls(_:tlsConfiguration:)":{"type":"topic","url":"\/documentation\/hummingbirdcore\/httpchannelbuilder\/tls(_:tlsconfiguration:)","title":"tls(_:tlsConfiguration:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tls","kind":"identifier"},{"text":"<","kind":"text"},{"text":"BaseChannel","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","text":"HTTPChannelBuilder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"BaseChannel","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"tlsConfiguration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TLSConfiguration","preciseIdentifier":"s:6NIOSSL16TLSConfigurationV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"TLSChannel","preciseIdentifier":"s:14HummingbirdTLS10TLSChannelV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"BaseChannel","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"abstract":[{"type":"text","text":"Build child channel supporting HTTP with TLS"}],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ChildChannel","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ServerChildChannel","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"}}}