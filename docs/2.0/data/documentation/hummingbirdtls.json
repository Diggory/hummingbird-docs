{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","interfaceLanguage":"swift"},"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdTLS adds a single type ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference","isActive":true},{"text":". If you want a server to support TLS then build a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference","isActive":true},{"text":" with your base channel setup type and a ","type":"text"},{"type":"codeVoice","code":"TLSConfiguration"},{"text":" struct from ","type":"text"},{"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"reference","isActive":true},{"text":" as parameters.","type":"text"}]},{"syntax":"swift","code":["let http1Channel = HTTP1Channel { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create TLS Channel","let tlsChannel = TLSChannel(http1Channel, tlsConfiguration: tlsConfiguration)","let server = HBServer(","    childChannelSetup: tlsChannel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"type":"codeListing"}],"kind":"content"}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]}],"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"module","title":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}],"role":"collection","externalID":"HummingbirdTLS","roleHeading":"Framework"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"role":"collection","title":"HummingbirdTLS","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","type":"topic","kind":"symbol","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdtls"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","url":"\/documentation\/hummingbirdhttp2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"type":"topic","kind":"symbol","title":"HummingbirdHTTP2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","title":"HummingbirdCore"},"https://github.com/apple/swift-nio-ssl":{"titleInlineContent":[{"type":"text","text":"NIOSSL"}],"title":"NIOSSL","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"link","url":"https:\/\/github.com\/apple\/swift-nio-ssl"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"role":"symbol","navigatorTitle":[{"text":"TLSChannel","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdtls\/tlschannel","abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}],"title":"TLSChannel","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"}}}