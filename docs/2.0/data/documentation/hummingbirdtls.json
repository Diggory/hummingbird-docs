{"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"sections":[],"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"HummingbirdTLS provides TLS support via ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","isActive":true,"type":"reference"},{"text":". You can add this to your application using ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The function "},{"type":"codeVoice","code":"tls"},{"type":"text","text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel."}],"type":"paragraph"}],"kind":"content"}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel"]}],"variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"module","title":"HummingbirdTLS","externalID":"HummingbirdTLS","roleHeading":"Framework","modules":[{"name":"HummingbirdTLS"}],"role":"collection"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"url":"\/documentation\/hummingbirdtls\/tlschannel","title":"TLSChannel","type":"topic","navigatorTitle":[{"text":"TLSChannel","kind":"identifier"}],"abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"url":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","type":"topic","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSClientChannel":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSClientChannel"}],"navigatorTitle":[{"kind":"identifier","text":"TLSClientChannel"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel","title":"TLSClientChannel","kind":"symbol","url":"\/documentation\/hummingbirdtls\/tlsclientchannel","abstract":[{"type":"text","text":"Sets up client channel to use TLS before accessing base channel setup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder/tls(_:tlsConfiguration:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tls"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"BaseChannel"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"HTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"BaseChannel","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"tlsConfiguration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TLSConfiguration","preciseIdentifier":"s:6NIOSSL16TLSConfigurationV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","text":"HTTPChannelBuilder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:14HummingbirdTLS10TLSChannelV","text":"TLSChannel","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp","text":"BaseChannel","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"title":"tls(_:tlsConfiguration:)","url":"\/documentation\/hummingbirdcore\/httpchannelbuilder\/tls(_:tlsconfiguration:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"ChildChannel"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ServerChildChannel"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Build child channel supporting HTTP with TLS"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)"}}}