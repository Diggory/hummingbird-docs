{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtls"]}],"sections":[],"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel"]}],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdTLS provides TLS support via ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference"},{"text":". You can add this to your application using ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder\/tls(_:tlsConfiguration:)","type":"reference"},{"text":".","type":"text"}]},{"code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = HBRouter()","let app = HBApplication(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The function "},{"type":"codeVoice","code":"tls"},{"type":"text","text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel."}]}],"kind":"content"}],"metadata":{"title":"HummingbirdTLS","symbolKind":"module","role":"collection","modules":[{"name":"HummingbirdTLS"}],"roleHeading":"Framework","externalID":"HummingbirdTLS"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder/tls(_:tlsConfiguration:)":{"url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder\/tls(_:tlsconfiguration:)","title":"tls(_:tlsConfiguration:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Build child channel supporting HTTP with TLS"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tls"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"BaseChannel"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV","text":"HBHTTPChannelBuilder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA14HBChildChannelRd__lFZ04BaseL0L_qd__mfp","text":"BaseChannel","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"tlsConfiguration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6NIOSSL16TLSConfigurationV","text":"TLSConfiguration","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV","text":"HBHTTPChannelBuilder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:14HummingbirdTLS10TLSChannelV","text":"TLSChannel","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"BaseChannel","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA14HBChildChannelRd__lFZ04BaseL0L_qd__mfp"},{"text":">>","kind":"text"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ChildChannel","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"HBChildChannel"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder\/tls(_:tlsConfiguration:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}],"url":"\/documentation\/hummingbirdtls\/tlschannel","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"kind":"symbol","type":"topic","title":"TLSChannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","url":"\/documentation\/hummingbirdtls","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"role":"collection","title":"HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSClientChannel":{"title":"TLSClientChannel","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel","kind":"symbol","abstract":[{"type":"text","text":"Sets up client channel to use TLS before accessing base channel setup"}],"url":"\/documentation\/hummingbirdtls\/tlsclientchannel","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSClientChannel"}],"navigatorTitle":[{"kind":"identifier","text":"TLSClientChannel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"role":"collection","url":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","type":"topic","kind":"symbol"}}}