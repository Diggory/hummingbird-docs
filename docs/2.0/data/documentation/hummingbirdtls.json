{"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"],"title":"Related Documentation"}],"kind":"symbol","hierarchy":{"paths":[[]]},"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"metadata":{"externalID":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}],"title":"HummingbirdTLS","role":"collection","roleHeading":"Framework","symbolKind":"module"},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"HummingbirdTLS provides TLS support via ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","isActive":true,"type":"reference"},{"text":". You can add this to your application using ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)","type":"reference","isActive":true},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"]},{"type":"paragraph","inlineContent":[{"text":"The function ","type":"text"},{"code":"tls","type":"codeVoice"},{"text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel.","type":"text"}]}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"],"title":"Structures"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"type":"topic","url":"\/documentation\/hummingbirdtls\/tlschannel","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}],"title":"TLSChannel","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"type":"topic","url":"\/documentation\/hummingbirdtls","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","kind":"symbol","title":"HummingbirdTLS","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder/tls(_:tlsConfiguration:)":{"type":"topic","abstract":[{"text":"Build server supporting HTTP with TLS","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder\/tls(_:tlsConfiguration:)","url":"\/documentation\/hummingbirdcore\/httpserverbuilder\/tls(_:tlsconfiguration:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"tls"},{"kind":"text","text":"("},{"preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","kind":"typeIdentifier","text":"HTTPServerBuilder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"tlsConfiguration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TLSConfiguration","preciseIdentifier":"s:6NIOSSL16TLSConfigurationV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HTTPServerBuilder","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV"}],"title":"tls(_:tlsConfiguration:)","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdhttp2","role":"collection","title":"HummingbirdHTTP2"}}}