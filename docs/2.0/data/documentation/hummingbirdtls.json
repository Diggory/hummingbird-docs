{"kind":"symbol","topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]}],"metadata":{"title":"HummingbirdTLS","roleHeading":"Framework","symbolKind":"module","role":"collection","externalID":"HummingbirdTLS","modules":[{"name":"HummingbirdTLS"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single type "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"},{"type":"text","text":". If you want a server to support TLS then build a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"},{"type":"text","text":" with your base channel setup type and a "},{"code":"TLSConfiguration","type":"codeVoice"},{"text":" struct from ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"reference"},{"text":" as parameters.","type":"text"}]},{"type":"codeListing","code":["let http1Channel = HTTP1Channel { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create TLS Channel","let tlsChannel = TLSChannel(http1Channel, tlsConfiguration: tlsConfiguration)","let server = HBServer(","    childChannelSetup: tlsChannel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"syntax":"swift"}],"kind":"content"}],"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"url":"\/documentation\/hummingbirdtls\/tlschannel","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}],"navigatorTitle":[{"text":"TLSChannel","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"title":"TLSChannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","url":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2"},"https://github.com/apple/swift-nio-ssl":{"title":"NIOSSL","url":"https:\/\/github.com\/apple\/swift-nio-ssl","titleInlineContent":[{"text":"NIOSSL","type":"text"}],"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"link"}}}