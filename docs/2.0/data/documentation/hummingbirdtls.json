{"sections":[],"kind":"symbol","seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"metadata":{"role":"collection","title":"HummingbirdTLS","roleHeading":"Framework","externalID":"HummingbirdTLS","symbolKind":"module","modules":[{"name":"HummingbirdTLS"}]},"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel"]}],"primaryContentSections":[{"content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"HummingbirdTLS provides TLS support via "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","isActive":true,"type":"reference"},{"type":"text","text":". You can add this to your application using "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","","let router = Router()","let app = Application(","    router: router,","    server: .tls(.http1(), tlsConfiguration: tlsConfiguration)",")"]},{"inlineContent":[{"type":"text","text":"The function "},{"type":"codeVoice","code":"tls"},{"type":"text","text":" can be used to wrap any other child channel in the example above we use it to wrap an HTTP1 channel."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","kind":"symbol","url":"\/documentation\/hummingbirdtls\/tlschannel","navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}],"role":"symbol","title":"TLSChannel","abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"url":"\/documentation\/hummingbirdhttp2","type":"topic","role":"collection","title":"HummingbirdHTTP2","kind":"symbol","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"type":"topic","title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","type":"topic","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSClientChannel":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSClientChannel","abstract":[{"type":"text","text":"Sets up client channel to use TLS before accessing base channel setup"}],"type":"topic","navigatorTitle":[{"text":"TLSClientChannel","kind":"identifier"}],"title":"TLSClientChannel","url":"\/documentation\/hummingbirdtls\/tlsclientchannel","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSClientChannel","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder/tls(_:tlsConfiguration:)":{"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"ChildChannel"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ServerChildChannel"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder\/tls(_:tlsConfiguration:)","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tls","kind":"identifier"},{"text":"<","kind":"text"},{"text":"BaseChannel","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"HTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"BaseChannel","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"tlsConfiguration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TLSConfiguration","preciseIdentifier":"s:6NIOSSL16TLSConfigurationV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:14HummingbirdTLS10TLSChannelV","kind":"typeIdentifier","text":"TLSChannel"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV0A3TLSE3tls_0F13ConfigurationACyAD10TLSChannelVyqd__GGACyqd__G_6NIOSSL16TLSConfigurationVtKAA18ServerChildChannelRd__lFZ04BaseM0L_qd__mfp","kind":"typeIdentifier","text":"BaseChannel"},{"kind":"text","text":">>"}],"abstract":[{"text":"Build child channel supporting HTTP with TLS","type":"text"}],"title":"tls(_:tlsConfiguration:)","url":"\/documentation\/hummingbirdcore\/httpchannelbuilder\/tls(_:tlsconfiguration:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"kind":"symbol","type":"topic","title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","role":"collection"}}}