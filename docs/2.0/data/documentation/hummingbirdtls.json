{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"]}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]}],"kind":"symbol","hierarchy":{"paths":[[]]},"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"inlineContent":[{"text":"HummingbirdTLS adds a single type ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference"},{"text":". If you want a server to support TLS then build a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"reference"},{"text":" with your base channel setup type and a ","type":"text"},{"code":"TLSConfiguration","type":"codeVoice"},{"text":" struct from ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"reference"},{"text":" as parameters.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let http1Channel = HTTP1Channel { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create TLS Channel","let tlsChannel = TLSChannel(http1Channel, tlsConfiguration: tlsConfiguration)","let server = HBServer(","    childChannelSetup: tlsChannel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"HummingbirdTLS","roleHeading":"Framework","role":"collection","title":"HummingbirdTLS","symbolKind":"module","modules":[{"name":"HummingbirdTLS"}]},"variants":[{"paths":["\/documentation\/hummingbirdtls"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection","type":"topic","title":"HummingbirdCore"},"https://github.com/apple/swift-nio-ssl":{"type":"link","titleInlineContent":[{"text":"NIOSSL","type":"text"}],"title":"NIOSSL","url":"https:\/\/github.com\/apple\/swift-nio-ssl","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"kind":"symbol","title":"TLSChannel","type":"topic","abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"url":"\/documentation\/hummingbirdtls\/tlschannel","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}],"navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"kind":"symbol","title":"HummingbirdTLS","type":"topic","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdtls","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"type":"topic","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","role":"collection","kind":"symbol","title":"HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","role":"collection","type":"topic","title":"Hummingbird"}}}