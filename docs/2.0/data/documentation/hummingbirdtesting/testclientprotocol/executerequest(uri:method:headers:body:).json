{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"executeRequest"},{"kind":"text","text":"("},{"kind":"externalParam","text":"uri"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPFields","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"TestResponse","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse","preciseIdentifier":"s:18HummingbirdTesting12TestResponseV"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbirdtesting\/testclientprotocol\/executerequest(uri:method:headers:body:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/executeRequest(uri:method:headers:body:)"},"abstract":[{"type":"text","text":"Execute URL request and provide response"}],"sections":[],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"executeRequest"},{"kind":"text","text":"("},{"kind":"externalParam","text":"uri"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPFields","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"TestResponse","preciseIdentifier":"s:18HummingbirdTesting12TestResponseV"}],"role":"symbol","externalID":"s:18HummingbirdTesting18TestClientProtocolP14executeRequest3uri6method7headers4bodyAA0C8ResponseVSS_9HTTPTypes11HTTPRequestV6MethodVAK10HTTPFieldsV7NIOCore10ByteBufferVSgtYaKF","required":true,"symbolKind":"method","modules":[{"name":"HummingbirdTesting"}],"title":"executeRequest(uri:method:headers:body:)","roleHeading":"Instance Method"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/executeRequest(uri:method:headers:body:)":{"abstract":[{"type":"text","text":"Execute URL request and provide response"}],"kind":"symbol","required":true,"title":"executeRequest(uri:method:headers:body:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/executeRequest(uri:method:headers:body:)","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/executerequest(uri:method:headers:body:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"executeRequest","kind":"identifier"},{"text":"(","kind":"text"},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier","text":"HTTPRequest"},{"kind":"text","text":"."},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting12TestResponseV","text":"TestResponse","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"kind":"symbol","title":"TestClientProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","url":"\/documentation\/hummingbirdtesting\/testclientprotocol","navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"kind":"symbol","title":"HummingbirdTesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","role":"collection","abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestResponse":{"type":"topic","url":"\/documentation\/hummingbirdtesting\/testresponse","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse","title":"TestResponse","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestResponse"}],"navigatorTitle":[{"kind":"identifier","text":"TestResponse"}],"abstract":[{"text":"Response structure returned by testing framework","type":"text"}]}}}