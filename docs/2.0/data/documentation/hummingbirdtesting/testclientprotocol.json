{"variants":[{"paths":["\/documentation\/hummingbirdtesting\/testclientprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/port"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/execute(uri:method:headers:body:testCallback:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/executeRequest(uri:method:headers:body:)"],"title":"Instance Methods"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Protocol","symbolKind":"protocol","title":"TestClientProtocol","navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"externalID":"s:18HummingbirdTesting18TestClientProtocolP","modules":[{"name":"HummingbirdTesting"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"}]},"sections":[],"abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"}],"references":{"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/port":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/port","kind":"symbol","type":"topic","abstract":[],"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"port","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","title":"port","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/port"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/execute(uri:method:headers:body:testCallback:)":{"title":"execute(uri:method:headers:body:testCallback:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"execute"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","kind":"typeIdentifier","text":"HTTPFields"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"testCallback"},{"text":": (","kind":"text"},{"text":"TestResponse","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting12TestResponseV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolPAAE7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__AA0C8ResponseVYaKctYaKlF6ReturnL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolPAAE7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__AA0C8ResponseVYaKctYaKlF6ReturnL_qd__mfp"}],"type":"topic","abstract":[{"type":"text","text":"Send request to associated test framework and call test callback on the response returned"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/execute(uri:method:headers:body:testCallback:)","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/execute(uri:method:headers:body:testcallback:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/executeRequest(uri:method:headers:body:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"executeRequest"},{"kind":"text","text":"("},{"kind":"externalParam","text":"uri"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier","text":"HTTPRequest"},{"kind":"text","text":"."},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","kind":"typeIdentifier","text":"HTTPFields"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:18HummingbirdTesting12TestResponseV","kind":"typeIdentifier","text":"TestResponse"}],"role":"symbol","abstract":[{"text":"Execute URL request and provide response","type":"text"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/executerequest(uri:method:headers:body:)","kind":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/executeRequest(uri:method:headers:body:)","title":"executeRequest(uri:method:headers:body:)"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"role":"collection","url":"\/documentation\/hummingbirdtesting","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","kind":"symbol","title":"HummingbirdTesting","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"abstract":[{"text":"Protocol for client used by HummingbirdTesting","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","title":"TestClientProtocol","url":"\/documentation\/hummingbirdtesting\/testclientprotocol","role":"symbol"}}}