{"metadata":{"role":"collectionGroup","roleHeading":"API Collection","title":"RawRepresentable Implementations","modules":[{"name":"HummingbirdTesting"}]},"topicSections":[{"anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme\/hashValue"],"title":"Instance Properties"},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme\/hash(into:)"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme"]]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme\/RawRepresentable-Implementations","interfaceLanguage":"swift"},"references":{"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"navigatorTitle":[{"text":"TestHTTPScheme","kind":"identifier"}],"url":"\/documentation\/hummingbirdtesting\/testhttpscheme","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestHTTPScheme"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","kind":"symbol","title":"TestHTTPScheme","abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme/hashValue":{"title":"hashValue","role":"symbol","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"type":"topic","abstract":[],"url":"\/documentation\/hummingbirdtesting\/testhttpscheme\/hashvalue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme\/hashValue","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"title":"HummingbirdTesting","role":"collection","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"url":"\/documentation\/hummingbirdtesting","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme/hash(into:)":{"title":"hash(into:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme\/hash(into:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[],"url":"\/documentation\/hummingbirdtesting\/testhttpscheme\/hash(into:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"}}}