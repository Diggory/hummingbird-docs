{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getChannel","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"}],"externalID":"s:18HummingbirdTesting10TestClientV10getChannel7NIOCore0F0_pyYaKF","symbolKind":"method","title":"getChannel()","modules":[{"name":"HummingbirdTesting"}],"roleHeading":"Instance Method","role":"symbol"},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getChannel"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/getChannel()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdtesting\/testclient\/getchannel()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","type":"topic","role":"collection","title":"HummingbirdTesting","kind":"symbol","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"url":"\/documentation\/hummingbirdtesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestClient","kind":"identifier"}],"abstract":[{"type":"text","text":"Bare bones single connection HTTP client."}],"title":"TestClient","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdtesting\/testclient","navigatorTitle":[{"text":"TestClient","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/getChannel()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getChannel","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"getChannel()","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/getChannel()","type":"topic","url":"\/documentation\/hummingbirdtesting\/testclient\/getchannel()"}}}