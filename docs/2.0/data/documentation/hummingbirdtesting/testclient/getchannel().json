{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getChannel"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"}],"platforms":["Linux"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient"]]},"metadata":{"symbolKind":"method","modules":[{"name":"HummingbirdTesting"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getChannel","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:18HummingbirdTesting10TestClientV10getChannel7NIOCore0F0_pyYaKF","title":"getChannel()"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtesting\/testclient\/getchannel()"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/getChannel()","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"kind":"symbol","type":"topic","title":"TestClient","abstract":[{"text":"Bare bones single connection HTTP client.","type":"text"}],"navigatorTitle":[{"text":"TestClient","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","role":"symbol","url":"\/documentation\/hummingbirdtesting\/testclient","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClient","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"kind":"symbol","type":"topic","title":"HummingbirdTesting","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","role":"collection","url":"\/documentation\/hummingbirdtesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient/getChannel()":{"title":"getChannel()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getChannel"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient\/getChannel()","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdtesting\/testclient\/getchannel()"}}}