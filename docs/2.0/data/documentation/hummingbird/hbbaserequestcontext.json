{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"],"generated":true,"title":"Request context"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"name":"HummingbirdLambda"}],"externalID":"s:11Hummingbird20HBBaseRequestContextP","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"role":"symbol","title":"HBBaseRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"roleHeading":"Protocol","symbolKind":"protocol"},"variants":[{"paths":["\/documentation\/hummingbird\/hbbaserequestcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/Decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/Encoder"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/allocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/coreContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/maxUploadSize-5c8td","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/requestDecoder-t6zc","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/responseEncoder-3aosk"],"title":"Instance Properties"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterRequestContext"],"type":"inheritedBy","kind":"relationships","title":"Inherited By"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}],"abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}],"title":"HBRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","kind":"symbol","url":"\/documentation\/hummingbird\/hbrequestcontext","role":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/allocator":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/allocator","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allocator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/allocator","type":"topic","title":"allocator","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext":{"title":"HBBasicRouterRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext","abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `HBRouterBuilder``"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRouterRequestContext"}],"kind":"symbol","url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBBasicRouterRequestContext"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/id":{"abstract":[{"type":"text","text":"Request ID, extracted from Logger"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"role":"symbol","title":"id","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/id","kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/id"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/maxUploadSize-5c8td":{"defaultImplementations":2,"abstract":[{"type":"text","text":"Maximum upload size allowed for routes that donâ€™t stream the request payload. This"},{"type":"text","text":" "},{"type":"text","text":"limits how much memory would be used for one request"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"role":"symbol","title":"maxUploadSize","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/maxUploadSize-5c8td","kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/maxuploadsize-5c8td","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/parameters":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/parameters","type":"topic","abstract":[{"text":"Parameters extracted from URI","type":"text"}],"kind":"symbol","title":"parameters","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/parameters","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parameters","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird12HBParametersa","text":"HBParameters","kind":"typeIdentifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/logger":{"abstract":[{"type":"text","text":"Logger to use with Request"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"}],"role":"symbol","title":"logger","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/logger","kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/logger"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/coreContext":{"abstract":[{"type":"text","text":"Core context"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"coreContext","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBCoreRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBCoreRequestContextV"}],"role":"symbol","title":"coreContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/coreContext","kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/corecontext","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol":{"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"role":"symbol","title":"HBAuthRequestContextProtocol","navigatorTitle":[{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBRouterRequestContext":{"abstract":[{"text":"Protocol that all request contexts used with HBRouterBuilder should conform to.","type":"text"}],"title":"HBRouterRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBRouterRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterRequestContext","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterRequestContext"}],"url":"\/documentation\/hummingbirdrouter\/hbrouterrequestcontext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContext":{"title":"HBAuthRequestContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAuthRequestContext"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthRequestContext"}],"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/responseEncoder-3aosk":{"defaultImplementations":2,"abstract":[{"type":"text","text":"Response encoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/responseEncoder-3aosk","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Encoder","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/responseencoder-3aosk","required":true,"title":"responseEncoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"title":"HBCoreRequestContext","url":"\/documentation\/hummingbird\/hbcorerequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBCoreRequestContext"}],"abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBCoreRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","type":"topic","role":"collectionGroup","url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"title":"HBBasicRequestContext","role":"symbol","navigatorTitle":[{"text":"HBBasicRequestContext","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicRequestContext","kind":"identifier"}],"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/hbbasicrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/Decoder":{"title":"Decoder","role":"symbol","required":true,"kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Decoder","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP","kind":"typeIdentifier","text":"HBRequestDecoder"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier","text":"JSONDecoder"}],"abstract":[],"type":"topic","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/decoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/Decoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"kind":"symbol","url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"role":"symbol","title":"HBRemoteAddressRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","type":"topic","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/Encoder":{"abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBResponseEncoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP"},{"text":" = ","kind":"text"},{"text":"JSONEncoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC"}],"role":"symbol","title":"Encoder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/Encoder","kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/encoder","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext":{"title":"HBBasicLambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBBasicLambdaRequestContext"}],"abstract":[{"type":"text","text":"The default Lambda request context."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBBasicLambdaRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaRequestContext":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambdaRequestContext","kind":"identifier"}],"title":"HBLambdaRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/hblambdarequestcontext","type":"topic","role":"symbol","abstract":[{"text":"A Request Context that contains the Event that triggered the Lambda","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBLambdaRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/endpointPath":{"abstract":[{"type":"text","text":"Endpoint path"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpointPath","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"role":"symbol","title":"endpointPath","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/endpointPath","kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/endpointpath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"title":"HBBaseRequestContext","url":"\/documentation\/hummingbird\/hbbaserequestcontext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","role":"collection","kind":"article","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"type":"topic","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/requestDecoder-t6zc":{"type":"topic","defaultImplementations":2,"title":"requestDecoder","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/requestDecoder-t6zc","abstract":[{"text":"Request decoder","type":"text"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/requestdecoder-t6zc","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Decoder","kind":"typeIdentifier"}],"required":true}}}