{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbbaserequestcontext"]}],"metadata":{"symbolKind":"protocol","modules":[{"name":"Hummingbird"}],"title":"HBBaseRequestContext","externalID":"s:11Hummingbird20HBBaseRequestContextP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"roleHeading":"Protocol","role":"symbol","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["Linux"]}]}],"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/init(allocator:logger:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/allocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/coreContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/maxUploadSize-5c8td","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/requestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/responseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/threadPool-71fzk"]}],"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]},{"type":"inheritedBy","kind":"relationships","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext"]},{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext"]}],"seeAlsoSections":[{"title":"Request context","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/coreContext":{"abstract":[{"text":"Core context","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/coreContext","type":"topic","title":"coreContext","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"coreContext","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird20HBCoreRequestContextV","text":"HBCoreRequestContext","kind":"typeIdentifier"}],"required":true,"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/corecontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/init(allocator:logger:)":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/init(allocator:logger:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/init(allocator:logger:)","abstract":[{"text":"initialize a request context","type":"text"}],"role":"symbol","required":true,"title":"init(allocator:logger:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/allocator":{"title":"allocator","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"allocator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/allocator","abstract":[{"type":"text","text":"ByteBuffer allocator used by request"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/allocator","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/logger":{"abstract":[{"text":"Logger to use with Request","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/logger","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/logger","title":"logger"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/parameters":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBParameters","preciseIdentifier":"s:11Hummingbird12HBParametersa","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/parameters","abstract":[{"type":"text","text":"Parameters extracted from URI"}],"type":"topic","title":"parameters","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/parameters","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/id":{"role":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/id","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"title":"id","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/id","abstract":[{"text":"Request ID, extracted from Logger","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"url":"\/documentation\/hummingbird\/hbcorerequestcontext","navigatorTitle":[{"text":"HBCoreRequestContext","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCoreRequestContext","kind":"identifier"}],"role":"symbol","title":"HBCoreRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/requestDecoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/requestDecoder","type":"topic","title":"requestDecoder","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP","text":"HBRequestDecoder"}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/requestdecoder","abstract":[{"text":"Request decoder","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/responseEncoder":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/responseencoder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/responseEncoder","type":"topic","title":"responseEncoder","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"kind":"text","text":": "},{"text":"HBResponseEncoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP"}],"abstract":[{"type":"text","text":"Response encoder"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthRequestContext","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"title":"HBAuthRequestContext","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontext","navigatorTitle":[{"text":"HBAuthRequestContext","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/threadPool-71fzk":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/threadpool-71fzk","abstract":[{"type":"text","text":"Thread Pool"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/threadPool-71fzk","required":true,"role":"symbol","type":"topic","defaultImplementations":1,"title":"threadPool","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"threadPool","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NIOThreadPool","preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/endpointPath":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/endpointPath","abstract":[{"type":"text","text":"Endpoint path"}],"title":"endpointPath","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpointPath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/endpointpath","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"title":"HBRequestContext","abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbrequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"url":"\/documentation\/hummingbird\/hbbasicrequestcontext","navigatorTitle":[{"text":"HBBasicRequestContext","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicRequestContext","kind":"identifier"}],"role":"symbol","title":"HBBasicRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/maxUploadSize-5c8td":{"defaultImplementations":1,"kind":"symbol","abstract":[{"type":"text","text":"Maximum upload size allowed for routes that don’t stream the request payload. This"},{"type":"text","text":" "},{"type":"text","text":"limits how much memory would be used for one request"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/maxUploadSize-5c8td","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/maxuploadsize-5c8td","role":"symbol","title":"maxUploadSize","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"title":"HBBaseRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol":{"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","title":"HBAuthRequestContextProtocol","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"text":"authentication middleware","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","navigatorTitle":[{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"role":"symbol","title":"HBRemoteAddressRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","kind":"symbol"}}}