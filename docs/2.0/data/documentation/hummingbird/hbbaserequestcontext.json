{"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/Decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/Encoder"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/allocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/coreContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/maxUploadSize-5c8td","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/requestDecoder-t6zc","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/responseEncoder-3aosk"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"roleHeading":"Protocol","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"modules":[{"name":"Hummingbird"}],"symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"externalID":"s:11Hummingbird20HBBaseRequestContextP","title":"HBBaseRequestContext","role":"symbol"},"seeAlsoSections":[{"generated":true,"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"]}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]},{"kind":"relationships","type":"inheritedBy","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterRequestContext"]},{"kind":"relationships","type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/hummingbird\/hbbaserequestcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to if they want to support","type":"text"},{"text":" ","type":"text"},{"text":"authentication middleware","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","navigatorTitle":[{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"type":"topic","title":"HBAuthRequestContextProtocol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","role":"symbol","title":"HBRemoteAddressRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"HBRemoteAddressRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"HBBasicLambdaRequestContext","kind":"identifier"}],"title":"HBBasicLambdaRequestContext","abstract":[{"text":"The default Lambda request context.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicLambdaRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/Encoder":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/encoder","role":"symbol","title":"Encoder","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/Encoder","type":"topic","kind":"symbol","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBResponseEncoder","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"title":"HBBasicRequestContext","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"url":"\/documentation\/hummingbird\/hbbasicrequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"HBBasicRequestContext","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext":{"abstract":[{"text":"Basic implementation of a context that can be used with `HBRouterBuilder``","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext","role":"symbol","title":"HBBasicRouterRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicRouterRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"HBBasicRouterRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/responseEncoder-3aosk":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/responseencoder-3aosk","role":"symbol","title":"responseEncoder","abstract":[{"text":"Response encoder","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/responseEncoder-3aosk","defaultImplementations":1,"type":"topic","kind":"symbol","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Encoder","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP7EncoderQa","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/logger":{"kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/logger","type":"topic","abstract":[{"text":"Logger to use with Request","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/logger","title":"logger","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/endpointPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/endpointPath","title":"endpointPath","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/endpointpath","role":"symbol","abstract":[{"text":"Endpoint path","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpointPath","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/requestDecoder-t6zc":{"title":"requestDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/requestDecoder-t6zc","role":"symbol","abstract":[{"type":"text","text":"Request decoder"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/requestdecoder-t6zc","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP7DecoderQa","kind":"typeIdentifier","text":"Decoder"}],"type":"topic","required":true,"defaultImplementations":1,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContext":{"title":"HBAuthRequestContext","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbauthrequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"HBAuthRequestContext","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBRouterRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterRequestContext","title":"HBRouterRequestContext","url":"\/documentation\/hummingbirdrouter\/hbrouterrequestcontext","navigatorTitle":[{"text":"HBRouterRequestContext","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts used with HBRouterBuilder should conform to."}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/coreContext":{"kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/corecontext","type":"topic","abstract":[{"text":"Core context","type":"text"}],"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"coreContext","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird20HBCoreRequestContextV","text":"HBCoreRequestContext","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/coreContext","title":"coreContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/allocator":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/allocator","abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/allocator","title":"allocator","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaRequestContext":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"HBLambdaRequestContext","kind":"identifier"}],"title":"HBLambdaRequestContext","abstract":[{"text":"A Request Context that contains the Event that triggered the Lambda","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hblambdarequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambdaRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/maxUploadSize-5c8td":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/maxUploadSize-5c8td","title":"maxUploadSize","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/maxuploadsize-5c8td","role":"symbol","abstract":[{"type":"text","text":"Maximum upload size allowed for routes that don’t stream the request payload. This"},{"type":"text","text":" "},{"type":"text","text":"limits how much memory would be used for one request"}],"kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"defaultImplementations":1,"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"title":"HBBaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","role":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"url":"\/documentation\/index","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/parameters":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/parameters","abstract":[{"text":"Parameters extracted from URI","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/parameters","title":"parameters","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBParameters","preciseIdentifier":"s:11Hummingbird12HBParametersa"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/Decoder":{"title":"Decoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/Decoder","role":"symbol","abstract":[],"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/decoder","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decoder"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP","kind":"typeIdentifier","text":"HBRequestDecoder"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier","text":"JSONDecoder"}],"type":"topic","required":true,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/id":{"kind":"symbol","type":"topic","abstract":[{"text":"Request ID, extracted from Logger","type":"text"}],"role":"symbol","title":"id","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/id","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/id"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"title":"Request Contexts","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"url":"\/documentation\/hummingbird\/requestcontexts","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"title":"HBCoreRequestContext","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"url":"\/documentation\/hummingbird\/hbcorerequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCoreRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"HBCoreRequestContext","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"type":"topic","title":"HBRequestContext","url":"\/documentation\/hummingbird\/hbrequestcontext","navigatorTitle":[{"text":"HBRequestContext","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}]}}}