{"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"sections":[],"kind":"symbol","seeAlsoSections":[{"generated":true,"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"},{"title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext"],"kind":"relationships"},{"title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext"],"kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbbaserequestcontext"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["Linux"]}]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"modules":[{"name":"Hummingbird"}],"title":"HBBaseRequestContext","externalID":"s:11Hummingbird20HBBaseRequestContextP","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"symbolKind":"protocol","roleHeading":"Protocol"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/init(allocator:logger:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/allocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/coreContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/maxUploadSize-5c8td","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/requestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/responseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/threadPool-71fzk"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/init(allocator:logger:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":")"}],"abstract":[{"text":"initialize a request context","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/init(allocator:logger:)","required":true,"role":"symbol","type":"topic","title":"init(allocator:logger:)","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/init(allocator:logger:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/endpointPath":{"type":"topic","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/endpointpath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/endpointPath","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpointPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?"}],"title":"endpointPath","kind":"symbol","role":"symbol","abstract":[{"text":"Endpoint path","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCoreRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","title":"HBCoreRequestContext","url":"\/documentation\/hummingbird\/hbcorerequestcontext","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBCoreRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/maxUploadSize-5c8td":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"abstract":[{"text":"Maximum upload size allowed for routes that donâ€™t stream the request payload. This","type":"text"},{"text":" ","type":"text"},{"text":"limits how much memory would be used for one request","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/maxUploadSize-5c8td","required":true,"role":"symbol","type":"topic","title":"maxUploadSize","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/maxuploadsize-5c8td","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"title":"HBRequestContext","url":"\/documentation\/hummingbird\/hbrequestcontext","abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}],"navigatorTitle":[{"text":"HBRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol":{"url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthRequestContextProtocol"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBAuthRequestContextProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","role":"symbol","title":"HBAuthRequestContextProtocol","kind":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContext":{"title":"HBAuthRequestContext","type":"topic","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBAuthRequestContext"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"HBBasicRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"title":"HBBasicRequestContext","url":"\/documentation\/hummingbird\/hbbasicrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/responseEncoder":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"kind":"text","text":": "},{"text":"HBResponseEncoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/responseEncoder","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/responseencoder","title":"responseEncoder","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Response encoder"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/threadPool-71fzk":{"title":"threadPool","type":"topic","abstract":[{"text":"Thread Pool","type":"text"}],"kind":"symbol","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"threadPool","kind":"identifier"},{"text":": ","kind":"text"},{"text":"NIOThreadPool","preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/threadPool-71fzk","defaultImplementations":1,"role":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/threadpool-71fzk"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","title":"HBRemoteAddressRequestContext","url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRemoteAddressRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","title":"HBBaseRequestContext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/parameters":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBParameters","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12HBParametersa"}],"abstract":[{"text":"Parameters extracted from URI","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/parameters","role":"symbol","type":"topic","title":"parameters","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/parameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/coreContext":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"coreContext","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBCoreRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBCoreRequestContextV"}],"abstract":[{"text":"Core context","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/coreContext","required":true,"role":"symbol","type":"topic","title":"coreContext","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/corecontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/allocator":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext\/allocator","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/allocator","abstract":[{"text":"ByteBuffer allocator used by request","type":"text"}],"kind":"symbol","title":"allocator"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/requestDecoder":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRequestDecoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP"}],"title":"requestDecoder","kind":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/requestdecoder","type":"topic","abstract":[{"type":"text","text":"Request decoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/requestDecoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/logger":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"}],"abstract":[{"text":"Logger to use with Request","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/logger","role":"symbol","type":"topic","title":"logger","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/logger"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext/id":{"title":"id","type":"topic","abstract":[{"text":"Request ID, extracted from Logger","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext\/id","role":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext\/id"}}}