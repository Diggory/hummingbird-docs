{"metadata":{"externalID":"s:11Hummingbird13RouterMethodsP","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"role":"symbol","symbolKind":"protocol","title":"RouterMethods","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"roleHeading":"Protocol"},"topicSections":[{"anchor":"Associated-Types","title":"Associated Types","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"]},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/addMiddleware(buildMiddlewareStack:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/addRoutes(_:atPath:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/delete(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/get(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:context:)-2o2ov","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:context:)-w6fz","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/head(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/on(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/on(_:method:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/patch(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/post(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/put(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/ws(_:shouldUpgrade:onUpgrade:)"],"title":"Instance Methods","anchor":"Instance-Methods"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"RouterMethods"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"]]},"sections":[],"seeAlsoSections":[{"title":"Router","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"anchor":"Router"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":">","kind":"text"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/hummingbird\/routermethods"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","type":"topic","role":"symbol","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"title":"Router","navigatorTitle":[{"text":"Router","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouterOptions","kind":"identifier"}],"abstract":[{"type":"text","text":"Router Options"}],"role":"symbol","url":"\/documentation\/hummingbird\/routeroptions","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"title":"RouterOptions","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/delete(_:use:)":{"url":"\/documentation\/hummingbird\/routermethods\/delete(_:use:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"delete","kind":"identifier"},{"kind":"text","text":"("},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"delete(_:use:)","type":"topic","abstract":[{"type":"text","text":"DELETE path for async closure returning type conforming to ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/delete(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/put(_:use:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/put(_:use:)","title":"put(_:use:)","url":"\/documentation\/hummingbird\/routermethods\/put(_:use:)","abstract":[{"type":"text","text":"PUT path for async closure returning type conforming to ResponseGenerator"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"put"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Split router path into components"}],"title":"RouterPath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouterPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerpath","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/head(_:use:)":{"url":"\/documentation\/hummingbird\/routermethods\/head(_:use:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"head"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"head(_:use:)","type":"topic","abstract":[{"text":"HEAD path for async closure returning type conforming to ResponseGenerator","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/head(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/group(_:context:)-2o2ov":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:context:)-2o2ov","title":"group(_:context:)","url":"\/documentation\/hummingbird\/routermethods\/group(_:context:)-2o2ov","abstract":[{"text":"Return a group inside the current group that transforms the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"group"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"TargetContext"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","text":"TargetContext"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11RouterGroupV","text":"RouterGroup","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","text":"TargetContext","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/group(_:)":{"url":"\/documentation\/hummingbird\/routermethods\/group(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"group"},{"kind":"text","text":"("},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"RouterGroup","preciseIdentifier":"s:11Hummingbird11RouterGroupV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":">"}],"title":"group(_:)","type":"topic","abstract":[{"type":"text","text":"Return a group inside the current group"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/addMiddleware(buildMiddlewareStack:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/addMiddleware(buildMiddlewareStack:)","title":"addMiddleware(buildMiddlewareStack:)","url":"\/documentation\/hummingbird\/routermethods\/addmiddleware(buildmiddlewarestack:)","abstract":[{"text":"Add middleware stack to router","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addMiddleware"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buildMiddlewareStack"},{"kind":"text","text":": () -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":", "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"url":"\/documentation\/hummingbird\/callbackresponder","navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CallbackResponder"}],"title":"CallbackResponder","type":"topic","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","title":"RouterResponder","url":"\/documentation\/hummingbird\/routerresponder","abstract":[],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterResponder"}],"navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/on(_:method:use:)":{"url":"\/documentation\/hummingbird\/routermethods\/on(_:method:use:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"method"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"kind":"text","text":"."},{"text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"on(_:method:use:)","type":"topic","abstract":[{"type":"text","text":"Add path for async closure"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/on(_:method:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/requestcontext","kind":"symbol","title":"RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/on(_:method:responder:)":{"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/on(_:method:responder:)","title":"on(_:method:responder:)","url":"\/documentation\/hummingbird\/routermethods\/on(_:method:responder:)","abstract":[{"type":"text","text":"Add responder to call when path and method are matched"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"on","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Responder"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier","text":"HTTPRequest"},{"kind":"text","text":"."},{"text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"responder"},{"text":": ","kind":"text"},{"text":"Responder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP2on_6method9responderxAA0B4PathV_9HTTPTypes11HTTPRequestV6MethodVqd__tAA13HTTPResponderRd__7ContextQyd__AORtzlF9ResponderL_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/post(_:use:)":{"url":"\/documentation\/hummingbird\/routermethods\/post(_:use:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"post","kind":"identifier"},{"kind":"text","text":"("},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier","text":"ResponseGenerator"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"post(_:use:)","type":"topic","abstract":[{"text":"POST path for async closure returning type conforming to ResponseGenerator","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/post(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/routerguide","kind":"article","role":"collectionGroup","title":"Router","type":"topic","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"RouteCollection","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routecollection","title":"RouteCollection","abstract":[{"text":"Collection of routes","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouteCollection"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/ws(_:shouldUpgrade:onUpgrade:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/ws(_:shouldUpgrade:onUpgrade:)","title":"ws(_:shouldUpgrade:onUpgrade:)","url":"\/documentation\/hummingbird\/routermethods\/ws(_:shouldupgrade:onupgrade:)","type":"topic","abstract":[{"type":"text","text":"Add path to router that support WebSocket upgrade"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ws"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"kind":"text","text":", "},{"text":"shouldUpgrade","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"RouterShouldUpgrade","kind":"typeIdentifier","preciseIdentifier":"s:20HummingbirdWebSocket19RouterShouldUpgradeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onUpgrade"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"WebSocketDataHandler","preciseIdentifier":"s:6WSCore20WebSocketDataHandlera"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:20HummingbirdWebSocket0bC13RouterContextV","text":"WebSocketRouterContext"},{"text":"<","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":">>) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/group(_:context:)-w6fz":{"url":"\/documentation\/hummingbird\/routermethods\/group(_:context:)-w6fz","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"group","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TargetContext"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier","text":"RouterPath"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TargetContext","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp"},{"kind":"text","text":".Type) -> "},{"text":"RouterGroup","preciseIdentifier":"s:11Hummingbird11RouterGroupV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp","text":"TargetContext","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"group(_:context:)","type":"topic","abstract":[{"text":"Return a group inside the current group that transforms the ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true,"type":"reference"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/group(_:context:)-w6fz"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","title":"RequestID","url":"\/documentation\/hummingbird\/requestid","type":"topic","abstract":[{"type":"text","text":"Generate Unique ID for each request"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestID"}],"navigatorTitle":[{"text":"RequestID","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/add(middleware:)":{"url":"\/documentation\/hummingbird\/routermethods\/add(middleware:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middleware"},{"text":": ","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"add(middleware:)","type":"topic","abstract":[{"text":"add middleware","type":"text"}],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/add(middleware:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"title":"RouterGroup","type":"topic","url":"\/documentation\/hummingbird\/routergroup","role":"symbol","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"type":"text","text":" "},{"text":"suffix to the endpoint path","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/patch(_:use:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/patch(_:use:)","title":"patch(_:use:)","url":"\/documentation\/hummingbird\/routermethods\/patch(_:use:)","type":"topic","abstract":[{"type":"text","text":"PATCH path for async closure returning type conforming to ResponseGenerator"}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"patch"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"text":"use","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/addRoutes(_:atPath:)":{"url":"\/documentation\/hummingbird\/routermethods\/addroutes(_:atpath:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRoutes"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11Hummingbird15RouteCollectionC","text":"RouteCollection","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"atPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"addRoutes(_:atPath:)","type":"topic","abstract":[{"type":"text","text":"Add route collection to router"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/addRoutes(_:atPath:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"url":"\/documentation\/hummingbird\/httpresponderbuilder","navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HTTPResponderBuilder","kind":"identifier"}],"title":"HTTPResponderBuilder","type":"topic","abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/get(_:use:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/get(_:use:)","title":"get(_:use:)","url":"\/documentation\/hummingbird\/routermethods\/get(_:use:)","type":"topic","abstract":[{"type":"text","text":"GET path for async closure returning type conforming to ResponseGenerator"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"get"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"url":"\/documentation\/hummingbird\/httpresponder","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPResponder"}],"title":"HTTPResponder","type":"topic","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","title":"RouterMethods","url":"\/documentation\/hummingbird\/routermethods","type":"topic","abstract":[{"text":"Conform to ","type":"text"},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" to add standard router verb (get, post â€¦) methods"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMethods"}],"navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"url":"\/documentation\/hummingbird\/endpointpath","navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EndpointPath"}],"title":"EndpointPath","type":"topic","abstract":[{"type":"text","text":"Endpoint path storage"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"url":"\/documentation\/hummingbird\/routermethods\/context","type":"topic","role":"symbol","abstract":[],"title":"Context","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"}}}