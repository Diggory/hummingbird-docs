{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"metadata":{"modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird10Middlewarea","symbolKind":"typealias","role":"symbol","title":"Middleware","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"roleHeading":"Type Alias"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> = ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10Middlewarea5Inputxmfp","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10Middlewarea7Contextq0_mfp","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"next"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10Middlewarea5Inputxmfp","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10Middlewarea7Contextq0_mfp","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10Middlewarea6Outputq_mfp","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10Middlewarea6Outputq_mfp","text":"Output"}],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/hummingbird\/middleware"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Middleware","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware"]}],"abstract":[{"type":"text","text":"Middleware Handler with generic input, context and output types"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","title":"HBMiddlewareProtocol","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"title":"HBMiddlewareGroup","url":"\/documentation\/hummingbird\/hbmiddlewaregroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"kind":"symbol","role":"symbol","title":"MiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"url":"\/documentation\/hummingbird\/middlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSetCodableMiddleware":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware","url":"\/documentation\/hummingbird\/hbsetcodablemiddleware","title":"HBSetCodableMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBSetCodableMiddleware"}],"type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBSetCodableMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","url":"\/documentation\/hummingbird\/hbcorsmiddleware","title":"HBCORSMiddleware","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","type":"topic","title":"HBTracingMiddleware","navigatorTitle":[{"text":"HBTracingMiddleware","kind":"identifier"}],"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"url":"\/documentation\/hummingbird\/hbtracingmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBTracingMiddleware"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"kind":"symbol","navigatorTitle":[{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"title":"HBLogRequestsMiddleware","url":"\/documentation\/hummingbird\/hblogrequestsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"kind":"symbol","title":"Middleware","type":"topic","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middleware","abstract":[{"text":"Middleware Handler with generic input, context and output types","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMetricsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmetricsmiddleware","title":"HBMetricsMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"navigatorTitle":[{"text":"HBMetricsMiddleware","kind":"identifier"}],"type":"topic","role":"symbol"}}}