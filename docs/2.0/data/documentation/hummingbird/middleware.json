{"abstract":[{"text":"Middleware Handler with generic input, context and output types","type":"text"}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbird\/middleware"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"role":"symbol","modules":[{"name":"Hummingbird"}],"roleHeading":"Type Alias","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"symbolKind":"typealias","title":"Middleware","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"externalID":"s:11Hummingbird10Middlewarea"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware"],"title":"Middleware"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> = (","kind":"text"},{"text":"Input","preciseIdentifier":"s:11Hummingbird10Middlewarea5Inputxmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird10Middlewarea7Contextq0_mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"next","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Input","preciseIdentifier":"s:11Hummingbird10Middlewarea5Inputxmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird10Middlewarea7Contextq0_mfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","preciseIdentifier":"s:11Hummingbird10Middlewarea6Outputq_mfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","preciseIdentifier":"s:11Hummingbird10Middlewarea6Outputq_mfp","kind":"typeIdentifier"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","url":"\/documentation\/hummingbird\/hbmiddlewaregroup","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}],"title":"HBMiddlewareGroup","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMetricsMiddleware"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","title":"HBMetricsMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}],"abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"url":"\/documentation\/hummingbird\/hbmetricsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"title":"HBMiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","role":"symbol","type":"topic","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmiddlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"title":"HBTracingMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBTracingMiddleware","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/hbtracingmiddleware","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSetCodableMiddleware":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSetCodableMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBSetCodableMiddleware"}],"kind":"symbol","title":"HBSetCodableMiddleware","url":"\/documentation\/hummingbird\/hbsetcodablemiddleware","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"type":"topic","title":"HBLogRequestsMiddleware","url":"\/documentation\/hummingbird\/hblogrequestsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"url":"\/documentation\/hummingbird\/middlewareprotocol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"role":"symbol","title":"MiddlewareProtocol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"role":"symbol","type":"topic","title":"HBCORSMiddleware","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbcorsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"kind":"symbol","abstract":[{"text":"Middleware Handler with generic input, context and output types","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","title":"Middleware","url":"\/documentation\/hummingbird\/middleware","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"role":"symbol"}}}