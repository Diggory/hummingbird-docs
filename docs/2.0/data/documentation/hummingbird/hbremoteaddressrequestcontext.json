{"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"externalID":"s:11Hummingbird29HBRemoteAddressRequestContextP","roleHeading":"Protocol","symbolKind":"protocol","title":"HBRemoteAddressRequestContext","role":"symbol","navigatorTitle":[{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"modules":[{"name":"Hummingbird"}]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbremoteaddressrequestcontext"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext"],"title":"Request context","generated":true}],"abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext\/remoteAddress"],"title":"Instance Properties"}],"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRemoteAddressRequestContext"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"If you want the HBTracingMiddleware to record the remote address of requests","type":"text"},{"text":" ","type":"text"},{"text":"then your request context will need to conform to this protocol","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext/remoteAddress":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext\/remoteAddress","url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext\/remoteaddress","required":true,"title":"remoteAddress","abstract":[{"type":"text","text":"Connected host address"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"remoteAddress"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":"?"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","title":"HBRemoteAddressRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"role":"symbol","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"navigatorTitle":[{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"type":"topic","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCoreRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBCoreRequestContext"}],"url":"\/documentation\/hummingbird\/hbcorerequestcontext","title":"HBCoreRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"type":"topic","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBBasicRequestContext"}],"url":"\/documentation\/hummingbird\/hbbasicrequestcontext","title":"HBBasicRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","title":"HBBaseRequestContext","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","url":"\/documentation\/hummingbird\/hbrequestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}],"title":"HBRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"abstract":[{"type":"text","text":"Protocol for a request context that can be created from a NIO Channel"}],"kind":"symbol","role":"symbol"}}}