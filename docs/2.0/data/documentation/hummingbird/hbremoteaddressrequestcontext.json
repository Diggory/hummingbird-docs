{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRemoteAddressRequestContext"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier","text":"HBBaseRequestContext"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"If you want the HBTracingMiddleware to record the remote address of requests","type":"text"},{"text":" ","type":"text"},{"text":"then your request context will need to conform to this protocol","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"},"abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext"],"generated":true,"title":"Request context"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext\/remoteAddress"],"title":"Instance Properties"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbird\/hbremoteaddressrequestcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"externalID":"s:11Hummingbird29HBRemoteAddressRequestContextP","symbolKind":"protocol","title":"HBRemoteAddressRequestContext","roleHeading":"Protocol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","title":"HBRemoteAddressRequestContext","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"navigatorTitle":[{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"title":"HBCoreRequestContext","url":"\/documentation\/hummingbird\/hbcorerequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCoreRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"HBCoreRequestContext","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext/remoteAddress":{"type":"topic","url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext\/remoteaddress","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remoteAddress","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext\/remoteAddress","abstract":[{"type":"text","text":"Connected host address"}],"required":true,"role":"symbol","title":"remoteAddress","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"title":"HBBaseRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"url":"\/documentation\/hummingbird\/hbrequestcontext","title":"HBRequestContext","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"role":"symbol","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"url":"\/documentation\/hummingbird\/hbbasicrequestcontext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRequestContext"}],"type":"topic","title":"HBBasicRequestContext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBasicRequestContext"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"}}}