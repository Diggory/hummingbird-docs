{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"metadata":{"symbolKind":"protocol","title":"HBRemoteAddressRequestContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"modules":[{"name":"Hummingbird"}],"roleHeading":"Protocol","navigatorTitle":[{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"externalID":"s:11Hummingbird29HBRemoteAddressRequestContextP"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext"],"title":"Request context","generated":true}],"variants":[{"paths":["\/documentation\/hummingbird\/hbremoteaddressrequestcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRemoteAddressRequestContext"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","text":"HBBaseRequestContext"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"If you want the HBTracingMiddleware to record the remote address of requests","type":"text"},{"text":" ","type":"text"},{"text":"then your request context will need to conform to this protocol","type":"text"}],"type":"paragraph"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext\/remoteAddress"],"title":"Instance Properties"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext/remoteAddress":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remoteAddress","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext\/remoteAddress","title":"remoteAddress","url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext\/remoteaddress","type":"topic","abstract":[{"text":"Connected host address","type":"text"}],"required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"type":"topic","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","title":"HBRemoteAddressRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","kind":"symbol","role":"symbol","title":"HBBaseRequestContext","url":"\/documentation\/hummingbird\/hbbaserequestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"kind":"symbol","abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","role":"symbol","navigatorTitle":[{"text":"HBRequestContext","kind":"identifier"}],"title":"HBRequestContext","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRequestContext"}],"title":"HBBasicRequestContext","url":"\/documentation\/hummingbird\/hbbasicrequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBBasicRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","role":"symbol","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"title":"HBCoreRequestContext","type":"topic","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBCoreRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","url":"\/documentation\/hummingbird\/hbcorerequestcontext","navigatorTitle":[{"text":"HBCoreRequestContext","kind":"identifier"}]}}}