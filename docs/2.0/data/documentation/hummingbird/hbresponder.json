{"sections":[],"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder\/Context"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder\/respond(to:context:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":"> : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"This is the core protocol for Hummingbird. It defines an object that can respond to a request.","type":"text"}]}],"kind":"content"}],"metadata":{"roleHeading":"Protocol","modules":[{"name":"Hummingbird"}],"symbolKind":"protocol","title":"HBResponder","externalID":"s:11Hummingbird11HBResponderP","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HBResponder","kind":"identifier"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbresponder"]}],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"},{"title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"seeAlsoSections":[{"generated":true,"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"url":"\/documentation\/hummingbird\/hbroutergroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"title":"HBRouterGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder":{"abstract":[{"type":"text","text":"Directs requests to handlers based on the request uri and method."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","url":"\/documentation\/hummingbird\/hbrouterresponder","navigatorTitle":[{"text":"HBRouterResponder","kind":"identifier"}],"title":"HBRouterResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterResponder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}],"abstract":[{"type":"text","text":"Split router path into components"}],"url":"\/documentation\/hummingbird\/routerpath","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","title":"RouterPath","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"role":"symbol","title":"HBRouterMethods","abstract":[{"text":"Conform to ","type":"text"},{"type":"codeVoice","code":"HBRouterMethods"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbroutermethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"url":"\/documentation\/hummingbird\/hbroutermethodoptions","abstract":[{"type":"text","text":"Options available to routes"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"title":"HBRouterMethodOptions","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"url":"\/documentation\/hummingbird\/hbroutehandler","abstract":[{"type":"text","text":"Object for handling requests."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"title":"HBRouteHandler","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter":{"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","url":"\/documentation\/hummingbird\/hbrouter","navigatorTitle":[{"text":"HBRouter","kind":"identifier"}],"title":"HBRouter","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouter","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBRouterBuilder":{"url":"\/documentation\/hummingbirdrouter\/hbrouterbuilder","type":"topic","title":"HBRouterBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterBuilder","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"abstract":[{"text":"Router built using a result builder","type":"text"}],"navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Context","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"HBRouterRequestContext","type":"codeVoice"},{"type":"text","text":", "},{"code":"Context","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Handler.Context","type":"codeVoice"},{"type":"text","text":", "},{"code":"Handler","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"MiddlewareProtocol","type":"codeVoice"},{"type":"text","text":", "},{"code":"Handler.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"HBRequest","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Handler.Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"HBResponse","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"role":"symbol","title":"EndpointPath","abstract":[{"text":"Endpoint path storage","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/endpointpath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"role":"symbol","title":"HBCallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbcallbackresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder/Context":{"url":"\/documentation\/hummingbird\/hbresponder\/context","abstract":[],"role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"kind":"symbol","title":"Context","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder\/Context","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"url":"\/documentation\/hummingbird\/hbresponder","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"title":"HBResponder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder/respond(to:context:)":{"url":"\/documentation\/hummingbird\/hbresponder\/respond(to:context:)","required":true,"type":"topic","title":"respond(to:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder\/respond(to:context:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11HBResponderP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","text":"HBResponse","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Return EventLoopFuture that will be fulfilled with response to the request supplied"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"}}}