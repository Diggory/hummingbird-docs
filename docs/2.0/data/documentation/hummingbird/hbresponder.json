{"relationshipsSections":[{"title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom"},{"title":"Conforming Types","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder"],"type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"paths":["\/documentation\/hummingbird\/hbresponder"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder\/Context"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder\/respond(to:context:)"]}],"seeAlsoSections":[{"title":"Router","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"]}],"metadata":{"title":"HBResponder","role":"symbol","externalID":"s:11Hummingbird11HBResponderP","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"roleHeading":"Protocol","symbolKind":"protocol","modules":[{"name":"Hummingbird"}]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":"> : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This is the core protocol for Hummingbird. It defines an object that can respond to a request.","type":"text"}]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder/respond(to:context:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird11HBResponderP7ContextQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV"}],"abstract":[{"text":"Return EventLoopFuture that will be fulfilled with response to the request supplied","type":"text"}],"title":"respond(to:context:)","required":true,"kind":"symbol","url":"\/documentation\/hummingbird\/hbresponder\/respond(to:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder\/respond(to:context:)","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"type":"topic","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"title":"HBCallbackResponder","url":"\/documentation\/hummingbird\/hbcallbackresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouter","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","title":"HBRouter","kind":"symbol","navigatorTitle":[{"text":"HBRouter","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbrouter","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","url":"\/documentation\/hummingbird\/routerpath","abstract":[{"text":"Split router path into components","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"title":"RouterPath","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"type":"topic","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"title":"HBRouterGroup","url":"\/documentation\/hummingbird\/hbroutergroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponderBuilder":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponderBuilder"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder","title":"HBResponderBuilder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponderBuilder"}],"url":"\/documentation\/hummingbird\/hbresponderbuilder","abstract":[{"type":"text","text":"A type that has a single method to build a responder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBRouterBuilder":{"type":"topic","title":"HBRouterBuilder","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"abstract":[{"type":"text","text":"Router built using a result builder"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Context","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"HBRouterRequestContext","type":"codeVoice"},{"type":"text","text":", "},{"code":"Context","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Handler.Context","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MiddlewareProtocol"},{"type":"text","text":", "},{"type":"codeVoice","code":"Handler.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"HBRequest"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Handler.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"HBResponse"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/hummingbirdrouter\/hbrouterbuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterResponder"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","title":"HBRouterResponder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterResponder"}],"url":"\/documentation\/hummingbird\/hbrouterresponder","abstract":[{"text":"Directs requests to handlers based on the request uri and method.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","title":"HBResponder","kind":"symbol","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbresponder","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Endpoint path storage"}],"title":"EndpointPath","url":"\/documentation\/hummingbird\/endpointpath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder/Context":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"abstract":[],"title":"Context","required":true,"kind":"symbol","url":"\/documentation\/hummingbird\/hbresponder\/context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder\/Context","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"url":"\/documentation\/hummingbird\/hbroutehandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBRouteHandler"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","abstract":[{"type":"text","text":"Object for handling requests."}],"navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"title":"HBRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","title":"HBRouterMethods","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"HBRouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/hbroutermethods"}}}