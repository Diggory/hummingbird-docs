{"metadata":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"roleHeading":"Enumeration","modules":[{"name":"Hummingbird"}],"title":"MiddlewareFixedTypeBuilder","role":"symbol","symbolKind":"enum","externalID":"s:11Hummingbird26MiddlewareFixedTypeBuilderO"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","topicSections":[{"title":"Type Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder\/buildBlock(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder\/buildExpression(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder\/buildPartialBlock(accumulated:next:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder\/buildPartialBlock(first:)"]}],"variants":[{"paths":["\/documentation\/hummingbird\/middlewarefixedtypebuilder"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@resultBuilder"},{"kind":"text","text":" "},{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":">"}],"platforms":["Linux"]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Generates a middleware stack from the elements inside the result builder. The input,","type":"text"},{"text":" ","type":"text"},{"text":"context and output types passed through the middleware stack are fixed and cannot be changed.","type":"text"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Middleware stack result builder"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"seeAlsoSections":[{"generated":true,"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"title":"MiddlewareFixedTypeBuilder","abstract":[{"text":"Middleware stack result builder","type":"text"}],"url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Response","kind":"identifier"}],"title":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/metricsmiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"role":"symbol","title":"MetricsMiddleware","navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder/buildExpression(_:)":{"title":"buildExpression(_:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder\/buildExpression(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildexpression(_:)","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildExpression","kind":"identifier"},{"text":"<","kind":"text"},{"text":"M0","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO15buildExpressionyqd__qd__5InputQyd__Rsz6OutputQyd__Rs_7ContextQyd__Rs0_AA0B8ProtocolRd__lFZ2M0L_qd__mfp","text":"M0","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO15buildExpressionyqd__qd__5InputQyd__Rsz6OutputQyd__Rs_7ContextQyd__Rs0_AA0B8ProtocolRd__lFZ2M0L_qd__mfp","text":"M0","kind":"typeIdentifier"}]},"logo.png":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","role":"symbol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"url":"\/documentation\/hummingbird\/routermiddleware","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"abstract":[{"text":"Version of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},{"text":" whose Input is ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":" and output is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"text":".","type":"text"}],"title":"RouterMiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder/buildPartialBlock(first:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildPartialBlock","kind":"identifier"},{"text":"<","kind":"text"},{"text":"M0","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"first","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"M0","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO17buildPartialBlock5firstqd__qd___tAA0B8ProtocolRd__lFZ2M0L_qd__mfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"M0","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO17buildPartialBlock5firstqd__qd___tAA0B8ProtocolRd__lFZ2M0L_qd__mfp","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildpartialblock(first:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder\/buildPartialBlock(first:)","role":"symbol","kind":"symbol","abstract":[],"title":"buildPartialBlock(first:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}],"url":"\/documentation\/hummingbird\/corsmiddleware","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CORSMiddleware"}],"abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"title":"CORSMiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder/buildBlock(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildBlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M0"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"M0","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO10buildBlockyqd__qd__AA0B8ProtocolRd__lFZ2M0L_qd__mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"M0","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO10buildBlockyqd__qd__AA0B8ProtocolRd__lFZ2M0L_qd__mfp"}],"title":"buildBlock(_:)","type":"topic","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildblock(_:)","kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder\/buildBlock(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","url":"\/documentation\/hummingbird\/middlewaregroup","type":"topic","role":"symbol","title":"MiddlewareGroup","navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder/buildPartialBlock(accumulated:next:)":{"title":"buildPartialBlock(accumulated:next:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder\/buildPartialBlock(accumulated:next:)","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder\/buildpartialblock(accumulated:next:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildPartialBlock"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"M0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M1"},{"kind":"text","text":">("},{"kind":"externalParam","text":"accumulated"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"M0","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO17buildPartialBlock11accumulated4nextAA12_Middleware2Vyqd__qd_0_Gqd___qd_0_tAA0B8ProtocolRd__AaJRd_0_7ContextQyd_0_AKRtd__5InputQyd_0_ANRtd__6OutputQyd_0_AQRtd__r0_lFZ2M0L_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"M1","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO17buildPartialBlock11accumulated4nextAA12_Middleware2Vyqd__qd_0_Gqd___qd_0_tAA0B8ProtocolRd__AaJRd_0_7ContextQyd_0_AKRtd__5InputQyd_0_ANRtd__6OutputQyd_0_AQRtd__r0_lFZ2M1L_qd_0_mfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_Middleware2","preciseIdentifier":"s:11Hummingbird12_Middleware2V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"M0","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO17buildPartialBlock11accumulated4nextAA12_Middleware2Vyqd__qd_0_Gqd___qd_0_tAA0B8ProtocolRd__AaJRd_0_7ContextQyd_0_AKRtd__5InputQyd_0_ANRtd__6OutputQyd_0_AQRtd__r0_lFZ2M0L_qd__mfp"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M1","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO17buildPartialBlock11accumulated4nextAA12_Middleware2Vyqd__qd_0_Gqd___qd_0_tAA0B8ProtocolRd__AaJRd_0_7ContextQyd_0_AKRtd__5InputQyd_0_ANRtd__6OutputQyd_0_AQRtd__r0_lFZ2M1L_qd_0_mfp"},{"kind":"text","text":">"}],"abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"title":"TracingMiddleware","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"url":"\/documentation\/hummingbird\/tracingmiddleware","navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"url":"\/documentation\/hummingbirdcore\/request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/logrequestsmiddleware","title":"LogRequestsMiddleware","role":"symbol","navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware"}}}