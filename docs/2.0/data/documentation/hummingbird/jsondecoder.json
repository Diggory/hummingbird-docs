{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/keyDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/userInfo"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/decode(_:from:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"],"title":"Enumerations"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/RequestDecoder-Implementations"],"title":"Default Implementations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsondecoder"]}],"metadata":{"role":"symbol","externalID":"s:10Foundation11JSONDecoderC","symbolKind":"class","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"title":"JSONDecoder","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}]},"kind":"symbol","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"],"title":"Encoding\/Decoding"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}]}]}],"abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy","navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" values into JSON.","type":"text"}],"type":"topic","kind":"symbol","title":"JSONEncoder","role":"symbol","url":"\/documentation\/hummingbird\/jsonencoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/init()":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","title":"init()","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/init()","abstract":[{"text":"Initializes ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" with default strategies.","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/init()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","kind":"typeIdentifier"}],"kind":"symbol","title":"nonConformingFloatDecodingStrategy","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","abstract":[{"text":"The strategy to use in decoding non-conforming numbers. Defaults to ","type":"text"},{"code":".throw","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"role":"symbol","kind":"symbol","title":"URLEncodedFormEncoder","navigatorTitle":[{"kind":"identifier","text":"URLEncodedFormEncoder"}],"abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","url":"\/documentation\/hummingbird\/urlencodedformencoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLEncodedFormEncoder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/dateDecodingStrategy-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dateDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"DateDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO","kind":"typeIdentifier"}],"kind":"symbol","title":"dateDecodingStrategy","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dateDecodingStrategy-swift.property","abstract":[{"text":"The strategy to use in decoding dates. Defaults to ","type":"text"},{"code":".deferredToDate","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/datedecodingstrategy-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseEncodable"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseEncodable"}],"abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the response using the encoder stored in "},{"code":"Application.encoder","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","title":"ResponseEncodable","url":"\/documentation\/hummingbird\/responseencodable","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCodable"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseCodable"}],"abstract":[{"text":"Protocol for codable object that can generate a response","type":"text"}],"type":"topic","title":"ResponseCodable","url":"\/documentation\/hummingbird\/responsecodable","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/keyDecodingStrategy-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"keyDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"KeyDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO","kind":"typeIdentifier"}],"kind":"symbol","title":"keyDecodingStrategy","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/keyDecodingStrategy-swift.property","abstract":[{"text":"The strategy to use for decoding keys. Defaults to ","type":"text"},{"code":".useDefaultKeys","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","abstract":[{"text":"The wrapper struct for decoding URL encoded form data to Codable classes","type":"text"}],"type":"topic","kind":"symbol","title":"URLEncodedFormDecoder","role":"symbol","url":"\/documentation\/hummingbird\/urlencodedformdecoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"URLEncodedFormDecoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"kind":"symbol","url":"\/documentation\/hummingbird\/responsegenerator","title":"ResponseGenerator","abstract":[{"text":"Object that can generate a ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/RequestDecoder-Implementations":{"kind":"article","title":"RequestDecoder Implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/RequestDecoder-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/hummingbird\/jsondecoder\/requestdecoder-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/userInfo":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"userInfo","kind":"identifier"},{"text":": [","kind":"text"},{"text":"CodingUserInfoKey","preciseIdentifier":"s:s17CodingUserInfoKeyV","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"]","kind":"text"}],"kind":"symbol","title":"userInfo","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/userInfo","abstract":[{"text":"Contextual user-provided information for use during decoding.","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/userinfo"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"abstract":[{"text":"The strategy to use for automatically changing the value of keys before decoding.","type":"text"}],"role":"symbol","type":"topic","title":"JSONDecoder.KeyDecodingStrategy","kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyDecodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"KeyDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","abstract":[{"text":"protocol for encoders generating a Response","type":"text"}],"type":"topic","kind":"symbol","title":"ResponseEncoder","role":"symbol","url":"\/documentation\/hummingbird\/responseencoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"ResponseEncoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/dataDecodingStrategy-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dataDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"DataDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC20DataDecodingStrategyO","kind":"typeIdentifier"}],"kind":"symbol","title":"dataDecodingStrategy","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dataDecodingStrategy-swift.property","abstract":[{"text":"The strategy to use in decoding binary data. Defaults to ","type":"text"},{"code":".base64","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","role":"symbol","abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"type":"topic","title":"JSONDecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"url":"\/documentation\/hummingbird\/jsondecoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/decode(_:from:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/decode(_:from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"text":"Decodes a top-level value of the given type from the given JSON representation.","type":"text"}],"kind":"symbol","role":"symbol","title":"decode(_:from:)","url":"\/documentation\/hummingbird\/jsondecoder\/decode(_:from:)"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum":{"navigatorTitle":[{"text":"DataDecodingStrategy","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataDecodingStrategy","kind":"identifier"}],"url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum","title":"JSONDecoder.DataDecodingStrategy","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" values.","type":"text"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"kind":"symbol","url":"\/documentation\/hummingbird\/requestdecoder","title":"RequestDecoder","abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RequestDecoder"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DateDecodingStrategy-swift.enum":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DateDecodingStrategy-swift.enum","kind":"symbol","role":"symbol","title":"JSONDecoder.DateDecodingStrategy","navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}],"url":"\/documentation\/hummingbird\/jsondecoder\/datedecodingstrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" values."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateDecodingStrategy"}]}}}