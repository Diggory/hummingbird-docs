{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder"},"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"metadata":{"symbolKind":"class","title":"JSONDecoder","role":"symbol","roleHeading":"Class","externalID":"s:10Foundation11JSONDecoderC","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/keyDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/userInfo"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/decode(_:from:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"],"title":"Enumerations"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/HBRequestDecoder-Implementations"],"title":"Default Implementations"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"],"title":"Encoding\/Decoding"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/hummingbird\/jsondecoder"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"abstract":[{"text":"The strategy to use for automatically changing the value of keys before decoding.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyDecodingStrategy"}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"KeyDecodingStrategy"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","title":"JSONDecoder.KeyDecodingStrategy","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/userInfo":{"url":"\/documentation\/hummingbird\/jsondecoder\/userinfo","abstract":[{"type":"text","text":"Contextual user-provided information for use during decoding."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"userInfo"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:s17CodingUserInfoKeyV","kind":"typeIdentifier","text":"CodingUserInfoKey"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"]"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/userInfo","kind":"symbol","title":"userInfo","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseEncoder":{"role":"symbol","abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncoder","url":"\/documentation\/hummingbird\/hbresponseencoder","navigatorTitle":[{"kind":"identifier","text":"HBResponseEncoder"}],"kind":"symbol","title":"HBResponseEncoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseEncoder"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"navigatorTitle":[{"kind":"identifier","text":"URLEncodedFormDecoder"}],"kind":"symbol","type":"topic","title":"URLEncodedFormDecoder","role":"symbol","abstract":[{"type":"text","text":"The wrapper struct for decoding URL encoded form data to Codable classes"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormDecoder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/urlencodedformdecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/init()":{"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/init()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/init()","title":"init()","type":"topic","kind":"symbol","abstract":[{"text":"Initializes ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" with default strategies.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseEncodable":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseEncodable"}],"title":"HBResponseEncodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncodable","type":"topic","abstract":[{"type":"text","text":"Protocol for encodable object that can generate a response. The router will encode"},{"type":"text","text":" "},{"type":"text","text":"the response using the encoder stored in "},{"code":"HBApplication.encoder","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/hummingbird\/hbresponseencodable","navigatorTitle":[{"kind":"identifier","text":"HBResponseEncodable"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/urlencodedformencoder","type":"topic","abstract":[{"text":"The wrapper struct for encoding Codable classes to URL encoded form data","type":"text"}],"title":"URLEncodedFormEncoder","kind":"symbol","navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"url":"\/documentation\/hummingbird\/jsondecoder","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"title":"JSONDecoder","type":"topic","abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseCodable":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseCodable"}],"abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}],"title":"HBResponseCodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseCodable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponseCodable"}],"url":"\/documentation\/hummingbird\/hbresponsecodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"title":"JSONEncoder","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}],"url":"\/documentation\/hummingbird\/jsonencoder","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/decode(_:from:)":{"abstract":[{"text":"Decodes a top-level value of the given type from the given JSON representation.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"decode(_:from:)","url":"\/documentation\/hummingbird\/jsondecoder\/decode(_:from:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/decode(_:from:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum":{"url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataDecodingStrategy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum","navigatorTitle":[{"text":"DataDecodingStrategy","kind":"identifier"}],"title":"JSONDecoder.DataDecodingStrategy","type":"topic","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseGenerator":{"url":"\/documentation\/hummingbird\/hbresponsegenerator","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseGenerator"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","navigatorTitle":[{"kind":"identifier","text":"HBResponseGenerator"}],"title":"HBResponseGenerator","type":"topic","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/dataDecodingStrategy-swift.property":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"The strategy to use in decoding binary data. Defaults to "},{"type":"codeVoice","code":".base64"},{"type":"text","text":"."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dataDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"text":".","kind":"text"},{"text":"DataDecodingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC20DataDecodingStrategyO"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dataDecodingStrategy-swift.property","title":"dataDecodingStrategy","url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.property","kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"kind":"symbol","title":"JSONDecoder.NonConformingFloatDecodingStrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","type":"topic","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DateDecodingStrategy-swift.enum":{"url":"\/documentation\/hummingbird\/jsondecoder\/datedecodingstrategy-swift.enum","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateDecodingStrategy"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DateDecodingStrategy-swift.enum","navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}],"title":"JSONDecoder.DateDecodingStrategy","type":"topic","abstract":[{"type":"text","text":"The strategy to use for decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" values."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/dateDecodingStrategy-swift.property":{"url":"\/documentation\/hummingbird\/jsondecoder\/datedecodingstrategy-swift.property","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dateDecodingStrategy-swift.property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dateDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"DateDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO","kind":"typeIdentifier"}],"abstract":[{"text":"The strategy to use in decoding dates. Defaults to ","type":"text"},{"code":".deferredToDate","type":"codeVoice"},{"text":".","type":"text"}],"title":"dateDecodingStrategy","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestDecoder":{"abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRequestDecoder"}],"role":"symbol","kind":"symbol","title":"HBRequestDecoder","url":"\/documentation\/hummingbird\/hbrequestdecoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecoder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/keyDecodingStrategy-swift.property":{"url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.property","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/keyDecodingStrategy-swift.property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"keyDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"KeyDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO","kind":"typeIdentifier"}],"abstract":[{"text":"The strategy to use for decoding keys. Defaults to ","type":"text"},{"code":".useDefaultKeys","type":"codeVoice"},{"text":".","type":"text"}],"title":"keyDecodingStrategy","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonConformingFloatDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"NonConformingFloatDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO"}],"type":"topic","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","title":"nonConformingFloatDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"type":"codeVoice","code":".throw"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/HBRequestDecoder-Implementations":{"url":"\/documentation\/hummingbird\/jsondecoder\/hbrequestdecoder-implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/HBRequestDecoder-Implementations","role":"collectionGroup","abstract":[],"title":"HBRequestDecoder Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]}}}