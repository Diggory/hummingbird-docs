{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsondecoder"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/keyDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/userInfo"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/decode(_:from:)"]},{"title":"Enumerations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"]},{"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/RequestDecoder-Implementations"],"generated":true}],"seeAlsoSections":[{"title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"platforms":["Linux"]}],"kind":"declarations"}],"metadata":{"roleHeading":"Class","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"symbolKind":"class","title":"JSONDecoder","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"externalID":"s:10Foundation11JSONDecoderC","modules":[{"name":"Hummingbird"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"abstract":[{"text":"protocol for encoders generating a Response","type":"text"}],"navigatorTitle":[{"text":"ResponseEncoder","kind":"identifier"}],"title":"ResponseEncoder","url":"\/documentation\/hummingbird\/responseencoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncoder","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"navigatorTitle":[{"text":"RequestDecoder","kind":"identifier"}],"title":"RequestDecoder","url":"\/documentation\/hummingbird\/requestdecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestDecoder","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}],"navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"title":"JSONEncoder","url":"\/documentation\/hummingbird\/jsonencoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"abstract":[{"text":"Protocol for codable object that can generate a response","type":"text"}],"navigatorTitle":[{"text":"ResponseCodable","kind":"identifier"}],"title":"ResponseCodable","url":"\/documentation\/hummingbird\/responsecodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCodable","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/keyDecodingStrategy-swift.property":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/keyDecodingStrategy-swift.property","title":"keyDecodingStrategy","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"keyDecodingStrategy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier","text":"JSONDecoder"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO","kind":"typeIdentifier","text":"KeyDecodingStrategy"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The strategy to use for decoding keys. Defaults to "},{"type":"codeVoice","code":".useDefaultKeys"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","type":"topic","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum","type":"topic","url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}],"navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"title":"JSONDecoder.DataDecodingStrategy","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"abstract":[{"text":"The wrapper struct for decoding URL encoded form data to Codable classes","type":"text"}],"navigatorTitle":[{"text":"URLEncodedFormDecoder","kind":"identifier"}],"title":"URLEncodedFormDecoder","url":"\/documentation\/hummingbird\/urlencodedformdecoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormDecoder","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"url":"\/documentation\/hummingbird\/responseencodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","type":"topic","title":"ResponseEncodable","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncodable","kind":"identifier"}],"abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"text":"the response using the encoder stored in ","type":"text"},{"type":"codeVoice","code":"Application.encoder"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"ResponseEncodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/RequestDecoder-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/RequestDecoder-Implementations","title":"RequestDecoder Implementations","type":"topic","url":"\/documentation\/hummingbird\/jsondecoder\/requestdecoder-implementations","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/decode(_:from:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/hummingbird\/jsondecoder\/decode(_:from:)","abstract":[{"type":"text","text":"Decodes a top-level value of the given type from the given JSON representation."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/decode(_:from:)","type":"topic","title":"decode(_:from:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"title":"JSONDecoder","url":"\/documentation\/hummingbird\/jsondecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"code":".throw","type":"codeVoice"},{"type":"text","text":"."}],"title":"nonConformingFloatDecodingStrategy","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonConformingFloatDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","text":"NonConformingFloatDecodingStrategy"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/dataDecodingStrategy-swift.property":{"abstract":[{"text":"The strategy to use in decoding binary data. Defaults to ","type":"text"},{"type":"codeVoice","code":".base64"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dataDecodingStrategy-swift.property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dataDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"text":".","kind":"text"},{"text":"DataDecodingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC20DataDecodingStrategyO"}],"kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.property","title":"dataDecodingStrategy","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DateDecodingStrategy-swift.enum":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DateDecodingStrategy-swift.enum","url":"\/documentation\/hummingbird\/jsondecoder\/datedecodingstrategy-swift.enum","kind":"symbol","navigatorTitle":[{"text":"DateDecodingStrategy","kind":"identifier"}],"abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" values.","type":"text"}],"role":"symbol","title":"JSONDecoder.DateDecodingStrategy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateDecodingStrategy","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/userInfo":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"userInfo"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:s17CodingUserInfoKeyV","text":"CodingUserInfoKey"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"]"}],"url":"\/documentation\/hummingbird\/jsondecoder\/userinfo","abstract":[{"type":"text","text":"Contextual user-provided information for use during decoding."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/userInfo","type":"topic","title":"userInfo"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/dateDecodingStrategy-swift.property":{"url":"\/documentation\/hummingbird\/jsondecoder\/datedecodingstrategy-swift.property","title":"dateDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use in decoding dates. Defaults to "},{"code":".deferredToDate","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dateDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO","text":"DateDecodingStrategy","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/dateDecodingStrategy-swift.property","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"KeyDecodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"KeyDecodingStrategy","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}],"title":"JSONDecoder.KeyDecodingStrategy","type":"topic","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"abstract":[{"text":"The wrapper struct for encoding Codable classes to URL encoded form data","type":"text"}],"navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"title":"URLEncodedFormEncoder","url":"\/documentation\/hummingbird\/urlencodedformencoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/init()":{"kind":"symbol","title":"init()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/init()","type":"topic","abstract":[{"type":"text","text":"Initializes "},{"type":"codeVoice","code":"self"},{"type":"text","text":" with default strategies."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"url":"\/documentation\/hummingbird\/jsondecoder\/init()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"abstract":[{"text":"Object that can generate a ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"title":"ResponseGenerator","url":"\/documentation\/hummingbird\/responsegenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator"}}}