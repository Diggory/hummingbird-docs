{"abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}],"relationshipsSections":[{"type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder"],"title":"Conforming Types"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder\/Responder"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder\/buildResponder()"],"title":"Instance Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/httpresponderbuilder"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"title":"Router"}],"metadata":{"modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"roleHeading":"Protocol","externalID":"s:11Hummingbird20HTTPResponderBuilderP","symbolKind":"protocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponderBuilder"}],"title":"HTTPResponderBuilder"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","type":"topic","title":"EndpointPath","url":"\/documentation\/hummingbird\/endpointpath","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Endpoint path storage"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EndpointPath"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","navigatorTitle":[{"text":"RouterBuilder","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterBuilder","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdrouter\/routerbuilder","type":"topic","abstract":[{"text":"Router built using a result builder","type":"text"}],"title":"RouterBuilder","conformance":{"constraints":[{"code":"Context","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RouterRequestContext","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Context","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Handler.Context","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Handler","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"MiddlewareProtocol","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Handler.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Handler.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"kind":"symbol","type":"topic","title":"RouterResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterResponder"}],"url":"\/documentation\/hummingbird\/routerresponder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","navigatorTitle":[{"kind":"identifier","text":"RouteCollection"}],"url":"\/documentation\/hummingbird\/routecollection","title":"RouteCollection","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteCollection"}],"abstract":[{"type":"text","text":"Collection of routes"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponderBuilder"}],"title":"HTTPResponderBuilder","abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}],"url":"\/documentation\/hummingbird\/httpresponderbuilder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"navigatorTitle":[{"kind":"identifier","text":"RouterOptions"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterOptions"}],"title":"RouterOptions","abstract":[{"type":"text","text":"Router Options"}],"url":"\/documentation\/hummingbird\/routeroptions","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"navigatorTitle":[{"kind":"identifier","text":"RequestID"}],"kind":"symbol","type":"topic","title":"RequestID","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestID"}],"url":"\/documentation\/hummingbird\/requestid","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","abstract":[{"type":"text","text":"Generate Unique ID for each request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"url":"\/documentation\/hummingbird\/httpresponder","title":"HTTPResponder","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder/Responder":{"kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Responder"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird13HTTPResponderP","kind":"typeIdentifier","text":"HTTPResponder"}],"title":"Responder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder\/Responder","abstract":[],"url":"\/documentation\/hummingbird\/httpresponderbuilder\/responder","role":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder/buildResponder()":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildResponder"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:11Hummingbird20HTTPResponderBuilderP9ResponderQa","kind":"typeIdentifier","text":"Responder"}],"title":"buildResponder()","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder\/buildResponder()","abstract":[{"type":"text","text":"build a responder"}],"url":"\/documentation\/hummingbird\/httpresponderbuilder\/buildresponder()","role":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CallbackResponder"}],"title":"CallbackResponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"url":"\/documentation\/hummingbird\/callbackresponder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"kind":"symbol","type":"topic","title":"RouterMethods","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"url":"\/documentation\/hummingbird\/routermethods","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","abstract":[{"text":"Conform to ","type":"text"},{"code":"RouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","type":"topic","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"title":"RouterGroup","kind":"symbol","url":"\/documentation\/hummingbird\/routergroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","url":"\/documentation\/hummingbird\/router","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"}],"role":"symbol","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Router"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"title":"RouterPath","abstract":[{"text":"Split router path into components","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerpath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"}}}