{"sections":[],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Hummingbird"}],"extendedModule":"Hummingbird","title":"put(_:options:use:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"put"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","text":"HBResponseGenerator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"externalID":"s:11Hummingbird15HBRouterMethodsPAAE3put_7options3usexSS_AA0B13MethodOptionsVqd__0A4Core9HBRequestV_7ContextQztYaYbKctAA19HBResponseGeneratorRd__lF::SYNTHESIZED::s:11Hummingbird13HBRouterGroupV","role":"symbol"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup\/put(_:options:use:)-2vpsj","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"put"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" = \"\", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions"},{"kind":"text","text":" = [], "},{"kind":"externalParam","text":"use"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa","text":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods\/Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","text":"HBResponseGenerator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]}]}],"abstract":[{"type":"text","text":"PUT path for async closure returning type conforming to HBResponseGenerator"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbroutergroup\/put(_:options:use:)-2vpsj"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup\/HBRouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup\/HBRouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup\/HBRouterMethods-Implementations"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"url":"\/documentation\/hummingbird\/router","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","title":"Router","type":"topic","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods/Context":{"abstract":[],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods\/Context","type":"topic","role":"symbol","kind":"symbol","title":"Context","url":"\/documentation\/hummingbird\/hbroutermethods\/context","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier","text":"HBBaseRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup/put(_:options:use:)-2vpsj":{"title":"put(_:options:use:)","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbroutergroup\/put(_:options:use:)-2vpsj","abstract":[{"text":"PUT path for async closure returning type conforming to HBResponseGenerator","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"put","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup\/put(_:options:use:)-2vpsj","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup/HBRouterMethods-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/hummingbird\/hbroutergroup\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup\/HBRouterMethods-Implementations","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","role":"collection","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"url":"\/documentation\/hummingbird\/hbroutergroup","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"title":"HBRouterGroup","type":"topic","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"role":"symbol","abstract":[{"type":"text","text":"Options available to routes"}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbroutermethodoptions","title":"HBRouterMethodOptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequest":{"role":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbrequest","title":"HBRequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequest"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequest"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseGenerator":{"url":"\/documentation\/hummingbird\/hbresponsegenerator","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseGenerator"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","navigatorTitle":[{"kind":"identifier","text":"HBResponseGenerator"}],"title":"HBResponseGenerator","type":"topic","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]}}}