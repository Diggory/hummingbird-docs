{"sections":[],"metadata":{"externalID":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV","text":"TestingSetup"},{"text":", (","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP","kind":"typeIdentifier","text":"TestClientProtocol"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"}],"extendedModule":"Hummingbird","role":"symbol","modules":[{"name":"Hummingbird"}],"title":"test(_:_:)","symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"testingSetup","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","text":"TestingSetup","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"test"},{"kind":"text","text":": ("},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"TestClientProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"testingSetup","content":[{"type":"paragraph","inlineContent":[{"text":"Indicates which type of testing framework we want","type":"text"}]}]},{"name":"test","content":[{"inlineContent":[{"text":"Test function","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You use "},{"type":"codeVoice","code":"test"},{"type":"text","text":" and "},{"type":"codeVoice","code":"execute"},{"type":"text","text":" to test applications. You can either test using"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":".router"},{"text":" test framework which sends requests directly to the router for testing your code or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":".live","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":".ahc"},{"type":"text","text":" frameworks which both run live servers to pass requests to, but provide"},{"text":" ","type":"text"},{"type":"text","text":"a single connection HTTP client or AsyncHTTPClient as a client respectively . The "},{"code":".router","type":"codeVoice"},{"text":" test","type":"text"},{"type":"text","text":" "},{"text":"framework is quicker and doesnâ€™t require setting up a full server but will only test code run","type":"text"},{"type":"text","text":" "},{"text":"from request generation onwards.","type":"text"}]},{"inlineContent":[{"type":"text","text":"The example below is using the "},{"type":"codeVoice","code":".router"},{"text":" framework to test","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let router = Router()","router.get(\"\/hello\") { _ in","    return \"hello\"","}","let app = Application(router: router)","app.test(.router) { client in","    \/\/ does my app return \"hello\" in the body for this route","    client.execute(uri: \"\/hello\", method: .GET) { response in","        XCTAssertEqual(String(buffer: response.body), \"hello\")","    }","}"]}]}],"abstract":[{"type":"text","text":"Test "},{"code":"Application","type":"codeVoice"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme"],"anchor":"Test-Setup","title":"Test Setup","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)"]}],"references":{"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","kind":"symbol","title":"test(_:_:)","abstract":[{"text":"Test ","type":"text"},{"type":"codeVoice","code":"Application"}],"role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"TestingSetup","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","text":"Value"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestingSetup":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestingSetup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","kind":"symbol","abstract":[{"text":"Type of test framework","type":"text"}],"role":"symbol","type":"topic","title":"TestingSetup","navigatorTitle":[{"kind":"identifier","text":"TestingSetup"}],"url":"\/documentation\/hummingbirdtesting\/testingsetup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestClientProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","role":"symbol","kind":"symbol","type":"topic","title":"TestClientProtocol","abstract":[{"text":"Protocol for client used by HummingbirdTesting","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"TestHTTPScheme","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","kind":"symbol","abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}],"role":"symbol","type":"topic","title":"TestHTTPScheme","navigatorTitle":[{"text":"TestHTTPScheme","kind":"identifier"}],"url":"\/documentation\/hummingbirdtesting\/testhttpscheme"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"role":"collection","title":"HummingbirdTesting","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","type":"topic","kind":"symbol"}}}