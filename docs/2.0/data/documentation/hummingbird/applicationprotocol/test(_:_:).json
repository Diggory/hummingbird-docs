{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"testingSetup"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TestingSetup","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"test"},{"kind":"text","text":": ("},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestClientProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","text":"Value"}]}]},{"parameters":[{"name":"testingSetup","content":[{"inlineContent":[{"type":"text","text":"Indicates which type of testing framework we want"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Test function"}]}],"name":"test"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"You use "},{"code":"test","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"execute","type":"codeVoice"},{"type":"text","text":" to test applications. You can either test using"},{"text":" ","type":"text"},{"type":"text","text":"the "},{"code":".router","type":"codeVoice"},{"type":"text","text":" test framework which sends requests directly to the router for testing your code or"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":".live","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":".ahc"},{"type":"text","text":" frameworks which both run live servers to pass requests to, but provide"},{"type":"text","text":" "},{"type":"text","text":"a single connection HTTP client or AsyncHTTPClient as a client respectively . The "},{"type":"codeVoice","code":".router"},{"type":"text","text":" test"},{"type":"text","text":" "},{"type":"text","text":"framework is quicker and doesnâ€™t require setting up a full server but will only test code run"},{"text":" ","type":"text"},{"text":"from request generation onwards.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The example below is using the "},{"type":"codeVoice","code":".router"},{"text":" framework to test","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let router = Router()","router.get(\"\/hello\") { _ in","    return \"hello\"","}","let app = Application(router: router)","app.test(.router) { client in","    \/\/ does my app return \"hello\" in the body for this route","    client.execute(uri: \"\/hello\", method: .GET) { response in","        XCTAssertEqual(String(buffer: response.body), \"hello\")","    }","}"]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)"]}],"seeAlsoSections":[{"title":"Test Setup","anchor":"Test-Setup","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme"]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"method","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF","extendedModule":"Hummingbird","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"test","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"TestingSetup","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV"},{"kind":"text","text":", ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"TestClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"}],"title":"test(_:_:)"},"abstract":[{"type":"text","text":"Test "},{"code":"Application","type":"codeVoice"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestingSetup":{"title":"TestingSetup","type":"topic","url":"\/documentation\/hummingbirdtesting\/testingsetup","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestingSetup"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestingSetup"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","abstract":[{"text":"Type of test framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"type":"topic","title":"TestClientProtocol","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"}]},"logo.png":{"alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"role":"collection","url":"\/documentation\/hummingbirdtesting","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","kind":"symbol","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"title":"TestHTTPScheme","type":"topic","url":"\/documentation\/hummingbirdtesting\/testhttpscheme","kind":"symbol","navigatorTitle":[{"text":"TestHTTPScheme","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestHTTPScheme","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","abstract":[{"type":"text","text":"HTTP Scheme to use with AsyncHTTPClient test framework"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","title":"test(_:_:)","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","abstract":[{"type":"text","text":"Test "},{"code":"Application","type":"codeVoice"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"test","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting0B5SetupV","kind":"typeIdentifier","text":"TestingSetup"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","text":"Value"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp"}]}}}