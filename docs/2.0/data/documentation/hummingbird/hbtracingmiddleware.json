{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBTracingMiddleware"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","kind":"typeIdentifier","text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Creates a span for each request, including attributes such as the HTTP method.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You may opt in to recording a specific subset of HTTP request\/response header values by passing"},{"type":"text","text":" "},{"type":"text","text":"a set of header names."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbtracingmiddleware"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware"},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo"}],"metadata":{"title":"HBTracingMiddleware","modules":[{"name":"Hummingbird"}],"platforms":[{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"13.0","name":"iOS"},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"10.15","name":"macOS"},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"13.0","name":"tvOS"},{"beta":false,"unavailable":false,"deprecated":false,"introducedAt":"6.0","name":"watchOS"}],"navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}],"role":"symbol","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBTracingMiddleware"}],"externalID":"s:11Hummingbird19HBTracingMiddlewareV","roleHeading":"Structure"},"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware\/init(recordingHeaders:attributes:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware\/handle(_:context:next:)"]}],"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"seeAlsoSections":[{"title":"Middleware","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"title":"HBLogRequestsMiddleware","url":"\/documentation\/hummingbird\/hblogrequestsmiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","type":"topic","abstract":[{"text":"Middleware outputting to log for every call to server","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HBLogRequestsMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware/handle(_:context:next:)":{"role":"symbol","title":"handle(_:context:next:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware\/handle(_:context:next:)","url":"\/documentation\/hummingbird\/hbtracingmiddleware\/handle(_:context:next:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19HBTracingMiddlewareV7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19HBTracingMiddlewareV7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","text":"HBResponse","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","text":"HBResponse","kind":"typeIdentifier"}],"abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","title":"HBCORSMiddleware","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBCORSMiddleware"}],"url":"\/documentation\/hummingbird\/hbcorsmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBMiddlewareGroup","kind":"identifier"}],"type":"topic","title":"HBMiddlewareGroup","navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmiddlewaregroup","kind":"symbol","role":"symbol","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileMiddleware":{"role":"symbol","navigatorTitle":[{"text":"HBFileMiddleware","kind":"identifier"}],"kind":"symbol","title":"HBFileMiddleware","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFileMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbfilemiddleware","abstract":[{"type":"text","text":"Middleware for serving static files."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"title":"HBBaseRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext","kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","title":"HBMiddlewareProtocol","kind":"symbol","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"title":"Middleware","url":"\/documentation\/hummingbird\/middleware","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","kind":"symbol","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware Handler with generic input, context and output types"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"kind":"article","role":"collectionGroup","title":"Logging, Metrics and Tracing","url":"\/documentation\/hummingbird\/loggingmetricsandtracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","title":"HBTracingMiddleware","kind":"symbol","navigatorTitle":[{"text":"HBTracingMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbtracingmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBTracingMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","kind":"article","title":"Hummingbird","type":"topic","url":"\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMetricsMiddleware","kind":"identifier"}],"type":"topic","title":"HBMetricsMiddleware","navigatorTitle":[{"text":"HBMetricsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmetricsmiddleware","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"url":"\/documentation\/hummingbird\/middlewareprotocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"role":"symbol","title":"MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware/init(recordingHeaders:attributes:)":{"role":"symbol","title":"init(recordingHeaders:attributes:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware\/init(recordingHeaders:attributes:)","url":"\/documentation\/hummingbird\/hbtracingmiddleware\/init(recordingheaders:attributes:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"recordingHeaders","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sl","text":"Collection","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"HTTPField","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Name","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"attributes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SpanAttributes","preciseIdentifier":"s:7Tracing14SpanAttributesV"},{"kind":"text","text":"?)"}],"abstract":[{"text":"Intialize a new HBTracingMiddleware.","type":"text"}]}}}