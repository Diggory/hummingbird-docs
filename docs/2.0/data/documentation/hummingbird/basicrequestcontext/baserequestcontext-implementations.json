{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/BaseRequestContext-Implementations"},"kind":"article","topicSections":[{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/allocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/maxUploadSize","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/requestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/responseEncoder"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"]]},"metadata":{"roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"Hummingbird"}],"title":"BaseRequestContext Implementations"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/maxUploadSize":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/maxUploadSize","kind":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/maxuploadsize","abstract":[{"text":"maxUploadSize","type":"text"}],"role":"symbol","type":"topic","title":"maxUploadSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/parameters":{"kind":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/parameters","role":"symbol","abstract":[{"type":"text","text":"Parameters extracted from URI"}],"title":"parameters","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10Parametersa","text":"Parameters"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/parameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/logger":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/logger","role":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/logger","abstract":[{"type":"text","text":"Logger to use with Request"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"}],"title":"logger"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","url":"\/documentation\/hummingbird\/requestcontexts","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","title":"Request Contexts","kind":"article","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/requestDecoder":{"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" is "},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/requestDecoder","title":"requestDecoder","abstract":[{"type":"text","text":"Request decoder"}],"kind":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/requestdecoder","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7DecoderQa","text":"Decoder","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"type":"topic","url":"\/documentation\/hummingbird\/basicrequestcontext","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","title":"BasicRequestContext","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/id":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/id","kind":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/id","abstract":[{"text":"Request ID, extracted from Logger","type":"text"}],"role":"symbol","type":"topic","title":"id","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/responseEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/responseEncoder","kind":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/responseencoder","abstract":[{"text":"Response encoder","type":"text"}],"role":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Encoder"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"JSONEncoder"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"responseEncoder","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"responseEncoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7EncoderQa"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","url":"\/documentation\/index","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","kind":"article","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/endpointPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/endpointPath","kind":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/endpointpath","abstract":[{"text":"Endpoint path","type":"text"}],"role":"symbol","type":"topic","title":"endpointPath","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"endpointPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/allocator":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/allocator","kind":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/allocator","abstract":[],"role":"symbol","type":"topic","title":"allocator","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allocator","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"}]}}}