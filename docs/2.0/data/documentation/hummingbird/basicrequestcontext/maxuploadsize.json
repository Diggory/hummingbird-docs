{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Maximum size of request body allowed when decoding requests.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/basicrequestcontext\/maxuploadsize"]}],"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"modules":[{"name":"Hummingbird"}],"title":"maxUploadSize","role":"symbol","externalID":"s:11Hummingbird14RequestContextPAAE13maxUploadSizeSivp::SYNTHESIZED::s:11Hummingbird19BasicRequestContextV","symbolKind":"property","roleHeading":"Instance Property","extendedModule":"Hummingbird"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/RequestContext-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/RequestContext-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/RequestContext-Implementations"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/maxUploadSize","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"role":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext","title":"BasicRequestContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRequestContext"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"title":"Request Contexts","url":"\/documentation\/hummingbird\/requestcontexts"},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/maxUploadSize":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"maxUploadSize","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"title":"maxUploadSize","kind":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/maxuploadsize","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/maxUploadSize","role":"symbol","abstract":[{"type":"text","text":"Maximum size of request body allowed when decoding requests."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/RequestContext-Implementations":{"abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/RequestContext-Implementations","title":"RequestContext Implementations","url":"\/documentation\/hummingbird\/basicrequestcontext\/requestcontext-implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","type":"topic","kind":"article","url":"\/documentation\/index"}}}