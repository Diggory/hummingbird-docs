{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/responseEncoder","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","metadata":{"symbolKind":"property","roleHeading":"Instance Property","role":"symbol","title":"responseEncoder","modules":[{"name":"Hummingbird"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP7EncoderQa","text":"Encoder"}],"extendedModule":"Hummingbird","externalID":"s:11Hummingbird14RequestContextPAA20FoundationEssentials11JSONEncoderC7EncoderRtzrlE08responseG0AFvp::SYNTHESIZED::s:11Hummingbird19BasicRequestContextV","conformance":{"constraints":[{"type":"codeVoice","code":"Encoder"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"JSONEncoder"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Response encoder"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:11Hummingbird14RequestContextP7EncoderQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Encoder"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/basicrequestcontext\/responseencoder"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/RequestContext-Implementations"]]},"references":{"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Encoder":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird15ResponseEncoderP","text":"ResponseEncoder","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"JSONEncoder","preciseIdentifier":"s:20FoundationEssentials11JSONEncoderC"}],"type":"topic","title":"Encoder","abstract":[],"required":true,"kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/encoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Encoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"url":"\/documentation\/hummingbird\/basicrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","type":"topic","title":"BasicRequestContext","navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/RequestContext-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/hummingbird\/basicrequestcontext\/requestcontext-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/RequestContext-Implementations","type":"topic","title":"RequestContext Implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","kind":"article","title":"Hummingbird Documentation","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/responseEncoder":{"abstract":[{"text":"Response encoder","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"kind":"text","text":": "},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP7EncoderQa"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Encoder"},{"type":"text","text":" is "},{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/responseEncoder","url":"\/documentation\/hummingbird\/basicrequestcontext\/responseencoder","role":"symbol","type":"topic","title":"responseEncoder"}}}