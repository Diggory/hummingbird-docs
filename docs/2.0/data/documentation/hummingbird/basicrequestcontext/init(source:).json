{"metadata":{"externalID":"s:11Hummingbird19BasicRequestContextV6sourceAcA011ApplicationcD6SourceV_tcfc","modules":[{"name":"Hummingbird"}],"symbolKind":"init","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird14RequestContextP6SourceQa","kind":"typeIdentifier","text":"Source"},{"kind":"text","text":")"}],"title":"init(source:)","role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source","preciseIdentifier":"s:11Hummingbird14RequestContextP6SourceQa","text":"Source","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"allocator: Allocator"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"logger: Logger"}]}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/basicrequestcontext\/init(source:)"]}],"abstract":[{"text":"Initialize an ","type":"text"},{"code":"RequestContext","type":"codeVoice"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/init(source:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/init(source:)":{"kind":"symbol","title":"init(source:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Source","preciseIdentifier":"s:11Hummingbird14RequestContextP6SourceQa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initialize an "},{"type":"codeVoice","code":"RequestContext"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/init(source:)","role":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/init(source:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"kind":"article","title":"Request Contexts","type":"topic","url":"\/documentation\/hummingbird\/requestcontexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Source":{"kind":"symbol","title":"Source","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source","url":"\/documentation\/hummingbird\/requestcontext\/source","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Source","kind":"identifier"},{"kind":"text","text":" = "},{"text":"ApplicationRequestContextSource","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird31ApplicationRequestContextSourceV"}],"required":true,"type":"topic","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","url":"\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"title":"BasicRequestContext","url":"\/documentation\/hummingbird\/basicrequestcontext","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}]}}}