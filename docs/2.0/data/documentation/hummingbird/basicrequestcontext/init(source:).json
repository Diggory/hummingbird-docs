{"abstract":[{"text":"Initialize an ","type":"text"},{"type":"codeVoice","code":"RequestContext"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/init(source:)"},"variants":[{"paths":["\/documentation\/hummingbird\/basicrequestcontext\/init(source:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP6SourceQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source","text":"Source","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"allocator: Allocator"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"logger: Logger"}]}]}],"type":"unorderedList"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"]]},"metadata":{"symbolKind":"init","role":"symbol","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird14RequestContextP6SourceQa","kind":"typeIdentifier","text":"Source"},{"kind":"text","text":")"}],"title":"init(source:)","roleHeading":"Initializer","externalID":"s:11Hummingbird19BasicRequestContextV6sourceAcA011ApplicationcD6SourceV_tcfc"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext/init(source:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird14RequestContextP6SourceQa","kind":"typeIdentifier","text":"Source"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext\/init(source:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext\/init(source:)","abstract":[{"text":"Initialize an ","type":"text"},{"code":"RequestContext","type":"codeVoice"}],"kind":"symbol","title":"init(source:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","kind":"symbol","title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","kind":"symbol","role":"symbol","title":"BasicRequestContext","navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRequestContext"}],"type":"topic","url":"\/documentation\/hummingbird\/basicrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article","role":"collection","title":"Hummingbird","type":"topic","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Source":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source","kind":"symbol","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Source"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","text":"ApplicationRequestContextSource","preciseIdentifier":"s:11Hummingbird31ApplicationRequestContextSourceV"}],"url":"\/documentation\/hummingbird\/requestcontext\/source","required":true,"title":"Source","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","kind":"article","role":"collectionGroup","title":"Request Contexts","type":"topic","url":"\/documentation\/hummingbird\/requestcontexts"}}}