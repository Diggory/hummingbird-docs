{"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"type":"inheritedBy","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext"],"title":"Inherited By"},{"type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"title":"Conforming Types"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"]]},"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"],"generated":true,"title":"Request context","anchor":"Request-context"}],"metadata":{"modules":[{"name":"Hummingbird"}],"roleHeading":"Protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"externalID":"s:11Hummingbird14RequestContextP","title":"RequestContext","symbolKind":"protocol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/hummingbird\/requestcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP","text":"InitializableFromSource","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"RequestContextSource","preciseIdentifier":"s:11Hummingbird20RequestContextSourceP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","kind":"typeIdentifier","text":"Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird20RequestContextSourceP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","text":"RequestContextSource"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"It’s passed along the whole middleware chain through to the route. This allows middleware and the route to share this metadata."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Typical use of a context includes:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The origin that sent the request (IP address or otherwise)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The identity, such as a user, that is associated with this request","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The context is a statically typed metadata container for the duration of a single request."},{"type":"text","text":" "},{"text":"It’s used to store values between middleware and routes such as the user’s identity.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The lifetime of a RequestContext should not exceed that of the request."}]}],"kind":"content"}],"topicSections":[{"title":"Associated Types","generated":true,"anchor":"Associated-Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Encoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/coreContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/maxUploadSize-1lzu0","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/requestDecoder-5rq7e","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/responseEncoder-3mece"],"generated":true,"anchor":"Instance-Properties"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"abstract":[{"type":"text","text":"A Request Context that is initialized with the Event that triggered the Lambda"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LambdaRequestContext"}],"title":"LambdaRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContext"}],"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"abstract":[{"text":"The default Lambda request context.","type":"text"}],"navigatorTitle":[{"text":"BasicLambdaRequestContext","kind":"identifier"}],"title":"BasicLambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicLambdaRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/endpointPath":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"endpointPath","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/endpointpath","title":"endpointPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/endpointPath","abstract":[{"type":"text","text":"Endpoint path"}]},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"title":"BasicRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/basicrequestcontext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Source":{"required":true,"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Source","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"ApplicationRequestContextSource","preciseIdentifier":"s:11Hummingbird31ApplicationRequestContextSourceV","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/source","title":"Source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/requestDecoder-5rq7e":{"abstract":[{"type":"text","text":"Request decoder"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP7DecoderQa"}],"title":"requestDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/requestDecoder-5rq7e","required":true,"defaultImplementations":1,"url":"\/documentation\/hummingbird\/requestcontext\/requestdecoder-5rq7e"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Decoder":{"required":true,"role":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decoder"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird14RequestDecoderP","text":"RequestDecoder","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC","text":"JSONDecoder"}],"kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/decoder","title":"Decoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Decoder","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"url":"\/documentation\/hummingbirdauth\/authrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","role":"symbol","title":"AuthRequestContext","kind":"symbol","type":"topic","navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to if they want to support","type":"text"},{"text":" ","type":"text"},{"text":"authentication middleware","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AuthRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/maxUploadSize-1lzu0":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/maxUploadSize-1lzu0","role":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/maxuploadsize-1lzu0","type":"topic","defaultImplementations":1,"required":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"abstract":[{"text":"Maximum size of request body allowed when decoding requests. If a request body","type":"text"},{"type":"text","text":" "},{"text":"that needs decoding is greater than this size then a Content Too Large (413)","type":"text"},{"type":"text","text":" "},{"text":"response is returned. This only applies to decoding requests.","type":"text"}],"title":"maxUploadSize"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"abstract":[{"type":"text","text":"Default implementation of a request context that supports WebSockets"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","title":"BasicWebSocketRequestContext","kind":"symbol","navigatorTitle":[{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","role":"symbol","kind":"symbol","title":"RouterRequestContext","type":"topic","navigatorTitle":[{"text":"RouterRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts used with RouterBuilder should conform to.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Encoder":{"abstract":[],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ResponseEncoder","preciseIdentifier":"s:11Hummingbird15ResponseEncoderP"},{"kind":"text","text":" = "},{"text":"JSONEncoder","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONEncoderC"}],"title":"Encoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Encoder","required":true,"url":"\/documentation\/hummingbird\/requestcontext\/encoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/requestcontext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"kind":"symbol","title":"RequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Source","kind":"identifier"}],"abstract":[],"url":"\/documentation\/hummingbird\/initializablefromsource\/source","kind":"symbol","title":"Source","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","required":true,"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/request","kind":"symbol","title":"Request","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"navigatorTitle":[{"kind":"identifier","text":"Application"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Application","kind":"identifier"}],"url":"\/documentation\/hummingbird\/application","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"kind":"symbol","title":"Application","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionRequestContext":{"abstract":[{"type":"text","text":"Protocol for RequestContext that stores session data"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","title":"SessionRequestContext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SessionRequestContext"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/sessionrequestcontext","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird","kind":"symbol","title":"Hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"title":"CoreRequestContextStorage","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"CoreRequestContextStorage","kind":"identifier"}],"url":"\/documentation\/hummingbird\/corerequestcontextstorage","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreRequestContextStorage"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"abstract":[{"text":"Basic implementation of a context that can be used with `RouterBuilder``","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRouterRequestContext"}],"title":"BasicRouterRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"url":"\/documentation\/hummingbird\/childrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","role":"symbol","kind":"symbol","title":"ChildRequestContext","type":"topic","navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A RequestContext that can be initialized from another RequestContext where initialization"},{"type":"text","text":" "},{"text":"can throw errors which will be passed back up the middleware stack","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/responseEncoder-3mece":{"abstract":[{"type":"text","text":"Response encoder"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"text":": ","kind":"text"},{"text":"Encoder","preciseIdentifier":"s:11Hummingbird14RequestContextP7EncoderQa","kind":"typeIdentifier"}],"defaultImplementations":1,"url":"\/documentation\/hummingbird\/requestcontext\/responseencoder-3mece","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/responseEncoder-3mece","title":"responseEncoder","role":"symbol","required":true,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"kind":"symbol","title":"RequestContextSource","url":"\/documentation\/hummingbird\/requestcontextsource","role":"symbol","abstract":[{"type":"text","text":"Protocol for source of request contexts"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContextSource","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","navigatorTitle":[{"kind":"identifier","text":"RequestContextSource"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/parameters":{"abstract":[{"type":"text","text":"Parameters extracted from URI"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parameters"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird10Parametersa","text":"Parameters","kind":"typeIdentifier"}],"title":"parameters","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/parameters","url":"\/documentation\/hummingbird\/requestcontext\/parameters"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicSessionRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicSessionRequestContext"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BasicSessionRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Implementation of a basic request context that supports session storage and authenticators"}],"url":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext","kind":"symbol","title":"BasicSessionRequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"url":"\/documentation\/index","kind":"article","title":"Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"title":"ApplicationRequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","abstract":[{"type":"text","text":"RequestContext source for contexts created by "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"ApplicationRequestContextSource","kind":"identifier"}],"url":"\/documentation\/hummingbird\/applicationrequestcontextsource","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ApplicationRequestContextSource","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicAuthRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","title":"BasicAuthRequestContext","navigatorTitle":[{"text":"BasicAuthRequestContext","kind":"identifier"}],"abstract":[{"text":"Implementation of a basic request context that supports authenticators","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"title":"InitializableFromSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"url":"\/documentation\/hummingbird\/initializablefromsource","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"InitializableFromSource","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/coreContext":{"abstract":[{"type":"text","text":"Core context"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/coreContext","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"coreContext"},{"text":": ","kind":"text"},{"text":"CoreRequestContextStorage","preciseIdentifier":"s:11Hummingbird25CoreRequestContextStorageV","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/corecontext","title":"coreContext","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"url":"\/documentation\/hummingbird\/requestcontexts","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","role":"collectionGroup","title":"Request Contexts","kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/id":{"abstract":[{"type":"text","text":"Request ID, extracted from Logger"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"title":"id","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/id","url":"\/documentation\/hummingbird\/requestcontext\/id"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"kind":"symbol","title":"RemoteAddressRequestContext","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","role":"symbol","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RemoteAddressRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","navigatorTitle":[{"kind":"identifier","text":"RemoteAddressRequestContext"}],"type":"topic"}}}