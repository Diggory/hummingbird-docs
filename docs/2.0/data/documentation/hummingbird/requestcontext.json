{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestContext"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP","text":"InitializableFromSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","text":"RequestContextSource","preciseIdentifier":"s:11Hummingbird20RequestContextSourceP"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","text":"Source","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","preciseIdentifier":"s:11Hummingbird20RequestContextSourceP","text":"RequestContextSource"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"It’s passed along the whole middleware chain through to the route. This allows middleware and the route to share this metadata."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Typical use of a context includes:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The origin that sent the request (IP address or otherwise)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The identity, such as a user, that is associated with this request"}]}]}]},{"inlineContent":[{"text":"The context is a statically typed metadata container for the duration of a single request.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It’s used to store values between middleware and routes such as the user’s identity."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The lifetime of a RequestContext should not exceed that of the request."}],"type":"paragraph"}]}],"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"},{"kind":"relationships","title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"seeAlsoSections":[{"anchor":"Request-context","title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage"],"generated":true}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"Hummingbird"}],"title":"RequestContext","symbolKind":"protocol","roleHeading":"Protocol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"role":"symbol","externalID":"s:11Hummingbird14RequestContextP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/requestcontext"]}],"abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Encoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source"],"anchor":"Associated-Types","generated":true},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/coreContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/maxUploadSize-1lzu0","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/requestDecoder-5rq7e","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/responseEncoder-3mece"],"anchor":"Instance-Properties"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","kind":"symbol","type":"topic","title":"BasicWebSocketRequestContext","abstract":[{"type":"text","text":"Default implementation of a request context that supports WebSockets"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/coreContext":{"title":"coreContext","kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/corecontext","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/coreContext","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"coreContext"},{"kind":"text","text":": "},{"text":"CoreRequestContextStorage","preciseIdentifier":"s:11Hummingbird25CoreRequestContextStorageV","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Core context"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SessionRequestContext"}],"navigatorTitle":[{"text":"SessionRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/sessionrequestcontext","kind":"symbol","type":"topic","title":"SessionRequestContext","abstract":[{"type":"text","text":"Protocol for RequestContext that stores session data"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"url":"\/documentation\/hummingbirdcore\/request","title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicSessionRequestContext":{"kind":"symbol","abstract":[{"text":"Implementation of a basic request context that supports session storage and authenticators","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicSessionRequestContext"}],"title":"BasicSessionRequestContext","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","navigatorTitle":[{"text":"BasicSessionRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemoteAddressRequestContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","role":"symbol","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"title":"RemoteAddressRequestContext","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ChildRequestContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ChildRequestContext"}],"url":"\/documentation\/hummingbird\/childrequestcontext","kind":"symbol","type":"topic","title":"ChildRequestContext","abstract":[{"text":"A RequestContext that can be initialized from another RequestContext where initialization","type":"text"},{"type":"text","text":" "},{"type":"text","text":"can throw errors which will be passed back up the middleware stack"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreRequestContextStorage"}],"url":"\/documentation\/hummingbird\/corerequestcontextstorage","kind":"symbol","title":"CoreRequestContextStorage","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","role":"symbol","navigatorTitle":[{"text":"CoreRequestContextStorage","kind":"identifier"}],"abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"LambdaRequestContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContext"}],"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","kind":"symbol","type":"topic","title":"LambdaRequestContext","abstract":[{"text":"A Request Context that is initialized with the Event that triggered the Lambda","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/endpointPath":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpointPath"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"url":"\/documentation\/hummingbird\/requestcontext\/endpointpath","type":"topic","abstract":[{"type":"text","text":"Endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/endpointPath","kind":"symbol","title":"endpointPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}],"url":"\/documentation\/hummingbird\/initializablefromsource","kind":"symbol","title":"InitializableFromSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"abstract":[{"text":"A type that can be initialized from another type","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/requestDecoder-5rq7e":{"title":"requestDecoder","url":"\/documentation\/hummingbird\/requestcontext\/requestdecoder-5rq7e","kind":"symbol","role":"symbol","defaultImplementations":1,"abstract":[{"type":"text","text":"Request decoder"}],"required":true,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/requestDecoder-5rq7e","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"kind":"text","text":": "},{"text":"Decoder","preciseIdentifier":"s:11Hummingbird14RequestContextP7DecoderQa","kind":"typeIdentifier"}]},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","title":"Hummingbird","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/id":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"url":"\/documentation\/hummingbird\/requestcontext\/id","type":"topic","abstract":[{"text":"Request ID, extracted from Logger","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/id","kind":"symbol","title":"id"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/responseEncoder-3mece":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/responseEncoder-3mece","abstract":[{"text":"Response encoder","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/responseencoder-3mece","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"responseEncoder"},{"kind":"text","text":": "},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP7EncoderQa"}],"kind":"symbol","title":"responseEncoder","required":true,"defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Encoder":{"type":"topic","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"ResponseEncoder","preciseIdentifier":"s:11Hummingbird15ResponseEncoderP"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONEncoderC","text":"JSONEncoder"}],"url":"\/documentation\/hummingbird\/requestcontext\/encoder","kind":"symbol","title":"Encoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Encoder","role":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicRequestContext"}],"navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/basicrequestcontext","kind":"symbol","type":"topic","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"title":"BasicRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAuthRequestContext"}],"navigatorTitle":[{"text":"BasicAuthRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","kind":"symbol","abstract":[{"type":"text","text":"Implementation of a basic request context that supports authenticators"}],"title":"BasicAuthRequestContext","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/parameters":{"title":"parameters","kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/parameters","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/parameters","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parameters"},{"kind":"text","text":": "},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10Parametersa"}],"type":"topic","abstract":[{"text":"Parameters extracted from URI","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Application","kind":"identifier"}],"url":"\/documentation\/hummingbird\/application","role":"symbol","navigatorTitle":[{"text":"Application","kind":"identifier"}],"abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"type":"topic","title":"Application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"kind":"symbol","abstract":[{"text":"Basic implementation of a context that can be used with `RouterBuilder``","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicRouterRequestContext"}],"title":"BasicRouterRequestContext","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","type":"topic","url":"\/documentation\/index","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ApplicationRequestContextSource"}],"url":"\/documentation\/hummingbird\/applicationrequestcontextsource","kind":"symbol","title":"ApplicationRequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","role":"symbol","navigatorTitle":[{"text":"ApplicationRequestContextSource","kind":"identifier"}],"abstract":[{"type":"text","text":"RequestContext source for contexts created by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"text":".","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RouterRequestContext","kind":"identifier"}],"title":"RouterRequestContext","url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","role":"symbol","navigatorTitle":[{"text":"RouterRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts used with RouterBuilder should conform to.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}],"title":"Source","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","required":true,"url":"\/documentation\/hummingbird\/initializablefromsource\/source"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AuthRequestContext"}],"navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/authrequestcontext","kind":"symbol","type":"topic","title":"AuthRequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Decoder":{"type":"topic","url":"\/documentation\/hummingbird\/requestcontext\/decoder","abstract":[],"kind":"symbol","role":"symbol","title":"Decoder","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Decoder","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Decoder","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestDecoderP","kind":"typeIdentifier","text":"RequestDecoder"},{"text":" = ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials11JSONDecoderC"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Source":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Source"},{"kind":"text","text":" = "},{"text":"ApplicationRequestContextSource","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird31ApplicationRequestContextSourceV"}],"kind":"symbol","required":true,"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source","url":"\/documentation\/hummingbird\/requestcontext\/source","title":"Source","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicLambdaRequestContext","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The default Lambda request context."}],"title":"BasicLambdaRequestContext","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/maxUploadSize-1lzu0":{"title":"maxUploadSize","kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/maxuploadsize-1lzu0","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/maxUploadSize-1lzu0","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Maximum size of request body allowed when decoding requests. If a request body","type":"text"},{"type":"text","text":" "},{"text":"that needs decoding is greater than this size then a Content Too Large (413)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"response is returned. This only applies to decoding requests."}],"defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContextSource"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","url":"\/documentation\/hummingbird\/requestcontextsource","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestContextSource"}],"title":"RequestContextSource","abstract":[{"text":"Protocol for source of request contexts","type":"text"}]}}}