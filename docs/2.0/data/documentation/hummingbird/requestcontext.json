{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"]]},"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"title":"RequestContext","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"roleHeading":"Protocol","externalID":"s:11Hummingbird14RequestContextP","role":"symbol","symbolKind":"protocol","modules":[{"name":"Hummingbird"}]},"seeAlsoSections":[{"generated":true,"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/requestcontext"]}],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom"},{"kind":"relationships","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext"],"type":"inheritedBy"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"type":"conformingTypes"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP","kind":"typeIdentifier","text":"InitializableFromSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird20RequestContextSourceP","kind":"typeIdentifier","text":"RequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","kind":"typeIdentifier","text":"Source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird20RequestContextSourceP","kind":"typeIdentifier","text":"RequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"It’s passed along the whole middleware chain through to the route. This allows middleware and the route to share this metadata.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Typical use of a context includes:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The origin that sent the request (IP address or otherwise)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The identity, such as a user, that is associated with this request","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"The context is a statically typed metadata container for the duration of a single request.","type":"text"},{"text":" ","type":"text"},{"text":"It’s used to store values between middleware and routes such as the user’s identity.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The lifetime of a RequestContext should not exceed that of the request.","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Encoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/coreContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/maxUploadSize-1lzu0","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/requestDecoder-5rq7e","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/responseEncoder-3mece"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"title":"BasicAuthRequestContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicAuthRequestContext","kind":"identifier"}],"type":"topic","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicAuthRequestContext"}],"url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/coreContext":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"coreContext","kind":"identifier"},{"text":": ","kind":"text"},{"text":"CoreRequestContextStorage","preciseIdentifier":"s:11Hummingbird25CoreRequestContextStorageV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/coreContext","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/requestcontext\/corecontext","abstract":[{"text":"Core context","type":"text"}],"required":true,"role":"symbol","title":"coreContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Application","kind":"identifier"}],"abstract":[{"text":"Application type bringing together all the components of Hummingbird","type":"text"}],"title":"Application","kind":"symbol","navigatorTitle":[{"text":"Application","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","url":"\/documentation\/hummingbird\/application"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Source","kind":"identifier"}],"abstract":[],"title":"Source","kind":"symbol","required":true,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","url":"\/documentation\/hummingbird\/initializablefromsource\/source"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Encoder":{"abstract":[],"title":"Encoder","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Encoder","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird15ResponseEncoderP","kind":"typeIdentifier","text":"ResponseEncoder"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Encoder","kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/encoder","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"title":"RequestContext","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicLambdaRequestContext"}],"role":"symbol","abstract":[{"type":"text","text":"The default Lambda request context."}],"title":"BasicLambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/parameters":{"url":"\/documentation\/hummingbird\/requestcontext\/parameters","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/parameters","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parameters","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10Parametersa","text":"Parameters","kind":"typeIdentifier"}],"title":"parameters","abstract":[{"type":"text","text":"Parameters extracted from URI"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/maxUploadSize-1lzu0":{"defaultImplementations":1,"kind":"symbol","required":true,"abstract":[{"type":"text","text":"Maximum size of request body allowed when decoding requests. If a request body"},{"type":"text","text":" "},{"type":"text","text":"that needs decoding is greater than this size then a Content Too Large (413)"},{"type":"text","text":" "},{"type":"text","text":"response is returned. This only applies to decoding requests."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/maxUploadSize-1lzu0","title":"maxUploadSize","url":"\/documentation\/hummingbird\/requestcontext\/maxuploadsize-1lzu0"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/responseEncoder-3mece":{"role":"symbol","title":"responseEncoder","defaultImplementations":1,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP7EncoderQa","text":"Encoder"}],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/responseEncoder-3mece","abstract":[{"text":"Response encoder","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontext\/responseencoder-3mece","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"RouterRequestContext"}],"url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterRequestContext"}],"abstract":[{"type":"text","text":"Protocol that all request contexts used with RouterBuilder should conform to."}],"role":"symbol","title":"RouterRequestContext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/id":{"title":"id","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"kind":"symbol","abstract":[{"text":"Request ID, extracted from Logger","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontext\/id","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/id","role":"symbol","type":"topic"},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicRouterRequestContext"}],"title":"BasicRouterRequestContext","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicRouterRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","abstract":[{"text":"Basic implementation of a context that can be used with `RouterBuilder``","type":"text"}],"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/requestDecoder-5rq7e":{"required":true,"title":"requestDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/requestDecoder-5rq7e","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP7DecoderQa"}],"abstract":[{"text":"Request decoder","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontext\/requestdecoder-5rq7e","defaultImplementations":1,"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"title":"Hummingbird","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"role":"symbol","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"title":"InitializableFromSource","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"url":"\/documentation\/hummingbird\/initializablefromsource","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Decoder":{"kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/decoder","role":"symbol","type":"topic","title":"Decoder","abstract":[],"required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decoder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RequestDecoder","preciseIdentifier":"s:11Hummingbird14RequestDecoderP"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Decoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to if they want to support","type":"text"},{"text":" ","type":"text"},{"text":"authentication middleware","type":"text"}],"title":"AuthRequestContext","kind":"symbol","navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","url":"\/documentation\/hummingbirdauth\/authrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemoteAddressRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"title":"RemoteAddressRequestContext","kind":"symbol","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CoreRequestContextStorage","kind":"identifier"}],"abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"title":"CoreRequestContextStorage","kind":"symbol","navigatorTitle":[{"text":"CoreRequestContextStorage","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","url":"\/documentation\/hummingbird\/corerequestcontextstorage"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"role":"symbol","navigatorTitle":[{"text":"LambdaRequestContext","kind":"identifier"}],"title":"LambdaRequestContext","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","abstract":[{"text":"A Request Context that is initialized with the Event that triggered the Lambda","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"navigatorTitle":[{"text":"RequestContextSource","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContextSource","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Protocol for source of request contexts","type":"text"}],"title":"RequestContextSource","url":"\/documentation\/hummingbird\/requestcontextsource","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"kind":"article","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","url":"\/documentation\/hummingbird\/requestcontexts","type":"topic","title":"Request Contexts"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"title":"BasicWebSocketRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","abstract":[{"text":"Default implementation of a request context that supports WebSockets","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"title":"Request","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"url":"\/documentation\/hummingbirdcore\/request","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/endpointPath":{"title":"endpointPath","role":"symbol","abstract":[{"text":"Endpoint path","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpointPath"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/endpointPath","url":"\/documentation\/hummingbird\/requestcontext\/endpointpath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"abstract":[{"type":"text","text":"RequestContext source for contexts created by "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","navigatorTitle":[{"text":"ApplicationRequestContextSource","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationRequestContextSource","kind":"identifier"}],"title":"ApplicationRequestContextSource","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/applicationrequestcontextsource","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/Source":{"title":"Source","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird31ApplicationRequestContextSourceV","text":"ApplicationRequestContextSource","kind":"typeIdentifier"}],"type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext\/source","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/Source","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"title":"BasicRequestContext","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/basicrequestcontext","kind":"symbol"}}}