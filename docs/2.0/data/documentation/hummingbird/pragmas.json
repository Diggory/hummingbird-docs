{"metadata":{"role":"article","roleHeading":"Article","title":"Pragmas\/Configuration variables","modules":[{"name":"HummingbirdMustache"}]},"seeAlsoSections":[{"generated":true,"title":"Additional Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]}],"abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The syntax ","type":"text"},{"code":"{{% var: value}}","type":"codeVoice"},{"text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is ","type":"text"},{"code":"CONTENT_TYPE","type":"codeVoice"},{"text":". This can be set to either to ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"TEXT","type":"codeVoice"},{"text":" and defines how variables are escaped. A content type of ","type":"text"},{"code":"TEXT","type":"codeVoice"},{"text":" means no variables are escaped and a content type of ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":" will do HTML escaping of the rendered text. The content type defaults to ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given input object "},{"type":"codeVoice","code":"<>"},{"type":"text","text":", template"}]},{"code":["{{%CONTENT_TYPE: HTML}}{{.}}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"will render as ","type":"text"},{"type":"codeVoice","code":"&lt;&gt;"},{"text":" and","type":"text"}]},{"code":["{{%CONTENT_TYPE: TEXT}}{{.}}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"will render as "},{"type":"codeVoice","code":"<>"},{"type":"text","text":"."}]}],"kind":"content"}],"kind":"article","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"abstract":[{"type":"text","text":"Mustache template engine."}],"role":"collection","type":"topic","url":"\/documentation\/hummingbirdmustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","title":"HummingbirdMustache","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"title":"Lambdas","role":"article","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","url":"\/documentation\/hummingbird\/lambdas","type":"topic","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"title":"Transforms","role":"article","abstract":[{"text":"Transforming objects during render","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","url":"\/documentation\/hummingbird\/transforms","type":"topic","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"title":"Template Inheritance","role":"article","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","url":"\/documentation\/hummingbird\/templateinheritance","type":"topic","kind":"article"}}}