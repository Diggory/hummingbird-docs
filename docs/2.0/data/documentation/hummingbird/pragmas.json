{"sections":[],"abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true,"title":"Additional Features"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"The syntax ","type":"text"},{"type":"codeVoice","code":"{{% var: value}}"},{"text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is ","type":"text"},{"type":"codeVoice","code":"CONTENT_TYPE"},{"text":". This can be set to either to ","type":"text"},{"type":"codeVoice","code":"HTML"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"TEXT"},{"text":" and defines how variables are escaped. A content type of ","type":"text"},{"type":"codeVoice","code":"TEXT"},{"text":" means no variables are escaped and a content type of ","type":"text"},{"type":"codeVoice","code":"HTML"},{"text":" will do HTML escaping of the rendered text. The content type defaults to ","type":"text"},{"type":"codeVoice","code":"HTML"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Given input object ","type":"text"},{"code":"<>","type":"codeVoice"},{"text":", template","type":"text"}]},{"type":"codeListing","code":["{{%CONTENT_TYPE: HTML}}{{.}}"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"will render as "},{"code":"&lt;&gt;","type":"codeVoice"},{"type":"text","text":" and"}]},{"type":"codeListing","code":["{{%CONTENT_TYPE: TEXT}}{{.}}"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"will render as ","type":"text"},{"type":"codeVoice","code":"<>"},{"text":".","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"kind":"article","metadata":{"roleHeading":"Article","modules":[{"name":"Mustache"}],"title":"Pragmas\/Configuration variables","role":"article"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Mustache template engine."}],"role":"collection","url":"\/documentation\/mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"role":"article","kind":"article","title":"Template Inheritance","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"type":"topic","url":"\/documentation\/hummingbird\/templateinheritance"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"type":"topic","url":"\/documentation\/hummingbird\/lambdas","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","role":"article","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"kind":"article","title":"Lambdas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"type":"topic","title":"Transforms","kind":"article","abstract":[{"text":"Transforming objects during render","type":"text"}],"url":"\/documentation\/hummingbird\/transforms","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","role":"article"}}}