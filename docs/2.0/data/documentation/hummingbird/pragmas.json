{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"seeAlsoSections":[{"title":"Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas"},"abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"metadata":{"images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Article","title":"Pragmas\/Configuration variables","role":"article","modules":[{"name":"Mustache"}]},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The syntax ","type":"text"},{"code":"{{% var: value}}","type":"codeVoice"},{"text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is ","type":"text"},{"code":"CONTENT_TYPE","type":"codeVoice"},{"text":". This can be set to either to ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"TEXT","type":"codeVoice"},{"text":" and defines how variables are escaped. A content type of ","type":"text"},{"code":"TEXT","type":"codeVoice"},{"text":" means no variables are escaped and a content type of ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":" will do HTML escaping of the rendered text. The content type defaults to ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given input object "},{"type":"codeVoice","code":"<>"},{"type":"text","text":", template"}]},{"code":["{{%CONTENT_TYPE: HTML}}{{.}}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"will render as ","type":"text"},{"code":"&lt;&gt;","type":"codeVoice"},{"text":" and","type":"text"}]},{"code":["{{%CONTENT_TYPE: TEXT}}{{.}}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"will render as ","type":"text"},{"type":"codeVoice","code":"<>"},{"text":".","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"references":{"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"url":"\/documentation\/hummingbird\/lambdas","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","title":"Lambdas","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"role":"article","type":"topic","kind":"article","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"abstract":[{"type":"text","text":"Mustache template engine."}],"title":"Mustache","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","kind":"symbol","url":"\/documentation\/mustache","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"title":"Template Inheritance and parents","url":"\/documentation\/hummingbird\/templateinheritance","kind":"article","role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","abstract":[{"text":"Template inheritance and parents is an optional part of the Mustache specification.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"url":"\/documentation\/hummingbird\/transforms","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","title":"Transforms","abstract":[{"type":"text","text":"Transforming objects during render"}],"role":"article","type":"topic","kind":"article","images":[{"type":"icon","identifier":"logo.png"}]}}}