{"metadata":{"role":"article","modules":[{"name":"HummingbirdMustache"}],"title":"Pragmas\/Configuration variables","roleHeading":"Article"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Setting template render configuration settings."}],"seeAlsoSections":[{"generated":true,"title":"Additional Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The syntax "},{"type":"codeVoice","code":"{{% var: value}}"},{"text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is ","type":"text"},{"type":"codeVoice","code":"CONTENT_TYPE"},{"text":". This can be set to either to ","type":"text"},{"type":"codeVoice","code":"HTML"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"TEXT"},{"text":" and defines how variables are escaped. A content type of ","type":"text"},{"type":"codeVoice","code":"TEXT"},{"text":" means no variables are escaped and a content type of ","type":"text"},{"type":"codeVoice","code":"HTML"},{"text":" will do HTML escaping of the rendered text. The content type defaults to ","type":"text"},{"type":"codeVoice","code":"HTML"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Given input object ","type":"text"},{"code":"<>","type":"codeVoice"},{"text":", template","type":"text"}]},{"type":"codeListing","syntax":null,"code":["{{%CONTENT_TYPE: HTML}}{{.}}"]},{"type":"paragraph","inlineContent":[{"text":"will render as ","type":"text"},{"code":"&lt;&gt;","type":"codeVoice"},{"text":" and","type":"text"}]},{"type":"codeListing","syntax":null,"code":["{{%CONTENT_TYPE: TEXT}}{{.}}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"will render as "},{"code":"<>","type":"codeVoice"},{"type":"text","text":"."}]}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"title":"Template Inheritance","role":"article","kind":"article","type":"topic","url":"\/documentation\/hummingbird\/templateinheritance"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","abstract":[{"type":"text","text":"Transforming objects during render"}],"title":"Transforms","role":"article","kind":"article","type":"topic","url":"\/documentation\/hummingbird\/transforms"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"title":"Lambdas","role":"article","kind":"article","type":"topic","url":"\/documentation\/hummingbird\/lambdas"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","abstract":[{"type":"text","text":"Mustache template engine."}],"title":"HummingbirdMustache","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdmustache"}}}