{"abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"The syntax "},{"code":"{{% var: value}}","type":"codeVoice"},{"type":"text","text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is "},{"code":"CONTENT_TYPE","type":"codeVoice"},{"type":"text","text":". This can be set to either to "},{"code":"HTML","type":"codeVoice"},{"type":"text","text":" or "},{"code":"TEXT","type":"codeVoice"},{"type":"text","text":" and defines how variables are escaped. A content type of "},{"code":"TEXT","type":"codeVoice"},{"type":"text","text":" means no variables are escaped and a content type of "},{"code":"HTML","type":"codeVoice"},{"type":"text","text":" will do HTML escaping of the rendered text. The content type defaults to "},{"code":"HTML","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"Given input object ","type":"text"},{"code":"<>","type":"codeVoice"},{"text":", template","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["{{%CONTENT_TYPE: HTML}}{{.}}"]},{"inlineContent":[{"type":"text","text":"will render as "},{"type":"codeVoice","code":"&lt;&gt;"},{"type":"text","text":" and"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["{{%CONTENT_TYPE: TEXT}}{{.}}"]},{"inlineContent":[{"text":"will render as ","type":"text"},{"code":"<>","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"Mustache"}],"title":"Pragmas\/Configuration variables","images":[{"type":"icon","identifier":"logo.png"}]},"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true,"title":"Additional Features"}],"references":{"logo.png":{"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"title":"Mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"url":"\/documentation\/mustache","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/lambdas","role":"article","title":"Lambdas","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/templateinheritance","role":"article","title":"Template Inheritance","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/transforms","role":"article","title":"Transforms","abstract":[{"text":"Transforming objects during render","type":"text"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","type":"topic"}}}