{"kind":"article","sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"anchor":"Features","title":"Features"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas"},"abstract":[{"type":"text","text":"Setting template render configuration settings."}],"metadata":{"role":"article","modules":[{"name":"Mustache"}],"roleHeading":"Article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Pragmas\/Configuration variables"},"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"The syntax ","type":"text"},{"code":"{{% var: value}}","type":"codeVoice"},{"type":"text","text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is "},{"type":"codeVoice","code":"CONTENT_TYPE"},{"type":"text","text":". This can be set to either to "},{"code":"HTML","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"TEXT","type":"codeVoice"},{"type":"text","text":" and defines how variables are escaped. A content type of "},{"type":"codeVoice","code":"TEXT"},{"type":"text","text":" means no variables are escaped and a content type of "},{"type":"codeVoice","code":"HTML"},{"text":" will do HTML escaping of the rendered text. The content type defaults to ","type":"text"},{"type":"codeVoice","code":"HTML"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given input object "},{"code":"<>","type":"codeVoice"},{"type":"text","text":", template"}]},{"type":"codeListing","syntax":null,"code":["{{%CONTENT_TYPE: HTML}}{{.}}"]},{"inlineContent":[{"text":"will render as ","type":"text"},{"code":"&lt;&gt;","type":"codeVoice"},{"type":"text","text":" and"}],"type":"paragraph"},{"type":"codeListing","code":["{{%CONTENT_TYPE: TEXT}}{{.}}"],"syntax":null},{"inlineContent":[{"type":"text","text":"will render as "},{"type":"codeVoice","code":"<>"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"role":"article","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","title":"Lambdas","type":"topic","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"url":"\/documentation\/hummingbird\/lambdas","kind":"article"},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"url":"\/documentation\/mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","role":"collection","kind":"symbol","title":"Mustache","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Mustache template engine."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"abstract":[{"text":"Template inheritance and parents is an optional part of the Mustache specification.","type":"text"}],"kind":"article","title":"Template Inheritance and parents","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","url":"\/documentation\/hummingbird\/templateinheritance","type":"topic","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"abstract":[{"type":"text","text":"Transforming objects during render"}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"title":"Transforms","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","url":"\/documentation\/hummingbird\/transforms","kind":"article"}}}