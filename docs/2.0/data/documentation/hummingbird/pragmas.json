{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","interfaceLanguage":"swift"},"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"title":"Additional Features","generated":true}],"abstract":[{"type":"text","text":"Setting template render configuration settings."}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The syntax "},{"code":"{{% var: value}}","type":"codeVoice"},{"type":"text","text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is "},{"code":"CONTENT_TYPE","type":"codeVoice"},{"type":"text","text":". This can be set to either to "},{"code":"HTML","type":"codeVoice"},{"type":"text","text":" or "},{"code":"TEXT","type":"codeVoice"},{"type":"text","text":" and defines how variables are escaped. A content type of "},{"code":"TEXT","type":"codeVoice"},{"type":"text","text":" means no variables are escaped and a content type of "},{"code":"HTML","type":"codeVoice"},{"type":"text","text":" will do HTML escaping of the rendered text. The content type defaults to "},{"code":"HTML","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Given input object ","type":"text"},{"code":"<>","type":"codeVoice"},{"text":", template","type":"text"}]},{"type":"codeListing","code":["{{%CONTENT_TYPE: HTML}}{{.}}"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"will render as ","type":"text"},{"type":"codeVoice","code":"&lt;&gt;"},{"text":" and","type":"text"}]},{"type":"codeListing","code":["{{%CONTENT_TYPE: TEXT}}{{.}}"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"will render as ","type":"text"},{"code":"<>","type":"codeVoice"},{"text":".","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"article","roleHeading":"Article","title":"Pragmas\/Configuration variables","modules":[{"name":"Mustache"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"title":"Template Inheritance","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","kind":"article","url":"\/documentation\/hummingbird\/templateinheritance","abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","role":"collection","url":"\/documentation\/mustache","type":"topic","title":"Mustache","abstract":[{"text":"Mustache template engine.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"title":"Transforms","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","kind":"article","url":"\/documentation\/hummingbird\/transforms","abstract":[{"type":"text","text":"Transforming objects during render"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"title":"Lambdas","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","kind":"article","url":"\/documentation\/hummingbird\/lambdas","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"type":"topic"}}}