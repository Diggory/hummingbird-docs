{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"seeAlsoSections":[{"generated":true,"title":"Additional Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]}],"kind":"article","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"metadata":{"modules":[{"name":"Mustache"}],"role":"article","roleHeading":"Article","title":"Pragmas\/Configuration variables"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"The syntax "},{"type":"codeVoice","code":"{{% var: value}}"},{"type":"text","text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is "},{"type":"codeVoice","code":"CONTENT_TYPE"},{"type":"text","text":". This can be set to either to "},{"type":"codeVoice","code":"HTML"},{"type":"text","text":" or "},{"type":"codeVoice","code":"TEXT"},{"type":"text","text":" and defines how variables are escaped. A content type of "},{"code":"TEXT","type":"codeVoice"},{"text":" means no variables are escaped and a content type of ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":" will do HTML escaping of the rendered text. The content type defaults to ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Given input object ","type":"text"},{"type":"codeVoice","code":"<>"},{"text":", template","type":"text"}],"type":"paragraph"},{"code":["{{%CONTENT_TYPE: HTML}}{{.}}"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"will render as ","type":"text"},{"code":"&lt;&gt;","type":"codeVoice"},{"text":" and","type":"text"}],"type":"paragraph"},{"code":["{{%CONTENT_TYPE: TEXT}}{{.}}"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"will render as ","type":"text"},{"code":"<>","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"url":"\/documentation\/hummingbird\/templateinheritance","kind":"article","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"type":"topic","title":"Template Inheritance","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","role":"collection","type":"topic","url":"\/documentation\/mustache","title":"Mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"url":"\/documentation\/hummingbird\/transforms","kind":"article","abstract":[{"text":"Transforming objects during render","type":"text"}],"type":"topic","title":"Transforms","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"url":"\/documentation\/hummingbird\/lambdas","kind":"article","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"type":"topic","title":"Lambdas","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas"}}}