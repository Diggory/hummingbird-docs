{"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"text":"The syntax ","type":"text"},{"code":"{{% var: value}}","type":"codeVoice"},{"text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is ","type":"text"},{"code":"CONTENT_TYPE","type":"codeVoice"},{"text":". This can be set to either to ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"TEXT","type":"codeVoice"},{"text":" and defines how variables are escaped. A content type of ","type":"text"},{"code":"TEXT","type":"codeVoice"},{"text":" means no variables are escaped and a content type of ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":" will do HTML escaping of the rendered text. The content type defaults to ","type":"text"},{"code":"HTML","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Given input object "},{"type":"codeVoice","code":"<>"},{"type":"text","text":", template"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["{{%CONTENT_TYPE: HTML}}{{.}}"]},{"inlineContent":[{"text":"will render as ","type":"text"},{"code":"&lt;&gt;","type":"codeVoice"},{"text":" and","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["{{%CONTENT_TYPE: TEXT}}{{.}}"]},{"inlineContent":[{"type":"text","text":"will render as "},{"code":"<>","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"seeAlsoSections":[{"generated":true,"title":"Additional Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","interfaceLanguage":"swift"},"kind":"article","metadata":{"role":"article","modules":[{"name":"HummingbirdMustache"}],"title":"Pragmas\/Configuration variables","roleHeading":"Article"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"type":"topic","abstract":[{"type":"text","text":"Mustache template engine."}],"title":"HummingbirdMustache","url":"\/documentation\/hummingbirdmustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"url":"\/documentation\/hummingbird\/templateinheritance","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","role":"article","title":"Template Inheritance","kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"url":"\/documentation\/hummingbird\/lambdas","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","title":"Lambdas","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"type":"topic","kind":"article","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"url":"\/documentation\/hummingbird\/transforms","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","title":"Transforms","abstract":[{"type":"text","text":"Transforming objects during render"}],"type":"topic","kind":"article","role":"article"}}}