{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"abstract":[{"type":"text","text":"Setting template render configuration settings."}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"anchor":"Features","title":"Features"}],"sections":[],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"inlineContent":[{"type":"text","text":"The syntax "},{"code":"{{% var: value}}","type":"codeVoice"},{"text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is ","type":"text"},{"code":"CONTENT_TYPE","type":"codeVoice"},{"type":"text","text":". This can be set to either to "},{"type":"codeVoice","code":"HTML"},{"type":"text","text":" or "},{"type":"codeVoice","code":"TEXT"},{"type":"text","text":" and defines how variables are escaped. A content type of "},{"code":"TEXT","type":"codeVoice"},{"text":" means no variables are escaped and a content type of ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":" will do HTML escaping of the rendered text. The content type defaults to ","type":"text"},{"code":"HTML","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given input object "},{"code":"<>","type":"codeVoice"},{"text":", template","type":"text"}]},{"type":"codeListing","code":["{{%CONTENT_TYPE: HTML}}{{.}}"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"will render as "},{"code":"&lt;&gt;","type":"codeVoice"},{"text":" and","type":"text"}]},{"syntax":null,"type":"codeListing","code":["{{%CONTENT_TYPE: TEXT}}{{.}}"]},{"type":"paragraph","inlineContent":[{"text":"will render as ","type":"text"},{"code":"<>","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"}],"metadata":{"title":"Pragmas\/Configuration variables","images":[{"identifier":"logo.png","type":"icon"}],"role":"article","roleHeading":"Article","modules":[{"name":"Mustache"}]},"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"type":"topic","role":"collection","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/index":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"type":"topic","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"role":"article","url":"\/documentation\/hummingbird\/lambdas","title":"Lambdas","type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"title":"Template Inheritance and parents","type":"topic","url":"\/documentation\/hummingbird\/templateinheritance","abstract":[{"type":"text","text":"Template inheritance and parents is an optional part of the Mustache specification."}],"role":"article","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Transforming objects during render"}],"role":"article","url":"\/documentation\/hummingbird\/transforms","type":"topic","title":"Transforms","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]}}}