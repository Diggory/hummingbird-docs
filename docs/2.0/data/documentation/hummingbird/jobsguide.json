{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"collectionGroup","roleHeading":"API Collection","images":[{"type":"icon","identifier":"logo.png"}],"modules":[{"name":"Jobs"},{"name":"Hummingbird"},{"name":"JobsPostgres"},{"name":"JobsRedis"}],"title":"Jobs"},"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],"anchor":"Related-Documentation","title":"Related Documentation"},{"title":"Guides","generated":true,"anchor":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"]}],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition"],"anchor":"Reference","title":"Reference"}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A Job consists of a payload and an execute method to run the job. HummingbirdJobs provides a framework for pushing jobs onto a queue and processing them at a later point. If the driver backing up the job queue uses persistent storage then a separate server can be used to process the jobs. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there are also implementations in ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","type":"reference","isActive":true},{"type":"text","text":" that implemeent the job queue using a Redis database or Postgres database."}]},{"text":"Setting up a Job queue","anchor":"Setting-up-a-Job-queue","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory that will process four jobs concurrently.","type":"text"}]},{"code":["let jobQueue = JobQueue(.memory, numWorkers: 4, logger: logger)"],"type":"codeListing","syntax":"swift"},{"text":"Creating a Job","type":"heading","level":3,"anchor":"Creating-a-Job"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We use a struct conforming to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters"},{"text":" to define the job parameters and identifier.","type":"text"}]},{"type":"codeListing","code":["struct SendEmailJobParameters: JobParameters {","    \/\/\/ jobName is used to create the job identifier. It should be unique","    static let jobName = \"SendEmail\"","    let to: String","    let subject: String","    let body: String","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Then we register the job with a job queue and also provide a closure that executes the job.","type":"text"}]},{"syntax":"swift","code":["jobQueue.registerJob(parameters: SendEmailJobParameters.self) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now your job is ready to create. Jobs can be queued up using the function "},{"code":"push","type":"codeVoice"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"JobQueue"},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job)"]},{"type":"heading","level":3,"anchor":"Processing-Jobs","text":"Processing Jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you create a "},{"code":"JobQueue","type":"codeVoice"},{"text":" the ","type":"text"},{"code":"numWorkers","type":"codeVoice"},{"type":"text","text":" parameter indicates how many jobs you want serviced concurrently by the job queue. If you want to activate these workers you need to add the job queue to your "},{"type":"codeVoice","code":"ServiceGroup"},{"type":"text","text":"."}]},{"syntax":"swift","type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or it can be added to the array of services that "},{"code":"Application","type":"codeVoice"},{"text":" manages","type":"text"}]},{"code":["let app = Application(...)","app.addServices(jobQueue)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","type":"reference"},{"text":" or ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","isActive":true,"type":"reference"},{"text":".","type":"text"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobQueue":{"navigatorTitle":[{"kind":"identifier","text":"JobQueue"}],"type":"topic","title":"JobQueue","role":"symbol","kind":"symbol","abstract":[{"text":"Job queue","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueue"}],"url":"\/documentation\/jobs\/jobqueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"title":"Service Lifecycle","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","role":"article","abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"url":"\/documentation\/hummingbird\/servicelifecycle","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobDefinition":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition","abstract":[{"type":"text","text":"Job definition type"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JobDefinition","kind":"identifier"}],"role":"symbol","title":"JobDefinition","type":"topic","kind":"symbol","url":"\/documentation\/jobs\/jobdefinition","navigatorTitle":[{"kind":"identifier","text":"JobDefinition"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","abstract":[{"type":"text","text":"Postgres Job queue implementation"}],"role":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue","title":"PostgresJobQueue","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"PostgresJobQueue","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"PostgresJobQueue"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"Middleware","role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"url":"\/documentation\/hummingbird\/middlewareguide"},"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","type":"topic","kind":"article","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","abstract":[{"text":"Redis implementation of job queue driver","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisJobQueue","kind":"identifier"}],"role":"symbol","title":"RedisJobQueue","kind":"symbol","type":"topic","url":"\/documentation\/jobsredis\/redisjobqueue","navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","url":"\/documentation\/hummingbird\/persistentdata","role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"title":"Persistent data","type":"topic","kind":"article","abstract":[{"type":"text","text":"How to persist data between requests to your server."}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","role":"collection","url":"\/documentation\/jobs","title":"Jobs","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"url":"\/documentation\/hummingbird\/loggingmetricsandtracing","role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"title":"Logging, Metrics and Tracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","type":"topic","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"role":"collectionGroup","type":"topic","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"title":"Request Contexts","url":"\/documentation\/hummingbird\/requestcontexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"kind":"article","type":"topic","url":"\/documentation\/hummingbird\/routerguide","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","role":"collectionGroup","title":"Router"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","abstract":[{"text":"Postgres implementation for Hummingbird jobs framework","type":"text"}],"role":"collection","url":"\/documentation\/jobspostgres","title":"JobsPostgres","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"title":"Encoding and Decoding","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","role":"collectionGroup","abstract":[{"type":"text","text":"Hummingbird uses "},{"code":"Codable","type":"codeVoice"},{"text":" to decode requests and encode responses.","type":"text"}],"url":"\/documentation\/hummingbird\/encodinganddecoding","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"title":"Migrating to Hummingbird v2","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","role":"article","abstract":[{"text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2","type":"text"}],"url":"\/documentation\/hummingbird\/migratingtov2","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","url":"\/documentation\/hummingbird\/errorhandling","role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Error Handling","type":"topic","kind":"article","abstract":[{"type":"text","text":"How to build errors for the server to return."}]},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobParameters":{"abstract":[{"text":"Defines job parameters and identifier","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","role":"symbol","url":"\/documentation\/jobs\/jobparameters","title":"JobParameters","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"JobParameters","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"JobParameters","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","url":"\/documentation\/hummingbird\/testing","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Testing","type":"topic","kind":"article","abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobIdentifier":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","abstract":[{"text":"Identifier for a Job type","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobIdentifier"}],"role":"symbol","title":"JobIdentifier","type":"topic","kind":"symbol","url":"\/documentation\/jobs\/jobidentifier","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","role":"collection","url":"\/documentation\/jobsredis","title":"JobsRedis","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","kind":"symbol"}}}