{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"A Job consists of a payload and an execute method to run the job. HummingbirdJobs provides a framework for pushing jobs onto a queue and processing them at a later point. If the driver backing up the job queue uses persistent storage then a separate server can be used to process the jobs. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there are also implementations in ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"},{"text":" that implemeent the job queue using a Redis database or Postgres database.","type":"text"}],"type":"paragraph"},{"level":3,"anchor":"Setting-up-a-Job-queue","type":"heading","text":"Setting up a Job queue"},{"inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory that will process four jobs concurrently.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let jobQueue = JobQueue(.memory, numWorkers: 4, logger: logger)"],"type":"codeListing"},{"level":3,"anchor":"Creating-a-Job","type":"heading","text":"Creating a Job"},{"inlineContent":[{"text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"We use a struct conforming to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters"},{"text":" to define the job parameters and identifier.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct SendEmailJobParameters: JobParameters {","    \/\/\/ jobName is used to create the job identifier. It should be unique","    static let jobName = \"SendEmail\"","    let to: String","    let subject: String","    let body: String","}"],"type":"codeListing"},{"inlineContent":[{"text":"Then we register the job with a job queue and also provide a closure that executes the job.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["jobQueue.registerJob(parameters: SendEmailJobParameters.self) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Now your job is ready to create. Jobs can be queued up using the function "},{"code":"push","type":"codeVoice"},{"type":"text","text":" on "},{"code":"JobQueue","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job)"],"type":"codeListing"},{"level":3,"anchor":"Processing-Jobs","type":"heading","text":"Processing Jobs"},{"inlineContent":[{"text":"When you create a ","type":"text"},{"type":"codeVoice","code":"JobQueue"},{"text":" the ","type":"text"},{"type":"codeVoice","code":"numWorkers"},{"text":" parameter indicates how many jobs you want serviced concurrently by the job queue. If you want to activate these workers you need to add the job queue to your ","type":"text"},{"type":"codeVoice","code":"ServiceGroup"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or it can be added to the array of services that "},{"code":"Application","type":"codeVoice"},{"type":"text","text":" manages"}],"type":"paragraph"},{"syntax":"swift","code":["let app = Application(...)","app.addServices(jobQueue)"],"type":"codeListing"},{"inlineContent":[{"text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","type":"reference"},{"text":" or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"title":"Reference","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"]},{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"collectionGroup","roleHeading":"API Collection","title":"Jobs","modules":[{"name":"Jobs"},{"name":"Hummingbird"},{"name":"JobsPostgres"},{"name":"JobsRedis"}]},"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","title":"Error Handling","url":"\/documentation\/hummingbird\/errorhandling","kind":"article","role":"collectionGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"url":"\/documentation\/jobs","type":"topic","title":"Jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","role":"collection","kind":"symbol","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobParameters":{"abstract":[{"text":"Defines job parameters and identifier","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","title":"JobParameters","navigatorTitle":[{"text":"JobParameters","kind":"identifier"}],"url":"\/documentation\/jobs\/jobparameters","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobParameters"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"title":"Encoding and Decoding","url":"\/documentation\/hummingbird\/encodinganddecoding","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","abstract":[{"text":"Hummingbird uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to decode requests and encode responses."}],"role":"collectionGroup","kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Redis implementation of job queue driver"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisJobQueue","kind":"identifier"}],"navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}],"type":"topic","title":"RedisJobQueue","url":"\/documentation\/jobsredis\/redisjobqueue"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","abstract":[{"text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/index","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"url":"\/documentation\/hummingbird\/servicelifecycle","kind":"article","role":"article","type":"topic","abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","title":"Service Lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobDefinition":{"abstract":[{"text":"Job definition type","type":"text"}],"navigatorTitle":[{"text":"JobDefinition","kind":"identifier"}],"url":"\/documentation\/jobs\/jobdefinition","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobDefinition","kind":"identifier"}],"title":"JobDefinition","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition","kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"type":"topic","abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}],"role":"article","url":"\/documentation\/hummingbird\/testing","title":"Testing","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","title":"Request Contexts","url":"\/documentation\/hummingbird\/requestcontexts","kind":"article","role":"collectionGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"kind":"article","title":"Middleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"url":"\/documentation\/hummingbird\/middlewareguide"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobQueue":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","navigatorTitle":[{"text":"JobQueue","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/jobs\/jobqueue","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueue","kind":"identifier"}],"title":"JobQueue","abstract":[{"text":"Job queue","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobIdentifier":{"url":"\/documentation\/jobs\/jobidentifier","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobIdentifier","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"text":"Identifier for a Job type","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","title":"JobIdentifier"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"title":"Persistent data","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/persistentdata","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"url":"\/documentation\/jobspostgres","type":"topic","title":"JobsPostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","role":"symbol","kind":"symbol","abstract":[{"text":"Postgres Job queue implementation","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PostgresJobQueue","kind":"identifier"}],"navigatorTitle":[{"text":"PostgresJobQueue","kind":"identifier"}],"type":"topic","title":"PostgresJobQueue","url":"\/documentation\/jobspostgres\/postgresjobqueue"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","role":"article","kind":"article","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"type":"topic","title":"Migrating to Hummingbird v2","url":"\/documentation\/hummingbird\/migratingtov2"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"title":"JobsRedis","url":"\/documentation\/jobsredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"role":"collection","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","role":"collectionGroup","kind":"article","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"type":"topic","title":"Router","url":"\/documentation\/hummingbird\/routerguide"}}}