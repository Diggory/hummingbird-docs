{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],"anchor":"Related-Documentation","title":"Related Documentation"},{"anchor":"Guides","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"title":"Guides"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A Job consists of a payload and an execute method to run the job. HummingbirdJobs provides a framework for pushing jobs onto a queue and processing them at a later point. If the driver backing up the job queue uses persistent storage then a separate server can be used to process the jobs. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there are also implementations in ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","isActive":true},{"type":"text","text":" that implemeent the job queue using a Redis database or Postgres database."}]},{"anchor":"Setting-up-a-Job-queue","type":"heading","level":3,"text":"Setting up a Job queue"},{"type":"paragraph","inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory that will process four jobs concurrently.","type":"text"}]},{"syntax":"swift","code":["let jobQueue = JobQueue(.memory, numWorkers: 4, logger: logger)"],"type":"codeListing"},{"level":3,"type":"heading","text":"Creating a Job","anchor":"Creating-a-Job"},{"inlineContent":[{"type":"text","text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We use a struct conforming to "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","isActive":true},{"type":"text","text":" to define the job parameters and identifier."}]},{"type":"codeListing","syntax":"swift","code":["struct SendEmailJobParameters: JobParameters {","    \/\/\/ jobName is used to create the job identifier. It should be unique","    static let jobName = \"SendEmail\"","    let to: String","    let subject: String","    let body: String","}"]},{"inlineContent":[{"type":"text","text":"Then we register the job with a job queue and also provide a closure that executes the job."}],"type":"paragraph"},{"type":"codeListing","code":["jobQueue.registerJob(parameters: SendEmailJobParameters.self) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Now your job is ready to create. Jobs can be queued up using the function "},{"code":"push","type":"codeVoice"},{"type":"text","text":" on "},{"code":"JobQueue","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job)"]},{"text":"Processing Jobs","anchor":"Processing-Jobs","level":3,"type":"heading"},{"inlineContent":[{"text":"When you create a ","type":"text"},{"type":"codeVoice","code":"JobQueue"},{"type":"text","text":" the "},{"type":"codeVoice","code":"numWorkers"},{"type":"text","text":" parameter indicates how many jobs you want serviced concurrently by the job queue. If you want to activate these workers you need to add the job queue to your "},{"type":"codeVoice","code":"ServiceGroup"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or it can be added to the array of services that "},{"type":"codeVoice","code":"Application"},{"text":" manages","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let app = Application(...)","app.addServices(jobQueue)"]},{"inlineContent":[{"type":"text","text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","type":"reference","isActive":true},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition"],"anchor":"Reference","title":"Reference"}],"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"API Collection","modules":[{"name":"JobsPostgres"},{"name":"Jobs"},{"name":"Hummingbird"},{"name":"JobsRedis"}],"role":"collectionGroup","title":"Jobs"},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","interfaceLanguage":"swift"},"kind":"article","references":{"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobDefinition":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JobDefinition","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition","url":"\/documentation\/jobs\/jobdefinition","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JobDefinition"}],"title":"JobDefinition","role":"symbol","abstract":[{"type":"text","text":"Job definition type"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","url":"\/documentation\/index","role":"collection","kind":"article","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"kind":"symbol","title":"JobsRedis","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","url":"\/documentation\/jobsredis","role":"collection","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data","url":"\/documentation\/hummingbird\/persistentdata","role":"collectionGroup","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobQueue":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueue","kind":"identifier"}],"title":"JobQueue","kind":"symbol","type":"topic","abstract":[{"text":"Job queue","type":"text"}],"navigatorTitle":[{"text":"JobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","url":"\/documentation\/jobs\/jobqueue"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"kind":"symbol","type":"topic","url":"\/documentation\/jobspostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","title":"JobsPostgres","role":"collection","abstract":[{"text":"Postgres implementation for Hummingbird jobs framework","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PostgresJobQueue"}],"type":"topic","url":"\/documentation\/jobspostgres\/postgresjobqueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","navigatorTitle":[{"text":"PostgresJobQueue","kind":"identifier"}],"title":"PostgresJobQueue","role":"symbol","abstract":[{"text":"Postgres Job queue implementation","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","type":"topic","url":"\/documentation\/hummingbird\/testing","title":"Testing","role":"article","abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","title":"Logging, Metrics and Tracing","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","role":"collectionGroup","kind":"article","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","type":"topic","url":"\/documentation\/hummingbird\/migratingtov2","title":"Migrating to Hummingbird v2","role":"article","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","type":"topic","url":"\/documentation\/hummingbird\/middlewareguide","title":"Middleware","role":"collectionGroup","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobParameters":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobParameters"}],"navigatorTitle":[{"text":"JobParameters","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","kind":"symbol","title":"JobParameters","role":"symbol","url":"\/documentation\/jobs\/jobparameters","abstract":[{"type":"text","text":"Defines job parameters and identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RedisJobQueue","kind":"identifier"}],"navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}],"url":"\/documentation\/jobsredis\/redisjobqueue","abstract":[{"type":"text","text":"Redis implementation of job queue driver"}],"title":"RedisJobQueue","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","type":"topic","url":"\/documentation\/hummingbird\/servicelifecycle","title":"Service Lifecycle","role":"article","abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","type":"topic","url":"\/documentation\/hummingbird\/encodinganddecoding","title":"Encoding and Decoding","role":"collectionGroup","abstract":[{"text":"Hummingbird uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to decode requests and encode responses.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"images":[{"type":"icon","identifier":"logo.png"}],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobIdentifier":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobIdentifier"}],"type":"topic","url":"\/documentation\/jobs\/jobidentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"title":"JobIdentifier","role":"symbol","abstract":[{"type":"text","text":"Identifier for a Job type"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"title":"Router","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","url":"\/documentation\/hummingbird\/routerguide","role":"collectionGroup","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"role":"collection","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","url":"\/documentation\/jobs","type":"topic","title":"Jobs","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","type":"topic","url":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","role":"collectionGroup","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}]}}}