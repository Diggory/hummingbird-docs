{"kind":"article","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"metadata":{"role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Jobs","roleHeading":"API Collection","modules":[{"name":"JobsPostgres"},{"name":"JobsRedis"},{"name":"Hummingbird"},{"name":"Jobs"}]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition"],"title":"Reference","anchor":"Reference"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],"title":"Related Documentation","anchor":"Related-Documentation"},{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"anchor":"Guides","generated":true}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"A Job consists of a payload and an execute method to run the job. HummingbirdJobs provides a framework for pushing jobs onto a queue and processing them at a later point. If the driver backing up the job queue uses persistent storage then a separate server can be used to process the jobs. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there are also implementations in "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","type":"reference","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","isActive":true,"type":"reference"},{"type":"text","text":" that implemeent the job queue using a Redis database or Postgres database."}],"type":"paragraph"},{"anchor":"Setting-up-a-Job-queue","text":"Setting up a Job queue","level":3,"type":"heading"},{"inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory that will process four jobs concurrently.","type":"text"}],"type":"paragraph"},{"code":["let jobQueue = JobQueue(.memory, numWorkers: 4, logger: logger)"],"syntax":"swift","type":"codeListing"},{"level":3,"type":"heading","text":"Creating a Job","anchor":"Creating-a-Job"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job."}]},{"type":"paragraph","inlineContent":[{"text":"We use a struct conforming to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","type":"reference"},{"type":"text","text":" to define the job parameters and identifier."}]},{"type":"codeListing","syntax":"swift","code":["struct SendEmailJobParameters: JobParameters {","    \/\/\/ jobName is used to create the job identifier. It should be unique","    static let jobName = \"SendEmail\"","    let to: String","    let subject: String","    let body: String","}"]},{"inlineContent":[{"text":"Then we register the job with a job queue and also provide a closure that executes the job.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["jobQueue.registerJob(parameters: SendEmailJobParameters.self) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Now your job is ready to create. Jobs can be queued up using the function ","type":"text"},{"type":"codeVoice","code":"push"},{"type":"text","text":" on "},{"type":"codeVoice","code":"JobQueue"},{"text":".","type":"text"}]},{"syntax":"swift","code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job)"],"type":"codeListing"},{"text":"Processing Jobs","type":"heading","anchor":"Processing-Jobs","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you create a "},{"code":"JobQueue","type":"codeVoice"},{"text":" the ","type":"text"},{"code":"numWorkers","type":"codeVoice"},{"text":" parameter indicates how many jobs you want serviced concurrently by the job queue. If you want to activate these workers you need to add the job queue to your ","type":"text"},{"code":"ServiceGroup","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]},{"inlineContent":[{"type":"text","text":"Or it can be added to the array of services that "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" manages"}],"type":"paragraph"},{"syntax":"swift","code":["let app = Application(...)","app.addServices(jobQueue)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","isActive":true},{"type":"text","text":" or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"},{"text":".","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobQueue":{"role":"symbol","url":"\/documentation\/jobs\/jobqueue","navigatorTitle":[{"kind":"identifier","text":"JobQueue"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","abstract":[{"text":"Job queue","type":"text"}],"kind":"symbol","title":"JobQueue","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueue","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobParameters":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobParameters"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/jobs\/jobparameters","navigatorTitle":[{"kind":"identifier","text":"JobParameters"}],"title":"JobParameters","abstract":[{"text":"Defines job parameters and identifier","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobIdentifier":{"title":"JobIdentifier","type":"topic","url":"\/documentation\/jobs\/jobidentifier","kind":"symbol","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JobIdentifier","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","abstract":[{"type":"text","text":"Identifier for a Job type"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","url":"\/documentation\/index","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","images":[{"identifier":"logo.png","type":"icon"}],"title":"Router","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/hummingbird\/routerguide","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"kind":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue","role":"symbol","navigatorTitle":[{"text":"PostgresJobQueue","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PostgresJobQueue","kind":"identifier"}],"title":"PostgresJobQueue","abstract":[{"type":"text","text":"Postgres Job queue implementation"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"role":"article","abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}],"title":"Service Lifecycle","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","url":"\/documentation\/hummingbird\/servicelifecycle","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"title":"RedisJobQueue","type":"topic","url":"\/documentation\/jobsredis\/redisjobqueue","kind":"symbol","navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RedisJobQueue"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","abstract":[{"text":"Redis implementation of job queue driver","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"title":"Persistent data","type":"topic","url":"\/documentation\/hummingbird\/persistentdata","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"How to persist data between requests to your server."}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobDefinition":{"type":"topic","title":"JobDefinition","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"JobDefinition","kind":"identifier"}],"url":"\/documentation\/jobs\/jobdefinition","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition","abstract":[{"type":"text","text":"Job definition type"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobDefinition"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"title":"Logging, Metrics and Tracing","type":"topic","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"title":"Testing","type":"topic","url":"\/documentation\/hummingbird\/testing","kind":"article","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}]},"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"title":"JobsRedis","type":"topic","url":"\/documentation\/jobsredis","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"title":"Migrating to Hummingbird v2","type":"topic","url":"\/documentation\/hummingbird\/migratingtov2","kind":"article","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"title":"Request Contexts","type":"topic","url":"\/documentation\/hummingbird\/requestcontexts","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","images":[{"type":"icon","identifier":"logo.png"}],"title":"Encoding and Decoding","role":"collectionGroup","kind":"article","url":"\/documentation\/hummingbird\/encodinganddecoding","abstract":[{"text":"Hummingbird uses ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" to decode requests and encode responses."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"title":"Error Handling","type":"topic","url":"\/documentation\/hummingbird\/errorhandling","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"How to build errors for the server to return.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"role":"collectionGroup","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"title":"Middleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","url":"\/documentation\/hummingbird\/middlewareguide","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"title":"JobsPostgres","type":"topic","url":"\/documentation\/jobspostgres","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"role":"collection","url":"\/documentation\/jobs","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"Jobs"}}}