{"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"]},{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","interfaceLanguage":"swift"},"topicSections":[{"title":"Reference","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition"]}],"kind":"article","primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"A Job consists of a payload and an execute method to run the job. HummingbirdJobs provides a framework for pushing jobs onto a queue and processing them at a later point. If the driver backing up the job queue uses persistent storage then a separate server can be used to process the jobs. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there are also implementations in ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","isActive":true},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","isActive":true},{"text":" that implemeent the job queue using a Redis database or Postgres database.","type":"text"}]},{"type":"heading","text":"Setting up a Job queue","anchor":"Setting-up-a-Job-queue","level":3},{"type":"paragraph","inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory that will process four jobs concurrently.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let jobQueue = JobQueue(.memory, numWorkers: 4, logger: logger)"]},{"type":"heading","text":"Creating a Job","anchor":"Creating-a-Job","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job."}]},{"type":"paragraph","inlineContent":[{"text":"We use a struct conforming to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters"},{"text":" to define the job parameters and identifier.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct SendEmailJobParameters: JobParameters {","    \/\/\/ jobName is used to create the job identifier. It should be unique","    static let jobName = \"SendEmail\"","    let to: String","    let subject: String","    let body: String","}"]},{"type":"paragraph","inlineContent":[{"text":"Then we register the job with a job queue and also provide a closure that executes the job.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["jobQueue.registerJob(parameters: SendEmailJobParameters.self) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"]},{"type":"paragraph","inlineContent":[{"text":"Now your job is ready to create. Jobs can be queued up using the function ","type":"text"},{"code":"push","type":"codeVoice"},{"text":" on ","type":"text"},{"code":"JobQueue","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job)"]},{"type":"heading","text":"Processing Jobs","anchor":"Processing-Jobs","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you create a "},{"code":"JobQueue","type":"codeVoice"},{"type":"text","text":" the "},{"code":"numWorkers","type":"codeVoice"},{"type":"text","text":" parameter indicates how many jobs you want serviced concurrently by the job queue. If you want to activate these workers you need to add the job queue to your "},{"code":"ServiceGroup","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]},{"type":"paragraph","inlineContent":[{"text":"Or it can be added to the array of services that ","type":"text"},{"code":"Application","type":"codeVoice"},{"text":" manages","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let app = Application(...)","app.addServices(jobQueue)"]},{"type":"paragraph","inlineContent":[{"text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","isActive":true,"type":"reference"},{"text":".","type":"text"}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"API Collection","title":"Jobs","role":"collectionGroup","modules":[{"name":"Hummingbird"},{"name":"JobsPostgres"},{"name":"JobsRedis"},{"name":"Jobs"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"url":"\/documentation\/hummingbird\/routerguide","type":"topic","role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Router","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"url":"\/documentation\/hummingbird\/encodinganddecoding","type":"topic","role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Encoding and Decoding","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","abstract":[{"text":"Hummingbird uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to decode requests and encode responses.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"url":"\/documentation\/hummingbird\/persistentdata","type":"topic","role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Persistent data","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"url":"\/documentation\/hummingbird\/requestcontexts","type":"topic","role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Request Contexts","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"url":"\/documentation\/jobsredis","type":"topic","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"title":"JobsRedis","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"url":"\/documentation\/hummingbird\/errorhandling","type":"topic","role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Error Handling","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","abstract":[{"text":"How to build errors for the server to return.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"kind":"symbol","role":"collection","title":"JobsPostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/jobspostgres","abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"role":"article","url":"\/documentation\/hummingbird\/testing","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","kind":"article","title":"Testing","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobQueue":{"navigatorTitle":[{"kind":"identifier","text":"JobQueue"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","url":"\/documentation\/jobs\/jobqueue","abstract":[{"text":"Job queue","type":"text"}],"title":"JobQueue","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueue"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobDefinition":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Job definition type"}],"title":"JobDefinition","url":"\/documentation\/jobs\/jobdefinition","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition","navigatorTitle":[{"text":"JobDefinition","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"JobDefinition","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"url":"\/documentation\/hummingbird\/servicelifecycle","type":"topic","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Service Lifecycle","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobParameters":{"abstract":[{"text":"Defines job parameters and identifier","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobParameters"}],"title":"JobParameters","navigatorTitle":[{"kind":"identifier","text":"JobParameters"}],"type":"topic","url":"\/documentation\/jobs\/jobparameters","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"kind":"article","role":"article","title":"Migrating to Hummingbird v2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/migratingtov2","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"url":"\/documentation\/hummingbird\/middlewareguide","type":"topic","role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Middleware","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"abstract":[{"type":"text","text":"Postgres Job queue implementation"}],"navigatorTitle":[{"kind":"identifier","text":"PostgresJobQueue"}],"url":"\/documentation\/jobspostgres\/postgresjobqueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","kind":"symbol","title":"PostgresJobQueue","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PostgresJobQueue"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobIdentifier":{"abstract":[{"type":"text","text":"Identifier for a Job type"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobIdentifier","kind":"identifier"}],"type":"topic","url":"\/documentation\/jobs\/jobidentifier","title":"JobIdentifier","role":"symbol","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"url":"\/documentation\/jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","kind":"symbol","title":"Jobs","role":"collection","type":"topic"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"kind":"article","role":"collectionGroup","title":"Logging, Metrics and Tracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/loggingmetricsandtracing","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"url":"\/documentation\/jobsredis\/redisjobqueue","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisJobQueue","kind":"identifier"}],"role":"symbol","title":"RedisJobQueue","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","abstract":[{"text":"Redis implementation of job queue driver","type":"text"}],"navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}]}}}