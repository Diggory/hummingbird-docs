{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","interfaceLanguage":"swift"},"sections":[],"metadata":{"role":"article","roleHeading":"Article","title":"Jobs","images":[{"type":"icon","identifier":"logo.png"}]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue"],"title":"Related Documentation","anchor":"Related-Documentation"}],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Job consists of a payload and an execute method to run the job. HummingbirdJobs provides a framework for pushing jobs onto a queue and processing them at a later point. If the driver backing up the job queue uses persistent storage then a separate server can be used to process the jobs. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there are also implementations in "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","isActive":true},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"},{"type":"text","text":" that implemeent the job queue using a Redis database or Postgres database."}]},{"text":"Setting up a Job queue","level":3,"anchor":"Setting-up-a-Job-queue","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory that will process four jobs concurrently."}]},{"code":["let jobQueue = JobQueue(.memory, numWorkers: 4, logger: logger)"],"type":"codeListing","syntax":"swift"},{"text":"Creating a Job","type":"heading","level":3,"anchor":"Creating-a-Job"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job."}]},{"type":"paragraph","inlineContent":[{"text":"We use a struct conforming to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","isActive":true},{"type":"text","text":" to define the job parameters and identifier."}]},{"syntax":"swift","type":"codeListing","code":["struct SendEmailJobParameters: JobParameters {","    \/\/\/ jobName is used to create the job identifier. It should be unique","    static let jobName = \"SendEmail\"","    let to: String","    let subject: String","    let body: String","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we register the job with a job queue and also provide a closure that executes the job."}]},{"syntax":"swift","type":"codeListing","code":["jobQueue.registerJob(parameters: SendEmailJobParameters.self) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"]},{"inlineContent":[{"type":"text","text":"Now your job is ready to create. Jobs can be queued up using the function "},{"code":"push","type":"codeVoice"},{"type":"text","text":" on "},{"type":"codeVoice","code":"JobQueue"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job)"]},{"type":"heading","level":3,"text":"Processing Jobs","anchor":"Processing-Jobs"},{"type":"paragraph","inlineContent":[{"text":"When you create a ","type":"text"},{"type":"codeVoice","code":"JobQueue"},{"text":" the ","type":"text"},{"code":"numWorkers","type":"codeVoice"},{"text":" parameter indicates how many jobs you want serviced concurrently by the job queue. If you want to activate these workers you need to add the job queue to your ","type":"text"},{"code":"ServiceGroup","type":"codeVoice"},{"type":"text","text":"."}]},{"code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or it can be added to the array of services that "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" manages"}]},{"code":["let app = Application(...)","app.addServices(jobQueue)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","isActive":true,"type":"reference"},{"type":"text","text":" or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"},{"text":".","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobQueue":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","type":"topic","title":"JobQueue","url":"\/documentation\/jobs\/jobqueue","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueue","kind":"identifier"}],"navigatorTitle":[{"text":"JobQueue","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Job queue","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","title":"PostgresJobQueue","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PostgresJobQueue","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"PostgresJobQueue","kind":"identifier"}],"url":"\/documentation\/jobspostgres\/postgresjobqueue","abstract":[{"text":"Postgres Job queue implementation","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","title":"JobsPostgres","kind":"symbol","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/jobspostgres","abstract":[{"text":"Postgres implementation for Hummingbird jobs framework","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobParameters":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","type":"topic","url":"\/documentation\/jobs\/jobparameters","title":"JobParameters","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"JobParameters","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"JobParameters"}],"role":"symbol","abstract":[{"type":"text","text":"Defines job parameters and identifier"}]},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","kind":"article","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"title":"Hummingbird Documentation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"url":"\/documentation\/jobsredis\/redisjobqueue","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisJobQueue"}],"navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}],"type":"topic","abstract":[{"text":"Redis implementation of job queue driver","type":"text"}],"title":"RedisJobQueue","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","type":"topic","url":"\/documentation\/jobsredis","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"images":[{"type":"icon","identifier":"logo.png"}],"title":"JobsRedis","role":"collection","kind":"symbol"}}}