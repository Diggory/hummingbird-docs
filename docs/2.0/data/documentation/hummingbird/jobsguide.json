{"metadata":{"modules":[{"name":"Hummingbird"},{"name":"Jobs"},{"name":"JobsPostgres"},{"name":"JobsRedis"}],"role":"collectionGroup","title":"Jobs","roleHeading":"API Collection"},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"A Job consists of a payload and an execute method to run the job. HummingbirdJobs provides a framework for pushing jobs onto a queue and processing them at a later point. If the driver backing up the job queue uses persistent storage then a separate server can be used to process the jobs. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there are also implementations in "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","type":"reference"},{"type":"text","text":" and "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","type":"reference"},{"type":"text","text":" that implemeent the job queue using a Redis database or Postgres database."}],"type":"paragraph"},{"level":3,"anchor":"Setting-up-a-Job-queue","type":"heading","text":"Setting up a Job queue"},{"inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory that will process four jobs concurrently.","type":"text"}],"type":"paragraph"},{"code":["let jobQueue = JobQueue(.memory, numWorkers: 4, logger: logger)"],"syntax":"swift","type":"codeListing"},{"level":3,"anchor":"Creating-a-Job","type":"heading","text":"Creating a Job"},{"inlineContent":[{"type":"text","text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"We use a struct conforming to "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","type":"reference","isActive":true},{"type":"text","text":" to define the job parameters and identifier."}],"type":"paragraph"},{"code":["struct SendEmailJobParameters: JobParameters {","    \/\/\/ jobName is used to create the job identifier. It should be unique","    static let jobName = \"SendEmail\"","    let to: String","    let subject: String","    let body: String","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Then we register the job with a job queue and also provide a closure that executes the job."}],"type":"paragraph"},{"code":["jobQueue.registerJob(parameters: SendEmailJobParameters.self) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Now your job is ready to create. Jobs can be queued up using the function ","type":"text"},{"type":"codeVoice","code":"push"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"JobQueue"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job)"],"syntax":"swift","type":"codeListing"},{"level":3,"anchor":"Processing-Jobs","type":"heading","text":"Processing Jobs"},{"inlineContent":[{"type":"text","text":"When you create a "},{"type":"codeVoice","code":"JobQueue"},{"type":"text","text":" the "},{"type":"codeVoice","code":"numWorkers"},{"type":"text","text":" parameter indicates how many jobs you want serviced concurrently by the job queue. If you want to activate these workers you need to add the job queue to your "},{"type":"codeVoice","code":"ServiceGroup"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or it can be added to the array of services that "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" manages"}],"type":"paragraph"},{"code":["let app = Application(...)","app.addServices(jobQueue)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","type":"reference"},{"text":" or ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition"],"title":"Reference"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],"title":"Related Documentation"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"generated":true,"title":"Guides"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"},"sections":[],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"JobQueue","kind":"identifier"}],"navigatorTitle":[{"text":"JobQueue","kind":"identifier"}],"type":"topic","url":"\/documentation\/jobs\/jobqueue","kind":"symbol","title":"JobQueue","abstract":[{"text":"Job queue","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"url":"\/documentation\/hummingbird\/migratingtov2","abstract":[{"text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2","type":"text"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","title":"Migrating to Hummingbird v2","role":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"title":"Request Contexts","kind":"article","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"type":"topic","role":"collectionGroup","url":"\/documentation\/hummingbird\/requestcontexts","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"title":"RedisJobQueue","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RedisJobQueue"}],"abstract":[{"type":"text","text":"Redis implementation of job queue driver"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisJobQueue"}],"url":"\/documentation\/jobsredis\/redisjobqueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobParameters":{"url":"\/documentation\/jobs\/jobparameters","abstract":[{"type":"text","text":"Defines job parameters and identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","title":"JobParameters","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobParameters"}],"navigatorTitle":[{"kind":"identifier","text":"JobParameters"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","role":"collection","abstract":[{"text":"Postgres implementation for Hummingbird jobs framework","type":"text"}],"title":"JobsPostgres","kind":"symbol","url":"\/documentation\/jobspostgres"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","type":"topic","title":"Logging, Metrics and Tracing","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","kind":"article","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"url":"\/documentation\/hummingbird\/servicelifecycle","abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","kind":"article","role":"article","title":"Service Lifecycle","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","type":"topic","abstract":[{"type":"text","text":"Hummingbird uses "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to decode requests and encode responses."}],"url":"\/documentation\/hummingbird\/encodinganddecoding","title":"Encoding and Decoding"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"title":"JobsRedis","kind":"symbol","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"type":"topic","role":"collection","url":"\/documentation\/jobsredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","role":"collectionGroup","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"title":"Error Handling","kind":"article","url":"\/documentation\/hummingbird\/errorhandling"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","type":"topic","title":"Router","url":"\/documentation\/hummingbird\/routerguide","kind":"article","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"title":"Hummingbird","kind":"article","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobIdentifier":{"title":"JobIdentifier","abstract":[{"type":"text","text":"Identifier for a Job type"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobIdentifier","kind":"identifier"}],"role":"symbol","url":"\/documentation\/jobs\/jobidentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","role":"collectionGroup","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"title":"Persistent data","kind":"article","url":"\/documentation\/hummingbird\/persistentdata"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"kind":"article","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","title":"Middleware","type":"topic","url":"\/documentation\/hummingbird\/middlewareguide"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobDefinition":{"abstract":[{"text":"Job definition type","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/jobs\/jobdefinition","navigatorTitle":[{"text":"JobDefinition","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobDefinition"}],"title":"JobDefinition"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"kind":"article","abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","title":"Testing","type":"topic","url":"\/documentation\/hummingbird\/testing"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"kind":"symbol","url":"\/documentation\/jobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","title":"Jobs","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PostgresJobQueue"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PostgresJobQueue"}],"abstract":[{"text":"Postgres Job queue implementation","type":"text"}],"title":"PostgresJobQueue","kind":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue"}}}