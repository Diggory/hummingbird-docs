{"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],"anchor":"Related-Documentation"},{"title":"Guides","anchor":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"],"generated":true}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"A Job consists of a payload and an execute method to run the job. HummingbirdJobs provides a framework for pushing jobs onto a queue and processing them at a later point. If the driver backing up the job queue uses persistent storage then a separate server can be used to process the jobs. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there are also implementations in "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","type":"reference"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","isActive":true},{"text":" that implemeent the job queue using a Redis database or Postgres database.","type":"text"}],"type":"paragraph"},{"level":3,"text":"Setting up a Job queue","anchor":"Setting-up-a-Job-queue","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory that will process four jobs concurrently."}]},{"type":"codeListing","syntax":"swift","code":["let jobQueue = JobQueue(.memory, numWorkers: 4, logger: logger)"]},{"anchor":"Creating-a-Job","text":"Creating a Job","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job."}]},{"inlineContent":[{"text":"We use a struct conforming to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","isActive":true},{"type":"text","text":" to define the job parameters and identifier."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct SendEmailJobParameters: JobParameters {","    \/\/\/ jobName is used to create the job identifier. It should be unique","    static let jobName = \"SendEmail\"","    let to: String","    let subject: String","    let body: String","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then we register the job with a job queue and also provide a closure that executes the job."}]},{"syntax":"swift","code":["jobQueue.registerJob(parameters: SendEmailJobParameters.self) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now your job is ready to create. Jobs can be queued up using the function "},{"type":"codeVoice","code":"push"},{"text":" on ","type":"text"},{"code":"JobQueue","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job)"]},{"level":3,"text":"Processing Jobs","type":"heading","anchor":"Processing-Jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you create a "},{"code":"JobQueue","type":"codeVoice"},{"text":" the ","type":"text"},{"type":"codeVoice","code":"numWorkers"},{"text":" parameter indicates how many jobs you want serviced concurrently by the job queue. If you want to activate these workers you need to add the job queue to your ","type":"text"},{"code":"ServiceGroup","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or it can be added to the array of services that "},{"type":"codeVoice","code":"Application"},{"text":" manages","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let app = Application(...)","app.addServices(jobQueue)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","isActive":true,"type":"reference"},{"type":"text","text":" or "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","isActive":true,"type":"reference"},{"text":".","type":"text"}]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"anchor":"Reference","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition"],"title":"Reference"}],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"kind":"article","metadata":{"title":"Jobs","images":[{"type":"icon","identifier":"logo.png"}],"modules":[{"name":"JobsPostgres"},{"name":"Jobs"},{"name":"JobsRedis"},{"name":"Hummingbird"}],"roleHeading":"API Collection","role":"collectionGroup"},"references":{"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"url":"\/tutorials\/fluent","kind":"overview","role":"overview","title":"Store Data with Fluent","type":"topic","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobDefinition":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobDefinition"}],"role":"symbol","abstract":[{"type":"text","text":"Job definition type"}],"navigatorTitle":[{"kind":"identifier","text":"JobDefinition"}],"title":"JobDefinition","url":"\/documentation\/jobs\/jobdefinition"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/loggingmetricsandtracing","kind":"article","role":"collectionGroup","title":"Logging, Metrics and Tracing","type":"topic","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","type":"topic","url":"\/documentation\/hummingbird\/errorhandling","kind":"article","title":"Error Handling","abstract":[{"type":"text","text":"How to build errors for the server to return."}],"role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","type":"topic","url":"\/documentation\/hummingbird\/middlewareguide","kind":"article","title":"Middleware","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"images":[{"identifier":"logo.png","type":"icon"}],"title":"Persistent data","url":"\/documentation\/hummingbird\/persistentdata","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"title":"Jobs","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"url":"\/documentation\/jobs"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"url":"\/documentation\/jobsredis\/redisjobqueue","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Redis implementation of job queue driver"}],"title":"RedisJobQueue","navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisJobQueue"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PostgresJobQueue","kind":"identifier"}],"abstract":[{"text":"Postgres Job queue implementation","type":"text"}],"role":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","navigatorTitle":[{"text":"PostgresJobQueue","kind":"identifier"}],"title":"PostgresJobQueue","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"url":"\/documentation\/jobsredis","type":"topic","role":"collection","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"images":[{"type":"icon","identifier":"logo.png"}],"title":"JobsRedis","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobParameters":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","type":"topic","title":"JobParameters","url":"\/documentation\/jobs\/jobparameters","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobParameters"}],"abstract":[{"text":"Defines job parameters and identifier","type":"text"}],"navigatorTitle":[{"text":"JobParameters","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobQueue":{"role":"symbol","title":"JobQueue","url":"\/documentation\/jobs\/jobqueue","navigatorTitle":[{"kind":"identifier","text":"JobQueue"}],"abstract":[{"text":"Job queue","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","type":"topic","url":"\/documentation\/hummingbird\/encodinganddecoding","kind":"article","title":"Encoding and Decoding","abstract":[{"type":"text","text":"Hummingbird uses "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" to decode requests and encode responses."}],"role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/routerguide","kind":"article","role":"collectionGroup","title":"Router","type":"topic","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}],"role":"collection","url":"\/documentation\/jobspostgres","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","images":[{"identifier":"logo.png","type":"icon"}],"title":"JobsPostgres","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","type":"topic","url":"\/documentation\/hummingbird\/requestcontexts","kind":"article","title":"Request Contexts","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","type":"topic","url":"\/documentation\/hummingbird\/migratingtov2","kind":"article","title":"Migrating to Hummingbird v2","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"role":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","type":"topic","url":"\/documentation\/hummingbird\/servicelifecycle","kind":"article","title":"Service Lifecycle","abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}],"role":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/testing","kind":"article","role":"article","title":"Testing","type":"topic","abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobIdentifier":{"url":"\/documentation\/jobs\/jobidentifier","navigatorTitle":[{"kind":"identifier","text":"JobIdentifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobIdentifier"}],"title":"JobIdentifier","type":"topic","abstract":[{"type":"text","text":"Identifier for a Job type"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier"}}}