{"topicSections":[{"title":"Reference","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition"],"anchor":"Reference"}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A Job consists of a payload and an execute method to run the job. HummingbirdJobs provides a framework for pushing jobs onto a queue and processing them at a later point. If the driver backing up the job queue uses persistent storage then a separate server can be used to process the jobs. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there are also implementations in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","isActive":true},{"type":"text","text":" that implemeent the job queue using a Redis database or Postgres database."}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"Setting-up-a-Job-queue","text":"Setting up a Job queue"},{"type":"paragraph","inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory that will process four jobs concurrently.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let jobQueue = JobQueue(.memory, numWorkers: 4, logger: logger)"]},{"level":3,"text":"Creating a Job","anchor":"Creating-a-Job","type":"heading"},{"inlineContent":[{"text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"We use a struct conforming to "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","type":"reference","isActive":true},{"type":"text","text":" to define the job parameters and identifier."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct SendEmailJobParameters: JobParameters {","    \/\/\/ jobName is used to create the job identifier. It should be unique","    static let jobName = \"SendEmail\"","    let to: String","    let subject: String","    let body: String","}"]},{"inlineContent":[{"text":"Then we register the job with a job queue and also provide a closure that executes the job.","type":"text"}],"type":"paragraph"},{"code":["jobQueue.registerJob(parameters: SendEmailJobParameters.self) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Now your job is ready to create. Jobs can be queued up using the function "},{"code":"push","type":"codeVoice"},{"text":" on ","type":"text"},{"code":"JobQueue","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job)"],"syntax":"swift"},{"text":"Processing Jobs","level":3,"type":"heading","anchor":"Processing-Jobs"},{"type":"paragraph","inlineContent":[{"text":"When you create a ","type":"text"},{"code":"JobQueue","type":"codeVoice"},{"text":" the ","type":"text"},{"type":"codeVoice","code":"numWorkers"},{"type":"text","text":" parameter indicates how many jobs you want serviced concurrently by the job queue. If you want to activate these workers you need to add the job queue to your "},{"code":"ServiceGroup","type":"codeVoice"},{"type":"text","text":"."}]},{"code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Or it can be added to the array of services that ","type":"text"},{"type":"codeVoice","code":"Application"},{"type":"text","text":" manages"}]},{"syntax":"swift","code":["let app = Application(...)","app.addServices(jobQueue)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","isActive":true},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","interfaceLanguage":"swift"},"kind":"article","seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],"anchor":"Related-Documentation"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"metadata":{"role":"collectionGroup","roleHeading":"API Collection","title":"Jobs","images":[{"type":"icon","identifier":"logo.png"}],"modules":[{"name":"JobsPostgres"},{"name":"JobsRedis"},{"name":"Jobs"}]},"references":{"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"type":"topic","role":"collection","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobParameters":{"title":"JobParameters","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobParameters"}],"url":"\/documentation\/jobs\/jobparameters","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","navigatorTitle":[{"text":"JobParameters","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Defines job parameters and identifier","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"title":"JobsRedis","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/jobsredis","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"title":"JobsPostgres","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/jobspostgres","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","abstract":[{"type":"text","text":"Postgres implementation for Hummingbird jobs framework"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobIdentifier":{"title":"JobIdentifier","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobIdentifier"}],"abstract":[{"text":"Identifier for a Job type","type":"text"}],"navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"type":"topic","url":"\/documentation\/jobs\/jobidentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobDefinition":{"title":"JobDefinition","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobDefinition"}],"url":"\/documentation\/jobs\/jobdefinition","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition","navigatorTitle":[{"kind":"identifier","text":"JobDefinition"}],"role":"symbol","abstract":[{"text":"Job definition type","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"navigatorTitle":[{"text":"RedisJobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisJobQueue"}],"url":"\/documentation\/jobsredis\/redisjobqueue","title":"RedisJobQueue","role":"symbol","abstract":[{"text":"Redis implementation of job queue driver","type":"text"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PostgresJobQueue"}],"role":"symbol","kind":"symbol","url":"\/documentation\/jobspostgres\/postgresjobqueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","abstract":[{"type":"text","text":"Postgres Job queue implementation"}],"navigatorTitle":[{"text":"PostgresJobQueue","kind":"identifier"}],"title":"PostgresJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/index":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"type":"topic","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobQueue":{"navigatorTitle":[{"text":"JobQueue","kind":"identifier"}],"abstract":[{"type":"text","text":"Job queue"}],"kind":"symbol","title":"JobQueue","url":"\/documentation\/jobs\/jobqueue","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueue"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue"}}}