{"kind":"article","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"A Job consists of a payload and an execute method to run the job. HummingbirdJobs provides a framework for pushing jobs onto a queue and processing them at a later point. If the driver backing up the job queue uses persistent storage then a separate server can be used to process the jobs. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there are also implementations in ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","type":"reference","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","type":"reference","isActive":true},{"text":" that implemeent the job queue using a Redis database or Postgres database.","type":"text"}],"type":"paragraph"},{"level":3,"text":"Setting up a Job queue","type":"heading","anchor":"Setting-up-a-Job-queue"},{"inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory that will process four jobs concurrently.","type":"text"}],"type":"paragraph"},{"code":["let jobQueue = JobQueue(.memory, numWorkers: 4, logger: logger)"],"type":"codeListing","syntax":"swift"},{"level":3,"text":"Creating a Job","type":"heading","anchor":"Creating-a-Job"},{"inlineContent":[{"type":"text","text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job."}],"type":"paragraph"},{"inlineContent":[{"text":"We use a struct conforming to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters"},{"text":" to define the job parameters and identifier.","type":"text"}],"type":"paragraph"},{"code":["struct SendEmailJobParameters: JobParameters {","    \/\/\/ jobName is used to create the job identifier. It should be unique","    static let jobName = \"SendEmail\"","    let to: String","    let subject: String","    let body: String","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Then we register the job with a job queue and also provide a closure that executes the job."}],"type":"paragraph"},{"code":["jobQueue.registerJob(parameters: SendEmailJobParameters.self) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Now your job is ready to create. Jobs can be queued up using the function "},{"code":"push","type":"codeVoice"},{"type":"text","text":" on "},{"code":"JobQueue","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job)"],"type":"codeListing","syntax":"swift"},{"level":3,"text":"Processing Jobs","type":"heading","anchor":"Processing-Jobs"},{"inlineContent":[{"type":"text","text":"When you create a "},{"type":"codeVoice","code":"JobQueue"},{"type":"text","text":" the "},{"type":"codeVoice","code":"numWorkers"},{"type":"text","text":" parameter indicates how many jobs you want serviced concurrently by the job queue. If you want to activate these workers you need to add the job queue to your "},{"type":"codeVoice","code":"ServiceGroup"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Or it can be added to the array of services that "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" manages"}],"type":"paragraph"},{"code":["let app = Application(...)","app.addServices(jobQueue)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","isActive":true},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"topicSections":[{"title":"Reference","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"JobsRedis"},{"name":"Hummingbird"},{"name":"JobsPostgres"},{"name":"Jobs"}],"roleHeading":"API Collection","title":"Jobs","images":[{"identifier":"logo.png","type":"icon"}],"role":"collectionGroup"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"},"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres"]},{"generated":true,"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobDefinition":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobDefinition","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobDefinition"}],"abstract":[{"text":"Job definition type","type":"text"}],"role":"symbol","type":"topic","title":"JobDefinition","navigatorTitle":[{"kind":"identifier","text":"JobDefinition"}],"url":"\/documentation\/jobs\/jobdefinition","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","title":"Logging, Metrics and Tracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","url":"\/documentation\/hummingbird\/loggingmetricsandtracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collectionGroup","url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"url":"\/documentation\/hummingbird\/testing","role":"article","title":"Testing","abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobIdentifier":{"abstract":[{"type":"text","text":"Identifier for a Job type"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobIdentifier"}],"navigatorTitle":[{"kind":"identifier","text":"JobIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobIdentifier","type":"topic","url":"\/documentation\/jobs\/jobidentifier","role":"symbol","kind":"symbol","title":"JobIdentifier"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobParameters":{"title":"JobParameters","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"JobParameters","kind":"identifier"}],"navigatorTitle":[{"text":"JobParameters","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobParameters","abstract":[{"text":"Defines job parameters and identifier","type":"text"}],"url":"\/documentation\/jobs\/jobparameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"url":"\/documentation\/hummingbird\/middlewareguide","role":"collectionGroup","title":"Middleware","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres","abstract":[{"text":"Postgres implementation for Hummingbird jobs framework","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","url":"\/documentation\/jobspostgres","title":"JobsPostgres"},"logo.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"url":"\/documentation\/hummingbird\/servicelifecycle","role":"article","title":"Service Lifecycle","abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}],"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"url":"\/documentation\/hummingbird\/persistentdata","images":[{"type":"icon","identifier":"logo.png"}],"title":"Persistent data","kind":"article","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","role":"collectionGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"type":"topic","title":"Error Handling","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","abstract":[{"type":"text","text":"How to build errors for the server to return."}],"role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","url":"\/documentation\/hummingbird\/errorhandling"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"abstract":[{"text":"Hummingbird uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to decode requests and encode responses.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/hummingbird\/encodinganddecoding","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","title":"Encoding and Decoding","type":"topic","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","url":"\/documentation\/index","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/JobsPostgres/PostgresJobQueue":{"abstract":[{"text":"Postgres Job queue implementation","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PostgresJobQueue","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsPostgres\/PostgresJobQueue","url":"\/documentation\/jobspostgres\/postgresjobqueue","title":"PostgresJobQueue","navigatorTitle":[{"text":"PostgresJobQueue","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","url":"\/documentation\/jobsredis","title":"JobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","url":"\/documentation\/hummingbird\/routerguide","title":"Router","type":"topic","role":"collectionGroup","kind":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"url":"\/documentation\/hummingbird\/migratingtov2","role":"article","title":"Migrating to Hummingbird v2","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","url":"\/documentation\/jobs","title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/JobsRedis/RedisJobQueue":{"abstract":[{"type":"text","text":"Redis implementation of job queue driver"}],"role":"symbol","url":"\/documentation\/jobsredis\/redisjobqueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisJobQueue"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/JobsRedis\/RedisJobQueue","title":"RedisJobQueue","navigatorTitle":[{"kind":"identifier","text":"RedisJobQueue"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/JobQueue":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/JobQueue","abstract":[{"text":"Job queue","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"JobQueue","kind":"identifier"}],"url":"\/documentation\/jobs\/jobqueue","title":"JobQueue"}}}