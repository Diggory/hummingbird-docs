{"seeAlsoSections":[{"anchor":"Miscellaneous","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"],"title":"Miscellaneous"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/initializablefromsource"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"],"generated":true,"anchor":"Associated-Types"},{"generated":true,"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)-2qxvp"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"metadata":{"roleHeading":"Protocol","modules":[{"name":"Hummingbird"}],"title":"InitializableFromSource","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"externalID":"s:11Hummingbird23InitializableFromSourceP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}],"role":"symbol"},"abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"},{"title":"Inherited By","kind":"relationships","type":"inheritedBy","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"]},{"type":"conformingTypes","title":"Conforming Types","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"text":"> : ","kind":"text"},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/init(source:)-2qxvp":{"type":"topic","kind":"symbol","required":true,"url":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)-2qxvp","role":"symbol","title":"init(source:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)-2qxvp","defaultImplementations":1,"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"text":")","kind":"text"}],"abstract":[{"text":"Initialise from source type","type":"text"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"role":"symbol","title":"RemoteAddressRequestContext","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemoteAddressRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"url":"\/documentation\/hummingbird\/initializablefromsource","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InitializableFromSource"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","kind":"symbol","title":"InitializableFromSource","abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicLambdaRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","kind":"symbol","title":"BasicLambdaRequestContext","abstract":[{"text":"The default Lambda request context.","type":"text"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"type":"topic","kind":"symbol","required":true,"url":"\/documentation\/hummingbird\/initializablefromsource\/source","role":"symbol","title":"Source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Source"}],"abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicAuthRequestContext"}],"url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAuthRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","kind":"symbol","title":"BasicAuthRequestContext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports authenticators"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthRequestContext"}],"url":"\/documentation\/hummingbirdauth\/authrequestcontext","role":"symbol","navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"title":"AuthRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","abstract":[{"text":"Protocol that all request contexts should conform to if they want to support","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"authentication middleware"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"title":"Request","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketRequestContext":{"kind":"symbol","navigatorTitle":[{"text":"WebSocketRequestContext","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext","role":"symbol","url":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","abstract":[{"type":"text","text":"Request context protocol requirement for routers that support WebSockets"}],"title":"WebSocketRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"ChildRequestContext"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/childrequestcontext","title":"ChildRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChildRequestContext","kind":"identifier"}],"abstract":[{"text":"A RequestContext that can be initialized from another RequestContext.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","type":"topic","navigatorTitle":[{"text":"RouterRequestContext","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouterRequestContext","kind":"identifier"}],"title":"RouterRequestContext","abstract":[{"text":"Protocol that all request contexts used with RouterBuilder should conform to.","type":"text"}]},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionRequestContext":{"role":"symbol","title":"SessionRequestContext","navigatorTitle":[{"kind":"identifier","text":"SessionRequestContext"}],"abstract":[{"type":"text","text":"Protocol for RequestContext that stores session data"}],"url":"\/documentation\/hummingbirdauth\/sessionrequestcontext","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SessionRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaRequestContext"}],"title":"LambdaRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContext"}],"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","abstract":[{"text":"A Request Context that is initialized with the Event that triggered the Lambda","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicSessionRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","title":"BasicSessionRequestContext","url":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext","kind":"symbol","abstract":[{"type":"text","text":"Implementation of a basic request context that supports session storage and authenticators"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BasicSessionRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"BasicSessionRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext","title":"BasicRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicRequestContext"}],"abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"abstract":[{"type":"text","text":"Access environment variables"}],"type":"topic","url":"\/documentation\/hummingbird\/environment","navigatorTitle":[{"text":"Environment","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","title":"Environment","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicWebSocketRequestContext"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicWebSocketRequestContext"}],"url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","title":"BasicWebSocketRequestContext","abstract":[{"type":"text","text":"Default implementation of a request context that supports WebSockets"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicRouterRequestContext"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","title":"BasicRouterRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicRouterRequestContext"}],"abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `RouterBuilder``"}]}}}