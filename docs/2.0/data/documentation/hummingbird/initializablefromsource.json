{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/hummingbird\/initializablefromsource"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"topicSections":[{"generated":true,"title":"Associated Types","anchor":"Associated-Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"]},{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)-2qxvp"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom"},{"title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"],"kind":"relationships","type":"inheritedBy"},{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"type":"conformingTypes","title":"Conforming Types"}],"metadata":{"modules":[{"name":"Hummingbird"}],"symbolKind":"protocol","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"externalID":"s:11Hummingbird23InitializableFromSourceP","title":"InitializableFromSource","role":"symbol"},"sections":[],"seeAlsoSections":[{"anchor":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"],"generated":true,"title":"Miscellaneous"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InitializableFromSource"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","text":"Source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketRequestContext":{"type":"topic","abstract":[{"type":"text","text":"Request context protocol requirement for routers that support WebSockets"}],"title":"WebSocketRequestContext","navigatorTitle":[{"text":"WebSocketRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"WebSocketRequestContext","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for RequestContext that stores session data"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","title":"SessionRequestContext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SessionRequestContext"}],"url":"\/documentation\/hummingbirdauth\/sessionrequestcontext","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicSessionRequestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicSessionRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports session storage and authenticators"}],"title":"BasicSessionRequestContext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicSessionRequestContext"}],"url":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContext"}],"role":"symbol","abstract":[{"text":"A Request Context that is initialized with the Event that triggered the Lambda","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","title":"LambdaRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"LambdaRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InitializableFromSource"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","title":"InitializableFromSource","abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"url":"\/documentation\/hummingbird\/initializablefromsource","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","abstract":[{"text":"Implementation of a basic request context that supports authenticators","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicAuthRequestContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"BasicAuthRequestContext"}],"title":"BasicAuthRequestContext","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A RequestContext that can be initialized from another RequestContext.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/childrequestcontext","title":"ChildRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","kind":"article","title":"Hummingbird Documentation","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"abstract":[],"url":"\/documentation\/hummingbird\/initializablefromsource\/source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","type":"topic","kind":"symbol","title":"Source","required":true,"role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Source","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","title":"RouterRequestContext","navigatorTitle":[{"kind":"identifier","text":"RouterRequestContext"}],"role":"symbol","url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","abstract":[{"type":"text","text":"Protocol that all request contexts used with RouterBuilder should conform to."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterRequestContext","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"url":"\/documentation\/hummingbird\/basicrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","type":"topic","title":"BasicRequestContext","navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/init(source:)-2qxvp":{"abstract":[{"type":"text","text":"Initialise from source type"}],"type":"topic","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)-2qxvp","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","text":"Source","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(source:)","role":"symbol","defaultImplementations":1,"url":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)-2qxvp","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RemoteAddressRequestContext"}],"navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"type":"topic","title":"RemoteAddressRequestContext","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"title":"AuthRequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"text":"authentication middleware","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AuthRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"AuthRequestContext"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","url":"\/documentation\/hummingbirdauth\/authrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","title":"BasicWebSocketRequestContext","abstract":[{"type":"text","text":"Default implementation of a request context that supports WebSockets"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicWebSocketRequestContext"}],"url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","abstract":[{"text":"The default Lambda request context.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicLambdaRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"title":"BasicLambdaRequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `RouterBuilder``"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRouterRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}],"title":"BasicRouterRequestContext","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"abstract":[{"type":"text","text":"Access environment variables"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"navigatorTitle":[{"text":"Environment","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/environment","title":"Environment","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","type":"topic"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"topic","kind":"symbol","title":"Request","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"navigatorTitle":[{"text":"Request","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"type":"topic","title":"RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","url":"\/documentation\/hummingbird\/requestcontext","role":"symbol"}}}