{"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"},{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"],"title":"Inherited By","type":"inheritedBy"},{"kind":"relationships","type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"]}],"metadata":{"role":"symbol","title":"InitializableFromSource","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InitializableFromSource","kind":"identifier"}],"externalID":"s:11Hummingbird23InitializableFromSourceP","modules":[{"name":"Hummingbird"}],"roleHeading":"Protocol","symbolKind":"protocol","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","text":"Source","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"text":"> : ","kind":"text"},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"sections":[],"abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"variants":[{"paths":["\/documentation\/hummingbird\/initializablefromsource"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Associated-Types","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"],"title":"Associated Types"},{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)-2qxvp"],"generated":true,"anchor":"Initializers"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"],"anchor":"Miscellaneous","title":"Miscellaneous"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Environment","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Environment"}],"url":"\/documentation\/hummingbird\/environment","abstract":[{"type":"text","text":"Access environment variables"}],"type":"topic","title":"Environment"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/request","title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicAuthRequestContext","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"BasicAuthRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","abstract":[{"text":"Implementation of a basic request context that supports authenticators","type":"text"}],"type":"topic","title":"BasicAuthRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SessionRequestContext","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SessionRequestContext"}],"abstract":[{"type":"text","text":"Protocol for RequestContext that stores session data"}],"url":"\/documentation\/hummingbirdauth\/sessionrequestcontext","type":"topic","title":"SessionRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","role":"symbol","title":"BasicLambdaRequestContext","abstract":[{"text":"The default Lambda request context.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicLambdaRequestContext"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"url":"\/documentation\/hummingbird\/initializablefromsource\/source","role":"symbol","title":"Source","abstract":[],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","kind":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"type":"topic","role":"collection","kind":"article","title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"kind":"symbol","abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"url":"\/documentation\/hummingbird\/initializablefromsource","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"InitializableFromSource","kind":"identifier"}],"title":"InitializableFromSource","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","role":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"navigatorTitle":[{"text":"RouterRequestContext","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Protocol that all request contexts used with RouterBuilder should conform to.","type":"text"}],"url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouterRequestContext","kind":"identifier"}],"title":"RouterRequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"kind":"symbol","title":"LambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A Request Context that is initialized with the Event that triggered the Lambda"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"kind":"symbol","title":"BasicRequestContext","url":"\/documentation\/hummingbird\/basicrequestcontext","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicRequestContext"}],"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic","role":"collection","kind":"symbol","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"logo.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/init(source:)-2qxvp":{"url":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)-2qxvp","role":"symbol","title":"init(source:)","abstract":[{"type":"text","text":"Initialise from source type"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"text":"Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)-2qxvp","kind":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketRequestContext":{"navigatorTitle":[{"text":"WebSocketRequestContext","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Request context protocol requirement for routers that support WebSockets","type":"text"}],"url":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"WebSocketRequestContext","kind":"identifier"}],"title":"WebSocketRequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"navigatorTitle":[{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Default implementation of a request context that supports WebSockets"}],"url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"title":"BasicWebSocketRequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"type":"topic","kind":"symbol","abstract":[{"text":"Basic implementation of a context that can be used with `RouterBuilder``","type":"text"}],"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","title":"BasicRouterRequestContext","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRouterRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AuthRequestContext"}],"kind":"symbol","navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/authrequestcontext","abstract":[{"text":"Protocol that all request contexts should conform to if they want to support","type":"text"},{"text":" ","type":"text"},{"text":"authentication middleware","type":"text"}],"type":"topic","title":"AuthRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A RequestContext that can be initialized from another RequestContext.","type":"text"}],"url":"\/documentation\/hummingbird\/childrequestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildRequestContext"}],"title":"ChildRequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","role":"symbol","title":"RemoteAddressRequestContext","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RemoteAddressRequestContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","kind":"symbol","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicSessionRequestContext":{"navigatorTitle":[{"text":"BasicSessionRequestContext","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Implementation of a basic request context that supports session storage and authenticators","type":"text"}],"url":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicSessionRequestContext","kind":"identifier"}],"title":"BasicSessionRequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","role":"symbol"}}}