{"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"],"kind":"relationships","type":"inheritedBy","title":"Inherited By"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbird\/initializablefromsource"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"],"title":"Miscellaneous","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)"],"title":"Initializers"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","kind":"typeIdentifier","text":"Source"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}]}]}],"metadata":{"title":"InitializableFromSource","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}],"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"roleHeading":"Protocol","externalID":"s:11Hummingbird23InitializableFromSourceP","role":"symbol","symbolKind":"protocol"},"sections":[],"abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"title":"LambdaRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","navigatorTitle":[{"text":"LambdaRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A Request Context that is initialized with the Event that triggered the Lambda"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"type":"topic","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","navigatorTitle":[{"text":"RouterRequestContext","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"RouterRequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts used with RouterBuilder should conform to."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","title":"BasicWebSocketRequestContext","abstract":[{"text":"Default implementation of a request context that supports WebSockets","type":"text"}],"url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","title":"BasicRequestContext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"url":"\/documentation\/hummingbird\/basicrequestcontext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRequestContext"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"navigatorTitle":[{"text":"Environment","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/environment","type":"topic","title":"Environment","abstract":[{"type":"text","text":"Access environment variables"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"required":true,"kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/hummingbird\/initializablefromsource\/source","role":"symbol","title":"Source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"role":"symbol","abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}],"kind":"symbol","type":"topic","title":"InitializableFromSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","url":"\/documentation\/hummingbird\/initializablefromsource"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/init(source:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","kind":"typeIdentifier","text":"Source"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)","abstract":[{"type":"text","text":"Initialise RequestContext from source"}],"title":"init(source:)","url":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)","required":true,"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicLambdaRequestContext"}],"kind":"symbol","title":"BasicLambdaRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","type":"topic","role":"symbol","abstract":[{"text":"The default Lambda request context.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketRequestContext":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"WebSocketRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext","title":"WebSocketRequestContext","abstract":[{"text":"Request context protocol requirement for routers that support WebSockets","type":"text"}],"url":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketRequestContext","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicAuthRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","title":"BasicAuthRequestContext","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicAuthRequestContext"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"type":"topic","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"title":"RemoteAddressRequestContext","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemoteAddressRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRouterRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `RouterBuilder``"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","title":"BasicRouterRequestContext"}}}