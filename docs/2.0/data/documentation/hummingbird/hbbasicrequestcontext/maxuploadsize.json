{"metadata":{"roleHeading":"Instance Property","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"extendedModule":"Hummingbird","role":"symbol","title":"maxUploadSize","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird20HBBaseRequestContextPAAE13maxUploadSizeSivp::SYNTHESIZED::s:11Hummingbird21HBBasicRequestContextV"},"abstract":[{"text":"maxUploadSize","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext\/HBBaseRequestContext-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext\/HBBaseRequestContext-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext\/HBBaseRequestContext-Implementations"]]},"variants":[{"paths":["\/documentation\/hummingbird\/hbbasicrequestcontext\/maxuploadsize"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext\/maxUploadSize","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext/HBBaseRequestContext-Implementations":{"role":"collectionGroup","url":"\/documentation\/hummingbird\/hbbasicrequestcontext\/hbbaserequestcontext-implementations","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext\/HBBaseRequestContext-Implementations","title":"HBBaseRequestContext Implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"role":"symbol","url":"\/documentation\/hummingbird\/hbbasicrequestcontext","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRequestContext"}],"abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","title":"HBBasicRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBasicRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"role":"collectionGroup","url":"\/documentation\/hummingbird\/requestcontext","type":"topic","kind":"article","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","title":"Request Context"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext/maxUploadSize":{"abstract":[{"type":"text","text":"maxUploadSize"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext\/maxUploadSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbbasicrequestcontext\/maxuploadsize","kind":"symbol","type":"topic","title":"maxUploadSize"},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","url":"\/documentation\/index","type":"topic","kind":"article","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","type":"topic","kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"}}}