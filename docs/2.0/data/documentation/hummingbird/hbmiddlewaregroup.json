{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware"],"generated":true}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":">","kind":"text"}]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup\/add(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup\/constructResponder(finalResponder:)"]}],"metadata":{"role":"symbol","externalID":"s:11Hummingbird17HBMiddlewareGroupC","symbolKind":"class","modules":[{"name":"Hummingbird"}],"roleHeading":"Class","title":"HBMiddlewareGroup","navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}]},"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/hbmiddlewaregroup"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Middleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middleware","kind":"symbol","title":"Middleware","abstract":[{"text":"Middleware Handler with generic input, context and output types","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMetricsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","navigatorTitle":[{"text":"HBMetricsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmetricsmiddleware","kind":"symbol","title":"HBMetricsMiddleware","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup/add(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup\/add(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird20HBMiddlewareProtocolP","kind":"typeIdentifier","text":"HBMiddlewareProtocol"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">)"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbmiddlewaregroup\/add(_:)","abstract":[{"type":"text","text":"Add middleware to group"}],"title":"add(_:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"navigatorTitle":[{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"abstract":[{"text":"Middleware outputting to log for every call to server","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","kind":"symbol","url":"\/documentation\/hummingbird\/hblogrequestsmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"title":"HBLogRequestsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","title":"HBMiddlewareProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"navigatorTitle":[{"text":"HBTracingMiddleware","kind":"identifier"}],"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","kind":"symbol","url":"\/documentation\/hummingbird\/hbtracingmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBTracingMiddleware","kind":"identifier"}],"title":"HBTracingMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup/init()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup\/init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbmiddlewaregroup\/init()","abstract":[{"type":"text","text":"Initialize "},{"type":"codeVoice","code":"HBMiddlewareGroup"}],"title":"init()","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","role":"symbol","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"type":"topic","title":"HBMiddlewareGroup","kind":"symbol","navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmiddlewaregroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","title":"Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}],"title":"HBCORSMiddleware","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/hbcorsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup/constructResponder(finalResponder:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup\/constructResponder(finalResponder:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"finalResponder"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier","text":"HBResponder"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">) -> "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier","text":"HBResponder"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbmiddlewaregroup\/constructresponder(finalresponder:)","abstract":[{"type":"text","text":"Construct responder chain from this middleware group"}],"title":"constructResponder(finalResponder:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileMiddleware":{"url":"\/documentation\/hummingbird\/hbfilemiddleware","title":"HBFileMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFileMiddleware","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Middleware for serving static files.","type":"text"}],"navigatorTitle":[{"text":"HBFileMiddleware","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"type":"topic","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"kind":"symbol","title":"MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}]}}}