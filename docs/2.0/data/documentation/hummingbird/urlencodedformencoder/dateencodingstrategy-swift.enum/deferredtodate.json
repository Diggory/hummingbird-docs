{"sections":[],"kind":"symbol","abstract":[{"text":"Defer to ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" for encoding. This is the default strategy.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deferredToDate"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum\/deferredToDate","interfaceLanguage":"swift"},"metadata":{"symbolKind":"case","roleHeading":"Case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToDate","kind":"identifier"}],"title":"URLEncodedFormEncoder.DateEncodingStrategy.deferredToDate","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird21URLEncodedFormEncoderV20DateEncodingStrategyO010deferredToE0yA2EmF","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum"]]},"variants":[{"paths":["\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/deferredtodate"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder/DateEncodingStrategy-swift.enum/deferredToDate":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum\/deferredToDate","url":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/deferredtodate","type":"topic","abstract":[{"type":"text","text":"Defer to "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" for encoding. This is the default strategy."}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToDate","kind":"identifier"}],"title":"URLEncodedFormEncoder.DateEncodingStrategy.deferredToDate","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder/DateEncodingStrategy-swift.enum":{"kind":"symbol","role":"symbol","abstract":[{"text":"The strategy to use for encoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" values.","type":"text"}],"url":"\/documentation\/hummingbird\/urlencodedformencoder\/dateencodingstrategy-swift.enum","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum","navigatorTitle":[{"text":"DateEncodingStrategy","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateEncodingStrategy","kind":"identifier"}],"title":"URLEncodedFormEncoder.DateEncodingStrategy"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"URLEncodedFormEncoder"}],"title":"URLEncodedFormEncoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","url":"\/documentation\/hummingbird\/urlencodedformencoder","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}]}}}