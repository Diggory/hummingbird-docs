{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"],"title":"Request context","generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}],"kind":"declarations"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"],"title":"Inherited By","type":"inheritedBy","kind":"relationships"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"title":"Conforming Types","type":"conformingTypes","kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext"},"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/Decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/Encoder"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/allocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/coreContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/maxUploadSize-23mxy","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/requestDecoder-9nsum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-65htn"],"title":"Instance Properties"}],"metadata":{"roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"identifier"}],"externalID":"s:11Hummingbird18BaseRequestContextP","role":"symbol","title":"BaseRequestContext","navigatorTitle":[{"text":"BaseRequestContext","kind":"identifier"}],"symbolKind":"protocol","modules":[{"name":"Hummingbird"}]},"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/baserequestcontext"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"kind":"symbol","url":"\/documentation\/hummingbird\/baserequestcontext","title":"BaseRequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BaseRequestContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"url":"\/documentation\/hummingbirdauth\/authrequestcontext","navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthRequestContext","kind":"identifier"}],"title":"AuthRequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/Encoder":{"url":"\/documentation\/hummingbird\/baserequestcontext\/encoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/Encoder","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encoder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15ResponseEncoderP","text":"ResponseEncoder"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder"}],"required":true,"abstract":[],"role":"symbol","title":"Encoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"role":"symbol","abstract":[{"type":"text","text":"The default Lambda request context."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","title":"BasicLambdaRequestContext","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicLambdaRequestContext"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","kind":"symbol","abstract":[{"type":"text","text":"A Request Context that is initialized with the Event that triggered the Lambda"}],"navigatorTitle":[{"text":"LambdaRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","title":"LambdaRequestContext","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/Decoder":{"required":true,"title":"Decoder","kind":"symbol","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Decoder","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestDecoderP","text":"RequestDecoder","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbird\/baserequestcontext\/decoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/Decoder","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/endpointPath":{"title":"endpointPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/endpointPath","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Endpoint path","type":"text"}],"url":"\/documentation\/hummingbird\/baserequestcontext\/endpointpath","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpointPath","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketRequestContext":{"abstract":[{"text":"Request context protocol requirement for routers that support WebSockets","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext","kind":"symbol","url":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","title":"WebSocketRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"WebSocketRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"WebSocketRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","role":"collectionGroup","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"type":"topic","title":"Request Contexts","url":"\/documentation\/hummingbird\/requestcontexts","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContext":{"abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContext","kind":"symbol","url":"\/documentation\/hummingbird\/corerequestcontext","title":"CoreRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CoreRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"CoreRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"abstract":[{"type":"text","text":"Default implementation of a request context that supports WebSockets"}],"kind":"symbol","role":"symbol","title":"BasicWebSocketRequestContext","url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","navigatorTitle":[{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/parameters":{"title":"parameters","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/parameters","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Parameters extracted from URI","type":"text"}],"url":"\/documentation\/hummingbird\/baserequestcontext\/parameters","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10Parametersa"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","kind":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext","title":"BasicRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BasicRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/id":{"url":"\/documentation\/hummingbird\/baserequestcontext\/id","title":"id","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/id","role":"symbol","type":"topic","abstract":[{"text":"Request ID, extracted from Logger","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/requestDecoder-9nsum":{"required":true,"kind":"symbol","url":"\/documentation\/hummingbird\/baserequestcontext\/requestdecoder-9nsum","title":"requestDecoder","abstract":[{"type":"text","text":"Request decoder"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7DecoderQa","text":"Decoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/requestDecoder-9nsum","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/maxUploadSize-23mxy":{"url":"\/documentation\/hummingbird\/baserequestcontext\/maxuploadsize-23mxy","type":"topic","defaultImplementations":1,"required":true,"abstract":[{"text":"Maximum upload size allowed for routes that don’t stream the request payload. This","type":"text"},{"text":" ","type":"text"},{"text":"limits how much memory would be used for one request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/maxUploadSize-23mxy","title":"maxUploadSize","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"kind":"symbol","role":"symbol","title":"RemoteAddressRequestContext","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemoteAddressRequestContext","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"kind":"symbol","title":"RequestContext","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"topic","abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterRequestContext"}],"title":"RouterRequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts used with RouterBuilder should conform to."}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","navigatorTitle":[{"kind":"identifier","text":"RouterRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","kind":"symbol","url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","title":"BasicAuthRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BasicAuthRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"BasicAuthRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/responseEncoder-65htn":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-65htn","role":"symbol","abstract":[{"text":"Response encoder","type":"text"}],"type":"topic","title":"responseEncoder","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7EncoderQa"}],"defaultImplementations":1,"url":"\/documentation\/hummingbird\/baserequestcontext\/responseencoder-65htn","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/allocator":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allocator","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/baserequestcontext\/allocator","abstract":[],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/allocator","type":"topic","title":"allocator"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/coreContext":{"kind":"symbol","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"coreContext","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18CoreRequestContextV","text":"CoreRequestContext","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/baserequestcontext\/corecontext","abstract":[{"type":"text","text":"Core context"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/coreContext","type":"topic","title":"coreContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/logger":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/logger","url":"\/documentation\/hummingbird\/baserequestcontext\/logger","kind":"symbol","abstract":[{"text":"Logger to use with Request","type":"text"}],"title":"logger","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"abstract":[{"text":"Basic implementation of a context that can be used with `RouterBuilder``","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","kind":"symbol","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","title":"BasicRouterRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BasicRouterRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}]}}}