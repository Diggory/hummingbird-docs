{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isDisjoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["Linux"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"SetAlgebra.isDisjoint(with:)","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/isDisjoint(with:)"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isDisjoint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol","extendedModule":"Swift","title":"isDisjoint(with:)","externalID":"s:s10SetAlgebraPsE10isDisjoint4withSbx_tF::SYNTHESIZED::s:11Hummingbird15HBRouterOptionsV","roleHeading":"Instance Method","modules":[{"relatedModules":["Swift"],"name":"Hummingbird"}],"symbolKind":"method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/SetAlgebra-Implementations"]]},"variants":[{"paths":["\/documentation\/hummingbird\/hbrouteroptions\/isdisjoint(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions","title":"HBRouterOptions","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterOptions","kind":"identifier"}],"abstract":[{"type":"text","text":"Router Options"}],"navigatorTitle":[{"text":"HBRouterOptions","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/hbrouteroptions"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/isDisjoint(with:)":{"title":"isDisjoint(with:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/isDisjoint(with:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isDisjoint"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbrouteroptions\/isdisjoint(with:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/SetAlgebra-Implementations":{"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/SetAlgebra-Implementations","kind":"article","title":"SetAlgebra Implementations","type":"topic","url":"\/documentation\/hummingbird\/hbrouteroptions\/setalgebra-implementations","role":"collectionGroup"}}}