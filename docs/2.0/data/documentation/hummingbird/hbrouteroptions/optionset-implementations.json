{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/init()"],"title":"Initializers","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/contains(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/formIntersection(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/formSymmetricDifference(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/formUnion(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/insert(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/intersection(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/remove(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/symmetricDifference(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/union(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/update(with:)"],"title":"Instance Methods","generated":true}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/OptionSet-Implementations","interfaceLanguage":"swift"},"sections":[],"kind":"article","metadata":{"role":"collectionGroup","title":"OptionSet Implementations","modules":[{"name":"Hummingbird"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/intersection(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"intersection"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/hummingbird\/hbrouteroptions\/intersection(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/intersection(_:)","abstract":[],"role":"symbol","type":"topic","title":"intersection(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/insert(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"insert"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> (inserted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", memberAfterInsert"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbird\/hbrouteroptions\/insert(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/insert(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.Element"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[],"role":"symbol","type":"topic","title":"insert(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/formUnion(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"FixedWidthInteger"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":"formUnion(_:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"formUnion"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/formUnion(_:)","url":"\/documentation\/hummingbird\/hbrouteroptions\/formunion(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/formSymmetricDifference(_:)":{"url":"\/documentation\/hummingbird\/hbrouteroptions\/formsymmetricdifference(_:)","kind":"symbol","title":"formSymmetricDifference(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/formSymmetricDifference(_:)","abstract":[],"conformance":{"constraints":[{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formSymmetricDifference","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/formIntersection(_:)":{"url":"\/documentation\/hummingbird\/hbrouteroptions\/formintersection(_:)","kind":"symbol","title":"formIntersection(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/formIntersection(_:)","abstract":[],"conformance":{"constraints":[{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"formIntersection","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/contains(_:)":{"url":"\/documentation\/hummingbird\/hbrouteroptions\/contains(_:)","title":"contains(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/contains(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"contains"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions","title":"HBRouterOptions","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterOptions","kind":"identifier"}],"abstract":[{"type":"text","text":"Router Options"}],"navigatorTitle":[{"text":"HBRouterOptions","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/hbrouteroptions"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/union(_:)":{"type":"topic","title":"union(_:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"union"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/union(_:)","url":"\/documentation\/hummingbird\/hbrouteroptions\/union(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/symmetricDifference(_:)":{"type":"topic","title":"symmetricDifference(_:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"symmetricDifference"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/symmetricDifference(_:)","url":"\/documentation\/hummingbird\/hbrouteroptions\/symmetricdifference(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/update(with:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Self.Element"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","title":"update(with:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/update(with:)","url":"\/documentation\/hummingbird\/hbrouteroptions\/update(with:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/init()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/init()","url":"\/documentation\/hummingbird\/hbrouteroptions\/init()","abstract":[],"title":"init()","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterOptions/remove(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterOptions\/remove(_:)","url":"\/documentation\/hummingbird\/hbrouteroptions\/remove(_:)","abstract":[],"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}]},"title":"remove(_:)","kind":"symbol"}}}