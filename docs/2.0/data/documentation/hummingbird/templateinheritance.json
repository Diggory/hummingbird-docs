{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"abstract":[{"type":"text","text":"Template inheritance and parents is an optional part of the Mustache specification."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","interfaceLanguage":"swift"},"metadata":{"title":"Template Inheritance and parents","images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Article","role":"article","modules":[{"name":"Mustache"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"title":"Features","generated":true,"anchor":"Features"}],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"inlineContent":[{"text":"Template inheritance allows you to override elements of an included partial. It allows you to create a base page template, or parent as it is called in the mustache manual, and override elements of it with your page content. A parent that includes overriding elements is indicated with a ","type":"text"},{"code":"{{<parent}}","type":"codeVoice"},{"type":"text","text":". Note this is different from the normal partial reference which uses "},{"type":"codeVoice","code":">"},{"text":". This is a section tag so needs a ending tag as well. Inside the section the tagged sections to override are added using the syntax ","type":"text"},{"code":"{{$tag}}contents{{\/tag}}","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If your template is as follows","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["{{! mypage.mustache }}","{{<base}}","{{$head}}<title>My page title<\/title>{{\/head}}","{{$body}}Hello world{{\/body}}","{{\/base}}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"And you partial is as follows"}],"type":"paragraph"},{"code":["{{! base.mustache }}","<html>","<head>","{{$head}}{{\/head}}","<\/head>","<body>","{{$body}}Default text{{\/body}}","<\/body>","<\/html>"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"You would get the following output when rendering ","type":"text"},{"code":"mypage.mustache","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["<html>","<head>","<title>My page title<\/title>","<\/head>","<body>","Hello world","<\/body>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note the "},{"type":"codeVoice","code":"{{$head}}"},{"text":" section in ","type":"text"},{"code":"base.mustache","type":"codeVoice"},{"type":"text","text":" is replaced with the "},{"type":"codeVoice","code":"{{$head}}"},{"text":" section included inside the ","type":"text"},{"code":"{{<base}}","type":"codeVoice"},{"text":" partial reference from ","type":"text"},{"code":"mypage.mustache","type":"codeVoice"},{"type":"text","text":". The same occurs with the "},{"code":"{{$body}}","type":"codeVoice"},{"type":"text","text":" section. In that case though a default value is supplied for the situation where a "},{"type":"codeVoice","code":"{{$body}}"},{"type":"text","text":" section is not supplied."}]}],"kind":"content"}],"references":{"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"url":"\/documentation\/hummingbird\/pragmas","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"type":"topic","title":"Pragmas\/Configuration variables","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","images":[{"type":"icon","identifier":"logo.png"}],"role":"article","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","kind":"symbol","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Mustache template engine."}],"url":"\/documentation\/mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"title":"Lambdas","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"url":"\/documentation\/hummingbird\/lambdas","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"url":"\/documentation\/hummingbird\/transforms","abstract":[{"type":"text","text":"Transforming objects during render"}],"type":"topic","title":"Transforms","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","images":[{"type":"icon","identifier":"logo.png"}],"role":"article","kind":"article"}}}