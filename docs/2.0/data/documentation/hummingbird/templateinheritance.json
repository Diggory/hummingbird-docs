{"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"Template inheritance allows you to override elements of an included partial. It allows you to create a base page template, or parent as it is called in the mustache manual, and override elements of it with your page content. A parent that includes overriding elements is indicated with a "},{"type":"codeVoice","code":"{{<parent}}"},{"type":"text","text":". Note this is different from the normal partial reference which uses "},{"code":">","type":"codeVoice"},{"type":"text","text":". This is a section tag so needs a ending tag as well. Inside the section the tagged sections to override are added using the syntax "},{"code":"{{$tag}}contents{{\/tag}}","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If your template is as follows"}],"type":"paragraph"},{"code":["{{! mypage.mustache }}","{{<base}}","{{$head}}<title>My page title<\/title>{{\/head}}","{{$body}}Hello world{{\/body}}","{{\/base}}"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"And you partial is as follows"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["{{! base.mustache }}","<html>","<head>","{{$head}}{{\/head}}","<\/head>","<body>","{{$body}}Default text{{\/body}}","<\/body>","<\/html>"]},{"inlineContent":[{"text":"You would get the following output when rendering ","type":"text"},{"type":"codeVoice","code":"mypage.mustache"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["<html>","<head>","<title>My page title<\/title>","<\/head>","<body>","Hello world","<\/body>"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note the "},{"code":"{{$head}}","type":"codeVoice"},{"text":" section in ","type":"text"},{"type":"codeVoice","code":"base.mustache"},{"type":"text","text":" is replaced with the "},{"code":"{{$head}}","type":"codeVoice"},{"text":" section included inside the ","type":"text"},{"code":"{{<base}}","type":"codeVoice"},{"type":"text","text":" partial reference from "},{"type":"codeVoice","code":"mypage.mustache"},{"type":"text","text":". The same occurs with the "},{"type":"codeVoice","code":"{{$body}}"},{"text":" section. In that case though a default value is supplied for the situation where a ","type":"text"},{"type":"codeVoice","code":"{{$body}}"},{"text":" section is not supplied.","type":"text"}]}],"kind":"content"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"sections":[],"metadata":{"role":"article","images":[{"identifier":"logo.png","type":"icon"}],"title":"Template Inheritance and parents","modules":[{"name":"Mustache"}],"roleHeading":"Article"},"abstract":[{"text":"Template inheritance and parents is an optional part of the Mustache specification.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance"},"seeAlsoSections":[{"generated":true,"title":"Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"anchor":"Features"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"role":"collection","title":"Hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","images":[{"identifier":"logo.png","type":"icon"}],"title":"Mustache","role":"collection","abstract":[{"text":"Mustache template engine.","type":"text"}],"type":"topic","url":"\/documentation\/mustache","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/lambdas","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"role":"article","title":"Lambdas","type":"topic"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"title":"Pragmas\/Configuration variables","role":"article","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","kind":"article","url":"\/documentation\/hummingbird\/pragmas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"role":"article","kind":"article","title":"Transforms","url":"\/documentation\/hummingbird\/transforms","type":"topic","abstract":[{"text":"Transforming objects during render","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","images":[{"type":"icon","identifier":"logo.png"}]}}}