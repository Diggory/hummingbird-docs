{"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"title":"Additional Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature. Template inheritance allows you to override elements of an included partial. It allows you to create a base page template and override elements of it with your page content. A partial that includes overriding elements is indicated with a ","type":"text"},{"type":"codeVoice","code":"{{<partial}}"},{"text":". Note this is different from the normal partial reference which uses ","type":"text"},{"type":"codeVoice","code":">"},{"text":". This is a section tag so needs a ending tag as well. Inside the section the tagged sections to override are added using the syntax ","type":"text"},{"type":"codeVoice","code":"{{$tag}}contents{{\/tag}}"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If your template is as follows"}],"type":"paragraph"},{"syntax":null,"code":["{{! mypage.mustache }}","{{<base}}","{{$head}}<title>My page title<\/title>{{\/head}}","{{$body}}Hello world{{\/body}}","{{\/base}}"],"type":"codeListing"},{"inlineContent":[{"text":"And you partial is as follows","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["{{! base.mustache }}","<html>","<head>","{{$head}}{{\/head}}","<\/head>","<body>","{{$body}}Default text{{\/body}}","<\/body>","<\/html>"],"type":"codeListing"},{"inlineContent":[{"text":"You would get the following output when rendering ","type":"text"},{"code":"mypage.mustache","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["<html>","<head>","<title>My page title<\/title>","<\/head>","<body>","Hello world","<\/body>"],"type":"codeListing"},{"inlineContent":[{"text":"Note the ","type":"text"},{"type":"codeVoice","code":"{{$head}}"},{"text":" section in ","type":"text"},{"type":"codeVoice","code":"base.mustache"},{"text":" is replaced with the ","type":"text"},{"type":"codeVoice","code":"{{$head}}"},{"text":" section included inside the ","type":"text"},{"type":"codeVoice","code":"{{<base}}"},{"text":" partial reference from ","type":"text"},{"type":"codeVoice","code":"mypage.mustache"},{"text":". The same occurs with the ","type":"text"},{"type":"codeVoice","code":"{{$body}}"},{"text":" section. In that case though a default value is supplied for the situation where a ","type":"text"},{"type":"codeVoice","code":"{{$body}}"},{"text":" section is not supplied.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"kind":"article","metadata":{"role":"article","title":"Template Inheritance","roleHeading":"Article","modules":[{"name":"HummingbirdMustache"}]},"abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"title":"Pragmas\/Configuration variables","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","kind":"article","role":"article","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"url":"\/documentation\/hummingbird\/pragmas","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"title":"Lambdas","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","kind":"article","role":"article","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"url":"\/documentation\/hummingbird\/lambdas","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"abstract":[{"text":"Mustache template engine.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","kind":"symbol","role":"collection","title":"HummingbirdMustache","url":"\/documentation\/hummingbirdmustache","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"type":"topic","kind":"article","abstract":[{"type":"text","text":"Transforming objects during render"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","title":"Transforms","url":"\/documentation\/hummingbird\/transforms"}}}