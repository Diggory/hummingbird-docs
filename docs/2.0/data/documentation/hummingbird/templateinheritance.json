{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"abstract":[{"text":"Template inheritance and parents is an optional part of the Mustache specification.","type":"text"}],"metadata":{"roleHeading":"Article","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"modules":[{"name":"Mustache"}],"title":"Template Inheritance and parents"},"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"generated":true,"title":"Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"anchor":"Features"}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Template inheritance allows you to override elements of an included partial. It allows you to create a base page template, or parent as it is called in the mustache manual, and override elements of it with your page content. A parent that includes overriding elements is indicated with a "},{"code":"{{<parent}}","type":"codeVoice"},{"type":"text","text":". Note this is different from the normal partial reference which uses "},{"code":">","type":"codeVoice"},{"type":"text","text":". This is a section tag so needs a ending tag as well. Inside the section the tagged sections to override are added using the syntax "},{"code":"{{$tag}}contents{{\/tag}}","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"If your template is as follows"}],"type":"paragraph"},{"code":["{{! mypage.mustache }}","{{<base}}","{{$head}}<title>My page title<\/title>{{\/head}}","{{$body}}Hello world{{\/body}}","{{\/base}}"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"And you partial is as follows","type":"text"}],"type":"paragraph"},{"code":["{{! base.mustache }}","<html>","<head>","{{$head}}{{\/head}}","<\/head>","<body>","{{$body}}Default text{{\/body}}","<\/body>","<\/html>"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"You would get the following output when rendering "},{"type":"codeVoice","code":"mypage.mustache"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":null,"code":["<html>","<head>","<title>My page title<\/title>","<\/head>","<body>","Hello world","<\/body>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note the "},{"type":"codeVoice","code":"{{$head}}"},{"text":" section in ","type":"text"},{"type":"codeVoice","code":"base.mustache"},{"type":"text","text":" is replaced with the "},{"type":"codeVoice","code":"{{$head}}"},{"text":" section included inside the ","type":"text"},{"type":"codeVoice","code":"{{<base}}"},{"type":"text","text":" partial reference from "},{"code":"mypage.mustache","type":"codeVoice"},{"type":"text","text":". The same occurs with the "},{"type":"codeVoice","code":"{{$body}}"},{"type":"text","text":" section. In that case though a default value is supplied for the situation where a "},{"code":"{{$body}}","type":"codeVoice"},{"type":"text","text":" section is not supplied."}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Transforming objects during render"}],"type":"topic","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","title":"Transforms","url":"\/documentation\/hummingbird\/transforms","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","type":"topic","url":"\/documentation\/hummingbird\/lambdas","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"kind":"article","role":"article","title":"Lambdas"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}],"url":"\/documentation\/mustache","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","type":"topic","url":"\/documentation\/hummingbird\/pragmas","abstract":[{"type":"text","text":"Setting template render configuration settings."}],"kind":"article","role":"article","title":"Pragmas\/Configuration variables"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png","alt":null}}}