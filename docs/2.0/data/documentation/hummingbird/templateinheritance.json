{"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"title":"Additional Features","generated":true}],"abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature. Template inheritance allows you to override elements of an included partial. It allows you to create a base page template and override elements of it with your page content. A partial that includes overriding elements is indicated with a "},{"code":"{{<partial}}","type":"codeVoice"},{"type":"text","text":". Note this is different from the normal partial reference which uses "},{"code":">","type":"codeVoice"},{"type":"text","text":". This is a section tag so needs a ending tag as well. Inside the section the tagged sections to override are added using the syntax "},{"code":"{{$tag}}contents{{\/tag}}","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If your template is as follows","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["{{! mypage.mustache }}","{{<base}}","{{$head}}<title>My page title<\/title>{{\/head}}","{{$body}}Hello world{{\/body}}","{{\/base}}"],"type":"codeListing"},{"inlineContent":[{"text":"And you partial is as follows","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["{{! base.mustache }}","<html>","<head>","{{$head}}{{\/head}}","<\/head>","<body>","{{$body}}Default text{{\/body}}","<\/body>","<\/html>"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"You would get the following output when rendering "},{"type":"codeVoice","code":"mypage.mustache"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":null,"code":["<html>","<head>","<title>My page title<\/title>","<\/head>","<body>","Hello world","<\/body>"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Note the "},{"type":"codeVoice","code":"{{$head}}"},{"type":"text","text":" section in "},{"type":"codeVoice","code":"base.mustache"},{"type":"text","text":" is replaced with the "},{"type":"codeVoice","code":"{{$head}}"},{"type":"text","text":" section included inside the "},{"type":"codeVoice","code":"{{<base}}"},{"type":"text","text":" partial reference from "},{"type":"codeVoice","code":"mypage.mustache"},{"type":"text","text":". The same occurs with the "},{"type":"codeVoice","code":"{{$body}}"},{"type":"text","text":" section. In that case though a default value is supplied for the situation where a "},{"type":"codeVoice","code":"{{$body}}"},{"type":"text","text":" section is not supplied."}],"type":"paragraph"}]}],"metadata":{"role":"article","modules":[{"name":"HummingbirdMustache"}],"roleHeading":"Article","title":"Template Inheritance"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","role":"article","type":"topic","title":"Pragmas\/Configuration variables","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"url":"\/documentation\/hummingbird\/pragmas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","role":"article","type":"topic","title":"Lambdas","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"url":"\/documentation\/hummingbird\/lambdas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"role":"article","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","url":"\/documentation\/hummingbird\/transforms","title":"Transforms","abstract":[{"type":"text","text":"Transforming objects during render"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"kind":"symbol","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdmustache","title":"HummingbirdMustache","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"}}}