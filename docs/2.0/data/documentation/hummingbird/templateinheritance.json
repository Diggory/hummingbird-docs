{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Template inheritance allows you to override elements of an included partial. It allows you to create a base page template, or parent as it is called in the mustache manual, and override elements of it with your page content. A parent that includes overriding elements is indicated with a "},{"type":"codeVoice","code":"{{<parent}}"},{"text":". Note this is different from the normal partial reference which uses ","type":"text"},{"code":">","type":"codeVoice"},{"text":". This is a section tag so needs a ending tag as well. Inside the section the tagged sections to override are added using the syntax ","type":"text"},{"type":"codeVoice","code":"{{$tag}}contents{{\/tag}}"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your template is as follows"}]},{"syntax":null,"type":"codeListing","code":["{{! mypage.mustache }}","{{<base}}","{{$head}}<title>My page title<\/title>{{\/head}}","{{$body}}Hello world{{\/body}}","{{\/base}}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And you partial is as follows"}]},{"type":"codeListing","code":["{{! base.mustache }}","<html>","<head>","{{$head}}{{\/head}}","<\/head>","<body>","{{$body}}Default text{{\/body}}","<\/body>","<\/html>"],"syntax":null},{"inlineContent":[{"type":"text","text":"You would get the following output when rendering "},{"code":"mypage.mustache","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["<html>","<head>","<title>My page title<\/title>","<\/head>","<body>","Hello world","<\/body>"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note the "},{"type":"codeVoice","code":"{{$head}}"},{"type":"text","text":" section in "},{"type":"codeVoice","code":"base.mustache"},{"text":" is replaced with the ","type":"text"},{"code":"{{$head}}","type":"codeVoice"},{"text":" section included inside the ","type":"text"},{"type":"codeVoice","code":"{{<base}}"},{"type":"text","text":" partial reference from "},{"type":"codeVoice","code":"mypage.mustache"},{"text":". The same occurs with the ","type":"text"},{"code":"{{$body}}","type":"codeVoice"},{"type":"text","text":" section. In that case though a default value is supplied for the situation where a "},{"type":"codeVoice","code":"{{$body}}"},{"text":" section is not supplied.","type":"text"}]}],"kind":"content"}],"seeAlsoSections":[{"generated":true,"title":"Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"anchor":"Features"}],"sections":[],"abstract":[{"type":"text","text":"Template inheritance and parents is an optional part of the Mustache specification."}],"metadata":{"title":"Template Inheritance and parents","images":[{"identifier":"logo.png","type":"icon"}],"modules":[{"name":"Mustache"}],"role":"article","roleHeading":"Article"},"kind":"article","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"role":"article","abstract":[{"type":"text","text":"Setting template render configuration settings."}],"images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/pragmas","title":"Pragmas\/Configuration variables","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","type":"topic","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","role":"collection","url":"\/documentation\/mustache","type":"topic","title":"Mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"url":"\/documentation\/hummingbird\/lambdas","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","title":"Lambdas","type":"topic","role":"article","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"url":"\/documentation\/hummingbird\/transforms","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","type":"topic","title":"Transforms","abstract":[{"text":"Transforming objects during render","type":"text"}],"kind":"article","role":"article","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]}}}