{"kind":"article","metadata":{"role":"article","modules":[{"name":"Mustache"}],"title":"Template Inheritance","roleHeading":"Article"},"abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature. Template inheritance allows you to override elements of an included partial. It allows you to create a base page template and override elements of it with your page content. A partial that includes overriding elements is indicated with a ","type":"text"},{"code":"{{<partial}}","type":"codeVoice"},{"text":". Note this is different from the normal partial reference which uses ","type":"text"},{"code":">","type":"codeVoice"},{"text":". This is a section tag so needs a ending tag as well. Inside the section the tagged sections to override are added using the syntax ","type":"text"},{"code":"{{$tag}}contents{{\/tag}}","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If your template is as follows"}]},{"type":"codeListing","code":["{{! mypage.mustache }}","{{<base}}","{{$head}}<title>My page title<\/title>{{\/head}}","{{$body}}Hello world{{\/body}}","{{\/base}}"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"And you partial is as follows","type":"text"}]},{"type":"codeListing","code":["{{! base.mustache }}","<html>","<head>","{{$head}}{{\/head}}","<\/head>","<body>","{{$body}}Default text{{\/body}}","<\/body>","<\/html>"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"You would get the following output when rendering "},{"type":"codeVoice","code":"mypage.mustache"},{"type":"text","text":"."}]},{"type":"codeListing","code":["<html>","<head>","<title>My page title<\/title>","<\/head>","<body>","Hello world","<\/body>"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note the "},{"code":"{{$head}}","type":"codeVoice"},{"type":"text","text":" section in "},{"code":"base.mustache","type":"codeVoice"},{"type":"text","text":" is replaced with the "},{"code":"{{$head}}","type":"codeVoice"},{"type":"text","text":" section included inside the "},{"code":"{{<base}}","type":"codeVoice"},{"type":"text","text":" partial reference from "},{"code":"mypage.mustache","type":"codeVoice"},{"type":"text","text":". The same occurs with the "},{"code":"{{$body}}","type":"codeVoice"},{"type":"text","text":" section. In that case though a default value is supplied for the situation where a "},{"code":"{{$body}}","type":"codeVoice"},{"type":"text","text":" section is not supplied."}]}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true,"title":"Additional Features"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","title":"Lambdas","type":"topic","url":"\/documentation\/hummingbird\/lambdas","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"url":"\/documentation\/hummingbird\/pragmas","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","role":"article","title":"Pragmas\/Configuration variables"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"abstract":[{"type":"text","text":"Mustache template engine."}],"url":"\/documentation\/mustache","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","role":"collection","title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"abstract":[{"type":"text","text":"Transforming objects during render"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","kind":"article","title":"Transforms","role":"article","type":"topic","url":"\/documentation\/hummingbird\/transforms"}}}