{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterResponder"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","kind":"typeIdentifier","text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"Conforms to "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" so need to provide its own implementation of"},{"type":"text","text":" "},{"type":"codeVoice","code":"func respond(to request: HBRequest, context: Context) async throws -> HBResponse"},{"type":"text","text":"."}],"type":"paragraph"}]}],"abstract":[{"text":"Directs requests to handlers based on the request uri and method.","type":"text"}],"kind":"symbol","metadata":{"symbolKind":"struct","title":"HBRouterResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterResponder","kind":"identifier"}],"modules":[{"name":"Hummingbird"}],"role":"symbol","externalID":"s:11Hummingbird17HBRouterResponderV","navigatorTitle":[{"text":"HBRouterResponder","kind":"identifier"}],"roleHeading":"Structure"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder\/respond(to:context:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbrouterresponder"]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder/respond(to:context:)":{"title":"respond(to:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder\/respond(to:context:)","abstract":[{"type":"text","text":"Respond to request by calling correct handler"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird17HBRouterResponderV7Contextxmfp","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","text":"HBResponse","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/hbrouterresponder\/respond(to:context:)","type":"topic","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder":{"type":"topic","abstract":[{"type":"text","text":"Directs requests to handlers based on the request uri and method."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","url":"\/documentation\/hummingbird\/hbrouterresponder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterResponder"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterResponder"}],"kind":"symbol","title":"HBRouterResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"kind":"symbol","title":"HBResponder","type":"topic","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"url":"\/documentation\/hummingbird\/hbresponder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","role":"collection","type":"topic","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"type":"topic","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a request. Provides context for request processing"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","url":"\/documentation\/hummingbird\/hbbaserequestcontext","role":"symbol","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"kind":"symbol","title":"HBBaseRequestContext"}}}