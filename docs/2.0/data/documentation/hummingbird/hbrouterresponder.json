{"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"HBRouterResponder"}],"role":"symbol","title":"HBRouterResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterResponder"}],"roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird17HBRouterResponderV"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbrouterresponder"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder\/respond(to:context:)"],"title":"Instance Methods"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterResponder"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","text":"HBBaseRequestContext"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conforms to "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" so need to provide its own implementation of"},{"type":"text","text":" "},{"type":"codeVoice","code":"func respond(to request: HBRequest, context: Context) async throws -> HBResponse"},{"type":"text","text":"."}]}]}],"abstract":[{"text":"Directs requests to handlers based on the request uri and method.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"title":"HBBaseRequestContext","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/hbbaserequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","role":"collection","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder/respond(to:context:)":{"abstract":[{"text":"Respond to request by calling correct handler","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird17HBRouterResponderV7Contextxmfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/hbrouterresponder\/respond(to:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder\/respond(to:context:)","title":"respond(to:context:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"url":"\/documentation\/hummingbird\/hbresponder","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","type":"topic","title":"HBResponder"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder":{"url":"\/documentation\/hummingbird\/hbrouterresponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterResponder"}],"title":"HBRouterResponder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRouterResponder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","abstract":[{"type":"text","text":"Directs requests to handlers based on the request uri and method."}],"kind":"symbol"}}}