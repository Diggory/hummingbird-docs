{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterResponder","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"HBBaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"}],"languages":["swift"]}]},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Conforms to "},{"code":"HBResponder","type":"codeVoice"},{"type":"text","text":" so need to provide its own implementation of"},{"type":"text","text":" "},{"code":"func respond(to request: HBRequest, context: Context) async throws -> HBResponse","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbrouterresponder"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"abstract":[{"text":"Directs requests to handlers based on the request uri and method.","type":"text"}],"metadata":{"title":"HBRouterResponder","symbolKind":"struct","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterResponder"}],"roleHeading":"Structure","externalID":"s:11Hummingbird17HBRouterResponderV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterResponder"}],"role":"symbol"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder\/respond(to:context:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder":{"abstract":[{"text":"Directs requests to handlers based on the request uri and method.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","title":"HBRouterResponder","role":"symbol","url":"\/documentation\/hummingbird\/hbrouterresponder","type":"topic","navigatorTitle":[{"text":"HBRouterResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"kind":"symbol","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"title":"HBBaseRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder/respond(to:context:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder\/respond(to:context:)","title":"respond(to:context:)","url":"\/documentation\/hummingbird\/hbrouterresponder\/respond(to:context:)","role":"symbol","abstract":[{"text":"Respond to request by calling correct handler","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird17HBRouterResponderV7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","text":"HBResponse","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"kind":"symbol","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbresponder","title":"HBResponder","type":"topic","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder"}}}