{"abstract":[{"type":"text","text":"Write contents of request body to file"}],"sections":[],"metadata":{"symbolKind":"method","title":"writeFile(contents:path:context:)","role":"symbol","externalID":"s:11Hummingbird8HBFileIOV9writeFile8contents4path7contexty0A4Core13HBRequestBodyO_SSxtYaKAA20HBBaseRequestContextRzlF","roleHeading":"Instance Method","modules":[{"name":"Hummingbird"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"contents","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequestBody","preciseIdentifier":"s:15HummingbirdCore13HBRequestBodyO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"contents"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore13HBRequestBodyO","text":"HBRequestBody"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","text":"HBBaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"Request body to write.","type":"text"}],"type":"paragraph"}],"name":"contents"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Path to write to"}]}],"name":"path"},{"content":[{"inlineContent":[{"type":"text","text":"Logger"}],"type":"paragraph"}],"name":"logger"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be used to save arbitrary ByteBuffers by passing in "},{"code":".byteBuffer(ByteBuffer)","type":"codeVoice"},{"type":"text","text":" as contents"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbfileio\/writefile(contents:path:context:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO\/writeFile(contents:path:context:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"role":"symbol","title":"HBRequestBody","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRequestBody"}],"abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBody"}],"url":"\/documentation\/hummingbirdcore\/hbrequestbody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileIO":{"role":"symbol","navigatorTitle":[{"text":"HBFileIO","kind":"identifier"}],"title":"HBFileIO","url":"\/documentation\/hummingbird\/hbfileio","abstract":[{"text":"Manages File reading and writing.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFileIO","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileIO/writeFile(contents:path:context:)":{"title":"writeFile(contents:path:context:)","url":"\/documentation\/hummingbird\/hbfileio\/writefile(contents:path:context:)","abstract":[{"type":"text","text":"Write contents of request body to file"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"contents","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequestBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore13HBRequestBodyO"},{"text":", ","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO\/writeFile(contents:path:context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"title":"HBBaseRequestContext","type":"topic","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}]}}}