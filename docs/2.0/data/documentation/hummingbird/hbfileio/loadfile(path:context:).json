{"variants":[{"paths":["\/documentation\/hummingbird\/hbfileio\/loadfile(path:context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadFile"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","text":"HBBaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","text":"HBResponseBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyV"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"System file path"}]}],"name":"path"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Context this request is being called in","type":"text"}]}],"name":"context"}]},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"Response body","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Depending on the file size this will return either a response body containing a ByteBuffer or a stream that will provide the","type":"text"},{"text":" ","type":"text"},{"text":"file in chunks.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","title":"loadFile(path:context:)","externalID":"s:11Hummingbird8HBFileIOV8loadFile4path7context0A4Core14HBResponseBodyVSS_xtYaKAA20HBBaseRequestContextRzlF","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponseBody","preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyV","kind":"typeIdentifier"}],"modules":[{"name":"Hummingbird"}]},"abstract":[{"type":"text","text":"Load file and return response body"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO\/loadFile(path:context:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileIO":{"url":"\/documentation\/hummingbird\/hbfileio","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBFileIO"}],"title":"HBFileIO","abstract":[{"text":"Manages File reading and writing.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBFileIO","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileIO/loadFile(path:context:)":{"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier","text":"HBBaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyV","kind":"typeIdentifier","text":"HBResponseBody"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbfileio\/loadfile(path:context:)","abstract":[{"text":"Load file and return response body","type":"text"}],"title":"loadFile(path:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO\/loadFile(path:context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"title":"HBBaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","role":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}],"abstract":[{"type":"text","text":"Response body"}],"url":"\/documentation\/hummingbirdcore\/hbresponsebody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}],"type":"topic","title":"HBResponseBody","kind":"symbol"}}}