{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/memorypersistdriver\/assertisolated(_:file:line:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"s:ScA12_ConcurrencyE14assertIsolated_4file4lineySSyXK_s12StaticStringVSutF::SYNTHESIZED::s:11Hummingbird19MemoryPersistDriverC","modules":[{"relatedModules":["_Concurrency"],"name":"Hummingbird"}],"title":"assertIsolated(_:file:line:)","extendedModule":"_Concurrency","symbolKind":"method","platforms":[{"unavailable":false,"introducedAt":"13.0","name":"iOS","deprecated":false,"beta":false},{"unavailable":false,"introducedAt":"10.15","name":"macOS","deprecated":false,"beta":false},{"unavailable":false,"introducedAt":"13.0","name":"tvOS","deprecated":false,"beta":false},{"unavailable":false,"introducedAt":"6.0","name":"watchOS","deprecated":false,"beta":false}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertIsolated"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"roleHeading":"Instance Method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/assertIsolated(_:file:line:)"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"@backDeployed(before: macOS 14.0, iOS 17.0, watchOS 10.0, tvOS 17.0)\n","kind":"text"},{"text":"nonisolated","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertIsolated","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"message","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" = String(), ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#fileID","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":")","kind":"text"}]}],"kind":"declarations"}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Actor.assertIsolated(_:file:line:)","type":"codeVoice"},{"text":".","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/Actor-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/Actor-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/Actor-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/Actor-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/Actor-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/Actor-Implementations"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"kind":"symbol","title":"MemoryPersistDriver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemoryPersistDriver"}],"url":"\/documentation\/hummingbird\/memorypersistdriver","navigatorTitle":[{"text":"MemoryPersistDriver","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"url":"\/documentation\/hummingbirdpostgres","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","abstract":[{"type":"text","text":"Working with Postgres databases."}],"title":"HummingbirdPostgres","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver/assertIsolated(_:file:line:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/assertIsolated(_:file:line:)","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertIsolated"},{"kind":"text","text":"(() -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"title":"assertIsolated(_:file:line:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/memorypersistdriver\/assertisolated(_:file:line:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"url":"\/documentation\/hummingbird\/persistentdata","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"title":"Persistent data","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"title":"HummingbirdRedis","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"url":"\/documentation\/hummingbirdfluent","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"title":"HummingbirdFluent","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver/Actor-Implementations":{"type":"topic","title":"Actor Implementations","url":"\/documentation\/hummingbird\/memorypersistdriver\/actor-implementations","abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/Actor-Implementations"}}}