{"abstract":[{"text":"create key\/value pair. If key already exist throw ","type":"text"},{"code":"PersistError.duplicate","type":"codeVoice"},{"text":" error","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/create(key:value:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)"]}],"sections":[],"kind":"symbol","metadata":{"roleHeading":"Instance Method","externalID":"s:11Hummingbird13PersistDriverPAAE6create3key5valueySS_qd__tYaKSeRd__SERd__s8SendableRd__lF::SYNTHESIZED::s:11Hummingbird19MemoryPersistDriverC","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","preciseIdentifier":"s:s7Codablea","kind":"typeIdentifier"},{"text":" & ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"modules":[{"name":"Hummingbird"}],"extendedModule":"Hummingbird","title":"create(key:value:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","preciseIdentifier":"s:s7Codablea","kind":"typeIdentifier"},{"text":" & ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Key to store value against"}],"type":"paragraph"}],"name":"key"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Codable value to store"}]}],"name":"value"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/PersistDriver-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/PersistDriver-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/PersistDriver-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/PersistDriver-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/PersistDriver-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/PersistDriver-Implementations"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"url":"\/documentation\/hummingbird\/persistentdata","type":"topic","role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Persistent data","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"title":"MemoryPersistDriver","url":"\/documentation\/hummingbird\/memorypersistdriver","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MemoryPersistDriver","kind":"identifier"}],"navigatorTitle":[{"text":"MemoryPersistDriver","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","role":"symbol","type":"topic","abstract":[{"type":"text","text":"In memory driver for persist system for storing persistent cross request key\/value pairs"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"url":"\/documentation\/hummingbirdpostgres","role":"collection","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Working with Postgres databases."}],"title":"HummingbirdPostgres","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver/PersistDriver-Implementations":{"title":"PersistDriver Implementations","role":"collectionGroup","url":"\/documentation\/hummingbird\/memorypersistdriver\/persistdriver-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/PersistDriver-Implementations","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","type":"topic","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdRedis","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"kind":"symbol","role":"collection","title":"HummingbirdFluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdfluent","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}]},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver/create(key:value:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s7Codablea","text":"Codable","kind":"typeIdentifier"},{"text":" & ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/create(key:value:)","type":"topic","url":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)","abstract":[{"type":"text","text":"create key\/value pair. If key already exist throw "},{"type":"codeVoice","code":"PersistError.duplicate"},{"type":"text","text":" error"}],"kind":"symbol","title":"create(key:value:)"}}}