{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"Codable","kind":"typeIdentifier","preciseIdentifier":"s:s7Codablea"},{"kind":"text","text":" & "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"expires","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier","text":"Duration"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]}]},{"kind":"parameters","parameters":[{"name":"key","content":[{"inlineContent":[{"text":"Key to store value against","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Codable value to store","type":"text"}],"type":"paragraph"}],"name":"value"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If non-nil defines time that value will expire"}]}],"name":"expires"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/create(key:value:expires:)","interfaceLanguage":"swift"},"metadata":{"title":"create(key:value:expires:)","modules":[{"name":"Hummingbird"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"typeIdentifier","preciseIdentifier":"s:s7Codablea"},{"text":" & ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"expires"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"symbolKind":"method","externalID":"s:11Hummingbird19MemoryPersistDriverC6create3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF","roleHeading":"Instance Method"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"create key\/value pair. If key already exist throw "},{"code":"PersistError.duplicate","type":"codeVoice"},{"text":" error","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"title":"MemoryPersistDriver","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MemoryPersistDriver","kind":"identifier"}],"abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"navigatorTitle":[{"text":"MemoryPersistDriver","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/memorypersistdriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver/create(key:value:expires:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/create(key:value:expires:)","title":"create(key:value:expires:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"typeIdentifier","preciseIdentifier":"s:s7Codablea"},{"kind":"text","text":" & "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":", ","kind":"text"},{"text":"expires","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s8DurationV","text":"Duration","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"create key\/value pair. If key already exist throw "},{"type":"codeVoice","code":"PersistError.duplicate"},{"text":" error","type":"text"}],"url":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:expires:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"type":"topic","role":"collection","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdpostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","abstract":[{"type":"text","text":"Working with Postgres databases."}],"title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data","role":"collectionGroup","url":"\/documentation\/hummingbird\/persistentdata","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"kind":"article"},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"type":"text","text":"Integration with Vaporâ€™s Fluent ORM framework."}],"url":"\/documentation\/hummingbirdfluent","type":"topic","title":"HummingbirdFluent","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","role":"collection","url":"\/documentation\/hummingbirdredis","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"type":"topic","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","title":"Hummingbird","role":"collection"}}}