{"kind":"symbol","metadata":{"title":"RequestDecoder","externalID":"s:11Hummingbird14RequestDecoderP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestDecoder"}],"navigatorTitle":[{"text":"RequestDecoder","kind":"identifier"}],"symbolKind":"protocol","modules":[{"name":"Hummingbird"}],"roleHeading":"Protocol","role":"symbol"},"seeAlsoSections":[{"anchor":"EncodingDecoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"],"generated":true,"title":"Encoding\/Decoding"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/requestdecoder"]}],"sections":[],"abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder\/decode(_:from:context:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder"],"type":"conformingTypes","title":"Conforming Types","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecoder"}],"languages":["swift"],"platforms":["Linux"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"title":"URLEncodedFormEncoder","url":"\/documentation\/hummingbird\/urlencodedformencoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"kind":"symbol","title":"ResponseGenerator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","url":"\/documentation\/hummingbird\/responsegenerator","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseGenerator","kind":"identifier"}],"abstract":[{"text":"Object that can generate a ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"kind":"symbol","title":"ResponseEncodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","url":"\/documentation\/hummingbird\/responseencodable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseEncodable","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for encodable object that can generate a response. The router will encode"},{"text":" ","type":"text"},{"type":"text","text":"the response using the encoder stored in "},{"type":"codeVoice","code":"Application.encoder"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"ResponseEncodable","kind":"identifier"}],"type":"topic","role":"symbol"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"kind":"symbol","title":"ResponseCodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","url":"\/documentation\/hummingbird\/responsecodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCodable"}],"abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}],"navigatorTitle":[{"text":"ResponseCodable","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder/decode(_:from:context:)":{"title":"decode(_:from:context:)","url":"\/documentation\/hummingbird\/requestdecoder\/decode(_:from:context:)","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder\/decode(_:from:context:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:11Hummingbird14RequestDecoderP6decode_4from7contextqd__qd__m_0A4Core0B0Vqd_0_tYaKSeRd__AA0B7ContextRd_0_r0_lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11Hummingbird14RequestDecoderP6decode_4from7contextqd__qd__m_0A4Core0B0Vqd_0_tYaKSeRd__AA0B7ContextRd_0_r0_lF1TL_qd__mfp"}],"role":"symbol","abstract":[{"type":"text","text":"Decode type from request"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"kind":"symbol","title":"URLEncodedFormDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","url":"\/documentation\/hummingbird\/urlencodedformdecoder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"URLEncodedFormDecoder"}],"abstract":[{"type":"text","text":"The wrapper struct for decoding URL encoded form data to Codable classes"}],"navigatorTitle":[{"text":"URLEncodedFormDecoder","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"title":"Encoding and Decoding","url":"\/documentation\/hummingbird\/encodinganddecoding","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","kind":"article","role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Hummingbird uses ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" to decode requests and encode responses.","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"kind":"symbol","title":"RequestDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","url":"\/documentation\/hummingbird\/requestdecoder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RequestDecoder","kind":"identifier"}],"abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RequestDecoder"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"title":"ResponseEncoder","url":"\/documentation\/hummingbird\/responseencoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseEncoder"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseEncoder"}],"role":"symbol","abstract":[{"text":"protocol for encoders generating a Response","type":"text"}],"type":"topic"}}}