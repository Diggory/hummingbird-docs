{"abstract":[{"text":"Response encoder","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-90wnm"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/baserequestcontext\/responseencoder-90wnm"]}],"sections":[],"metadata":{"modules":[{"name":"Hummingbird"}],"role":"symbol","title":"responseEncoder","extendedModule":"Hummingbird","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7EncoderQa","kind":"typeIdentifier","text":"Encoder"}],"roleHeading":"Instance Property","conformance":{"constraints":[{"code":"Encoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONEncoder","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"symbolKind":"property","externalID":"s:11Hummingbird18BaseRequestContextPAA10Foundation11JSONEncoderC7EncoderRtzrlE08responseG0AFvp"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Encoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/Encoder","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7EncoderQa","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-65htn"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-65htn"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-65htn"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/Encoder":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/Encoder","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Encoder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15ResponseEncoderP","text":"ResponseEncoder"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder"}],"url":"\/documentation\/hummingbird\/baserequestcontext\/encoder","role":"symbol","type":"topic","title":"Encoder","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article","title":"Hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"role":"collection","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection","title":"Hummingbird","kind":"symbol","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/responseEncoder-65htn":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-65htn","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7EncoderQa","text":"Encoder"}],"url":"\/documentation\/hummingbird\/baserequestcontext\/responseencoder-65htn","role":"symbol","type":"topic","defaultImplementations":1,"title":"responseEncoder","abstract":[{"type":"text","text":"Response encoder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","kind":"symbol","title":"BaseRequestContext","type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BaseRequestContext"}],"url":"\/documentation\/hummingbird\/baserequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","kind":"article","title":"Request Contexts","type":"topic","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"role":"collectionGroup","url":"\/documentation\/hummingbird\/requestcontexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/responseEncoder-90wnm":{"abstract":[{"text":"Response encoder","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-90wnm","title":"responseEncoder","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7EncoderQa"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/baserequestcontext\/responseencoder-90wnm","type":"topic","conformance":{"constraints":[{"code":"Encoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONEncoder","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}}}}