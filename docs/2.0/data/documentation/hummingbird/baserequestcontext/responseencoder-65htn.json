{"schemaVersion":{"major":0,"patch":0,"minor":3},"defaultImplementationsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-90wnm"],"title":"BaseRequestContext Implementations"}],"sections":[],"metadata":{"roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Encoder","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7EncoderQa","kind":"typeIdentifier"}],"externalID":"s:11Hummingbird18BaseRequestContextP15responseEncoder0F0Qzvp","role":"symbol","required":true,"title":"responseEncoder"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/baserequestcontext\/responseencoder-65htn"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-65htn"},"abstract":[{"text":"Response encoder","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/Encoder","text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7EncoderQa"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/responseEncoder-65htn":{"abstract":[{"type":"text","text":"Response encoder"}],"title":"responseEncoder","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/baserequestcontext\/responseencoder-65htn","defaultImplementations":1,"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7EncoderQa","text":"Encoder","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-65htn","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/Encoder":{"kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15ResponseEncoderP","text":"ResponseEncoder","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/baserequestcontext\/encoder","abstract":[],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/Encoder","title":"Encoder","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","url":"\/documentation\/hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"navigatorTitle":[{"text":"BaseRequestContext","kind":"identifier"}],"type":"topic","title":"BaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/baserequestcontext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext/responseEncoder-90wnm":{"url":"\/documentation\/hummingbird\/baserequestcontext\/responseencoder-90wnm","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Encoder","type":"codeVoice"},{"type":"text","text":" is "},{"code":"JSONEncoder","type":"codeVoice"},{"text":".","type":"text"}]},"title":"responseEncoder","type":"topic","abstract":[{"type":"text","text":"Response encoder"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Encoder","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP7EncoderQa","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext\/responseEncoder-90wnm"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","title":"Request Contexts","type":"topic","role":"collectionGroup","url":"\/documentation\/hummingbird\/requestcontexts","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","type":"topic","role":"collection","url":"\/documentation\/index","kind":"article"}}}