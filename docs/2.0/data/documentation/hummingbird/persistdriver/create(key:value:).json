{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/create(key:value:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"value"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7Codablea","text":"Codable"},{"text":" & ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Key to store value against"}],"type":"paragraph"}],"name":"key"},{"name":"value","content":[{"inlineContent":[{"type":"text","text":"Codable value to store"}],"type":"paragraph"}]}]}],"variants":[{"paths":["\/documentation\/hummingbird\/persistdriver\/create(key:value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s7Codablea","text":"Codable","kind":"typeIdentifier"},{"kind":"text","text":" & "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"roleHeading":"Instance Method","role":"symbol","title":"create(key:value:)","extendedModule":"Hummingbird","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird13PersistDriverPAAE6create3key5valueySS_qd__tYaKSeRd__SERd__s8SendableRd__lF","symbolKind":"method"},"abstract":[{"type":"text","text":"create key\/value pair. If key already exist throw "},{"code":"PersistError.duplicate","type":"codeVoice"},{"type":"text","text":" error"}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver/create(key:value:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"create"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Codable","preciseIdentifier":"s:s7Codablea"},{"kind":"text","text":" & "},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"kind":"symbol","abstract":[{"type":"text","text":"create key\/value pair. If key already exist throw "},{"code":"PersistError.duplicate","type":"codeVoice"},{"type":"text","text":" error"}],"title":"create(key:value:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/create(key:value:)","role":"symbol","url":"\/documentation\/hummingbird\/persistdriver\/create(key:value:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","kind":"symbol","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","title":"HummingbirdFluent","kind":"symbol","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"url":"\/documentation\/hummingbirdfluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","title":"HummingbirdPostgres","kind":"symbol","type":"topic","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Working with Postgres databases.","type":"text"}],"url":"\/documentation\/hummingbirdpostgres"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","title":"PersistDriver","url":"\/documentation\/hummingbird\/persistdriver","navigatorTitle":[{"kind":"identifier","text":"PersistDriver"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"PersistDriver","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","kind":"symbol","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"url":"\/documentation\/hummingbirdredis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data","url":"\/documentation\/hummingbird\/persistentdata","kind":"article","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","kind":"article","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"url":"\/documentation\/index"},"logo.png":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"}}}