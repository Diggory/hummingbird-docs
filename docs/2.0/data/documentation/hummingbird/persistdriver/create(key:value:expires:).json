{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Object","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Object","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13PersistDriverP6create3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expires"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV","text":"Duration"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Object","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Object"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Object"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Key to store value against"}]}],"name":"key"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Codable value to store","type":"text"}]}],"name":"value"},{"name":"expires","content":[{"type":"paragraph","inlineContent":[{"text":"If non-nil defines time that value will expire","type":"text"}]}]}]}],"abstract":[{"text":"create key\/value pair. If key already exist throw ","type":"text"},{"type":"codeVoice","code":"PersistError.duplicate"},{"type":"text","text":" error"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"]]},"metadata":{"symbolKind":"method","required":true,"title":"create(key:value:expires:)","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"create","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Object","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Object","preciseIdentifier":"s:11Hummingbird13PersistDriverP6create3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expires"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird13PersistDriverP6create3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/create(key:value:expires:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/persistdriver\/create(key:value:expires:)"]}],"references":{"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","images":[{"identifier":"logo.png","type":"icon"}],"title":"Persistent data","role":"collectionGroup","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"type":"topic","url":"\/documentation\/hummingbird\/persistentdata","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"url":"\/documentation\/hummingbird\/persistdriver","title":"PersistDriver","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","abstract":[{"text":"Protocol for driver supporting persistent Key\/Value pairs across requests","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"PersistDriver","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistDriver"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver/create(key:value:expires:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/create(key:value:expires:)","url":"\/documentation\/hummingbird\/persistdriver\/create(key:value:expires:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Object"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Object","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13PersistDriverP6create3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp"},{"kind":"text","text":", "},{"text":"expires","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s8DurationV","kind":"typeIdentifier","text":"Duration"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"title":"create(key:value:expires:)","kind":"symbol","type":"topic","abstract":[{"text":"create key\/value pair. If key already exist throw ","type":"text"},{"code":"PersistError.duplicate","type":"codeVoice"},{"type":"text","text":" error"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdpostgres","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdRedis","role":"collection","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdredis","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdFluent","role":"collection","abstract":[{"text":"Integration with Vaporâ€™s Fluent ORM framework.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdfluent","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"role":"collection","title":"Hummingbird","type":"topic"}}}