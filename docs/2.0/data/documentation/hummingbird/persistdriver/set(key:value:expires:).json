{"metadata":{"title":"set(key:value:expires:)","roleHeading":"Instance Method","externalID":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF","role":"symbol","modules":[{"name":"Hummingbird"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"set"},{"kind":"text","text":"<"},{"text":"Object","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","text":"Object"},{"kind":"text","text":", "},{"text":"expires","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Duration","preciseIdentifier":"s:s8DurationV"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"symbolKind":"method","required":true},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"]]},"abstract":[{"text":"set value for key. If value already exists overwrite it","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/set(key:value:expires:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Object"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","kind":"typeIdentifier","text":"Object"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"expires"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV","text":"Duration"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Object","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"},{"text":", ","kind":"text"},{"text":"Object","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Object","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Key to store value against"}]}],"name":"key"},{"content":[{"inlineContent":[{"type":"text","text":"Codable value to store"}],"type":"paragraph"}],"name":"value"},{"name":"expires","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If non-nil defines time that value will expire in. If nil and value already exists"},{"type":"text","text":" "},{"type":"text","text":"and it already has an expiration time then original expiration time should be conserved."}]}]}],"kind":"parameters"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","kind":"article","title":"Hummingbird Documentation","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver/set(key:value:expires:)":{"title":"set(key:value:expires:)","url":"\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)","kind":"symbol","abstract":[{"type":"text","text":"set value for key. If value already exists overwrite it"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/set(key:value:expires:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"set"},{"kind":"text","text":"<"},{"text":"Object","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Object","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"expires"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s8DurationV","text":"Duration","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/persistdriver","abstract":[{"text":"Protocol for driver supporting persistent Key\/Value pairs across requests","type":"text"}],"title":"PersistDriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PersistDriver","kind":"identifier"}],"navigatorTitle":[{"text":"PersistDriver","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","title":"Hummingbird","type":"topic","role":"collection"}}}