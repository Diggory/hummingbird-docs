{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/set(key:value:expires:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)"]}],"sections":[],"metadata":{"externalID":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"set"},{"text":"<","kind":"text"},{"text":"Object","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Object","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp"},{"text":", ","kind":"text"},{"text":"expires","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV","text":"Duration"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"modules":[{"name":"Hummingbird"}],"role":"symbol","symbolKind":"method","required":true,"title":"set(key:value:expires:)","roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"set","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Object","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp","text":"Object","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"expires"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s8DurationV","text":"Duration","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Object","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Object"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Encodable","preciseIdentifier":"s:SE"},{"kind":"text","text":", "},{"text":"Object","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Key to store value against"}]}],"name":"key"},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"Codable value to store","type":"text"}]}]},{"name":"expires","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If non-nil defines time that value will expire in. If nil and value already exists"},{"text":" ","type":"text"},{"text":"and it already has an expiration time then original expiration time should be conserved.","type":"text"}]}]}],"kind":"parameters"}],"abstract":[{"type":"text","text":"set value for key. If value already exists overwrite it"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"type":"topic","role":"collection","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdpostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","abstract":[{"type":"text","text":"Working with Postgres databases."}],"title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data","role":"collectionGroup","url":"\/documentation\/hummingbird\/persistentdata","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"title":"PersistDriver","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PersistDriver","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"navigatorTitle":[{"text":"PersistDriver","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/persistdriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"type":"text","text":"Integration with Vaporâ€™s Fluent ORM framework."}],"url":"\/documentation\/hummingbirdfluent","type":"topic","title":"HummingbirdFluent","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","role":"collection","url":"\/documentation\/hummingbirdredis","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver/set(key:value:expires:)":{"role":"symbol","url":"\/documentation\/hummingbird\/persistdriver\/set(key:value:expires:)","abstract":[{"text":"set value for key. If value already exists overwrite it","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"set","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Object","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Object","preciseIdentifier":"s:11Hummingbird13PersistDriverP3set3key5value7expiresySS_qd__s8DurationVSgtYaKSeRd__SERd__s8SendableRd__lF6ObjectL_qd__mfp"},{"text":", ","kind":"text"},{"text":"expires","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"set(key:value:expires:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver\/set(key:value:expires:)","type":"topic","required":true,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/index":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"type":"topic","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"logo.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","alt":null}}}