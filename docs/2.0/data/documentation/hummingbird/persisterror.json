{"seeAlsoSections":[{"anchor":"Storage","title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/persisterror"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistError","kind":"identifier"}]}],"kind":"declarations"}],"kind":"symbol","abstract":[{"type":"text","text":"Errors return by persist framework"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"]]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s5ErrorP","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError\/duplicate","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError\/invalidConversion"],"title":"Type Properties","generated":true,"anchor":"Type-Properties"},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError\/Error-Implementations"]}],"metadata":{"roleHeading":"Structure","role":"symbol","externalID":"s:11Hummingbird12PersistErrorV","navigatorTitle":[{"kind":"identifier","text":"PersistError"}],"modules":[{"name":"Hummingbird"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PersistError","kind":"identifier"}],"title":"PersistError"},"references":{"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError","title":"PersistError","navigatorTitle":[{"text":"PersistError","kind":"identifier"}],"url":"\/documentation\/hummingbird\/persisterror","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistError","kind":"identifier"}],"abstract":[{"type":"text","text":"Errors return by persist framework"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"kind":"symbol","abstract":[{"type":"text","text":"Integration with Vaporâ€™s Fluent ORM framework."}],"title":"HummingbirdFluent","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","role":"collection","type":"topic","url":"\/documentation\/hummingbirdfluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError/invalidConversion":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError\/invalidConversion","title":"invalidConversion","url":"\/documentation\/hummingbird\/persisterror\/invalidconversion","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"invalidConversion","kind":"identifier"},{"kind":"text","text":": `Self`"}],"abstract":[{"text":"Failed to convert a persist value to the requested type","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","url":"\/documentation\/hummingbird","type":"topic","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"role":"symbol","title":"PersistDriver","url":"\/documentation\/hummingbird\/persistdriver","abstract":[{"text":"Protocol for driver supporting persistent Key\/Value pairs across requests","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"PersistDriver"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","type":"topic"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError/duplicate":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError\/duplicate","kind":"symbol","url":"\/documentation\/hummingbird\/persisterror\/duplicate","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Failed to creating a persist entry as it already exists"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"duplicate","kind":"identifier"},{"kind":"text","text":": `Self`"}],"title":"duplicate"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"url":"\/documentation\/hummingbirdredis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError/Equatable-Implementations":{"title":"Equatable Implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError\/Equatable-Implementations","url":"\/documentation\/hummingbird\/persisterror\/equatable-implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Working with Postgres databases."}],"type":"topic","url":"\/documentation\/hummingbirdpostgres","kind":"symbol","title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError/Error-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError\/Error-Implementations","kind":"article","url":"\/documentation\/hummingbird\/persisterror\/error-implementations","type":"topic","role":"collectionGroup","abstract":[],"title":"Error Implementations"},"doc://com.opticalaberration.hummingbird/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ"},"doc://com.opticalaberration.hummingbird/s5ErrorP":{"title":"Swift.Error","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s5ErrorP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","role":"symbol","navigatorTitle":[{"text":"MemoryPersistDriver","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MemoryPersistDriver"}],"abstract":[{"type":"text","text":"In memory driver for persist system for storing persistent cross request key\/value pairs"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/memorypersistdriver","title":"MemoryPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"url":"\/documentation\/hummingbird\/persistentdata","type":"topic","title":"Persistent data","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"How to persist data between requests to your server.","type":"text"}]}}}