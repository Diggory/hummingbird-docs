{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"},"abstract":[{"type":"text","text":"Access environment variables"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s23CustomStringConvertibleP","doc:\/\/com.opticalaberration.hummingbird\/Se","doc:\/\/com.opticalaberration.hummingbird\/s30ExpressibleByDictionaryLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","title":"Conforms To"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"],"title":"Miscellaneous"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/init()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/init(dictionaryLiteral:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/init(from:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/init(values:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/get(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/get(_:as:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/merging(with:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/set(_:value:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/dotEnv(_:)"],"title":"Type Methods"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/CustomStringConvertible-Implementations"],"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/environment"]}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"Environment"}],"role":"symbol","roleHeading":"Structure","externalID":"s:11Hummingbird11EnvironmentV","modules":[{"name":"Hummingbird"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"title":"Environment"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/merging(with:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/merging(with:)","abstract":[{"text":"Merge two environment variable sets together and return result","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"merging","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Environment","preciseIdentifier":"s:11Hummingbird11EnvironmentV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Environment","preciseIdentifier":"s:11Hummingbird11EnvironmentV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/environment\/merging(with:)","kind":"symbol","role":"symbol","title":"merging(with:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/init(values:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/init(values:)","abstract":[{"text":"initialize from dictionary","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"values","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"url":"\/documentation\/hummingbird\/environment\/init(values:)","kind":"symbol","role":"symbol","title":"init(values:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/CustomStringConvertible-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/CustomStringConvertible-Implementations","url":"\/documentation\/hummingbird\/environment\/customstringconvertible-implementations","role":"collectionGroup","abstract":[],"title":"CustomStringConvertible Implementations","kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/Se":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/Se","title":"Swift.Decodable"},"doc://com.opticalaberration.hummingbird/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://com.opticalaberration.hummingbird/s30ExpressibleByDictionaryLiteralP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s30ExpressibleByDictionaryLiteralP","title":"Swift.ExpressibleByDictionaryLiteral"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/init(from:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/init(from:)","abstract":[{"text":"Initialize from Decodable","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbird\/environment\/init(from:)","kind":"symbol","role":"symbol","title":"init(from:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/init()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/init()","abstract":[{"text":"initialize from environment variables","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/hummingbird\/environment\/init()","kind":"symbol","role":"symbol","title":"init()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/dotEnv(_:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/dotEnv(_:)","abstract":[{"text":"Create Environment initialised from the ","type":"text"},{"code":".env","type":"codeVoice"},{"text":" file","type":"text"}],"url":"\/documentation\/hummingbird\/environment\/dotenv(_:)","kind":"symbol","role":"symbol","title":"dotEnv(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dotEnv","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Environment","preciseIdentifier":"s:11Hummingbird11EnvironmentV"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/set(_:value:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/set(_:value:)","abstract":[{"text":"Set environment variable","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?)"}],"url":"\/documentation\/hummingbird\/environment\/set(_:value:)","kind":"symbol","role":"symbol","title":"set(_:value:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/init(dictionaryLiteral:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dictionaryLiteral","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")...)","kind":"text"}],"abstract":[{"type":"text","text":"initialize from dictionary literal"}],"title":"init(dictionaryLiteral:)","url":"\/documentation\/hummingbird\/environment\/init(dictionaryliteral:)","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/init(dictionaryLiteral:)"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"type":"topic","navigatorTitle":[{"text":"Environment","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/environment","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","title":"Environment","abstract":[{"text":"Access environment variables","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","type":"topic","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/get(_:as:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/get(_:as:)","abstract":[{"text":"Get environment variable with name as a certain type","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","preciseIdentifier":"s:11Hummingbird11EnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:11Hummingbird11EnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/hummingbird\/environment\/get(_:as:)","kind":"symbol","role":"symbol","title":"get(_:as:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/get(_:)":{"title":"get(_:)","abstract":[{"text":"Get environment variable with name","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/get(_:)","url":"\/documentation\/hummingbird\/environment\/get(_:)","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"role":"symbol","abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"url":"\/documentation\/hummingbird\/initializablefromsource","title":"InitializableFromSource","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}],"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","type":"topic"}}}