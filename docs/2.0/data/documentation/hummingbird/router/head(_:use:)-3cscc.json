{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/router\/head(_:use:)-3cscc"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Instance Method","role":"symbol","externalID":"s:11Hummingbird13RouterMethodsPAAE4head_3usexSS_qd__0A4Core7RequestV_7ContextQztYaYbKctAA17ResponseGeneratorRd__lF::SYNTHESIZED::s:11Hummingbird6RouterC","symbolKind":"method","modules":[{"name":"Hummingbird"}],"title":"head(_:use:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"head"},{"kind":"text","text":"("},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"extendedModule":"Hummingbird"},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"head","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" = \"\", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","text":"Request"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","text":"ResponseGenerator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/head(_:use:)-3cscc"},"abstract":[{"type":"text","text":"HEAD path for async closure returning type conforming to ResponseGenerator"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouterMethods-Implementations":{"url":"\/documentation\/hummingbird\/router\/routermethods-implementations","abstract":[],"role":"collectionGroup","title":"RouterMethods Implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"},{"text":" : ","kind":"text"},{"text":"BaseRequestContext","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","kind":"typeIdentifier"}],"title":"Context","url":"\/documentation\/hummingbird\/routermethods\/context","role":"symbol","required":true,"kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"type":"topic","url":"\/documentation\/hummingbird\/routerguide","title":"Router","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","role":"collectionGroup","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/head(_:use:)-3cscc":{"role":"symbol","url":"\/documentation\/hummingbird\/router\/head(_:use:)-3cscc","type":"topic","kind":"symbol","title":"head(_:use:)","abstract":[{"type":"text","text":"HEAD path for async closure returning type conforming to ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/head(_:use:)-3cscc","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"head"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"url":"\/documentation\/hummingbird\/responsegenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"title":"ResponseGenerator","abstract":[{"type":"text","text":"Object that can generate a "},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","type":"topic","navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/requestcontexts","kind":"article","title":"Request Contexts","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"navigatorTitle":[{"text":"Router","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"title":"Router","url":"\/documentation\/hummingbird\/router","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"Responder"},{"text":" that will follow these rules.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"url":"\/documentation\/hummingbird\/request","title":"Request","type":"topic","navigatorTitle":[{"text":"Request","kind":"identifier"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","title":"Hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","kind":"article"}}}