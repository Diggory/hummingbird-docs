{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"]]},"variants":[{"paths":["\/documentation\/hummingbird\/router\/group(_:context:)-5tup3"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:context:)-5tup3"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"group","kind":"identifier"},{"kind":"text","text":"<"},{"text":"TargetContext","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","kind":"typeIdentifier","text":"TargetContext"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"RouterGroup","preciseIdentifier":"s:11Hummingbird11RouterGroupV"},{"kind":"text","text":"<"},{"text":"TargetContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp"},{"kind":"text","text":">"}],"title":"group(_:context:)","symbolKind":"method","extendedModule":"Hummingbird","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","externalID":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF::SYNTHESIZED::s:11Hummingbird6RouterC"},"abstract":[{"text":"Return a group inside the current group that transforms the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"group","kind":"identifier"},{"text":"<","kind":"text"},{"text":"TargetContext","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"path","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RouterPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":" = \"\", "},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TargetContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","text":"RouterGroup"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","text":"TargetContext"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"TargetContext"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ChildRequestContextP","text":"ChildRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":" == ","kind":"text"},{"text":"TargetContext","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/ParentContext","kind":"typeIdentifier","text":"ParentContext","preciseIdentifier":"s:11Hummingbird19ChildRequestContextP06ParentD0Qa"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the transform to work the "},{"code":"Source","type":"codeVoice"},{"type":"text","text":" of the transformed "},{"type":"codeVoice","code":"RequestContext"},{"type":"text","text":" needs"},{"type":"text","text":" "},{"type":"text","text":"to be the original "},{"type":"codeVoice","code":"RequestContext"},{"text":" eg","type":"text"}]},{"code":["struct TransformedRequestContext: ChildRequestContext {","    typealias ParentContext = BasicRequestContext","    var coreContext: CoreRequestContextStorage","    init(context: ParentContext) throws {","        self.coreContext = .init(source: source)","    }","}"],"type":"codeListing","syntax":null},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Parameters"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"path: path prefix to add to routes inside this group","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"convertContext: Function converting context"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","role":"collectionGroup","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/requestcontexts","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"title":"Request Contexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ChildRequestContext","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/childrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","abstract":[{"text":"A RequestContext that can be initialized from another RequestContext.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ChildRequestContext"}],"title":"ChildRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouterMethods-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","url":"\/documentation\/hummingbird\/router\/routermethods-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations","abstract":[],"title":"RouterMethods Implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Router"}],"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"navigatorTitle":[{"text":"Router","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/router","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"title":"Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"Router","role":"collectionGroup","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/routerguide","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"},"doc://com.opticalaberration.hummingbird/documentation/index":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"type":"topic","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext/ParentContext":{"title":"ParentContext","url":"\/documentation\/hummingbird\/childrequestcontext\/parentcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/ParentContext","abstract":[],"required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"ParentContext","kind":"identifier"},{"kind":"text","text":" : "},{"text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"}],"type":"topic","role":"symbol"},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouterPath","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Split router path into components","type":"text"}],"url":"\/documentation\/hummingbird\/routerpath","type":"topic","title":"RouterPath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext"}],"role":"symbol","required":true,"kind":"symbol","url":"\/documentation\/hummingbird\/routermethods\/context","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","title":"Context"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/group(_:context:)-5tup3":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TargetContext"},{"text":">(","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"text":"TargetContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11RouterGroupV","kind":"typeIdentifier","text":"RouterGroup"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","text":"TargetContext","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:context:)-5tup3","title":"group(_:context:)","url":"\/documentation\/hummingbird\/router\/group(_:context:)-5tup3","abstract":[{"type":"text","text":"Return a group inside the current group that transforms the "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"title":"RouterGroup","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterGroup"}],"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/routergroup","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","title":"RequestContext","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"role":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}]}}}