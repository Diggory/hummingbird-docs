{"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"text":"middleware","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"Middleware we are adding","type":"text"}],"type":"paragraph"}],"name":"middleware"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This middleware will only be applied to endpoints added after this call.","type":"text"}],"type":"paragraph"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"middleware"},{"text":": ","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"kind":"text","text":">) -> "},{"text":"Self","kind":"typeIdentifier"}],"symbolKind":"method","role":"symbol","externalID":"s:11Hummingbird6RouterC3add10middlewareACyxGXDAA18MiddlewareProtocol_px7ContextRts_0A4Core7RequestV5InputRtsAJ8ResponseV6OutputRtsXP_tF","modules":[{"name":"Hummingbird"}],"title":"add(middleware:)","roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/hummingbird\/router\/add(middleware:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Add middleware to Router"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middleware:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"navigatorTitle":[{"text":"Router","kind":"identifier"}],"title":"Router","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/router","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"title":"Router","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","url":"\/documentation\/hummingbird\/routerguide","role":"collectionGroup","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"images":[{"type":"icon","identifier":"logo.png"}],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"role":"symbol","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","title":"Request","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"title":"Response","url":"\/documentation\/hummingbirdcore\/response","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/add(middleware:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middleware:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"middleware","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":"<","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Add middleware to Router"}],"role":"symbol","title":"add(middleware:)","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/router\/add(middleware:)"},"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","url":"\/documentation\/index","role":"collection","kind":"article","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}]}}}