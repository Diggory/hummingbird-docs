{"topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middlewareStack:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/addRoutes(_:atPath:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/delete(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/get(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:context:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/head(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/patch(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/post(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/put(_:use:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"},"kind":"article","sections":[],"metadata":{"roleHeading":"API Collection","title":"RouterMethods Implementations","role":"collectionGroup","modules":[{"name":"Hummingbird"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/patch(_:use:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"patch"},{"kind":"text","text":"("},{"text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/router\/patch(_:use:)","type":"topic","abstract":[{"type":"text","text":"PATCH path for async closure returning type conforming to ResponseGenerator"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/patch(_:use:)","title":"patch(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/delete(_:use:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"delete","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/delete(_:use:)","url":"\/documentation\/hummingbird\/router\/delete(_:use:)","abstract":[{"text":"DELETE path for async closure returning type conforming to ResponseGenerator","type":"text"}],"title":"delete(_:use:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/addRoutes(_:atPath:)":{"title":"addRoutes(_:atPath:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addRoutes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouteCollection","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15RouteCollectionC"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":">, ","kind":"text"},{"text":"atPath","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Add route collection to router","type":"text"}],"url":"\/documentation\/hummingbird\/router\/addroutes(_:atpath:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/addRoutes(_:atPath:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/head(_:use:)":{"title":"head(_:use:)","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"head"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/head(_:use:)","abstract":[{"type":"text","text":"HEAD path for async closure returning type conforming to ResponseGenerator"}],"url":"\/documentation\/hummingbird\/router\/head(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"url":"\/documentation\/hummingbird\/routerguide","title":"Router","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","title":"Router","navigatorTitle":[{"text":"Router","kind":"identifier"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"url":"\/documentation\/hummingbird\/router","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Router","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/on(_:method:use:)":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Add path for async closure"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:use:)","url":"\/documentation\/hummingbird\/router\/on(_:method:use:)","title":"on(_:method:use:)"},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"kind":"article","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/add(middlewareStack:)":{"title":"add(middlewareStack:)","role":"symbol","url":"\/documentation\/hummingbird\/router\/add(middlewarestack:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(middlewareStack:)","abstract":[{"text":"Add middleware stack to router","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middlewareStack"},{"kind":"text","text":": () -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","kind":"typeIdentifier","text":"MiddlewareProtocol"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":", "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier","text":"Response"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/post(_:use:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/post(_:use:)","role":"symbol","abstract":[{"type":"text","text":"POST path for async closure returning type conforming to ResponseGenerator"}],"title":"post(_:use:)","url":"\/documentation\/hummingbird\/router\/post(_:use:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"post","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/get(_:use:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"get(_:use:)","role":"symbol","url":"\/documentation\/hummingbird\/router\/get(_:use:)","type":"topic","kind":"symbol","abstract":[{"text":"GET path for async closure returning type conforming to ResponseGenerator","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/get(_:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/put(_:use:)":{"role":"symbol","url":"\/documentation\/hummingbird\/router\/put(_:use:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"put"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/put(_:use:)","title":"put(_:use:)","abstract":[{"type":"text","text":"PUT path for async closure returning type conforming to ResponseGenerator"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"kind":"article","type":"topic","role":"collectionGroup","title":"Request Contexts","url":"\/documentation\/hummingbird\/requestcontexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"url":"\/documentation\/hummingbird\/requestcontext","role":"symbol","title":"RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a request. Provides context for request processing"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/group(_:)":{"title":"group(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:)","type":"topic","abstract":[{"type":"text","text":"Return a group inside the current group"}],"kind":"symbol","url":"\/documentation\/hummingbird\/router\/group(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"RouterGroup","preciseIdentifier":"s:11Hummingbird11RouterGroupV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":">"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/group(_:context:)":{"title":"group(_:context:)","role":"symbol","url":"\/documentation\/hummingbird\/router\/group(_:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:context:)","abstract":[{"text":"Return a group inside the current group that transforms the ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true,"type":"reference"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TargetContext"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp","text":"TargetContext"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV","text":"RouterGroup"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp","text":"TargetContext"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic"}}}