{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware"},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"}],"seeAlsoSections":[{"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware"],"generated":true}],"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware\/init(decoder:encoder:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware\/handle(_:context:next:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSetCodableMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Decoder","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Encoder","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","text":"HBRequestDecoder","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncoder","text":"HBResponseEncoder","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSetCodableMiddleware","kind":"identifier"}],"role":"symbol","symbolKind":"struct","title":"HBSetCodableMiddleware","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"text":"HBSetCodableMiddleware","kind":"identifier"}],"externalID":"s:11Hummingbird22HBSetCodableMiddlewareV"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbsetcodablemiddleware"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","url":"\/documentation\/hummingbird\/hbmiddlewaregroup","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}],"title":"HBMiddlewareGroup","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"kind":"symbol","abstract":[{"text":"Middleware Handler with generic input, context and output types","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","title":"Middleware","url":"\/documentation\/hummingbird\/middleware","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"title":"HBTracingMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBTracingMiddleware","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/hbtracingmiddleware","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSetCodableMiddleware":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSetCodableMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBSetCodableMiddleware"}],"kind":"symbol","title":"HBSetCodableMiddleware","url":"\/documentation\/hummingbird\/hbsetcodablemiddleware","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"type":"topic","title":"HBLogRequestsMiddleware","url":"\/documentation\/hummingbird\/hblogrequestsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSetCodableMiddleware/handle(_:context:next:)":{"role":"symbol","url":"\/documentation\/hummingbird\/hbsetcodablemiddleware\/handle(_:context:next:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware\/handle(_:context:next:)","title":"handle(_:context:next:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird22HBSetCodableMiddlewareV7Contextq0_mfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird22HBSetCodableMiddlewareV7Contextq0_mfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier","text":"HBResponse"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier","text":"HBResponse"}],"abstract":[],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestDecoder":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestDecoder"}],"title":"HBRequestDecoder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecoder"}],"url":"\/documentation\/hummingbird\/hbrequestdecoder","abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"role":"symbol","type":"topic","title":"HBCORSMiddleware","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbcorsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSetCodableMiddleware/init(decoder:encoder:)":{"kind":"symbol","abstract":[],"type":"topic","title":"init(decoder:encoder:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird22HBSetCodableMiddlewareV7Decoderxmfp"},{"text":", ","kind":"text"},{"text":"encoder","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird22HBSetCodableMiddlewareV7Encoderq_mfp"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbsetcodablemiddleware\/init(decoder:encoder:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware\/init(decoder:encoder:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMetricsMiddleware"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","title":"HBMetricsMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}],"abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"url":"\/documentation\/hummingbird\/hbmetricsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"url":"\/documentation\/hummingbird\/middlewareprotocol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"role":"symbol","title":"MiddlewareProtocol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"title":"HBMiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","role":"symbol","type":"topic","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmiddlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseEncoder":{"url":"\/documentation\/hummingbird\/hbresponseencoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseEncoder"}],"abstract":[{"text":"protocol for encoders generating a Response","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncoder","navigatorTitle":[{"kind":"identifier","text":"HBResponseEncoder"}],"kind":"symbol","role":"symbol","title":"HBResponseEncoder","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"title":"HBBaseRequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"role":"symbol"}}}