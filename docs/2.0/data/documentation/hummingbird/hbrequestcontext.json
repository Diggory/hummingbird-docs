{"abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier","text":"HBBaseRequestContext"}]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","interfaceLanguage":"swift"},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}],"role":"symbol","title":"HBRequestContext","symbolKind":"protocol","modules":[{"name":"Hummingbird"}],"roleHeading":"Protocol","externalID":"s:11Hummingbird16HBRequestContextP","navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom","title":"Inherits From"},{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol"],"type":"inheritedBy","title":"Inherited By"},{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext"],"type":"conformingTypes","title":"Conforming Types"}],"variants":[{"paths":["\/documentation\/hummingbird\/hbrequestcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"],"title":"Request context"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext\/init(channel:logger:)-1xy10"]}],"references":{"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"title":"HBBaseRequestContext","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"type":"topic","url":"\/documentation\/hummingbird\/hbbaserequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext/init(channel:logger:)-1xy10":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext\/init(channel:logger:)-1xy10","type":"topic","title":"init(channel:logger:)","abstract":[{"type":"text","text":"initialize an "},{"code":"HBRequestContext","type":"codeVoice"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbird\/hbrequestcontext\/init(channel:logger:)-1xy10","required":true,"role":"symbol","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbbasicrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","type":"topic","title":"HBBasicRequestContext","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"navigatorTitle":[{"text":"HBBasicRequestContext","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"kind":"symbol","title":"HBCoreRequestContext","abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbcorerequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBCoreRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"HBCoreRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","title":"Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","navigatorTitle":[{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"role":"symbol","title":"HBAuthRequestContextProtocol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"kind":"symbol","title":"HBRemoteAddressRequestContext","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HBRemoteAddressRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext":{"abstract":[{"text":"Basic implementation of a context that can be used with `HBRouterBuilder``","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HBBasicRouterRequestContext","kind":"identifier"}],"title":"HBBasicRouterRequestContext","url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicRouterRequestContext","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","type":"topic","title":"Request Contexts","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"url":"\/documentation\/hummingbird\/requestcontexts","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"HBAuthRequestContext"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBAuthRequestContext"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","title":"HBAuthRequestContext","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"kind":"symbol","title":"HBRequestContext","abstract":[{"type":"text","text":"Protocol for a request context that can be created from a NIO Channel"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}]}}}