{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ApplicationProtocol"},{"type":"text","text":" is a protocol used to define your application. It provides the glue between your router and HTTP server."}]},{"type":"paragraph","inlineContent":[{"text":"Implementing a ","type":"text"},{"code":"ApplicationProtocol","type":"codeVoice"},{"text":" requires two member variables: ","type":"text"},{"code":"responder","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"server","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","code":["struct MyApp: ApplicationProtocol {","    \/\/\/ The responder will return an `Response` given an `Request` and a context","    var responder: some Responder<BasicRequestContext> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in \"Hello\" }","        return router.buildResponder()","    }","    \/\/\/ Defines your server type. This is the default value so in","    \/\/\/ effect is unnecessary","    var server: HTTPChannelBuilder<some ChildChannel> { .http1() }","}","let app = MyApp()","try await app.runService()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"If you donâ€™t want to create your own type, Hummingbird provides ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"text":" a concrete implementation of ","type":"text"},{"code":"ApplicationProtocol","type":"codeVoice"},{"text":".","type":"text"}]}]}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/ChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-nqnq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context"]}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]},{"kind":"relationships","type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"]}],"metadata":{"symbolKind":"protocol","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"}],"externalID":"s:11Hummingbird19ApplicationProtocolP","roleHeading":"Protocol","title":"ApplicationProtocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol"},"sections":[],"seeAlsoSections":[{"generated":true,"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/applicationprotocol"]}],"abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Context":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Context","kind":"identifier"}],"title":"ApplicationProtocol.Context","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/context","navigatorTitle":[{"text":"Context","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Context passed with Request to responder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/logger-8mlwz":{"required":true,"role":"symbol","abstract":[{"text":"Logger","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/logger-8mlwz","defaultImplementations":1,"title":"logger","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","kind":"symbol"},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","title":"ServiceLifecycle.Service","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/services-6oxjb":{"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/services-6oxjb","abstract":[{"text":"services attached to the application.","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"services","kind":"identifier"},{"text":": [","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","text":"Service","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb","title":"services","kind":"symbol","required":true,"defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","type":"topic","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Application","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Application","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/application","title":"Application"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/ChildChannel":{"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/ChildChannel","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"ChildChannel","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HTTPChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP"},{"text":" = ","kind":"text"},{"text":"HTTP1Channel","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore12HTTP1ChannelV"}],"title":"ChildChannel","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/childchannel","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Child Channel setup. This defaults to support HTTP1"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Responder-swift.associatedtype":{"required":true,"role":"symbol","abstract":[{"text":"Responder that generates a response from a requests and context","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HTTPResponderP","text":"HTTPResponder","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype","title":"Responder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/onServerRunning(_:)-1xv91":{"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onServerRunning","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"onServerRunning(_:)","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-1xv91","defaultImplementations":1,"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"This is called once the server is running and we have an active Channel"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationConfiguration","kind":"identifier"}],"type":"topic","abstract":[{"text":"Application configuration","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","title":"ApplicationConfiguration","url":"\/documentation\/hummingbird\/applicationconfiguration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/configuration-8uajt":{"required":true,"role":"symbol","abstract":[{"text":"Application configuration","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configuration","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird24ApplicationConfigurationV","text":"ApplicationConfiguration","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/configuration-8uajt","defaultImplementations":1,"title":"configuration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ApplicationProtocol"}],"type":"topic","abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","title":"ApplicationProtocol","url":"\/documentation\/hummingbird\/applicationprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/server-nqnq":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"server"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","text":"HTTPChannelBuilder"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP12ChildChannelQa","text":"ChildChannel"},{"kind":"text","text":">"}],"required":true,"type":"topic","abstract":[{"text":"Server channel setup","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-nqnq","title":"server","defaultImplementations":1,"url":"\/documentation\/hummingbird\/applicationprotocol\/server-nqnq"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/eventLoopGroup-57h5r":{"url":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup-57h5r","defaultImplementations":1,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoopGroup","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoopGroup","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","abstract":[{"type":"text","text":"event loop group used by application"}],"kind":"symbol","required":true,"role":"symbol","title":"eventLoopGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/run()":{"url":"\/documentation\/hummingbird\/applicationprotocol\/run()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","abstract":[{"type":"text","text":"Construct application and run it"}],"kind":"symbol","role":"symbol","title":"run()"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/processesRunBeforeServerStart-5w24n":{"url":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart-5w24n","defaultImplementations":1,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"processesRunBeforeServerStart","kind":"identifier"},{"text":": [() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":"]","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","abstract":[{"type":"text","text":"Array of processes run before we kick off the server. These tend to be processes that need"},{"text":" ","type":"text"},{"text":"other services running but need to be run before the server is setup","type":"text"}],"kind":"symbol","required":true,"role":"symbol","title":"processesRunBeforeServerStart"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/runService(gracefulShutdownSignals:)":{"url":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runService","kind":"identifier"},{"text":"(","kind":"text"},{"text":"gracefulShutdownSignals","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:11UnixSignals0A6SignalV","text":"UnixSignal","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","abstract":[{"type":"text","text":"Helper function that runs application inside a ServiceGroup which will gracefully"},{"type":"text","text":" "},{"type":"text","text":"shutdown on signals SIGINT, SIGTERM"}],"kind":"symbol","role":"symbol","title":"runService(gracefulShutdownSignals:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/responder-swift.property":{"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Responder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP9ResponderQa"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","abstract":[{"type":"text","text":"Build the responder"}],"kind":"symbol","required":true,"role":"symbol","title":"responder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"url":"\/documentation\/hummingbird\/eventloopgroupprovider","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"kind":"symbol","role":"symbol","title":"EventLoopGroupProvider"}}}