{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/applicationprotocol"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"sections":[],"seeAlsoSections":[{"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","text":"Service","kind":"typeIdentifier"}]}]},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ApplicationProtocol"},{"type":"text","text":" is a protocol used to define your application. It provides the glue between your router and HTTP server."}]},{"type":"paragraph","inlineContent":[{"text":"Implementing a ","type":"text"},{"code":"ApplicationProtocol","type":"codeVoice"},{"text":" requires two member variables: ","type":"text"},{"code":"responder","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"server","type":"codeVoice"},{"text":".","type":"text"}]},{"code":["struct MyApp: ApplicationProtocol {","    \/\/\/ The responder will return an `Response` given an `Request` and a context","    var responder: some Responder<BasicRequestContext> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in \"Hello\" }","        return router.buildResponder()","    }","    \/\/\/ Defines your server type. This is the default value so in","    \/\/\/ effect is unnecessary","    var server: HTTPChannelBuilder<some ChildChannel> { .http1() }","}","let app = MyApp()","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If you donâ€™t want to create your own type, Hummingbird provides ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","type":"reference","isActive":true},{"text":" a concrete implementation of ","type":"text"},{"code":"ApplicationProtocol","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"},{"title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"],"type":"conformingTypes","kind":"relationships"}],"kind":"symbol","metadata":{"role":"symbol","title":"ApplicationProtocol","externalID":"s:11Hummingbird19ApplicationProtocolP","roleHeading":"Protocol","modules":[{"name":"Hummingbird"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"symbolKind":"protocol","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/ChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-nqnq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"navigatorTitle":[{"kind":"identifier","text":"Application"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","url":"\/documentation\/hummingbird\/application","role":"symbol","title":"Application"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"url":"\/documentation\/hummingbird\/eventloopgroupprovider","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"type":"topic","role":"symbol","title":"EventLoopGroupProvider","abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/server-nqnq":{"url":"\/documentation\/hummingbird\/applicationprotocol\/server-nqnq","abstract":[{"text":"Server channel setup","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"server"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChildChannel","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP12ChildChannelQa"},{"kind":"text","text":">"}],"title":"server","kind":"symbol","role":"symbol","defaultImplementations":1,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-nqnq","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationConfiguration"}],"abstract":[{"type":"text","text":"Application configuration"}],"navigatorTitle":[{"kind":"identifier","text":"ApplicationConfiguration"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","url":"\/documentation\/hummingbird\/applicationconfiguration","role":"symbol","title":"ApplicationConfiguration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/responder-swift.property":{"required":true,"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property","kind":"symbol","role":"symbol","title":"responder","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"responder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Responder","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP9ResponderQa","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","abstract":[{"text":"Build the responder","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/processesRunBeforeServerStart-5w24n":{"abstract":[{"type":"text","text":"Array of processes run before we kick off the server. These tend to be processes that need"},{"type":"text","text":" "},{"type":"text","text":"other services running but need to be run before the server is setup"}],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"processesRunBeforeServerStart","kind":"identifier"},{"text":": [() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"defaultImplementations":1,"url":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart-5w24n","kind":"symbol","type":"topic","role":"symbol","title":"processesRunBeforeServerStart"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/configuration-8uajt":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configuration","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ApplicationConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird24ApplicationConfigurationV"}],"defaultImplementations":1,"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","title":"configuration","abstract":[{"text":"Application configuration","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/configuration-8uajt","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Context":{"navigatorTitle":[{"text":"Context","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"abstract":[{"type":"text","text":"Context passed with Request to responder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context","role":"symbol","title":"ApplicationProtocol.Context","url":"\/documentation\/hummingbird\/applicationprotocol\/context","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/logger-8mlwz":{"title":"logger","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","defaultImplementations":1,"required":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"}],"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/logger-8mlwz","role":"symbol","abstract":[{"text":"Logger","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/runService(gracefulShutdownSignals:)":{"kind":"symbol","abstract":[{"text":"Helper function that runs application inside a ServiceGroup which will gracefully","type":"text"},{"text":" ","type":"text"},{"text":"shutdown on signals SIGINT, SIGTERM","type":"text"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runService"},{"kind":"text","text":"("},{"kind":"externalParam","text":"gracefulShutdownSignals"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:11UnixSignals0A6SignalV","kind":"typeIdentifier","text":"UnixSignal"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","type":"topic","title":"runService(gracefulShutdownSignals:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Responder-swift.associatedtype":{"required":true,"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype","kind":"symbol","role":"symbol","title":"Responder","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype","abstract":[{"text":"Responder that generates a response from a requests and context","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/applicationprotocol","kind":"symbol","role":"symbol","title":"ApplicationProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ApplicationProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/ChildChannel":{"url":"\/documentation\/hummingbird\/applicationprotocol\/childchannel","abstract":[{"text":"Child Channel setup. This defaults to support HTTP1","type":"text"}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildChannel"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"HTTPChannelHandler","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"HTTP1Channel","preciseIdentifier":"s:15HummingbirdCore12HTTP1ChannelV"}],"title":"ChildChannel","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/ChildChannel","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/eventLoopGroup-57h5r":{"title":"eventLoopGroup","role":"symbol","defaultImplementations":1,"type":"topic","abstract":[{"text":"event loop group used by application","type":"text"}],"kind":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","url":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup-57h5r","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoopGroup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/run()":{"url":"\/documentation\/hummingbird\/applicationprotocol\/run()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","abstract":[{"type":"text","text":"Construct application and run it"}],"role":"symbol","title":"run()","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/services-6oxjb":{"kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/services-6oxjb","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"services","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"},{"text":"]","kind":"text"}],"title":"services","defaultImplementations":1,"abstract":[{"text":"services attached to the application.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb","role":"symbol","required":true,"type":"topic"},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","title":"ServiceLifecycle.Service"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/onServerRunning(_:)-1xv91":{"required":true,"defaultImplementations":1,"abstract":[{"text":"This is called once the server is running and we have an active Channel","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onServerRunning"},{"kind":"text","text":"("},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-1xv91","role":"symbol","title":"onServerRunning(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","type":"topic","role":"collection","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}