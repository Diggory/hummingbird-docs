{"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"],"type":"conformingTypes"}],"variants":[{"paths":["\/documentation\/hummingbird\/applicationprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"role":"symbol","modules":[{"name":"Hummingbird"}],"roleHeading":"Protocol","title":"ApplicationProtocol","externalID":"s:11Hummingbird19ApplicationProtocolP","symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"}]},"abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"generated":true,"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"]}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/ChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-nqnq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P","text":"Service"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"codeVoice","code":"ApplicationProtocol"},{"text":" is a protocol used to define your application. It provides the glue between your router and HTTP server.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Implementing a "},{"code":"ApplicationProtocol","type":"codeVoice"},{"type":"text","text":" requires two member variables: "},{"code":"responder","type":"codeVoice"},{"type":"text","text":" and "},{"code":"server","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct MyApp: ApplicationProtocol {","    \/\/\/ The responder will return an `Response` given an `Request` and a context","    var responder: some Responder<BasicRequestContext> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in \"Hello\" }","        return router.buildResponder()","    }","    \/\/\/ Defines your server type. This is the default value so in","    \/\/\/ effect is unnecessary","    var server: HTTPChannelBuilder<some ChildChannel> { .http1() }","}","let app = MyApp()","try await app.runService()"]},{"inlineContent":[{"type":"text","text":"If you donâ€™t want to create your own type, Hummingbird provides "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"type":"text","text":" a concrete implementation of "},{"type":"codeVoice","code":"ApplicationProtocol"},{"type":"text","text":"."}],"type":"paragraph"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"navigatorTitle":[{"kind":"identifier","text":"ApplicationConfiguration"}],"kind":"symbol","title":"ApplicationConfiguration","role":"symbol","url":"\/documentation\/hummingbird\/applicationconfiguration","type":"topic","abstract":[{"text":"Application configuration","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationConfiguration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/onServerRunning(_:)-1xv91":{"title":"onServerRunning(_:)","role":"symbol","kind":"symbol","defaultImplementations":1,"type":"topic","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onServerRunning"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","abstract":[{"text":"This is called once the server is running and we have an active Channel","type":"text"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-1xv91"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Context":{"navigatorTitle":[{"kind":"identifier","text":"Context"}],"type":"topic","role":"symbol","title":"ApplicationProtocol.Context","abstract":[{"text":"Context passed with Request to responder","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/context","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context"},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"type":"unresolvable","title":"ServiceLifecycle.Service","identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/ChildChannel":{"abstract":[{"text":"Child Channel setup. This defaults to support HTTP1","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"ChildChannel","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HTTPChannelHandler","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"HTTP1Channel","preciseIdentifier":"s:15HummingbirdCore12HTTP1ChannelV","kind":"typeIdentifier"}],"title":"ChildChannel","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/ChildChannel","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/childchannel"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/processesRunBeforeServerStart-5w24n":{"abstract":[{"text":"Array of processes run before we kick off the server. These tend to be processes that need","type":"text"},{"text":" ","type":"text"},{"text":"other services running but need to be run before the server is setup","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"processesRunBeforeServerStart","kind":"identifier"},{"text":": [() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":"]"}],"title":"processesRunBeforeServerStart","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","role":"symbol","defaultImplementations":1,"url":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart-5w24n"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"navigatorTitle":[{"kind":"identifier","text":"Application"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"type":"topic","title":"Application","kind":"symbol","url":"\/documentation\/hummingbird\/application","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/runService(gracefulShutdownSignals:)":{"type":"topic","role":"symbol","title":"runService(gracefulShutdownSignals:)","abstract":[{"text":"Helper function that runs application inside a ServiceGroup which will gracefully","type":"text"},{"text":" ","type":"text"},{"text":"shutdown on signals SIGINT, SIGTERM","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runService"},{"kind":"text","text":"("},{"kind":"externalParam","text":"gracefulShutdownSignals"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:11UnixSignals0A6SignalV","kind":"typeIdentifier","text":"UnixSignal"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/responder-swift.property":{"title":"responder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP9ResponderQa","text":"Responder","kind":"typeIdentifier"}],"type":"topic","required":true,"abstract":[{"text":"Build the responder","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","url":"\/documentation\/hummingbird\/applicationprotocol","abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"role":"symbol","title":"ApplicationProtocol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ApplicationProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"url":"\/documentation\/hummingbird\/eventloopgroupprovider","abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"title":"EventLoopGroupProvider","type":"topic","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/run()":{"role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/run()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"run()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","abstract":[{"text":"Construct application and run it","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/logger-8mlwz":{"defaultImplementations":1,"type":"topic","required":true,"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/logger-8mlwz","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","kind":"symbol","title":"logger","abstract":[{"type":"text","text":"Logger"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Responder-swift.associatedtype":{"type":"topic","title":"Responder","kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP"}],"abstract":[{"type":"text","text":"Responder that generates a response from a requests and context"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype","url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/eventLoopGroup-57h5r":{"abstract":[{"type":"text","text":"event loop group used by application"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","kind":"symbol","role":"symbol","required":true,"title":"eventLoopGroup","url":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup-57h5r","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoopGroup","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoopGroup","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"}],"defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/services-6oxjb":{"title":"services","defaultImplementations":1,"abstract":[{"text":"services attached to the application.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"services","kind":"identifier"},{"text":": [","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier","text":"Service"},{"kind":"text","text":"]"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb","url":"\/documentation\/hummingbird\/applicationprotocol\/services-6oxjb","role":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","title":"Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/configuration-8uajt":{"kind":"symbol","type":"topic","defaultImplementations":1,"abstract":[{"text":"Application configuration","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configuration","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ApplicationConfiguration","preciseIdentifier":"s:11Hummingbird24ApplicationConfigurationV","kind":"typeIdentifier"}],"title":"configuration","role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","url":"\/documentation\/hummingbird\/applicationprotocol\/configuration-8uajt"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/server-nqnq":{"kind":"symbol","defaultImplementations":1,"url":"\/documentation\/hummingbird\/applicationprotocol\/server-nqnq","required":true,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"server","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HTTPChannelBuilder","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelBuilderV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP12ChildChannelQa","kind":"typeIdentifier","text":"ChildChannel"},{"kind":"text","text":">"}],"role":"symbol","title":"server","abstract":[{"text":"Server channel setup","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-nqnq"}}}