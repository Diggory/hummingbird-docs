{"abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"code":"ApplicationProtocol","type":"codeVoice"},{"type":"text","text":" is a protocol used to define your application. It provides the glue between your router and HTTP server."}],"type":"paragraph"},{"inlineContent":[{"text":"Implementing a ","type":"text"},{"code":"ApplicationProtocol","type":"codeVoice"},{"text":" requires two member variables: ","type":"text"},{"code":"responder","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"server","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["struct MyApp: ApplicationProtocol {","    \/\/\/ The responder will return an `Response` given an `Request` and a context","    var responder: some Responder<BasicRequestContext> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in \"Hello\" }","        return router.buildResponder()","    }","    \/\/\/ Defines your server type. This is the default value so in","    \/\/\/ effect is unnecessary","    var server: HTTPChannelBuilder<some ChildChannel> { .http1() }","}","let app = MyApp()","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you donâ€™t want to create your own type, Hummingbird provides ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"text":" a concrete implementation of ","type":"text"},{"code":"ApplicationProtocol","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"title":"Application"}],"metadata":{"externalID":"s:11Hummingbird19ApplicationProtocolP","modules":[{"name":"Hummingbird"}],"roleHeading":"Protocol","title":"ApplicationProtocol","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"}],"role":"symbol","symbolKind":"protocol"},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"],"title":"Conforming Types","type":"conformingTypes","kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/applicationprotocol"]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-ajjq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context"],"title":"Type Aliases"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/run()":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","url":"\/documentation\/hummingbird\/applicationprotocol\/run()","abstract":[{"text":"Construct application and run it","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"title":"run()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/services-6oxjb":{"defaultImplementations":1,"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/services-6oxjb","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"services","kind":"identifier"},{"text":": [","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","text":"Service","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb","title":"services","abstract":[{"text":"services attached to the application.","type":"text"}],"required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/server-ajjq":{"url":"\/documentation\/hummingbird\/applicationprotocol\/server-ajjq","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-ajjq","role":"symbol","kind":"symbol","type":"topic","title":"server","required":true,"abstract":[{"text":"Server channel builder","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"server","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HTTPServerBuilder","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV"}],"defaultImplementations":1},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","title":"ServiceLifecycle.Service"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/logger-8mlwz":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"}],"role":"symbol","required":true,"type":"topic","title":"logger","abstract":[{"text":"Logger","type":"text"}],"defaultImplementations":1,"url":"\/documentation\/hummingbird\/applicationprotocol\/logger-8mlwz","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/runService(gracefulShutdownSignals:)":{"kind":"symbol","abstract":[{"type":"text","text":"Helper function that runs application inside a ServiceGroup which will gracefully"},{"type":"text","text":" "},{"type":"text","text":"shutdown on signals SIGINT, SIGTERM"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runService"},{"kind":"text","text":"("},{"kind":"externalParam","text":"gracefulShutdownSignals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:11UnixSignals0A6SignalV","text":"UnixSignal"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","title":"runService(gracefulShutdownSignals:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"title":"ApplicationConfiguration","url":"\/documentation\/hummingbird\/applicationconfiguration","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ApplicationConfiguration"}],"kind":"symbol","abstract":[{"type":"text","text":"Application configuration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ApplicationConfiguration"}]},"logo.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/responder-swift.property":{"abstract":[{"type":"text","text":"Build the responder"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP9ResponderQa","kind":"typeIdentifier","text":"Responder"}],"required":true,"title":"responder","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/processesRunBeforeServerStart-5w24n":{"abstract":[{"type":"text","text":"Array of processes run before we kick off the server. These tend to be processes that need"},{"type":"text","text":" "},{"type":"text","text":"other services running but need to be run before the server is setup"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart-5w24n","required":true,"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","title":"processesRunBeforeServerStart","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"processesRunBeforeServerStart"},{"kind":"text","text":": [() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":"]","kind":"text"}],"defaultImplementations":1,"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"title":"ApplicationProtocol","abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Context":{"abstract":[{"text":"Context passed with Request to responder","type":"text"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/context","title":"ApplicationProtocol.Context","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Context"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/configuration-8uajt":{"abstract":[{"text":"Application configuration","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird24ApplicationConfigurationV","kind":"typeIdentifier","text":"ApplicationConfiguration"}],"required":true,"type":"topic","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","title":"configuration","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/configuration-8uajt"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Responder-swift.associatedtype":{"abstract":[{"text":"Responder that generates a response from a requests and context","type":"text"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype","title":"Responder","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Responder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype","role":"symbol","required":true,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","url":"\/documentation\/hummingbird\/application","title":"Application","navigatorTitle":[{"text":"Application","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Application","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"abstract":[{"text":"Where should the application get its EventLoopGroup from","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","kind":"symbol","title":"EventLoopGroupProvider","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"url":"\/documentation\/hummingbird\/eventloopgroupprovider","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/eventLoopGroup-57h5r":{"kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup-57h5r","title":"eventLoopGroup","defaultImplementations":1,"type":"topic","role":"symbol","required":true,"abstract":[{"type":"text","text":"event loop group used by application"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoopGroup","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/onServerRunning(_:)-1xv91":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","type":"topic","abstract":[{"text":"This is called once the server is running and we have an active Channel","type":"text"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-1xv91","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onServerRunning","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"title":"onServerRunning(_:)","defaultImplementations":1,"required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","role":"collection","title":"Hummingbird","kind":"symbol"}}}