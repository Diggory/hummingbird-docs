{"abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"],"title":"Conforming Types","kind":"relationships","type":"conformingTypes"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ApplicationProtocol"},{"type":"text","text":" is a protocol used to define your application. It provides the glue between your router and HTTP server."}]},{"type":"paragraph","inlineContent":[{"text":"Implementing a ","type":"text"},{"code":"ApplicationProtocol","type":"codeVoice"},{"text":" requires two member variables: ","type":"text"},{"code":"responder","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"server","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct MyApp: ApplicationProtocol {","    \/\/\/ The responder will return an `Response` given an `Request` and a context","    var responder: some Responder<BasicRequestContext> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in \"Hello\" }","        return router.buildResponder()","    }","    \/\/\/ Defines your server type. This is the default value so in","    \/\/\/ effect is unnecessary","    var server: HTTPChannelBuilder<some ChildChannel> { .http1() }","}","let app = MyApp()","try await app.runService()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you donâ€™t want to create your own type, Hummingbird provides "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"type":"text","text":" a concrete implementation of "},{"code":"ApplicationProtocol","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-ajjq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context"],"title":"Type Aliases"}],"variants":[{"paths":["\/documentation\/hummingbird\/applicationprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird19ApplicationProtocolP","symbolKind":"protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"roleHeading":"Protocol","title":"ApplicationProtocol","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"title":"Application"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/eventLoopGroup-57h5r":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","type":"topic","role":"symbol","title":"eventLoopGroup","kind":"symbol","defaultImplementations":1,"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoopGroup","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup-57h5r","abstract":[{"text":"event loop group used by application","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Responder-swift.associatedtype":{"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype","abstract":[{"text":"Responder that generates a response from a requests and context","type":"text"}],"type":"topic","title":"Responder","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Application","kind":"identifier"}],"title":"Application","url":"\/documentation\/hummingbird\/application","navigatorTitle":[{"kind":"identifier","text":"Application"}],"abstract":[{"text":"Application type bringing together all the components of Hummingbird","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/runService(gracefulShutdownSignals:)":{"url":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","abstract":[{"type":"text","text":"Helper function that runs application inside a ServiceGroup which will gracefully"},{"type":"text","text":" "},{"type":"text","text":"shutdown on signals SIGINT, SIGTERM"}],"type":"topic","title":"runService(gracefulShutdownSignals:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runService","kind":"identifier"},{"text":"(","kind":"text"},{"text":"gracefulShutdownSignals","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"UnixSignal","preciseIdentifier":"s:11UnixSignals0A6SignalV"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/responder-swift.property":{"required":true,"title":"responder","abstract":[{"type":"text","text":"Build the responder"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Responder","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP9ResponderQa"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/processesRunBeforeServerStart-5w24n":{"role":"symbol","title":"processesRunBeforeServerStart","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"processesRunBeforeServerStart","kind":"identifier"},{"text":": [() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":"]"}],"type":"topic","required":true,"kind":"symbol","defaultImplementations":1,"url":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart-5w24n","abstract":[{"text":"Array of processes run before we kick off the server. These tend to be processes that need","type":"text"},{"text":" ","type":"text"},{"text":"other services running but need to be run before the server is setup","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/services-6oxjb":{"title":"services","abstract":[{"text":"services attached to the application.","type":"text"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/services-6oxjb","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb","defaultImplementations":1,"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"services"},{"kind":"text","text":": ["},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P"},{"kind":"text","text":"]"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"role":"symbol","abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"url":"\/documentation\/hummingbird\/applicationprotocol","title":"ApplicationProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"role":"symbol","abstract":[{"type":"text","text":"Application configuration"}],"url":"\/documentation\/hummingbird\/applicationconfiguration","title":"ApplicationConfiguration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationConfiguration"}],"navigatorTitle":[{"kind":"identifier","text":"ApplicationConfiguration"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/configuration-8uajt":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird24ApplicationConfigurationV","kind":"typeIdentifier","text":"ApplicationConfiguration"}],"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/configuration-8uajt","required":true,"kind":"symbol","abstract":[{"type":"text","text":"Application configuration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","role":"symbol","defaultImplementations":1,"title":"configuration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/onServerRunning(_:)-1xv91":{"title":"onServerRunning(_:)","role":"symbol","abstract":[{"type":"text","text":"This is called once the server is running and we have an active Channel"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onServerRunning"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","required":true,"kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-1xv91","type":"topic","defaultImplementations":1},"logo.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/run()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/run()","title":"run()","kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/run()","type":"topic","abstract":[{"text":"Construct application and run it","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"role":"symbol","abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"url":"\/documentation\/hummingbird\/eventloopgroupprovider","title":"EventLoopGroupProvider","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"EventLoopGroupProvider","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","type":"topic","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/server-ajjq":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-ajjq","kind":"symbol","title":"server","abstract":[{"text":"Server channel builder","type":"text"}],"defaultImplementations":1,"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol\/server-ajjq","role":"symbol","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"server","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HTTPServerBuilder","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"type":"unresolvable","title":"ServiceLifecycle.Service","identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/logger-8mlwz":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"}],"role":"symbol","type":"topic","abstract":[{"text":"Logger","type":"text"}],"required":true,"url":"\/documentation\/hummingbird\/applicationprotocol\/logger-8mlwz","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","title":"logger","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Context":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"navigatorTitle":[{"text":"Context","kind":"identifier"}],"title":"ApplicationProtocol.Context","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/context","abstract":[{"type":"text","text":"Context passed with Request to responder"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"}}}