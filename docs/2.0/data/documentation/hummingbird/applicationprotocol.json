{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ApplicationProtocol"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","text":"Service","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ApplicationProtocol"},{"type":"text","text":" is a protocol used to define your application. It provides the glue between your router and HTTP server."}]},{"type":"paragraph","inlineContent":[{"text":"Implementing a ","type":"text"},{"code":"ApplicationProtocol","type":"codeVoice"},{"text":" requires two member variables: ","type":"text"},{"type":"codeVoice","code":"responder"},{"text":" and ","type":"text"},{"code":"server","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["struct MyApp: ApplicationProtocol {","    \/\/\/ The responder will return an `Response` given an `Request` and a context","    var responder: some Responder<BasicRequestContext> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in \"Hello\" }","        return router.buildResponder()","    }","    \/\/\/ Defines your server type. This is the default value so in","    \/\/\/ effect is unnecessary","    var server: HTTPChannelBuilder<some ChildChannel> { .http1() }","}","let app = MyApp()","try await app.runService()"]},{"type":"paragraph","inlineContent":[{"text":"If you donâ€™t want to create your own type, Hummingbird provides ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","type":"reference","isActive":true},{"type":"text","text":" a concrete implementation of "},{"code":"ApplicationProtocol","type":"codeVoice"},{"type":"text","text":"."}]}]}],"abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"metadata":{"roleHeading":"Protocol","symbolKind":"protocol","title":"ApplicationProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"externalID":"s:11Hummingbird19ApplicationProtocolP","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"modules":[{"name":"Hummingbird"}]},"seeAlsoSections":[{"title":"Application","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"anchor":"Application"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/applicationprotocol"]}],"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype"],"generated":true,"title":"Associated Types","anchor":"Associated-Types"},{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-ajjq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb"]},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)"],"title":"Instance Methods","anchor":"Instance-Methods"},{"title":"Type Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context"],"anchor":"Type-Aliases","generated":true}],"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","kind":"article","title":"Hummingbird Documentation","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/processesRunBeforeServerStart-5w24n":{"abstract":[{"text":"Array of processes run before we kick off the server. These tend to be processes that need","type":"text"},{"type":"text","text":" "},{"text":"other services running but need to be run before the server is setup","type":"text"}],"title":"processesRunBeforeServerStart","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"processesRunBeforeServerStart","kind":"identifier"},{"text":": [() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":"]","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/processesRunBeforeServerStart-5w24n","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/processesrunbeforeserverstart-5w24n","defaultImplementations":1,"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/runService(gracefulShutdownSignals:)":{"role":"symbol","title":"runService(gracefulShutdownSignals:)","url":"\/documentation\/hummingbird\/applicationprotocol\/runservice(gracefulshutdownsignals:)","abstract":[{"text":"Helper function that runs application inside a ServiceGroup which will gracefully","type":"text"},{"type":"text","text":" "},{"type":"text","text":"shutdown on signals SIGINT, SIGTERM"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"runService"},{"kind":"text","text":"("},{"text":"gracefulShutdownSignals","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11UnixSignals0A6SignalV","text":"UnixSignal"},{"kind":"text","text":"]) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/runService(gracefulShutdownSignals:)","kind":"symbol"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/eventLoopGroup-57h5r":{"abstract":[{"text":"event loop group used by application","type":"text"}],"title":"eventLoopGroup","required":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"eventLoopGroup","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/eventLoopGroup-57h5r","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/eventloopgroup-57h5r","defaultImplementations":1,"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"title":"ApplicationProtocol","kind":"symbol","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/applicationprotocol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/logger-8mlwz":{"defaultImplementations":1,"abstract":[{"type":"text","text":"Logger"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/logger-8mlwz","required":true,"url":"\/documentation\/hummingbird\/applicationprotocol\/logger-8mlwz","role":"symbol","title":"logger","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/onServerRunning(_:)-1xv91":{"abstract":[{"type":"text","text":"This is called once the server is running and we have an active Channel"}],"title":"onServerRunning(_:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onServerRunning"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/onServerRunning(_:)-1xv91","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/onserverrunning(_:)-1xv91","defaultImplementations":1,"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"abstract":[{"text":"Where should the application get its EventLoopGroup from","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/eventloopgroupprovider","type":"topic","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","title":"EventLoopGroupProvider"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/responder-swift.property":{"abstract":[{"text":"Build the responder","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/responder-swift.property","required":true,"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.property","role":"symbol","title":"responder","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"responder"},{"text":": ","kind":"text"},{"text":"Responder","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP9ResponderQa","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"abstract":[{"type":"text","text":"Application configuration"}],"url":"\/documentation\/hummingbird\/applicationconfiguration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","type":"topic","kind":"symbol","title":"ApplicationConfiguration","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ApplicationConfiguration","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ApplicationConfiguration"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Application"}],"navigatorTitle":[{"kind":"identifier","text":"Application"}],"type":"topic","title":"Application","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","url":"\/documentation\/hummingbird\/application","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/services-6oxjb":{"role":"symbol","abstract":[{"type":"text","text":"services attached to the application."}],"defaultImplementations":1,"url":"\/documentation\/hummingbird\/applicationprotocol\/services-6oxjb","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"services","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P","text":"Service"},{"text":"]","kind":"text"}],"required":true,"title":"services","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/services-6oxjb"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/server-ajjq":{"abstract":[{"text":"Server channel builder","type":"text"}],"title":"server","required":true,"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"server","kind":"identifier"},{"kind":"text","text":": "},{"text":"HTTPServerBuilder","preciseIdentifier":"s:15HummingbirdCore17HTTPServerBuilderV","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/server-ajjq","role":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/server-ajjq","defaultImplementations":1,"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/configuration-8uajt":{"abstract":[{"text":"Application configuration","type":"text"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/configuration-8uajt","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/configuration-8uajt","type":"topic","kind":"symbol","title":"configuration","required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"configuration"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird24ApplicationConfigurationV","text":"ApplicationConfiguration"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Context":{"abstract":[{"text":"Context passed with Request to responder","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Context","navigatorTitle":[{"text":"Context","kind":"identifier"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/context","role":"symbol","title":"ApplicationProtocol.Context","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"}]},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","type":"unresolvable","title":"ServiceLifecycle.Service"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/Responder-swift.associatedtype":{"abstract":[{"type":"text","text":"Responder that generates a response from a requests and context"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/Responder-swift.associatedtype","required":true,"url":"\/documentation\/hummingbird\/applicationprotocol\/responder-swift.associatedtype","role":"symbol","title":"Responder","type":"topic","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"}}}