{"variants":[{"paths":["\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF","modules":[{"name":"Hummingbird"}],"extendedModule":"Hummingbird","title":"test(_:_:)","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"XCTTestingSetup","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme"],"generated":true,"title":"Test Setup"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"testingSetup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"XCTTestingSetup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"test"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"HBXCTClientProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"testing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"indicates which type of testing framework we want"}]}]},{"name":"configuration","content":[{"inlineContent":[{"type":"text","text":"configuration of application"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You use "},{"code":"test","type":"codeVoice"},{"type":"text","text":" and "},{"code":"XCTExecute","type":"codeVoice"},{"type":"text","text":" to test applications. You can either test using"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":".router","type":"codeVoice"},{"type":"text","text":" test framework which sends requests directly to the router for testing your code or"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":".live","type":"codeVoice"},{"type":"text","text":" or "},{"code":".ahc","type":"codeVoice"},{"type":"text","text":" frameworks which both run live servers to pass requests to, but provide"},{"type":"text","text":" "},{"type":"text","text":"a single connection HTTP client or AsyncHTTPClient as a client respectively . The "},{"code":".router","type":"codeVoice"},{"type":"text","text":" test"},{"type":"text","text":" "},{"type":"text","text":"framework is quicker and doesnâ€™t require setting up a full server but will only test code run"},{"type":"text","text":" "},{"type":"text","text":"from request generation onwards."}]},{"type":"paragraph","inlineContent":[{"text":"The example below is using the ","type":"text"},{"type":"codeVoice","code":".router"},{"text":" framework to test","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let router = HBRouter()","router.get(\"\/hello\") { _ in","    return \"hello\"","}","let app = HBApplication(router: router)","app.test(.router) { client in","    \/\/ does my app return \"hello\" in the body for this route","    client.XCTExecute(uri: \"\/hello\", method: .GET) { response in","        XCTAssertEqual(String(buffer: response.body), \"hello\")","    }","}"]}]}],"abstract":[{"type":"text","text":"Test "},{"code":"HBApplication","type":"codeVoice"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTScheme":{"kind":"symbol","navigatorTitle":[{"text":"XCTScheme","kind":"identifier"}],"title":"XCTScheme","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"XCTScheme","kind":"identifier"}],"url":"\/documentation\/hummingbirdxct\/xctscheme","abstract":[{"type":"text","text":"HTTP Scheme to use with AsyncHTTPClient test framework"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationProtocol/test(_:_:)":{"kind":"symbol","title":"test(_:_:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"XCTTestingSetup","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)","abstract":[{"text":"Test ","type":"text"},{"code":"HBApplication","type":"codeVoice"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"type":"topic","title":"XCTTestingSetup","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","role":"symbol","navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"abstract":[{"text":"Type of test framework","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","url":"\/documentation\/hummingbirdxct","type":"topic","title":"HummingbirdXCT","abstract":[{"text":"Test framework for Hummingbird","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"identifier"}],"title":"HBXCTClientProtocol","url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol","navigatorTitle":[{"text":"HBXCTClientProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol","abstract":[{"text":"Protocol for client used by HummingbirdXCT","type":"text"}],"role":"symbol","type":"topic"}}}