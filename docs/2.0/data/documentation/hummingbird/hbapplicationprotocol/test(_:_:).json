{"abstract":[{"text":"Test ","type":"text"},{"code":"HBApplication","type":"codeVoice"}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV","text":"XCTTestingSetup"},{"kind":"text","text":", ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"HBXCTClientProtocol","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF","modules":[{"name":"Hummingbird"}],"title":"test(_:_:)","extendedModule":"Hummingbird"},"variants":[{"paths":["\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"testingSetup","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"XCTTestingSetup","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"test","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"testing","content":[{"inlineContent":[{"text":"indicates which type of testing framework we want","type":"text"}],"type":"paragraph"}]},{"name":"configuration","content":[{"inlineContent":[{"type":"text","text":"configuration of application"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"You use ","type":"text"},{"code":"test","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"XCTExecute","type":"codeVoice"},{"text":" to test applications. You can either test using","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":".router","type":"codeVoice"},{"text":" test framework which sends requests directly to the router for testing your code or","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":".live","type":"codeVoice"},{"text":" or ","type":"text"},{"code":".ahc","type":"codeVoice"},{"text":" frameworks which both run live servers to pass requests to, but provide","type":"text"},{"text":" ","type":"text"},{"text":"a single connection HTTP client or AsyncHTTPClient as a client respectively . The ","type":"text"},{"code":".router","type":"codeVoice"},{"text":" test","type":"text"},{"text":" ","type":"text"},{"text":"framework is quicker and doesnâ€™t require setting up a full server but will only test code run","type":"text"},{"text":" ","type":"text"},{"text":"from request generation onwards.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The example below is using the ","type":"text"},{"code":".router","type":"codeVoice"},{"text":" framework to test","type":"text"}],"type":"paragraph"},{"code":["let router = HBRouter()","router.get(\"\/hello\") { _ in","    return \"hello\"","}","let app = HBApplication(router: router)","app.test(.router) { client in","    \/\/ does my app return \"hello\" in the body for this route","    client.XCTExecute(uri: \"\/hello\", method: .GET) { response in","        XCTAssertEqual(String(buffer: response.body), \"hello\")","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme"],"generated":true,"title":"Test Setup"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol":{"role":"symbol","abstract":[{"type":"text","text":"Protocol for client used by HummingbirdXCT"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol","navigatorTitle":[{"text":"HBXCTClientProtocol","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol","title":"HBXCTClientProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"title":"XCTTestingSetup","abstract":[{"text":"Type of test framework","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTScheme":{"role":"symbol","abstract":[{"type":"text","text":"HTTP Scheme to use with AsyncHTTPClient test framework"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","navigatorTitle":[{"text":"XCTScheme","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdxct\/xctscheme","title":"XCTScheme","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"XCTScheme","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationProtocol/test(_:_:)":{"role":"symbol","abstract":[{"type":"text","text":"Test "},{"type":"codeVoice","code":"HBApplication"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)","kind":"symbol","url":"\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)","title":"test(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"XCTTestingSetup","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"HBXCTClientProtocol","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"title":"HummingbirdXCT","role":"collection","kind":"symbol","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdxct","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"}}}