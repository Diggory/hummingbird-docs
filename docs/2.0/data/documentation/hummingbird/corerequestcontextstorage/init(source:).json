{"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/corerequestcontextstorage\/init(source:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","text":"RequestContextSource","preciseIdentifier":"s:11Hummingbird20RequestContextSourceP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"init(source:)","symbolKind":"init","roleHeading":"Initializer","externalID":"s:11Hummingbird25CoreRequestContextStorageV6sourceACx_tcAA0cD6SourceRzlufc","modules":[{"name":"Hummingbird"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContextSource","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20RequestContextSourceP"},{"text":")","kind":"text"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage\/init(source:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"type":"topic","title":"CoreRequestContextStorage","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreRequestContextStorage"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","url":"\/documentation\/hummingbird\/corerequestcontextstorage","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CoreRequestContextStorage"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","kind":"symbol","title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/requestcontextsource","abstract":[{"text":"Protocol for source of request contexts","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContextSource","kind":"identifier"}],"type":"topic","title":"RequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","navigatorTitle":[{"text":"RequestContextSource","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage/init(source:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage\/init(source:)","kind":"symbol","abstract":[],"title":"init(source:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20RequestContextSourceP","text":"RequestContextSource"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/corerequestcontextstorage\/init(source:)"}}}