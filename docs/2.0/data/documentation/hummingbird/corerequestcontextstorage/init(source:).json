{"metadata":{"title":"init(source:)","externalID":"s:11Hummingbird25CoreRequestContextStorageV6sourceACx_tcAA0cD6SourceRzlufc","roleHeading":"Initializer","modules":[{"name":"Hummingbird"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"RequestContextSource","preciseIdentifier":"s:11Hummingbird20RequestContextSourceP"},{"kind":"text","text":")"}],"symbolKind":"init"},"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/corerequestcontextstorage\/init(source:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","preciseIdentifier":"s:11Hummingbird20RequestContextSourceP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage\/init(source:)"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"navigatorTitle":[{"text":"RequestContextSource","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","abstract":[{"type":"text","text":"Protocol for source of request contexts"}],"title":"RequestContextSource","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContextSource"}],"url":"\/documentation\/hummingbird\/requestcontextsource"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"url":"\/documentation\/hummingbird\/corerequestcontextstorage","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreRequestContextStorage"}],"abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"title":"CoreRequestContextStorage","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","navigatorTitle":[{"kind":"identifier","text":"CoreRequestContextStorage"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage/init(source:)":{"type":"topic","kind":"symbol","title":"init(source:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage\/init(source:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"source","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird20RequestContextSourceP","text":"RequestContextSource","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"url":"\/documentation\/hummingbird\/corerequestcontextstorage\/init(source:)"}}}