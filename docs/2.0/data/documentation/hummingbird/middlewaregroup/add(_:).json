{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"middleware","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","preciseIdentifier":"s:11Hummingbird16RouterMiddlewareP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"}],"metadata":{"title":"add(_:)","externalID":"s:11Hummingbird15MiddlewareGroupC3addyyAA06RouterB0_px7ContextRts_XPF","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16RouterMiddlewareP","text":"RouterMiddleware"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"modules":[{"name":"Hummingbird"}]},"abstract":[{"type":"text","text":"Add middleware to group"}],"variants":[{"paths":["\/documentation\/hummingbird\/middlewaregroup\/add(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/add(_:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup/add(_:)":{"title":"add(_:)","role":"symbol","url":"\/documentation\/hummingbird\/middlewaregroup\/add(_:)","type":"topic","abstract":[{"type":"text","text":"Add middleware to group"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird16RouterMiddlewareP","text":"RouterMiddleware","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/add(_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"title":"MiddlewareGroup","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/middlewaregroup","type":"topic","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/request","type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"title":"MiddlewareProtocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol","type":"topic","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"title":"RouterMiddleware","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/routermiddleware","type":"topic","abstract":[{"type":"text","text":"Version of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"title":"Response","navigatorTitle":[{"text":"Response","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/response","type":"topic","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","kind":"symbol"}}}