{"variants":[{"paths":["\/documentation\/hummingbird\/middlewaregroup\/add(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","externalID":"s:11Hummingbird15MiddlewareGroupC3addyACyxGXDAA0B8Protocol_px7ContextRts_0A4Core7RequestV5InputRtsAI8ResponseV6OutputRtsXPF","title":"add(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":"<","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"middleware"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","kind":"typeIdentifier","text":"MiddlewareProtocol"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":", "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","kind":"typeIdentifier","text":"Response"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This middleware will only be applied to endpoints added after this call."}]}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/add(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Add middleware to group","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"type":"topic","title":"MiddlewareGroup","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"kind":"symbol","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewaregroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"type":"topic","url":"\/documentation\/hummingbird\/request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","title":"Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Response":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Response","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"title":"Response","url":"\/documentation\/hummingbird\/response","role":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"type":"topic","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","kind":"symbol","title":"MiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup/add(_:)":{"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/middlewaregroup\/add(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"add(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup\/add(_:)","abstract":[{"text":"Add middleware to group","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird"}}}