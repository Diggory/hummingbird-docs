{"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"],"type":"conformsTo","title":"Conforms To"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterGroup"}],"symbolKind":"struct","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"role":"symbol","externalID":"s:11Hummingbird11RouterGroupV","title":"RouterGroup","roleHeading":"Structure"},"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"topicSections":[{"anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/on(_:method:responder:)"],"title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"typeIdentifier","text":"RequestContext"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"The code below creates an "},{"code":"RouterGroup","type":"codeVoice"},{"type":"text","text":"with path “todos” and adds GET and PUT routes on “todos” and adds GET, PUT and"},{"text":" ","type":"text"},{"type":"text","text":"DELETE routes on “todos\/:id” where id is the identifier for the todo"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["app.router",".group(\"todos\")",".get(use: todoController.list)",".put(use: todoController.create)",".get(\":id\", use: todoController.get)",".put(\":id\", use: todoController.update)",".delete(\":id\", use: todoController.delete)"]}]}],"variants":[{"paths":["\/documentation\/hummingbird\/routergroup"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"anchor":"Router","title":"Router","generated":true}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"title":"RequestID","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestID"}],"url":"\/documentation\/hummingbird\/requestid","navigatorTitle":[{"kind":"identifier","text":"RequestID"}],"kind":"symbol","abstract":[{"text":"Generate Unique ID for each request","type":"text"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/add(middleware:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"add","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middleware"},{"text":": ","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV7Contextxmfp","text":"Context"},{"kind":"text","text":">) -> "},{"text":"RouterGroup","preciseIdentifier":"s:11Hummingbird11RouterGroupV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird11RouterGroupV7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/add(middleware:)","url":"\/documentation\/hummingbird\/routergroup\/add(middleware:)","title":"add(middleware:)","abstract":[{"type":"text","text":"Add middleware to RouterGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"role":"symbol","url":"\/documentation\/hummingbird\/routerpath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","type":"topic","kind":"symbol","abstract":[{"text":"Split router path into components","type":"text"}],"title":"RouterPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"title":"RouterGroup","type":"topic","url":"\/documentation\/hummingbird\/routergroup","kind":"symbol","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"suffix to the endpoint path"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","type":"topic","url":"\/documentation\/hummingbird\/router","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Router"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"Responder"},{"text":" that will follow these rules.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/RouterMethods-Implementations":{"kind":"article","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations","role":"collectionGroup","url":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations","type":"topic","title":"RouterMethods Implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"role":"symbol","url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"symbol","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"title":"RequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}]},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","url":"\/documentation\/index","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","title":"Request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Request","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"title":"HTTPResponderBuilder","type":"topic","url":"\/documentation\/hummingbird\/httpresponderbuilder","kind":"symbol","navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HTTPResponderBuilder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"title":"RouterResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerresponder","navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"kind":"symbol","abstract":[],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"title":"RouteCollection","type":"topic","url":"\/documentation\/hummingbird\/routecollection","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouteCollection"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","abstract":[{"text":"Collection of routes","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"title":"RouterOptions","type":"topic","url":"\/documentation\/hummingbird\/routeroptions","kind":"symbol","navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterOptions","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","abstract":[{"type":"text","text":"Router Options"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","images":[{"identifier":"logo.png","type":"icon"}],"title":"Router","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/hummingbird\/routerguide","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"title":"RouterMethods","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMethods"}],"url":"\/documentation\/hummingbird\/routermethods","navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"kind":"symbol","abstract":[{"type":"text","text":"Conform to "},{"code":"RouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/on(_:method:responder:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Responder"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"responder"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11RouterGroupV2on_6method9responderACyxGAA0B4PathV_9HTTPTypes11HTTPRequestV6MethodVqd__t7ContextQyd__RszAA13HTTPResponderRd__lF9ResponderL_qd__mfp","text":"Responder","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV","text":"RouterGroup"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/on(_:method:responder:)","url":"\/documentation\/hummingbird\/routergroup\/on(_:method:responder:)","title":"on(_:method:responder:)","abstract":[{"text":"Add responder to call when path and method are matched","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"title":"HTTPResponder","type":"topic","url":"\/documentation\/hummingbird\/httpresponder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPResponder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"title":"CallbackResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CallbackResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/callbackresponder","navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"title":"EndpointPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EndpointPath"}],"url":"\/documentation\/hummingbird\/endpointpath","navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Endpoint path storage","type":"text"}],"role":"symbol","type":"topic"}}}