{"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterGroup"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The code below creates an "},{"type":"codeVoice","code":"RouterGroup"},{"text":"with path “todos” and adds GET and PUT routes on “todos” and adds GET, PUT and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"DELETE routes on “todos\/:id” where id is the identifier for the todo"}]},{"type":"codeListing","syntax":null,"code":["app.router",".group(\"todos\")",".get(use: todoController.list)",".put(use: todoController.create)",".get(\":id\", use: todoController.get)",".put(\":id\", use: todoController.update)",".delete(\":id\", use: todoController.delete)"]}],"kind":"content"}],"metadata":{"symbolKind":"struct","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"title":"RouterGroup","externalID":"s:11Hummingbird11RouterGroupV","role":"symbol","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/on(_:method:responder:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"anchor":"Default-Implementations","generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"]}],"variants":[{"paths":["\/documentation\/hummingbird\/routergroup"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"seeAlsoSections":[{"anchor":"Router","title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"kind":"symbol","abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}],"title":"HTTPResponderBuilder","role":"symbol","url":"\/documentation\/hummingbird\/httpresponderbuilder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPResponderBuilder"}],"navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/add(middleware:)":{"url":"\/documentation\/hummingbird\/routergroup\/add(middleware:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"text":"(","kind":"text"},{"text":"middleware","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":"<","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird11RouterGroupV7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV","text":"RouterGroup"},{"kind":"text","text":"<"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV7Contextxmfp"},{"kind":"text","text":">"}],"title":"add(middleware:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/add(middleware:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Add middleware to RouterGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"kind":"symbol","abstract":[{"type":"text","text":"Collection of routes"}],"title":"RouteCollection","role":"symbol","url":"\/documentation\/hummingbird\/routecollection","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouteCollection"}],"navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"kind":"symbol","abstract":[{"type":"text","text":"Router Options"}],"title":"RouterOptions","role":"symbol","url":"\/documentation\/hummingbird\/routeroptions","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterOptions"}],"navigatorTitle":[{"kind":"identifier","text":"RouterOptions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"url":"\/documentation\/hummingbird\/endpointpath","title":"EndpointPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"EndpointPath","kind":"identifier"}],"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Endpoint path storage"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"kind":"symbol","title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"navigatorTitle":[{"text":"Request","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"url":"\/documentation\/hummingbird\/routermethods","title":"RouterMethods","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMethods"}],"navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"role":"symbol","abstract":[{"type":"text","text":"Conform to "},{"code":"RouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"url":"\/documentation\/hummingbird\/router","title":"Router","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Router","kind":"identifier"}],"navigatorTitle":[{"text":"Router","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"Responder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"kind":"symbol","abstract":[],"title":"RouterResponder","role":"symbol","url":"\/documentation\/hummingbird\/routerresponder","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterResponder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"url":"\/documentation\/hummingbird\/httpresponder","title":"HTTPResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HTTPResponder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"role":"symbol","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/on(_:method:responder:)":{"type":"topic","abstract":[{"type":"text","text":"Add responder to call when path and method are matched"}],"kind":"symbol","role":"symbol","title":"on(_:method:responder:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"text":"Responder","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"text":": ","kind":"text"},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"responder"},{"text":": ","kind":"text"},{"text":"Responder","preciseIdentifier":"s:11Hummingbird11RouterGroupV2on_6method9responderACyxGAA0B4PathV_9HTTPTypes11HTTPRequestV6MethodVqd__t7ContextQyd__RszAA13HTTPResponderRd__lF9ResponderL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV","text":"RouterGroup"},{"kind":"text","text":"<"},{"text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/hummingbird\/routergroup\/on(_:method:responder:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/on(_:method:responder:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"kind":"symbol","abstract":[{"type":"text","text":"Generate Unique ID for each request"}],"title":"RequestID","role":"symbol","url":"\/documentation\/hummingbird\/requestid","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RequestID","kind":"identifier"}],"navigatorTitle":[{"text":"RequestID","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"url":"\/documentation\/hummingbird\/callbackresponder","title":"CallbackResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CallbackResponder"}],"navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"role":"symbol","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":", and is therefore instantiated alongside the request."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"kind":"symbol","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"text":"suffix to the endpoint path","type":"text"}],"title":"RouterGroup","role":"symbol","url":"\/documentation\/hummingbird\/routergroup","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterGroup"}],"navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/routerguide","type":"topic","title":"Router","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","role":"collectionGroup","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/RouterMethods-Implementations":{"kind":"article","title":"RouterMethods Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations","type":"topic","url":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"url":"\/documentation\/hummingbird\/routerpath","title":"RouterPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterPath"}],"navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"role":"symbol","abstract":[{"text":"Split router path into components","type":"text"}],"type":"topic"}}}