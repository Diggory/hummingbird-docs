{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/childrequestcontext"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChildRequestContext","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ParentContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ChildRequestContextP06ParentD0Qa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/ParentContext"},{"text":"> : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","text":"Source"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"metadata":{"navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"externalID":"s:11Hummingbird19ChildRequestContextP","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ChildRequestContext","kind":"identifier"}],"role":"symbol","modules":[{"name":"Hummingbird"}],"title":"ChildRequestContext","symbolKind":"protocol"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"A RequestContext that can be initialized from another RequestContext where initialization","type":"text"},{"type":"text","text":" "},{"text":"can throw errors which will be passed back up the middleware stack","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/ParentContext"],"anchor":"Associated-Types","title":"Associated Types","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/init(context:)"],"generated":true,"anchor":"Initializers","title":"Initializers"}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","type":"inheritsFrom"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","navigatorTitle":[{"kind":"identifier","text":"RequestContextSource"}],"kind":"symbol","title":"RequestContextSource","abstract":[{"text":"Protocol for source of request contexts","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/requestcontextsource","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContextSource","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"abstract":[{"type":"text","text":"A RequestContext that can be initialized from another RequestContext where initialization"},{"text":" ","type":"text"},{"type":"text","text":"can throw errors which will be passed back up the middleware stack"}],"role":"symbol","title":"ChildRequestContext","navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/childrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ChildRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/hummingbird\/initializablefromsource\/source","title":"Source","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}],"type":"topic","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"role":"symbol","title":"InitializableFromSource","navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"type":"topic","url":"\/documentation\/hummingbird\/initializablefromsource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","title":"Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic"},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","title":"RequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/requestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext/init(context:)":{"url":"\/documentation\/hummingbird\/childrequestcontext\/init(context:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ParentContext","preciseIdentifier":"s:11Hummingbird19ChildRequestContextP06ParentD0Qa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/init(context:)","role":"symbol","kind":"symbol","type":"topic","title":"init(context:)","required":true,"abstract":[{"type":"text","text":"Initialise RequestContext from source"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext/ParentContext":{"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/ParentContext","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ParentContext"},{"text":" : ","kind":"text"},{"text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/childrequestcontext\/parentcontext","role":"symbol","type":"topic","kind":"symbol","title":"ParentContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","url":"\/documentation\/hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic"}}}