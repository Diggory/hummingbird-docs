{"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbird\/routergroup\/add(middlewarestack:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@","kind":"attribute"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO","text":"MiddlewareFixedTypeBuilder","kind":"attribute"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"},{"text":" ","kind":"text"},{"text":"middlewareStack","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"middlewareStack","content":[{"type":"paragraph","inlineContent":[{"text":"Middleware stack result builder","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"router","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Add multiple middleware to the router using the middleware stack result builder","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder"},{"text":".","type":"text"}]},{"code":["router.add {","    LogRequestsMiddleware()","    MetricsMiddleware()","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This gives a slight performance boost over adding them individually.","type":"text"}]}],"kind":"content"}],"abstract":[{"text":"Add middleware stack to router","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"symbolKind":"method","extendedModule":"Hummingbird","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"text":"middlewareStack","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:11Hummingbird13RouterMethodsPAAE3add15middlewareStackxqd__yXE_tAA18MiddlewareProtocolRd__7ContextQyd__AGRtz0A4Core7RequestV5InputRtd__AJ8ResponseV6OutputRtd__lF::SYNTHESIZED::s:11Hummingbird11RouterGroupV","role":"symbol","title":"add(middlewareStack:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/add(middlewareStack:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"title":"Response","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/response","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","navigatorTitle":[{"text":"Response","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"type":"topic","role":"collection","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","title":"MiddlewareProtocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"title":"MiddlewareFixedTypeBuilder","abstract":[{"text":"Middleware stack result builder","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/add(middlewareStack:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/add(middlewareStack:)","abstract":[{"type":"text","text":"Add middleware stack to router"}],"title":"add(middlewareStack:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middlewareStack"},{"kind":"text","text":": () -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/hummingbird\/routergroup\/add(middlewarestack:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/RouterMethods-Implementations":{"url":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations","abstract":[],"title":"RouterMethods Implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"role":"collectionGroup","title":"Router","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","url":"\/documentation\/hummingbird\/routerguide","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"title":"RouterGroup","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/routergroup","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"title":"Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/request","navigatorTitle":[{"text":"Request","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"title":"Context","abstract":[],"required":true,"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier","text":"RequestContext"}],"url":"\/documentation\/hummingbird\/routermethods\/context","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","role":"collection","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}