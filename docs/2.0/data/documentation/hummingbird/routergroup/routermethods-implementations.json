{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations","interfaceLanguage":"swift"},"metadata":{"title":"RouterMethods Implementations","roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"Hummingbird"}]},"sections":[],"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/addMiddleware(buildMiddlewareStack:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/addRoutes(_:atPath:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/delete(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/get(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/group(_:context:)-1oc61","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/group(_:context:)-85wfc","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/head(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/on(_:method:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/patch(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/post(_:use:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/put(_:use:)"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/post(_:use:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"post","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"post(_:use:)","abstract":[{"type":"text","text":"POST path for async closure returning type conforming to ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/post(_:use:)","role":"symbol","url":"\/documentation\/hummingbird\/routergroup\/post(_:use:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","url":"\/documentation\/index","role":"collection","kind":"article","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/put(_:use:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/put(_:use:)","title":"put(_:use:)","url":"\/documentation\/hummingbird\/routergroup\/put(_:use:)","abstract":[{"text":"PUT path for async closure returning type conforming to ResponseGenerator","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"put","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/addMiddleware(buildMiddlewareStack:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"buildMiddlewareStack","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":"<","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":">) -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"addMiddleware(buildMiddlewareStack:)","abstract":[{"text":"Add middleware stack to router","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/addMiddleware(buildMiddlewareStack:)","role":"symbol","url":"\/documentation\/hummingbird\/routergroup\/addmiddleware(buildmiddlewarestack:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/get(_:use:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/get(_:use:)","type":"topic","url":"\/documentation\/hummingbird\/routergroup\/get(_:use:)","title":"get(_:use:)","abstract":[{"type":"text","text":"GET path for async closure returning type conforming to ResponseGenerator"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"type":"topic","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"title":"Router","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","url":"\/documentation\/hummingbird\/routerguide","role":"collectionGroup","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/group(_:context:)-1oc61":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"TargetContext"},{"text":">(","kind":"text"},{"text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp","text":"TargetContext"},{"text":".Type) -> ","kind":"text"},{"text":"RouterGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA14RequestContextRd__6SourceQyd__0I0RtzlF06TargetI0L_qd__mfp","kind":"typeIdentifier","text":"TargetContext"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Return a group inside the current group that transforms the "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true,"type":"reference"}],"title":"group(_:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/group(_:context:)-1oc61","role":"symbol","url":"\/documentation\/hummingbird\/routergroup\/group(_:context:)-1oc61","type":"topic"},"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"type":"topic","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","url":"\/documentation\/hummingbird\/routergroup","kind":"symbol","role":"symbol","title":"RouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/group(_:context:)-85wfc":{"abstract":[{"text":"Return a group inside the current group that transforms the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true}],"title":"group(_:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/group(_:context:)-85wfc","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"kind":"text","text":"<"},{"text":"TargetContext","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","text":"TargetContext","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"text":"RouterGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV"},{"kind":"text","text":"<"},{"text":"TargetContext","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/routergroup\/group(_:context:)-85wfc"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/patch(_:use:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/patch(_:use:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"patch","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"PATCH path for async closure returning type conforming to ResponseGenerator"}],"url":"\/documentation\/hummingbird\/routergroup\/patch(_:use:)","title":"patch(_:use:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/head(_:use:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"head"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier","text":"RouterPath"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/head(_:use:)","kind":"symbol","title":"head(_:use:)","role":"symbol","url":"\/documentation\/hummingbird\/routergroup\/head(_:use:)","abstract":[{"type":"text","text":"HEAD path for async closure returning type conforming to ResponseGenerator"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/group(_:)":{"title":"group(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV","text":"RouterGroup"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/routergroup\/group(_:)","role":"symbol","abstract":[{"type":"text","text":"Return a group inside the current group"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/group(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/addRoutes(_:atPath:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"addRoutes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouteCollection","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15RouteCollectionC"},{"text":"<","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"atPath","kind":"externalParam"},{"kind":"text","text":": "},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Add route collection to router","type":"text"}],"title":"addRoutes(_:atPath:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/addRoutes(_:atPath:)","role":"symbol","url":"\/documentation\/hummingbird\/routergroup\/addroutes(_:atpath:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/on(_:method:use:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/on(_:method:use:)","type":"topic","url":"\/documentation\/hummingbird\/routergroup\/on(_:method:use:)","title":"on(_:method:use:)","abstract":[{"type":"text","text":"Add path for async closure"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":", "},{"text":"use","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/delete(_:use:)":{"type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/routergroup\/delete(_:use:)","abstract":[{"type":"text","text":"DELETE path for async closure returning type conforming to ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/delete(_:use:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"delete","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"delete(_:use:)"}}}