{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/head(_:use:)"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"head","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"use"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird13RouterMethodsPAAE4head_3usexAA0B4PathV_qd__0A4Core7RequestV_7ContextQztYaYbKctAA17ResponseGeneratorRd__lF::SYNTHESIZED::s:11Hummingbird11RouterGroupV","title":"head(_:use:)","roleHeading":"Instance Method","extendedModule":"Hummingbird","symbolKind":"method"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"]]},"abstract":[{"text":"HEAD path for async closure returning type conforming to ResponseGenerator","type":"text"}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbird\/routergroup\/head(_:use:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"head"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"path","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","text":"RouterPath","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"text":" = \"\", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseGenerator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"role":"symbol","url":"\/documentation\/hummingbird\/routermethods\/context","title":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","abstract":[],"type":"topic","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier","text":"RequestContext"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"kind":"symbol","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"text":"suffix to the endpoint path","type":"text"}],"title":"RouterGroup","role":"symbol","url":"\/documentation\/hummingbird\/routergroup","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterGroup"}],"navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"kind":"symbol","title":"ResponseGenerator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","url":"\/documentation\/hummingbird\/responsegenerator","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseGenerator","kind":"identifier"}],"abstract":[{"text":"Object that can generate a ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"type":"topic","role":"symbol"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/routerguide","type":"topic","title":"Router","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","role":"collectionGroup","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/head(_:use:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/head(_:use:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"head","kind":"identifier"},{"kind":"text","text":"("},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"head(_:use:)","kind":"symbol","abstract":[{"type":"text","text":"HEAD path for async closure returning type conforming to ResponseGenerator"}],"type":"topic","url":"\/documentation\/hummingbird\/routergroup\/head(_:use:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/RouterMethods-Implementations":{"kind":"article","title":"RouterMethods Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations","type":"topic","url":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"url":"\/documentation\/hummingbird\/routerpath","title":"RouterPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterPath"}],"navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"role":"symbol","abstract":[{"text":"Split router path into components","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"kind":"symbol","title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"navigatorTitle":[{"text":"Request","kind":"identifier"}],"type":"topic","role":"symbol"}}}