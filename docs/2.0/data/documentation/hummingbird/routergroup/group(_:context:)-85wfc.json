{"kind":"symbol","metadata":{"modules":[{"name":"Hummingbird"}],"symbolKind":"method","extendedModule":"Hummingbird","roleHeading":"Instance Method","role":"symbol","title":"group(_:context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"group"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"TargetContext"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","kind":"typeIdentifier","text":"TargetContext"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"RouterGroup","preciseIdentifier":"s:11Hummingbird11RouterGroupV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"TargetContext","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp"},{"text":">","kind":"text"}],"externalID":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF::SYNTHESIZED::s:11Hummingbird11RouterGroupV"},"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/routergroup\/group(_:context:)-85wfc"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/group(_:context:)-85wfc"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"text":"<","kind":"text"},{"text":"TargetContext","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"path","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"},{"text":" = \"\", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TargetContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11Hummingbird11RouterGroupV","kind":"typeIdentifier","text":"RouterGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},{"kind":"text","text":"<"},{"text":"TargetContext","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"TargetContext"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","text":"ChildRequestContext","preciseIdentifier":"s:11Hummingbird19ChildRequestContextP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"},{"text":" == ","kind":"text"},{"text":"TargetContext","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11Hummingbird19ChildRequestContextP06ParentD0Qa","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/ParentContext","text":"ParentContext"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the transform to work the "},{"code":"Source","type":"codeVoice"},{"type":"text","text":" of the transformed "},{"type":"codeVoice","code":"RequestContext"},{"text":" needs","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to be the original "},{"type":"codeVoice","code":"RequestContext"},{"type":"text","text":" eg"}]},{"syntax":null,"code":["struct TransformedRequestContext: ChildRequestContext {","    typealias ParentContext = BasicRequestContext","    var coreContext: CoreRequestContextStorage","    init(context: ParentContext) throws {","        self.coreContext = .init(source: source)","    }","}"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameters"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"path: path prefix to add to routes inside this group"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"convertContext: Function converting context"}]}]}]}]}]}]}],"abstract":[{"type":"text","text":"Return a group inside the current group that transforms the "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"reference"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/RouterMethods-Implementations":{"title":"RouterMethods Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext/ParentContext":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ParentContext"},{"kind":"text","text":" : "},{"text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"url":"\/documentation\/hummingbird\/childrequestcontext\/parentcontext","abstract":[],"kind":"symbol","title":"ParentContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext\/ParentContext","required":true,"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"url":"\/documentation\/hummingbird\/routerguide","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","role":"collectionGroup","title":"Router","kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"url":"\/documentation\/hummingbird\/childrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","role":"symbol","kind":"symbol","title":"ChildRequestContext","type":"topic","navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"A RequestContext that can be initialized from another RequestContext where initialization"},{"type":"text","text":" "},{"text":"can throw errors which will be passed back up the middleware stack","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"text":"suffix to the endpoint path","type":"text"}],"url":"\/documentation\/hummingbird\/routergroup","kind":"symbol","title":"RouterGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/group(_:context:)-85wfc":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"text":"<","kind":"text"},{"text":"TargetContext","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"text":"TargetContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp"},{"kind":"text","text":".Type) -> "},{"text":"RouterGroup","preciseIdentifier":"s:11Hummingbird11RouterGroupV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE5group_7contextAA0B5GroupVyqd__GAA0B4PathV_qd__mtAA19ChildRequestContextRd__06ParentJ0Qyd__0J0RtzlF06TargetJ0L_qd__mfp","text":"TargetContext"},{"kind":"text","text":">"}],"abstract":[{"text":"Return a group inside the current group that transforms the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"}],"url":"\/documentation\/hummingbird\/routergroup\/group(_:context:)-85wfc","title":"group(_:context:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/group(_:context:)-85wfc"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/request","kind":"symbol","title":"Request","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerpath","abstract":[{"text":"Split router path into components","type":"text"}],"kind":"symbol","title":"RouterPath","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"url":"\/documentation\/hummingbird\/routermethods\/context","abstract":[],"kind":"symbol","title":"Context","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","required":true,"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird","kind":"symbol","title":"Hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/requestcontext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"kind":"symbol","title":"RequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","role":"symbol"},"logo.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"url":"\/documentation\/index","kind":"article","title":"Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection"}}}