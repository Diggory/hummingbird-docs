{"variants":[{"paths":["\/documentation\/hummingbird\/routergroup\/on(_:method:use:)-7ir9p"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier","text":"HTTPRequest"},{"kind":"text","text":"."},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handlerType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE2on_6method3usexSS_9HTTPTypes11HTTPRequestV6MethodVqd__mtAA12RouteHandlerRd__AA17ResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0K0L_qd__mfp","kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird12RouteHandlerP","kind":"typeIdentifier","text":"RouteHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","kind":"typeIdentifier","text":"ResponseGenerator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"languages":["swift"],"platforms":["Linux"]}]}],"metadata":{"extendedModule":"Hummingbird","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Handler","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE2on_6method3usexSS_9HTTPTypes11HTTPRequestV6MethodVqd__mtAA12RouteHandlerRd__AA17ResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0K0L_qd__mfp","text":"Handler","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Instance Method","externalID":"s:11Hummingbird13RouterMethodsPAAE2on_6method3usexSS_9HTTPTypes11HTTPRequestV6MethodVqd__mtAA12RouteHandlerRd__AA17ResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF::SYNTHESIZED::s:11Hummingbird11RouterGroupV","title":"on(_:method:use:)","modules":[{"name":"Hummingbird"}],"symbolKind":"method","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/on(_:method:use:)-7ir9p","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"type":"text","text":"Add path for "},{"type":"codeVoice","code":"RouteHandler"},{"type":"text","text":" that returns a value conforming to "},{"type":"codeVoice","code":"ResponseGenerator"}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/on(_:method:use:)-7ir9p":{"kind":"symbol","title":"on(_:method:use:)","url":"\/documentation\/hummingbird\/routergroup\/on(_:method:use:)-7ir9p","abstract":[{"type":"text","text":"Add path for "},{"type":"codeVoice","code":"RouteHandler"},{"type":"text","text":" that returns a value conforming to "},{"type":"codeVoice","code":"ResponseGenerator"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/on(_:method:use:)-7ir9p","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Handler","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsPAAE2on_6method3usexSS_9HTTPTypes11HTTPRequestV6MethodVqd__mtAA12RouteHandlerRd__AA17ResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0K0L_qd__mfp","text":"Handler","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"role":"collection","type":"topic","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","url":"\/documentation\/hummingbird\/responsegenerator","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"role":"symbol","type":"topic","title":"ResponseGenerator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseGenerator"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteHandler":{"role":"symbol","abstract":[{"text":"Object for handling requests.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteHandler"}],"title":"RouteHandler","type":"topic","url":"\/documentation\/hummingbird\/routehandler","navigatorTitle":[{"kind":"identifier","text":"RouteHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","url":"\/documentation\/hummingbird\/routerguide","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"role":"collectionGroup","type":"topic","title":"Router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/RouterMethods-Implementations":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations","url":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations","abstract":[],"role":"collectionGroup","type":"topic","title":"RouterMethods Implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","type":"topic","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","url":"\/documentation\/hummingbird\/routergroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"role":"symbol","type":"topic","title":"RouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterGroup"}]}}}