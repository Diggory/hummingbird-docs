{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody\/AsyncSequence-Implementations"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody\/compactMap(_:)-4itpc","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"code":"AsyncSequence.compactMap(_:)","type":"codeVoice"},{"type":"text","text":"."}],"metadata":{"roleHeading":"Instance Method","modules":[{"relatedModules":["_Concurrency"],"name":"Hummingbird"}],"symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ElementOfResult"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","kind":"typeIdentifier","text":"AsyncThrowingCompactMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":">"}],"externalID":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:15HummingbirdCore13HBRequestBodyO","extendedModule":"_Concurrency","platforms":[{"name":"iOS","deprecated":false,"unavailable":false,"introducedAt":"13.0","beta":false},{"name":"macOS","deprecated":false,"unavailable":false,"introducedAt":"10.15","beta":false},{"name":"tvOS","deprecated":false,"unavailable":false,"introducedAt":"13.0","beta":false},{"name":"watchOS","deprecated":false,"unavailable":false,"introducedAt":"6.0","beta":false}],"title":"compactMap(_:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"@preconcurrency","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ElementOfResult","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"AsyncThrowingCompactMapSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ElementOfResult","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/hummingbird\/hbrequestbody\/compactmap(_:)-4itpc"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody/compactMap(_:)-4itpc":{"url":"\/documentation\/hummingbird\/hbrequestbody\/compactmap(_:)-4itpc","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compactMap"},{"kind":"text","text":"<"},{"text":"ElementOfResult","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","kind":"typeIdentifier","text":"AsyncThrowingCompactMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ElementOfResult"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody\/compactMap(_:)-4itpc","kind":"symbol","title":"compactMap(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody/AsyncSequence-Implementations":{"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody\/AsyncSequence-Implementations","kind":"article","role":"collectionGroup","type":"topic","title":"AsyncSequence Implementations","url":"\/documentation\/hummingbird\/hbrequestbody\/asyncsequence-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"type":"topic","title":"HBRequestBody","url":"\/documentation\/hummingbird\/hbrequestbody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","role":"symbol","navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","kind":"symbol"}}}