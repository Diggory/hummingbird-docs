{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"paths":["\/documentation\/hummingbird\/hbcorsmiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/handle(_:context:next:)"]},{"title":"Enumerations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/AllowOrigin"]}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:11Hummingbird16HBCORSMiddlewareV","roleHeading":"Structure","role":"symbol","modules":[{"name":"Hummingbird"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"}],"title":"HBCORSMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBCORSMiddleware"}]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"If request has “origin” header then generate CORS headers. If method is OPTIONS"},{"type":"text","text":" "},{"type":"text","text":"then return an empty body with all the standard CORS headers otherwise send"},{"type":"text","text":" "},{"type":"text","text":"request onto the next handler and when you receive the response add a"},{"type":"text","text":" "},{"type":"text","text":"“access-control-allow-origin” header"}],"type":"paragraph"}],"kind":"content"}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","title":"init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allowOrigin"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV11AllowOriginO","text":"AllowOrigin"},{"kind":"text","text":", "},{"kind":"externalParam","text":"allowHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV","text":"HTTPField"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV","text":"Name"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"allowMethods"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"allowCredentials"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exposedHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"maxAge"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount"},{"kind":"text","text":"?)"}],"type":"topic","abstract":[{"type":"text","text":"Initialize CORS middleware"}],"url":"\/documentation\/hummingbird\/hbcorsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"role":"symbol","type":"topic","title":"HBTracingMiddleware","url":"\/documentation\/hummingbird\/hbtracingmiddleware","kind":"symbol","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBTracingMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","title":"HBBaseRequestContext","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"url":"\/documentation\/hummingbird\/hbmetricsmiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"type":"topic","title":"HBMetricsMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMetricsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware/handle(_:context:next:)":{"type":"topic","abstract":[{"text":"apply CORS middleware","type":"text"}],"title":"handle(_:context:next:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV7Contextxmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV7Contextxmfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/handle(_:context:next:)","url":"\/documentation\/hummingbird\/hbcorsmiddleware\/handle(_:context:next:)","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"abstract":[{"type":"text","text":"Middleware Handler with generic input, context and output types"}],"kind":"symbol","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","url":"\/documentation\/hummingbird\/middleware","title":"Middleware","type":"topic","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Middleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSetCodableMiddleware":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"HBSetCodableMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware","url":"\/documentation\/hummingbird\/hbsetcodablemiddleware","type":"topic","title":"HBSetCodableMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSetCodableMiddleware"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","type":"topic","title":"HBCORSMiddleware","url":"\/documentation\/hummingbird\/hbcorsmiddleware","kind":"symbol","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"title":"HBMiddlewareProtocol","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware/AllowOrigin":{"url":"\/documentation\/hummingbird\/hbcorsmiddleware\/alloworigin","role":"symbol","type":"topic","title":"HBCORSMiddleware.AllowOrigin","abstract":[{"text":"Defines what origins are allowed","type":"text"}],"navigatorTitle":[{"text":"AllowOrigin","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllowOrigin","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/AllowOrigin"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"role":"symbol","title":"HBMiddlewareGroup","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"type":"topic","url":"\/documentation\/hummingbird\/hbmiddlewaregroup","kind":"symbol","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"title":"HBLogRequestsMiddleware","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","url":"\/documentation\/hummingbird\/hblogrequestsmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"kind":"symbol","navigatorTitle":[{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"role":"symbol"}}}