{"sections":[],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware"],"generated":true,"title":"Middleware"}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"}],"roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"HBCORSMiddleware"}],"externalID":"s:11Hummingbird16HBCORSMiddlewareV","role":"symbol","modules":[{"name":"Hummingbird"}],"title":"HBCORSMiddleware"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"paths":["\/documentation\/hummingbird\/hbcorsmiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"text":"If request has “origin” header then generate CORS headers. If method is OPTIONS","type":"text"},{"text":" ","type":"text"},{"text":"then return an empty body with all the standard CORS headers otherwise send","type":"text"},{"text":" ","type":"text"},{"text":"request onto the next handler and when you receive the response add a","type":"text"},{"text":" ","type":"text"},{"text":"“access-control-allow-origin” header","type":"text"}],"type":"paragraph"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/handle(_:context:next:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/AllowOrigin"],"title":"Enumerations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBCORSMiddleware","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"role":"symbol","title":"HBCORSMiddleware","type":"topic","url":"\/documentation\/hummingbird\/hbcorsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSetCodableMiddleware":{"title":"HBSetCodableMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware","kind":"symbol","navigatorTitle":[{"text":"HBSetCodableMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSetCodableMiddleware","kind":"identifier"}],"type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/hummingbird\/hbsetcodablemiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"title":"HBMiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","kind":"symbol","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"role":"symbol","url":"\/documentation\/hummingbird\/hbmiddlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"role":"symbol","title":"HBTracingMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBTracingMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","type":"topic","url":"\/documentation\/hummingbird\/hbtracingmiddleware","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware/handle(_:context:next:)":{"abstract":[{"type":"text","text":"apply CORS middleware"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV7Contextxmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV7Contextxmfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier","text":"HBResponse"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier","text":"HBResponse"}],"title":"handle(_:context:next:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/handle(_:context:next:)","url":"\/documentation\/hummingbird\/hbcorsmiddleware\/handle(_:context:next:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"title":"MiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","kind":"symbol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"role":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"title":"Middleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","kind":"symbol","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Middleware Handler with generic input, context and output types"}],"role":"symbol","url":"\/documentation\/hummingbird\/middleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","type":"topic","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"role":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"text":"a request. Provides context for request processing","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/hbbaserequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"title":"HBBaseRequestContext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"kind":"symbol","url":"\/documentation\/hummingbird\/hblogrequestsmiddleware","navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","title":"HBLogRequestsMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBLogRequestsMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware/AllowOrigin":{"navigatorTitle":[{"kind":"identifier","text":"AllowOrigin"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/AllowOrigin","url":"\/documentation\/hummingbird\/hbcorsmiddleware\/alloworigin","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AllowOrigin","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines what origins are allowed"}],"title":"HBCORSMiddleware.AllowOrigin","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"title":"HBMiddlewareGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","kind":"symbol","navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbmiddlewaregroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"title":"HBMetricsMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","kind":"symbol","navigatorTitle":[{"text":"HBMetricsMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMetricsMiddleware","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbmetricsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","abstract":[{"text":"Initialize CORS middleware","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/hbcorsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allowOrigin"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV11AllowOriginO","kind":"typeIdentifier","text":"AllowOrigin"},{"kind":"text","text":", "},{"kind":"externalParam","text":"allowHeaders"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:9HTTPTypes9HTTPFieldV","kind":"typeIdentifier","text":"HTTPField"},{"kind":"text","text":"."},{"preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV","kind":"typeIdentifier","text":"Name"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"allowMethods"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"allowCredentials","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exposedHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"maxAge"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount"},{"kind":"text","text":"?)"}],"title":"init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"}}}