{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromString","kind":"identifier"},{"text":"(","kind":"text"},{"text":"positiveInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"negativeInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"nan","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/convertfromstring(positiveinfinity:negativeinfinity:nan:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"externalID":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO17convertFromStringyAESS_S2StcAEmF","title":"JSONDecoder.NonConformingFloatDecodingStrategy.convertFromString(positiveInfinity:negativeInfinity:nan:)","modules":[{"name":"Hummingbird"}],"roleHeading":"Case","symbolKind":"case","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromString","kind":"identifier"},{"text":"(","kind":"text"},{"text":"positiveInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"negativeInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"nan","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}]},"abstract":[{"text":"Decode the values from the given representation strings.","type":"text"}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","url":"\/documentation\/hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/convertFromString(positiveInfinity:negativeInfinity:nan:)":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"convertFromString","kind":"identifier"},{"text":"(","kind":"text"},{"text":"positiveInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"negativeInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"nan","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/convertfromstring(positiveinfinity:negativeinfinity:nan:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","title":"JSONDecoder.NonConformingFloatDecodingStrategy.convertFromString(positiveInfinity:negativeInfinity:nan:)","kind":"symbol","type":"topic","abstract":[{"text":"Decode the values from the given representation strings.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"title":"JSONDecoder","type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","title":"JSONDecoder.NonConformingFloatDecodingStrategy","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}]}}}