{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/decode(_:from:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"The type of the value to decode.","type":"text"}],"type":"paragraph"}],"name":"type"},{"content":[{"inlineContent":[{"type":"text","text":"The data to decode from."}],"type":"paragraph"}],"name":"data"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A value of the requested type."}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"style":"note","name":"Throws","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"DecodingError.dataCorrupted"},{"type":"text","text":" if values requested from the payload are corrupted, or if the given data is not valid JSON."}],"type":"paragraph"}]},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"An error if any value throws an error during decoding.","type":"text"}]}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Decodes a top-level value of the given type from the given JSON representation."}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbird\/jsondecoder\/decode(_:from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"roleHeading":"Instance Method","title":"decode(_:from:)","modules":[{"name":"Hummingbird"}],"externalID":"s:10Foundation11JSONDecoderC6decode_4fromxxm_AA4DataVtKSeRzlF"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/decode(_:from:)":{"abstract":[{"text":"Decodes a top-level value of the given type from the given JSON representation.","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/decode(_:from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"text":".Type, ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"title":"decode(_:from:)","url":"\/documentation\/hummingbird\/jsondecoder\/decode(_:from:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"title":"JSONDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","url":"\/documentation\/hummingbird\/jsondecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}]}}}