{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/base64","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/custom(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/deferredToData"],"title":"Enumeration Cases"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"externalID":"s:10Foundation11JSONDecoderC20DataDecodingStrategyO","roleHeading":"Enumeration","navigatorTitle":[{"text":"DataDecodingStrategy","kind":"identifier"}],"role":"symbol","symbolKind":"enum","modules":[{"name":"Hummingbird"}],"title":"JSONDecoder.DataDecodingStrategy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataDecodingStrategy","kind":"identifier"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"platforms":["Linux"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"The strategy to use for decoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum/deferredToData":{"title":"JSONDecoder.DataDecodingStrategy.deferredToData","role":"symbol","abstract":[{"text":"Defer to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" for decoding.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deferredToData"}],"url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum\/deferredtodata","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/deferredToData","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","type":"topic","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum/custom(_:)":{"title":"JSONDecoder.DataDecodingStrategy.custom(_:)","role":"symbol","abstract":[{"type":"text","text":"Decode the "},{"code":"Data","type":"codeVoice"},{"text":" as a custom value decoded by the given closure.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum\/custom(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/custom(_:)","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum/base64":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"base64","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Decode the "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" from a Base64-encoded string. This is the default strategy."}],"url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum\/base64","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/base64","title":"JSONDecoder.DataDecodingStrategy.base64","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum":{"title":"JSONDecoder.DataDecodingStrategy","url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum","navigatorTitle":[{"text":"DataDecodingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"The strategy to use for decoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"kind":"symbol","role":"symbol","title":"JSONDecoder","url":"\/documentation\/hummingbird\/jsondecoder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}]}}}