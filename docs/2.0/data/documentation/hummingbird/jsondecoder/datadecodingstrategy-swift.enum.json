{"variants":[{"paths":["\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum"},"metadata":{"modules":[{"name":"Hummingbird"}],"role":"symbol","roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"title":"JSONDecoder.DataDecodingStrategy","symbolKind":"enum","externalID":"s:10Foundation11JSONDecoderC20DataDecodingStrategyO","navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}]},"kind":"symbol","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values.","type":"text"}],"sections":[],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/base64","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/custom(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/deferredToData"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum/custom(_:)":{"type":"topic","title":"JSONDecoder.DataDecodingStrategy.custom(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"custom"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum\/custom(_:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/custom(_:)","abstract":[{"text":"Decode the ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" as a custom value decoded by the given closure.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"DataDecodingStrategy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum","title":"JSONDecoder.DataDecodingStrategy","navigatorTitle":[{"text":"DataDecodingStrategy","kind":"identifier"}],"url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum","kind":"symbol","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"kind":"symbol","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","title":"JSONDecoder","url":"\/documentation\/hummingbird\/jsondecoder","type":"topic","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum/deferredToData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/deferredToData","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToData","kind":"identifier"}],"url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum\/deferredtodata","role":"symbol","kind":"symbol","abstract":[{"text":"Defer to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" for decoding.","type":"text"}],"title":"JSONDecoder.DataDecodingStrategy.deferredToData","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/DataDecodingStrategy-swift.enum/base64":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/DataDecodingStrategy-swift.enum\/base64","type":"topic","url":"\/documentation\/hummingbird\/jsondecoder\/datadecodingstrategy-swift.enum\/base64","kind":"symbol","title":"JSONDecoder.DataDecodingStrategy.base64","abstract":[{"text":"Decode the ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" from a Base64-encoded string. This is the default strategy.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"base64","kind":"identifier"}]}}}