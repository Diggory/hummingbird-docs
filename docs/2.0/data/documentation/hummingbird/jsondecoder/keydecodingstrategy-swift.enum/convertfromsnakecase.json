{"metadata":{"modules":[{"name":"Hummingbird"}],"roleHeading":"Case","symbolKind":"case","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","role":"symbol","externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The conversion to upper case uses "},{"type":"codeVoice","code":"Locale.system"},{"type":"text","text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences."}]},{"type":"paragraph","inlineContent":[{"text":"Converting from snake case to camel case:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Capitalizes the word starting after each ","type":"text"},{"code":"_","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Removes all ","type":"text"},{"code":"_","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Preserves starting and ending ","type":"text"},{"type":"codeVoice","code":"_"},{"text":" (as these are often used to indicate private variables or other metadata).","type":"text"},{"text":" ","type":"text"},{"text":"For example, ","type":"text"},{"type":"codeVoice","code":"one_two_three"},{"text":" becomes ","type":"text"},{"type":"codeVoice","code":"oneTwoThree"},{"text":". ","type":"text"},{"type":"codeVoice","code":"_one_two_three_"},{"text":" becomes ","type":"text"},{"type":"codeVoice","code":"_oneTwoThree_"},{"text":".","type":"text"}]}]}]},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" character.","type":"text"}],"type":"paragraph"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","type":"topic","kind":"symbol","role":"symbol","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum","navigatorTitle":[{"kind":"identifier","text":"KeyDecodingStrategy"}],"type":"topic","kind":"symbol","role":"symbol","title":"JSONDecoder.KeyDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyDecodingStrategy"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/jsondecoder","title":"JSONDecoder","role":"symbol","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","type":"topic"}}}