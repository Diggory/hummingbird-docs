{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The conversion to upper case uses "},{"code":"Locale.system","type":"codeVoice"},{"type":"text","text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Converting from snake case to camel case:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Capitalizes the word starting after each ","type":"text"},{"code":"_","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removes all "},{"code":"_","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Preserves starting and ending ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" (as these are often used to indicate private variables or other metadata).","type":"text"},{"text":" ","type":"text"},{"text":"For example, ","type":"text"},{"code":"one_two_three","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"oneTwoThree","type":"codeVoice"},{"text":". ","type":"text"},{"code":"_one_two_three_","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"_oneTwoThree_","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"name":"Note","style":"note","content":[{"inlineContent":[{"text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" character.","type":"text"}],"type":"paragraph"}],"type":"aside"}],"kind":"content"}],"abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}],"metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}],"roleHeading":"Case","role":"symbol","externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","symbolKind":"case","modules":[{"name":"Hummingbird"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}],"title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"navigatorTitle":[{"kind":"identifier","text":"KeyDecodingStrategy"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","title":"JSONDecoder.KeyDecodingStrategy","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyDecodingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder","title":"JSONDecoder","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","title":"Hummingbird"}}}