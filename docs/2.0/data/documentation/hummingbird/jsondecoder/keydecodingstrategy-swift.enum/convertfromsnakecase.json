{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"]}],"abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The conversion to upper case uses ","type":"text"},{"type":"codeVoice","code":"Locale.system"},{"text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Converting from snake case to camel case:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Capitalizes the word starting after each "},{"code":"_","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Removes all "},{"type":"codeVoice","code":"_"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Preserves starting and ending "},{"type":"codeVoice","code":"_"},{"type":"text","text":" (as these are often used to indicate private variables or other metadata)."},{"type":"text","text":" "},{"type":"text","text":"For example, "},{"type":"codeVoice","code":"one_two_three"},{"type":"text","text":" becomes "},{"type":"codeVoice","code":"oneTwoThree"},{"type":"text","text":". "},{"type":"codeVoice","code":"_one_two_three_"},{"type":"text","text":" becomes "},{"type":"codeVoice","code":"_oneTwoThree_"},{"type":"text","text":"."}]}]}]},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the "},{"type":"codeVoice","code":"_"},{"type":"text","text":" character."}],"type":"paragraph"}],"name":"Note"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"kind":"symbol","metadata":{"title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","modules":[{"name":"Hummingbird"}],"symbolKind":"case","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}],"roleHeading":"Case","externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"url":"\/documentation\/hummingbird\/jsondecoder","role":"symbol","title":"JSONDecoder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum","kind":"symbol","navigatorTitle":[{"text":"KeyDecodingStrategy","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","type":"topic","abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}],"title":"JSONDecoder.KeyDecodingStrategy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyDecodingStrategy","kind":"identifier"}]}}}