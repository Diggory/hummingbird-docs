{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase"},"metadata":{"externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF","modules":[{"name":"Hummingbird"}],"roleHeading":"Case","symbolKind":"case","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}],"title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}]}],"kind":"declarations"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The conversion to upper case uses ","type":"text"},{"type":"codeVoice","code":"Locale.system"},{"text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences.","type":"text"}]},{"inlineContent":[{"text":"Converting from snake case to camel case:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Capitalizes the word starting after each "},{"code":"_","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Removes all ","type":"text"},{"type":"codeVoice","code":"_"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Preserves starting and ending ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" (as these are often used to indicate private variables or other metadata).","type":"text"},{"text":" ","type":"text"},{"text":"For example, ","type":"text"},{"code":"one_two_three","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"oneTwoThree","type":"codeVoice"},{"text":". ","type":"text"},{"code":"_one_two_three_","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"_oneTwoThree_","type":"codeVoice"},{"text":".","type":"text"}]}]}],"type":"orderedList"},{"name":"Note","content":[{"inlineContent":[{"text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" character.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","role":"symbol","abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"type":"topic","title":"JSONDecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"url":"\/documentation\/hummingbird\/jsondecoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"abstract":[{"text":"The strategy to use for automatically changing the value of keys before decoding.","type":"text"}],"role":"symbol","type":"topic","title":"JSONDecoder.KeyDecodingStrategy","kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyDecodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"KeyDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","type":"topic","abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}],"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}],"role":"symbol","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase"}}}