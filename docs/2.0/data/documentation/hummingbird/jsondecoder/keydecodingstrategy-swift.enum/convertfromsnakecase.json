{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"The conversion to upper case uses "},{"code":"Locale.system","type":"codeVoice"},{"type":"text","text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Converting from snake case to camel case:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Capitalizes the word starting after each ","type":"text"},{"code":"_","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Removes all ","type":"text"},{"type":"codeVoice","code":"_"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Preserves starting and ending ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" (as these are often used to indicate private variables or other metadata).","type":"text"},{"text":" ","type":"text"},{"text":"For example, ","type":"text"},{"code":"one_two_three","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"oneTwoThree","type":"codeVoice"},{"text":". ","type":"text"},{"code":"_one_two_three_","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"_oneTwoThree_","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" character.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"roleHeading":"Case","modules":[{"name":"Hummingbird"}],"role":"symbol","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}],"externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF","symbolKind":"case"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase"},"sections":[],"abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"kind":"symbol","title":"JSONDecoder.KeyDecodingStrategy","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"KeyDecodingStrategy"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyDecodingStrategy"}],"abstract":[{"text":"The strategy to use for automatically changing the value of keys before decoding.","type":"text"}],"url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"convertFromSnakeCase","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","type":"topic","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"type":"topic","title":"JSONDecoder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"url":"\/documentation\/hummingbird\/jsondecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}]}}}