{"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The conversion to upper case uses "},{"type":"codeVoice","code":"Locale.system"},{"type":"text","text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Converting from snake case to camel case:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Capitalizes the word starting after each "},{"type":"codeVoice","code":"_"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Removes all "},{"type":"codeVoice","code":"_"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Preserves starting and ending ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" (as these are often used to indicate private variables or other metadata).","type":"text"},{"text":" ","type":"text"},{"text":"For example, ","type":"text"},{"code":"one_two_three","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"oneTwoThree","type":"codeVoice"},{"text":". ","type":"text"},{"code":"_one_two_three_","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"_oneTwoThree_","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"name":"Note","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the "},{"type":"codeVoice","code":"_"},{"type":"text","text":" character."}],"type":"paragraph"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"metadata":{"modules":[{"name":"Hummingbird"}],"roleHeading":"Case","symbolKind":"case","externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}],"title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"title":"JSONDecoder","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","type":"topic","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","type":"topic","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection","title":"Hummingbird","kind":"symbol","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyDecodingStrategy","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum","navigatorTitle":[{"text":"KeyDecodingStrategy","kind":"identifier"}],"type":"topic","kind":"symbol","title":"JSONDecoder.KeyDecodingStrategy"}}}