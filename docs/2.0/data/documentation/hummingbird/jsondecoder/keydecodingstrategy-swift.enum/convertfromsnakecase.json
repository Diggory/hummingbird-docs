{"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"modules":[{"name":"Hummingbird"}],"role":"symbol","externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF","symbolKind":"case","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}],"roleHeading":"Case"},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}],"variants":[{"paths":["\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"The conversion to upper case uses ","type":"text"},{"type":"codeVoice","code":"Locale.system"},{"text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Converting from snake case to camel case:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Capitalizes the word starting after each "},{"type":"codeVoice","code":"_"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removes all "},{"type":"codeVoice","code":"_"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Preserves starting and ending "},{"code":"_","type":"codeVoice"},{"type":"text","text":" (as these are often used to indicate private variables or other metadata)."},{"type":"text","text":" "},{"type":"text","text":"For example, "},{"code":"one_two_three","type":"codeVoice"},{"type":"text","text":" becomes "},{"code":"oneTwoThree","type":"codeVoice"},{"type":"text","text":". "},{"code":"_one_two_three_","type":"codeVoice"},{"type":"text","text":" becomes "},{"code":"_oneTwoThree_","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"content":[{"inlineContent":[{"text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the ","type":"text"},{"type":"codeVoice","code":"_"},{"text":" character.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","role":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}],"title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"title":"JSONDecoder.KeyDecodingStrategy","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","abstract":[{"text":"The strategy to use for automatically changing the value of keys before decoding.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyDecodingStrategy"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"KeyDecodingStrategy"}],"url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"type":"topic","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"title":"JSONDecoder","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/jsondecoder"}}}