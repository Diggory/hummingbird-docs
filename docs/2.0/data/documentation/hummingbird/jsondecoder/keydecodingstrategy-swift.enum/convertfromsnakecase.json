{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The conversion to upper case uses ","type":"text"},{"code":"Locale.system","type":"codeVoice"},{"text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Converting from snake case to camel case:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Capitalizes the word starting after each "},{"code":"_","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Removes all "},{"type":"codeVoice","code":"_"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Preserves starting and ending "},{"type":"codeVoice","code":"_"},{"type":"text","text":" (as these are often used to indicate private variables or other metadata)."},{"type":"text","text":" "},{"type":"text","text":"For example, "},{"type":"codeVoice","code":"one_two_three"},{"type":"text","text":" becomes "},{"type":"codeVoice","code":"oneTwoThree"},{"type":"text","text":". "},{"type":"codeVoice","code":"_one_two_three_"},{"type":"text","text":" becomes "},{"type":"codeVoice","code":"_oneTwoThree_"},{"type":"text","text":"."}]}]}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the "},{"type":"codeVoice","code":"_"},{"type":"text","text":" character."}],"type":"paragraph"}],"style":"note","name":"Note"}]}],"abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}],"metadata":{"modules":[{"name":"Hummingbird"}],"symbolKind":"case","roleHeading":"Case","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}],"externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"type":"topic","title":"JSONDecoder","kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}],"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}],"url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","title":"Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyDecodingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"KeyDecodingStrategy"}],"title":"JSONDecoder.KeyDecodingStrategy","role":"symbol"}}}