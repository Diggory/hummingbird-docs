{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase"},"kind":"symbol","metadata":{"roleHeading":"Case","modules":[{"name":"Hummingbird"}],"symbolKind":"case","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}],"title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","role":"symbol","externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The conversion to upper case uses ","type":"text"},{"code":"Locale.system","type":"codeVoice"},{"text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Converting from snake case to camel case:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Capitalizes the word starting after each ","type":"text"},{"type":"codeVoice","code":"_"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Removes all ","type":"text"},{"type":"codeVoice","code":"_"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Preserves starting and ending "},{"code":"_","type":"codeVoice"},{"type":"text","text":" (as these are often used to indicate private variables or other metadata)."},{"type":"text","text":" "},{"type":"text","text":"For example, "},{"code":"one_two_three","type":"codeVoice"},{"type":"text","text":" becomes "},{"code":"oneTwoThree","type":"codeVoice"},{"type":"text","text":". "},{"code":"_one_two_three_","type":"codeVoice"},{"type":"text","text":" becomes "},{"code":"_oneTwoThree_","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"orderedList"},{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the "},{"type":"codeVoice","code":"_"},{"type":"text","text":" character."}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"url":"\/documentation\/hummingbird\/jsondecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"title":"JSONDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoder"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum":{"url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum","abstract":[{"text":"The strategy to use for automatically changing the value of keys before decoding.","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"KeyDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"KeyDecodingStrategy","kind":"identifier"}],"title":"JSONDecoder.KeyDecodingStrategy"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"role":"symbol","type":"topic","abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]}}}