{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum"]}],"metadata":{"roleHeading":"Enumeration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"role":"symbol","modules":[{"name":"Hummingbird"}],"symbolKind":"enum","externalID":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","title":"JSONDecoder.NonConformingFloatDecodingStrategy"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder"]]},"abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw"],"title":"Enumeration Cases"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/convertFromString(positiveInfinity:negativeInfinity:nan:)":{"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/convertfromstring(positiveinfinity:negativeinfinity:nan:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromString","kind":"identifier"},{"text":"(","kind":"text"},{"text":"positiveInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"negativeInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"nan","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy.convertFromString(positiveInfinity:negativeInfinity:nan:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","type":"topic","abstract":[{"type":"text","text":"Decode the values from the given representation strings."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","type":"topic","abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"url":"\/documentation\/hummingbird\/jsondecoder","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"title":"JSONDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoder"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/throw":{"type":"topic","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/throw","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw","kind":"symbol","abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"role":"symbol","title":"JSONDecoder.NonConformingFloatDecodingStrategy.throw","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}]}}}