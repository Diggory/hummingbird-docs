{"sections":[],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw"]}],"abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"languages":["swift"],"platforms":["Linux"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum"]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder"]]},"metadata":{"symbolKind":"enum","role":"symbol","externalID":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"roleHeading":"Enumeration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"modules":[{"name":"Hummingbird"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","title":"Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"type":"topic","title":"JSONDecoder.NonConformingFloatDecodingStrategy","kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"type":"topic","title":"JSONDecoder","kind":"symbol","url":"\/documentation\/hummingbird\/jsondecoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/throw":{"abstract":[{"text":"Throw upon encountering non-conforming values. This is the default strategy.","type":"text"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy.throw","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/throw","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/convertFromString(positiveInfinity:negativeInfinity:nan:)":{"title":"JSONDecoder.NonConformingFloatDecodingStrategy.convertFromString(positiveInfinity:negativeInfinity:nan:)","url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/convertfromstring(positiveinfinity:negativeinfinity:nan:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","abstract":[{"text":"Decode the values from the given representation strings.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromString","kind":"identifier"},{"text":"(","kind":"text"},{"text":"positiveInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"negativeInfinity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nan"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}