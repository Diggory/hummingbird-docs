{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property"},"abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"type":"codeVoice","code":".throw"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","text":"NonConformingFloatDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:10Foundation11JSONDecoderC34nonConformingFloatDecodingStrategyAC03NondefG0Ovp","modules":[{"name":"Hummingbird"}],"role":"symbol","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","text":"NonConformingFloatDecodingStrategy"}],"roleHeading":"Instance Property","title":"nonConformingFloatDecodingStrategy"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"role":"symbol","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"title":"JSONDecoder","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsondecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"type":"codeVoice","code":".throw"},{"type":"text","text":"."}],"url":"\/documentation\/hummingbird\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"text":".","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO"}],"title":"nonConformingFloatDecodingStrategy"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","type":"topic","role":"collection","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}