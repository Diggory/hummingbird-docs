{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"s"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird11EnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11Hummingbird11EnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s25LosslessStringConvertibleP","kind":"typeIdentifier","text":"LosslessStringConvertible"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Environment variable name"}]}],"name":"s"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Type we want variable to be cast to","type":"text"}]}],"name":"as"}],"kind":"parameters"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/environment\/get(_:as:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/get(_:as:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:11Hummingbird11EnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF","roleHeading":"Instance Method","title":"get(_:as:)","symbolKind":"method","modules":[{"name":"Hummingbird"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird11EnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"preciseIdentifier":"s:11Hummingbird11EnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Get environment variable with name as a certain type","type":"text"}],"references":{"logo.png":{"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment/get(_:as:)":{"url":"\/documentation\/hummingbird\/environment\/get(_:as:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11EnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","text":"T"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11EnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"text":"Get environment variable with name as a certain type","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment\/get(_:as:)","kind":"symbol","type":"topic","title":"get(_:as:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"url":"\/documentation\/hummingbird\/environment","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"abstract":[{"text":"Access environment variables","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","kind":"symbol","type":"topic","title":"Environment","navigatorTitle":[{"kind":"identifier","text":"Environment"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}