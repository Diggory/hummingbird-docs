{"abstract":[{"type":"text","text":"Object for handling requests."}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler\/Output"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler\/init(from:context:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler\/handle(context:)"],"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteHandler"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Instead of passing a closure to the router you can provide an object it should try and","type":"text"},{"text":" ","type":"text"},{"text":"create before handling the request. This allows you to separate the extraction of data","type":"text"},{"text":" ","type":"text"},{"text":"from the request and the processing of the request. For example","type":"text"}]},{"type":"codeListing","syntax":null,"code":["struct UpdateReminder: RouteHandler {","    struct Request: Codable {","        let description: String","        let date: Date","    }","    let update: Request","    let id: String","","    init(from request: Request, context: some BaseRequestContext) throws {","        self.update = try await request.decode(as: Request.self, context: context)","        self.id = try request.parameters.require(\"id\")","    }","    func handle(context: some BaseRequestContext) async throws -> HTTPResponse.Status {","        let reminder = Reminder(id: id, update: update)","        return reminder.update(on: db)","            .map { _ in .ok }","    }","}"]}]}],"variants":[{"paths":["\/documentation\/hummingbird\/routehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"],"generated":true,"title":"Router"}],"metadata":{"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"RouteHandler"}],"role":"symbol","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteHandler"}],"title":"RouteHandler","roleHeading":"Protocol","externalID":"s:11Hummingbird12RouteHandlerP"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","url":"\/documentation\/hummingbird\/httpresponderbuilder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponderBuilder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"title":"HTTPResponderBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"role":"symbol","kind":"symbol","title":"RouterOptions","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"abstract":[{"type":"text","text":"Router Options"}],"url":"\/documentation\/hummingbird\/routeroptions","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"abstract":[{"type":"text","text":"Endpoint path storage"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","url":"\/documentation\/hummingbird\/endpointpath","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EndpointPath"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}],"title":"EndpointPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"url":"\/documentation\/hummingbird\/routergroup","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"title":"RouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteHandler/Output":{"abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler\/Output","role":"symbol","required":true,"url":"\/documentation\/hummingbird\/routehandler\/output","title":"Output","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Output"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","url":"\/documentation\/hummingbird\/httpresponder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"title":"HTTPResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteHandler":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteHandler"}],"abstract":[{"type":"text","text":"Object for handling requests."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler","navigatorTitle":[{"kind":"identifier","text":"RouteHandler"}],"title":"RouteHandler","type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/routehandler","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteHandler/init(from:context:)":{"abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler\/init(from:context:)","role":"symbol","required":true,"url":"\/documentation\/hummingbird\/routehandler\/init(from:context:)","title":"init(from:context:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","text":"BaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","navigatorTitle":[{"text":"Router","kind":"identifier"}],"title":"Router","type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/router","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteHandler/handle(context:)":{"abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler\/handle(context:)","role":"symbol","required":true,"url":"\/documentation\/hummingbird\/routehandler\/handle(context:)","title":"handle(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","text":"BaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12RouteHandlerP6OutputQa","text":"Output"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"abstract":[{"type":"text","text":"Directs requests to handlers based on the request uri and method."}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","url":"\/documentation\/hummingbird\/routerresponder","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterResponder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"title":"RouterResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"abstract":[{"text":"Split router path into components","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"title":"RouterPath","type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/routerpath","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","url":"\/documentation\/hummingbird\/callbackresponder","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CallbackResponder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"title":"CallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","url":"\/documentation\/hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"abstract":[{"type":"text","text":"Conform to "},{"code":"RouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"title":"RouterMethods","type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/routermethods","kind":"symbol"}}}