{"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@","kind":"attribute"},{"text":"MiddlewareFixedTypeBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO","kind":"attribute"},{"text":"<","kind":"text"},{"text":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":">","kind":"text"},{"text":" ","kind":"text"},{"text":"buildMiddlewareStack","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Middleware stack result builder"}]}],"name":"middlewareStack"}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"router"}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Add multiple middleware to the router using the middleware stack result builder","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","type":"reference"},{"text":".","type":"text"}]},{"code":["router.addMiddleware {","    LogRequestsMiddleware()","    MetricsMiddleware()","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This gives a slight performance boost over adding them individually."}]}],"kind":"content"}],"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/routecollection\/addmiddleware(buildmiddlewarestack:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"extendedModule":"Hummingbird","title":"addMiddleware(buildMiddlewareStack:)","role":"symbol","externalID":"s:11Hummingbird13RouterMethodsPAAE13addMiddleware05buildE5Stackxqd__yXE_tAA0E8ProtocolRd__7ContextQyd__AGRtz0A4Core7RequestV5InputRtd__AJ8ResponseV6OutputRtd__lF::SYNTHESIZED::s:11Hummingbird15RouteCollectionC","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addMiddleware","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buildMiddlewareStack"},{"kind":"text","text":": () -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","kind":"typeIdentifier","text":"MiddlewareProtocol"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":", "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier","text":"Response"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/addMiddleware(buildMiddlewareStack:)"},"abstract":[{"type":"text","text":"Add middleware stack to router"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/RouterMethods-Implementations"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"abstract":[{"text":"Collection of routes","type":"text"}],"navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routecollection","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"type":"topic","title":"RouteCollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Response":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"kind":"symbol","title":"Response","navigatorTitle":[{"kind":"identifier","text":"Response"}],"type":"topic","url":"\/documentation\/hummingbird\/response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/addMiddleware(buildMiddlewareStack:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"buildMiddlewareStack","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":"<","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/addMiddleware(buildMiddlewareStack:)","url":"\/documentation\/hummingbird\/routecollection\/addmiddleware(buildmiddlewarestack:)","abstract":[{"type":"text","text":"Add middleware stack to router"}],"type":"topic","kind":"symbol","title":"addMiddleware(buildMiddlewareStack:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","title":"Context","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"},{"kind":"text","text":" : "},{"text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"required":true,"role":"symbol","abstract":[],"url":"\/documentation\/hummingbird\/routermethods\/context","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"type":"topic","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"title":"Request","url":"\/documentation\/hummingbird\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"kind":"symbol","title":"MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"abstract":[{"type":"text","text":"Middleware stack result builder"}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"title":"MiddlewareFixedTypeBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","navigatorTitle":[{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/RouterMethods-Implementations":{"abstract":[],"url":"\/documentation\/hummingbird\/routecollection\/routermethods-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/RouterMethods-Implementations","type":"topic","title":"RouterMethods Implementations"}}}