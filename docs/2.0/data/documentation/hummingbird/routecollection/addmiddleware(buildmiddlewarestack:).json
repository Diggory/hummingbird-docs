{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/RouterMethods-Implementations"]]},"metadata":{"externalID":"s:11Hummingbird13RouterMethodsPAAE13addMiddleware05buildE5Stackxqd__yXE_tAA0E8ProtocolRd__7ContextQyd__AGRtz0A4Core7RequestV5InputRtd__AJ8ResponseV6OutputRtd__lF::SYNTHESIZED::s:11Hummingbird15RouteCollectionC","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","symbolKind":"method","title":"addMiddleware(buildMiddlewareStack:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addMiddleware"},{"text":"(","kind":"text"},{"text":"buildMiddlewareStack","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":", "},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"Hummingbird","role":"symbol"},"abstract":[{"text":"Add middleware stack to router","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"addMiddleware","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@","kind":"attribute"},{"text":"MiddlewareFixedTypeBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","kind":"attribute","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":", "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":">","kind":"text"},{"kind":"text","text":" "},{"text":"buildMiddlewareStack","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"buildMiddlewareStack","content":[{"inlineContent":[{"type":"text","text":"Middleware stack result builder"}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Router"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Add multiple middleware to the router using the middleware stack result builder","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["router.addMiddleware {","    LogRequestsMiddleware()","    MetricsMiddleware()","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"This gives a slight performance boost over adding them individually.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/hummingbird\/routecollection\/addmiddleware(buildmiddlewarestack:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/addMiddleware(buildMiddlewareStack:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/addMiddleware(buildMiddlewareStack:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addMiddleware","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buildMiddlewareStack"},{"text":": () -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":", "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird13RouterMethodsP7ContextQa","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/addMiddleware(buildMiddlewareStack:)","abstract":[{"type":"text","text":"Add middleware stack to router"}],"title":"addMiddleware(buildMiddlewareStack:)","url":"\/documentation\/hummingbird\/routecollection\/addmiddleware(buildmiddlewarestack:)","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareProtocol"}],"abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"title":"MiddlewareProtocol","type":"topic","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","role":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","title":"Request","kind":"symbol","navigatorTitle":[{"text":"Request","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"url":"\/documentation\/hummingbirdcore\/request","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Response"}],"abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"title":"Response","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","kind":"symbol","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/RouterMethods-Implementations":{"kind":"article","url":"\/documentation\/hummingbird\/routecollection\/routermethods-implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/RouterMethods-Implementations","role":"collectionGroup","type":"topic","title":"RouterMethods Implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"title":"MiddlewareFixedTypeBuilder","abstract":[{"type":"text","text":"Middleware stack result builder"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods/Context":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods\/Context","required":true,"title":"Context","abstract":[],"url":"\/documentation\/hummingbird\/routermethods\/context","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteCollection"}],"abstract":[{"type":"text","text":"Collection of routes"}],"title":"RouteCollection","type":"topic","navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","role":"symbol","url":"\/documentation\/hummingbird\/routecollection","kind":"symbol"}}}