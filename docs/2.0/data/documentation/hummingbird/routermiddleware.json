{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"generated":true,"title":"Middleware","anchor":"Middleware"}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]},{"title":"Inherited By","type":"inheritedBy","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketUpgradeMiddleware"],"type":"conformingTypes","title":"Conforming Types","kind":"relationships"}],"abstract":[{"text":"Version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and output is "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true,"type":"reference"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RouterMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","text":"Context"},{"text":"> : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","kind":"typeIdentifier","text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP5InputQa","text":"Input","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Input"},{"kind":"text","text":" == "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP6OutputQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Output"},{"text":" == ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","text":"Response"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"inlineContent":[{"text":"All middleware has to conform to the protocol ","type":"text"},{"code":"RouterMiddleware","type":"codeVoice"},{"type":"text","text":". This requires one function "},{"code":"handle(_:context:next)","type":"codeVoice"},{"text":" to be implemented. At some point in this function unless you want to shortcut the router and return your own response you should call ","type":"text"},{"type":"codeVoice","code":"next(request, context)"},{"text":" to continue down the middleware stack and return the result, or a result processed by your middleware.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The following is a simple logging middleware that outputs every URI being sent to the server","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["public struct LogRequestsMiddleware<Context: RequestContext>: RouterMiddleware {","    public func handle(_ request: Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response {","        \/\/ log request URI","        context.logger.log(level: .debug, String(describing:request.uri.path))","        \/\/ pass request onto next middleware or the router and return response","        return try await next(request, context)","    }","}"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/routermiddleware"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"metadata":{"title":"RouterMiddleware","modules":[{"name":"Hummingbird"}],"symbolKind":"protocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"externalID":"s:11Hummingbird16RouterMiddlewareP","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","type":"topic","url":"\/documentation\/hummingbird\/middlewareguide","kind":"article","title":"Middleware","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"title":"IsAuthenticatedMiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware returning 401 for unauthenticated requests"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"url":"\/documentation\/hummingbird\/middlewareprotocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"title":"MiddlewareProtocol","type":"topic","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/requestcontext","kind":"symbol","title":"RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"title":"Response","navigatorTitle":[{"text":"Response","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","url":"\/documentation\/hummingbirdcore\/response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Output":{"required":true,"title":"Output","type":"topic","url":"\/documentation\/hummingbird\/middlewareprotocol\/output","role":"symbol","abstract":[],"kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Output"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ThrowingContextTransform":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ThrowingContextTransform","kind":"identifier"}],"url":"\/documentation\/hummingbirdrouter\/throwingcontexttransform","title":"ThrowingContextTransform","abstract":[{"text":"Router middleware that transforms the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},{"text":" and uses it with the contained","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Middleware chain. Used by "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup\/init(_:context:builder:)","type":"reference","isActive":true}],"role":"symbol","navigatorTitle":[{"text":"ThrowingContextTransform","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"type":"topic","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","kind":"symbol","title":"MiddlewareFixedTypeBuilder","abstract":[{"type":"text","text":"Middleware stack result builder"}],"role":"symbol","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/Route":{"title":"Route","type":"topic","url":"\/documentation\/hummingbirdrouter\/route","role":"symbol","abstract":[{"type":"text","text":"Route definition"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Route","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","navigatorTitle":[{"text":"Route","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"url":"\/documentation\/hummingbird\/logrequestsmiddleware","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"title":"LogRequestsMiddleware","navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"url":"\/documentation\/hummingbird\/metricsmiddleware","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"title":"MetricsMiddleware","navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MetricsMiddleware","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/ClosureAuthenticator":{"url":"\/documentation\/hummingbirdauth\/closureauthenticator","navigatorTitle":[{"text":"ClosureAuthenticator","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ClosureAuthenticator","kind":"identifier"}],"title":"ClosureAuthenticator","type":"topic","abstract":[{"text":"Authenticator that uses a closure to return authentication state","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform":{"url":"\/documentation\/hummingbirdrouter\/contexttransform","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContextTransform","kind":"identifier"}],"navigatorTitle":[{"text":"ContextTransform","kind":"identifier"}],"title":"ContextTransform","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","abstract":[{"text":"Router middleware that transforms the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},{"type":"text","text":" and uses it with the contained"},{"type":"text","text":" "},{"type":"text","text":"Middleware chain"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"title":"Request","type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionAuthenticator":{"url":"\/documentation\/hummingbirdauth\/sessionauthenticator","navigatorTitle":[{"kind":"identifier","text":"SessionAuthenticator"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SessionAuthenticator","kind":"identifier"}],"title":"SessionAuthenticator","type":"topic","abstract":[{"type":"text","text":"Session authenticator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","title":"ResponseCompressionMiddleware","abstract":[{"type":"text","text":"Middleware for compressing response bodies"}],"role":"symbol","navigatorTitle":[{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RequestDecompressionMiddleware"}],"title":"RequestDecompressionMiddleware","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","abstract":[{"text":"Middleware for decompressing request bodies","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMiddleware"}],"type":"topic","url":"\/documentation\/hummingbird\/routermiddleware","kind":"symbol","title":"RouterMiddleware","abstract":[{"type":"text","text":"Version of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":" and output is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup/init(_:context:builder:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"ChildHandler","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"ChildContext","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ChildContext","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter10RouteGroupV_7context7builderACyxAA24ThrowingContextTransformVyxqd_0_qd__GG0A00B4PathV_qd_0_mqd__yXEtc06ParentH0AJ012ChildRequestH0PQyd_0_RszAHRs_AJ18MiddlewareProtocolRd__AjNRd_0_AA0bmH0Rd_0_0H0Qyd__Rsd_0_0A4Core0M0V5InputRtd__AU8ResponseV6OutputRtd__r0_lufc0lH0L_qd_0_mfp"},{"text":".Type, ","kind":"text"},{"text":"builder","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ChildHandler","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter10RouteGroupV_7context7builderACyxAA24ThrowingContextTransformVyxqd_0_qd__GG0A00B4PathV_qd_0_mqd__yXEtc06ParentH0AJ012ChildRequestH0PQyd_0_RszAHRs_AJ18MiddlewareProtocolRd__AjNRd_0_AA0bmH0Rd_0_0H0Qyd__Rsd_0_0A4Core0M0V5InputRtd__AU8ResponseV6OutputRtd__r0_lufc0L7HandlerL_qd__mfp"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbirdrouter\/routegroup\/init(_:context:builder:)","title":"init(_:context:builder:)","abstract":[{"text":"Create RouteGroup from RequestContext transform and result builder","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup\/init(_:context:builder:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Input":{"url":"\/documentation\/hummingbird\/middlewareprotocol\/input","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"title":"Input","role":"symbol","type":"topic","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Input","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdBasicAuth/BasicAuthenticator":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Basic password authenticator","type":"text"}],"title":"BasicAuthenticator","navigatorTitle":[{"text":"BasicAuthenticator","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicAuthenticator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","url":"\/documentation\/hummingbirdbasicauth\/basicauthenticator"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"title":"TracingMiddleware","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TracingMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","url":"\/documentation\/hummingbird\/tracingmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"title":"FileMiddleware","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileMiddleware"}],"navigatorTitle":[{"text":"FileMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware for serving static files."}],"url":"\/documentation\/hummingbird\/filemiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","type":"topic","title":"SessionMiddleware","kind":"symbol","url":"\/documentation\/hummingbirdauth\/sessionmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware that extracts session data for a request and stores it in the context"}],"navigatorTitle":[{"kind":"identifier","text":"SessionMiddleware"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"url":"\/documentation\/hummingbird\/middlewareprotocol\/context","type":"topic","role":"symbol","abstract":[],"title":"Context","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Protocol for a middleware that checks if a request is authenticated.","type":"text"}],"title":"AuthenticatorMiddleware","navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"url":"\/documentation\/hummingbird\/middlewaregroup","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareGroup","kind":"identifier"}],"title":"MiddlewareGroup","type":"topic","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup":{"title":"RouteGroup","type":"topic","url":"\/documentation\/hummingbirdrouter\/routegroup","role":"symbol","abstract":[{"text":"Router middleware that applies a middleware chain to URIs with a specified prefix","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouteGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup","navigatorTitle":[{"text":"RouteGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"url":"\/documentation\/hummingbird\/corsmiddleware","navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"title":"CORSMiddleware","type":"topic","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketUpgradeMiddleware":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"An alternative way to add a WebSocket upgrade to a router via Middleware","type":"text"}],"title":"WebSocketUpgradeMiddleware","navigatorTitle":[{"kind":"identifier","text":"WebSocketUpgradeMiddleware"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketUpgradeMiddleware"}],"url":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketUpgradeMiddleware"}}}