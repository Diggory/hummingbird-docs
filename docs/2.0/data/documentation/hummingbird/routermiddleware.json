{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide"]]},"abstract":[{"type":"text","text":"Version of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"type":"text","text":"."}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"title":"Middleware","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","text":"Context","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","text":"MiddlewareProtocol","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP5InputQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Input","text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP6OutputQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Output","text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","text":"Response","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All middleware has to conform to the protocol "},{"type":"codeVoice","code":"RouterMiddleware"},{"type":"text","text":". This requires one function "},{"type":"codeVoice","code":"handle(_:context:next)"},{"type":"text","text":" to be implemented. At some point in this function unless you want to shortcut the router and return your own response you should call "},{"type":"codeVoice","code":"next(request, context)"},{"type":"text","text":" to continue down the middleware stack and return the result, or a result processed by your middleware."}]},{"type":"paragraph","inlineContent":[{"text":"The following is a simple logging middleware that outputs every URI being sent to the server","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["public struct LogRequestsMiddleware<Context: RequestContext>: RouterMiddleware {","    public func handle(_ request: Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response {","        \/\/ log request URI","        context.logger.log(level: .debug, String(describing:request.uri.path))","        \/\/ pass request onto next middleware or the router and return response","        return try await next(request, context)","    }","}"]}],"kind":"content"}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware"],"kind":"relationships","type":"inheritedBy","title":"Inherited By"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketUpgradeMiddleware"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/routermiddleware"]}],"metadata":{"modules":[{"name":"Hummingbird"}],"title":"RouterMiddleware","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"symbolKind":"protocol","roleHeading":"Protocol","role":"symbol","externalID":"s:11Hummingbird16RouterMiddlewareP"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup":{"url":"\/documentation\/hummingbirdrouter\/routegroup","navigatorTitle":[{"text":"RouteGroup","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouteGroup","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup","abstract":[{"text":"Router middleware that applies a middleware chain to URIs with a specified prefix","type":"text"}],"title":"RouteGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"url":"\/documentation\/hummingbird\/middlewaregroup","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","role":"symbol","title":"MiddlewareGroup","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdBasicAuth/BasicAuthenticator":{"url":"\/documentation\/hummingbirdbasicauth\/basicauthenticator","abstract":[{"type":"text","text":"Basic password authenticator"}],"title":"BasicAuthenticator","navigatorTitle":[{"text":"BasicAuthenticator","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BasicAuthenticator","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"kind":"symbol","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","abstract":[{"type":"text","text":"Middleware stack result builder"}],"title":"MiddlewareFixedTypeBuilder","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsMiddleware"}],"abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","title":"MetricsMiddleware","url":"\/documentation\/hummingbird\/metricsmiddleware","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Input":{"url":"\/documentation\/hummingbird\/middlewareprotocol\/input","required":true,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Input","role":"symbol","title":"Input","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/Route":{"kind":"symbol","url":"\/documentation\/hummingbirdrouter\/route","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Route","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","abstract":[{"text":"Route definition","type":"text"}],"title":"Route","navigatorTitle":[{"text":"Route","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"role":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol\/context","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","abstract":[],"required":true,"kind":"symbol","title":"Context"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"type":"topic","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"role":"symbol","title":"AuthenticatorMiddleware","navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Output":{"url":"\/documentation\/hummingbird\/middlewareprotocol\/output","required":true,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Output","role":"symbol","title":"Output","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Output"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","navigatorTitle":[{"text":"Response","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol","title":"Response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"}],"abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","title":"TracingMiddleware","url":"\/documentation\/hummingbird\/tracingmiddleware","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"role":"symbol","kind":"symbol","title":"LogRequestsMiddleware","url":"\/documentation\/hummingbird\/logrequestsmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"abstract":[{"text":"Middleware outputting to log for every call to server","type":"text"}],"navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","type":"topic"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"type":"topic","url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","title":"RequestDecompressionMiddleware","abstract":[{"text":"Middleware for decompressing request bodies","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecompressionMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"RequestDecompressionMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"abstract":[{"text":"Middleware for compressing response bodies","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","navigatorTitle":[{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"title":"ResponseCompressionMiddleware","url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextTransform"}],"url":"\/documentation\/hummingbirdrouter\/contexttransform","type":"topic","abstract":[{"type":"text","text":"Router middleware that transforms the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},{"type":"text","text":" and uses it with the contained"},{"type":"text","text":" "},{"type":"text","text":"Middleware chain"}],"title":"ContextTransform","navigatorTitle":[{"kind":"identifier","text":"ContextTransform"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","title":"Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","title":"CORSMiddleware","url":"\/documentation\/hummingbird\/corsmiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CORSMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"role":"symbol","type":"topic","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"url":"\/documentation\/hummingbird\/filemiddleware","navigatorTitle":[{"kind":"identifier","text":"FileMiddleware"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileMiddleware"}],"role":"symbol","type":"topic","title":"FileMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","abstract":[{"text":"Middleware for serving static files.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"role":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"kind":"symbol","title":"MiddlewareProtocol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"type":"topic","url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"role":"symbol","title":"IsAuthenticatedMiddleware","navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware returning 401 for unauthenticated requests"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionMiddleware":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SessionMiddleware","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/sessionmiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","abstract":[{"text":"Session authenticator","type":"text"}],"kind":"symbol","deprecated":true,"title":"SessionMiddleware","navigatorTitle":[{"text":"SessionMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"title":"RouterMiddleware","abstract":[{"text":"Version of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and output is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"type":"text","text":"."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","url":"\/documentation\/hummingbird\/routermiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"kind":"article","url":"\/documentation\/hummingbird\/middlewareguide","title":"Middleware","role":"collectionGroup","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketUpgradeMiddleware":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketUpgradeMiddleware"}],"role":"symbol","url":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketUpgradeMiddleware","abstract":[{"text":"An alternative way to add a WebSocket upgrade to a router via Middleware","type":"text"}],"kind":"symbol","title":"WebSocketUpgradeMiddleware","navigatorTitle":[{"kind":"identifier","text":"WebSocketUpgradeMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionAuthenticator":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","url":"\/documentation\/hummingbirdauth\/sessionauthenticator","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SessionAuthenticator"}],"navigatorTitle":[{"kind":"identifier","text":"SessionAuthenticator"}],"type":"topic","role":"symbol","title":"SessionAuthenticator","abstract":[{"text":"Session authenticator","type":"text"}]}}}