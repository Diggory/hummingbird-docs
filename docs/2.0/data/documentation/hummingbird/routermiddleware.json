{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Version of ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true,"type":"reference"},{"text":" whose Input is ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":" and output is ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true,"type":"reference"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide"]]},"metadata":{"roleHeading":"Protocol","title":"RouterMiddleware","role":"symbol","externalID":"s:11Hummingbird16RouterMiddlewareP","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"symbolKind":"protocol"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/routermiddleware"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]},{"kind":"relationships","title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware"]},{"kind":"relationships","title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketUpgradeMiddleware"]}],"seeAlsoSections":[{"title":"Middleware","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","text":"MiddlewareProtocol","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Input","text":"Input","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP5InputQa","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Output","text":"Output","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP6OutputQa","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"All middleware has to conform to the protocol ","type":"text"},{"type":"codeVoice","code":"RouterMiddleware"},{"text":". This requires one function ","type":"text"},{"type":"codeVoice","code":"handle(_:context:next)"},{"text":" to be implemented. At some point in this function unless you want to shortcut the router and return your own response you should call ","type":"text"},{"type":"codeVoice","code":"next(request, context)"},{"text":" to continue down the middleware stack and return the result, or a result processed by your middleware.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The following is a simple logging middleware that outputs every URI being sent to the server","type":"text"}]},{"code":["public struct LogRequestsMiddleware<Context: RequestContext>: RouterMiddleware {","    public func handle(_ request: Request, context: Context, next: (Request, Context) async throws -> Response) async throws -> Response {","        \/\/ log request URI","        context.logger.log(level: .debug, String(describing:request.uri.path))","        \/\/ pass request onto next middleware or the router and return response","        return try await next(request, context)","    }","}"],"type":"codeListing","syntax":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"title":"CORSMiddleware","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionMiddleware":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SessionMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","url":"\/documentation\/hummingbirdauth\/sessionmiddleware","title":"SessionMiddleware","role":"symbol","abstract":[{"type":"text","text":"Session authenticator"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SessionMiddleware"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Input":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/middlewareprotocol\/input","abstract":[],"role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Input","title":"Input"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Output":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Output","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Output"}],"role":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol\/output","type":"topic","required":true,"abstract":[],"title":"Output","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"title":"LogRequestsMiddleware","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","url":"\/documentation\/hummingbird\/logrequestsmiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogRequestsMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"type":"topic","abstract":[{"text":"Middleware outputting to log for every call to server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"title":"Request","navigatorTitle":[{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware for decompressing request bodies"}],"title":"RequestDecompressionMiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"type":"topic","title":"IsAuthenticatedMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"abstract":[{"type":"text","text":"Middleware returning 404 for unauthenticated requests"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"abstract":[{"text":"Version of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"reference"},{"text":" whose Input is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":" and output is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference"},{"text":".","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","title":"RouterMiddleware","url":"\/documentation\/hummingbird\/routermiddleware","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware","type":"topic","kind":"symbol","title":"AuthenticatorMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareGroup"}],"url":"\/documentation\/hummingbird\/middlewaregroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"title":"MiddlewareGroup","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","title":"Middleware","url":"\/documentation\/hummingbird\/middlewareguide","kind":"article","type":"topic","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup":{"type":"topic","abstract":[{"type":"text","text":"Router middleware that applies a middleware chain to URIs with a specified prefix"}],"navigatorTitle":[{"kind":"identifier","text":"RouteGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup","url":"\/documentation\/hummingbirdrouter\/routegroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteGroup"}],"title":"RouteGroup","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"kind":"symbol","role":"symbol","required":true,"abstract":[],"url":"\/documentation\/hummingbird\/middlewareprotocol\/context","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"title":"Context"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"title":"MiddlewareProtocol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/Route":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Route"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Route"}],"type":"topic","url":"\/documentation\/hummingbirdrouter\/route","abstract":[{"type":"text","text":"Route definition"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","title":"Route"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"FileMiddleware"}],"abstract":[{"type":"text","text":"Middleware for serving static files."}],"kind":"symbol","url":"\/documentation\/hummingbird\/filemiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileMiddleware"}],"role":"symbol","title":"FileMiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","title":"MetricsMiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"url":"\/documentation\/hummingbird\/metricsmiddleware","role":"symbol","navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsMiddleware","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"title":"TracingMiddleware","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","url":"\/documentation\/hummingbird\/tracingmiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"type":"topic","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","type":"topic","url":"\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketUpgradeMiddleware":{"navigatorTitle":[{"text":"WebSocketUpgradeMiddleware","kind":"identifier"}],"type":"topic","title":"WebSocketUpgradeMiddleware","url":"\/documentation\/hummingbirdwebsocket\/websocketupgrademiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketUpgradeMiddleware","kind":"identifier"}],"abstract":[{"text":"An alternative way to add a WebSocket upgrade to a router via Middleware","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketUpgradeMiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Middleware for compressing response bodies"}],"url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","navigatorTitle":[{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"title":"ResponseCompressionMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"url":"\/documentation\/hummingbirdcore\/response","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","navigatorTitle":[{"kind":"identifier","text":"Response"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"title":"Response"}}}