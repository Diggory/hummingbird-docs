{"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbcorerequestcontext"]}],"seeAlsoSections":[{"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCoreRequestContext","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext\/init(requestDecoder:responseEncoder:allocator:logger:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext\/parameters"],"title":"Instance Properties"}],"sections":[],"metadata":{"modules":[{"name":"Hummingbird"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCoreRequestContext","kind":"identifier"}],"symbolKind":"struct","roleHeading":"Structure","externalID":"s:11Hummingbird20HBCoreRequestContextV","title":"HBCoreRequestContext","navigatorTitle":[{"text":"HBCoreRequestContext","kind":"identifier"}]},"abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","url":"\/documentation\/hummingbird\/hbrequestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}],"title":"HBRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"abstract":[{"type":"text","text":"Protocol for a request context that can be created from a NIO Channel"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"url":"\/documentation\/hummingbird\/hbbaserequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","title":"HBBaseRequestContext","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext/init(requestDecoder:responseEncoder:allocator:logger:)":{"kind":"symbol","title":"init(requestDecoder:responseEncoder:allocator:logger:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"requestDecoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequestDecoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP"},{"text":", ","kind":"text"},{"text":"responseEncoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponseEncoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP"},{"text":", ","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbird\/hbcorerequestcontext\/init(requestdecoder:responseencoder:allocator:logger:)","role":"symbol","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext\/init(requestDecoder:responseEncoder:allocator:logger:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext/parameters":{"url":"\/documentation\/hummingbird\/hbcorerequestcontext\/parameters","title":"parameters","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parameters"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird12HBParametersa","kind":"typeIdentifier","text":"HBParameters"}],"role":"symbol","abstract":[{"type":"text","text":"Parameters extracted from URI"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext\/parameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","title":"HBRemoteAddressRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"role":"symbol","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"navigatorTitle":[{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"type":"topic","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCoreRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBCoreRequestContext"}],"url":"\/documentation\/hummingbird\/hbcorerequestcontext","title":"HBCoreRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext/endpointPath":{"url":"\/documentation\/hummingbird\/hbcorerequestcontext\/endpointpath","title":"endpointPath","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpointPath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird12EndpointPathV","kind":"typeIdentifier","text":"EndpointPath"}],"role":"symbol","abstract":[{"type":"text","text":"Endpoint path"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext\/endpointPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"type":"topic","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBBasicRequestContext"}],"url":"\/documentation\/hummingbird\/hbbasicrequestcontext","title":"HBBasicRequestContext"}}}