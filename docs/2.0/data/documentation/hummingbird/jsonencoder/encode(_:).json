{"abstract":[{"text":"Encodes the given top-level value and returns its JSON representation.","type":"text"}],"metadata":{"symbolKind":"method","modules":[{"name":"Hummingbird"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}],"externalID":"s:10Foundation11JSONEncoderC6encodeyAA4DataVxKSERzlF","roleHeading":"Instance Method","role":"symbol","title":"encode(_:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/encode(_:)"},"variants":[{"paths":["\/documentation\/hummingbird\/jsonencoder\/encode(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SE","text":"Encodable"}]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to encode."}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A new ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" value containing the encoded JSON data.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"text":" if a non-conforming floating-point value is encountered during encoding, and the encoding strategy is ","type":"text"},{"code":".throw","type":"codeVoice"},{"text":".","type":"text"}]}],"style":"note"},{"type":"aside","name":"Throws","content":[{"inlineContent":[{"text":"An error if any value throws an error during encoding.","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/encode(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/encode(_:)","abstract":[{"text":"Encodes the given top-level value and returns its JSON representation.","type":"text"}],"role":"symbol","type":"topic","title":"encode(_:)","url":"\/documentation\/hummingbird\/jsonencoder\/encode(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","url":"\/documentation\/hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"url":"\/documentation\/hummingbird\/jsonencoder","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into JSON."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","title":"JSONEncoder","type":"topic","kind":"symbol","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}]}}}