{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}]}],"kind":"declarations"}],"sections":[],"abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbird\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","roleHeading":"Case","modules":[{"name":"Hummingbird"}],"externalID":"s:10Foundation11JSONEncoderC34NonConformingFloatEncodingStrategyO5throwyA2EmF","symbolKind":"case","title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`throw`","kind":"identifier"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" values into JSON.","type":"text"}],"type":"topic","kind":"symbol","title":"JSONEncoder","role":"symbol","url":"\/documentation\/hummingbird\/jsonencoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/throw":{"abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"url":"\/documentation\/hummingbird\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw","title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"url":"\/documentation\/hummingbird\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","title":"JSONEncoder.NonConformingFloatEncodingStrategy","role":"symbol"}}}