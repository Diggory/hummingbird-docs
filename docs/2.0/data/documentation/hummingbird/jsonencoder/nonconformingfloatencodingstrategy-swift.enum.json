{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder"]]},"metadata":{"roleHeading":"Enumeration","symbolKind":"enum","role":"symbol","navigatorTitle":[{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"title":"JSONEncoder.NonConformingFloatEncodingStrategy","externalID":"s:10Foundation11JSONEncoderC34NonConformingFloatEncodingStrategyO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"modules":[{"name":"Hummingbird"}]},"sections":[],"abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum"]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/convertToString(positiveInfinity:negativeInfinity:nan:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw"],"title":"Enumeration Cases"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"kind":"symbol","title":"JSONEncoder","url":"\/documentation\/hummingbird\/jsonencoder","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into JSON."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/convertToString(positiveInfinity:negativeInfinity:nan:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/convertToString(positiveInfinity:negativeInfinity:nan:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Encode the values using the given representation strings."}],"url":"\/documentation\/hummingbird\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/converttostring(positiveinfinity:negativeinfinity:nan:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertToString"},{"kind":"text","text":"("},{"kind":"externalParam","text":"positiveInfinity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"negativeInfinity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nan"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"role":"symbol","title":"JSONEncoder.NonConformingFloatEncodingStrategy.convertToString(positiveInfinity:negativeInfinity:nan:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"title":"JSONEncoder.NonConformingFloatEncodingStrategy","url":"\/documentation\/hummingbird\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","type":"topic","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/throw":{"kind":"symbol","type":"topic","abstract":[{"text":"Throw upon encountering non-conforming values. This is the default strategy.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw","title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`throw`","kind":"identifier"}],"url":"\/documentation\/hummingbird\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw"}}}