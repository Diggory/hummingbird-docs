{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":", ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"If the closure fails to encode a value into the given encoder, the encoder will encode an empty automatic container in its place."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"abstract":[{"text":"Encode the ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" as a custom value encoded by the given closure.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/custom(_:)"]}],"metadata":{"modules":[{"name":"Hummingbird"}],"title":"JSONEncoder.DataEncodingStrategy.custom(_:)","externalID":"s:10Foundation11JSONEncoderC20DataEncodingStrategyO6customyAEyAA0C0V_s7Encoder_ptKccAEmF","roleHeading":"Case","role":"symbol","symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum":{"url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum","title":"JSONEncoder.DataEncodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataEncodingStrategy"}],"role":"symbol","abstract":[{"text":"The strategy to use for encoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum","navigatorTitle":[{"kind":"identifier","text":"DataEncodingStrategy"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/custom(_:)":{"title":"JSONEncoder.DataEncodingStrategy.custom(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)","abstract":[{"type":"text","text":"Encode the "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" as a custom value encoded by the given closure."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"custom"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/custom(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","type":"topic","role":"collection","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"title":"JSONEncoder","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsonencoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}]}}}