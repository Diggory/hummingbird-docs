{"abstract":[{"type":"text","text":"Encode the "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" as a custom value encoded by the given closure."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"text":"Encoder","preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the closure fails to encode a value into the given encoder, the encoder will encode an empty automatic container in its place."}]}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum"]]},"variants":[{"paths":["\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/custom(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"symbolKind":"case","roleHeading":"Case","role":"symbol","externalID":"s:10Foundation11JSONEncoderC20DataEncodingStrategyO6customyAEyAA0C0V_s7Encoder_ptKccAEmF","modules":[{"name":"Hummingbird"}],"title":"JSONEncoder.DataEncodingStrategy.custom(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":", any ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" values into JSON.","type":"text"}],"url":"\/documentation\/hummingbird\/jsonencoder","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"title":"JSONEncoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataEncodingStrategy","kind":"identifier"}],"type":"topic","abstract":[{"text":"The strategy to use for encoding ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" values.","type":"text"}],"navigatorTitle":[{"text":"DataEncodingStrategy","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum","title":"JSONEncoder.DataEncodingStrategy","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/custom(_:)":{"role":"symbol","url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/custom(_:)","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"JSONEncoder.DataEncodingStrategy.custom(_:)","abstract":[{"text":"Encode the ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" as a custom value encoded by the given closure."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)"}}}