{"abstract":[{"text":"The formatting of the output JSON data.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"externalID":"s:10Foundation11JSONEncoderC16OutputFormattingV","title":"JSONEncoder.OutputFormatting","roleHeading":"Structure","modules":[{"name":"Hummingbird"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputFormatting"}],"role":"symbol"},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue"]},{"title":"Type Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"title":"JSONEncoder","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsonencoder","type":"topic","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into JSON."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/OptionSet-Implementations":{"title":"OptionSet Implementations","url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","kind":"article","type":"topic","abstract":[]},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/Equatable-Implementations":{"url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/equatable-implementations","role":"collectionGroup","title":"Equatable Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","abstract":[],"type":"topic","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/rawValue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"}],"abstract":[],"url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/rawvalue","title":"rawValue","role":"symbol","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/init(rawValue:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(rawValue:)","abstract":[],"url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/init(rawvalue:)","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/sortedKeys":{"kind":"symbol","abstract":[{"text":"Produce JSON with dictionary keys sorted in lexicographic order.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","title":"sortedKeys","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sortedKeys","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","text":"OutputFormatting"}],"url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/sortedkeys","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct":{"title":"JSONEncoder.OutputFormatting","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct","type":"topic","abstract":[{"type":"text","text":"The formatting of the output JSON data."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/withoutEscapingSlashes":{"abstract":[{"type":"text","text":"By default slashes get escaped (”\/” → “\/”, “http:\/\/apple.com\/” → “http:\/\/apple.com\/”)"},{"type":"text","text":" "},{"type":"text","text":"for security reasons, allowing outputted JSON to be safely embedded within HTML\/XML."},{"type":"text","text":" "},{"type":"text","text":"In contexts where this escaping is unnecessary, the JSON is known to not be embedded,"},{"type":"text","text":" "},{"type":"text","text":"or is intended only for display, this option avoids this escaping."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"withoutEscapingSlashes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","text":"OutputFormatting"}],"url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/withoutescapingslashes","kind":"symbol","title":"withoutEscapingSlashes"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/prettyPrinted":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","title":"prettyPrinted","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prettyPrinted","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputFormatting","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/prettyprinted","abstract":[{"type":"text","text":"Produce human-readable JSON with indented output."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"title":"Swift.SetAlgebra","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/SY":{"title":"Swift.RawRepresentable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","role":"collectionGroup","url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"title":"Swift.OptionSet","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","type":"unresolvable"}}}