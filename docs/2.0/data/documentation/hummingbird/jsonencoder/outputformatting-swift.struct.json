{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes"],"title":"Type Properties"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"],"title":"Default Implementations"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}]}]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct","interfaceLanguage":"swift"},"metadata":{"symbolKind":"struct","title":"JSONEncoder.OutputFormatting","roleHeading":"Structure","externalID":"s:10Foundation11JSONEncoderC16OutputFormattingV","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputFormatting"}],"modules":[{"name":"Hummingbird"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder"]]},"abstract":[{"text":"The formatting of the output JSON data.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/withoutEscapingSlashes":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withoutEscapingSlashes","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutputFormatting","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","kind":"typeIdentifier"}],"title":"withoutEscapingSlashes","abstract":[{"text":"By default slashes get escaped (”\/” → “\/”, “http:\/\/apple.com\/” → “http:\/\/apple.com\/”)","type":"text"},{"text":" ","type":"text"},{"text":"for security reasons, allowing outputted JSON to be safely embedded within HTML\/XML.","type":"text"},{"text":" ","type":"text"},{"text":"In contexts where this escaping is unnecessary, the JSON is known to not be embedded,","type":"text"},{"text":" ","type":"text"},{"text":"or is intended only for display, this option avoids this escaping.","type":"text"}],"url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/withoutescapingslashes","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes","type":"topic"},"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP","title":"Swift.SetAlgebra","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/prettyPrinted":{"kind":"symbol","title":"prettyPrinted","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prettyPrinted","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONEncoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC"},{"text":".","kind":"text"},{"text":"OutputFormatting","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV"}],"url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/prettyprinted","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","role":"symbol","abstract":[{"text":"Produce human-readable JSON with indented output.","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/sortedKeys":{"url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/sortedkeys","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"sortedKeys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OutputFormatting","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV"}],"title":"sortedKeys","abstract":[{"text":"Produce JSON with dictionary keys sorted in lexicographic order.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","type":"topic"},"doc://com.opticalaberration.hummingbird/SY":{"title":"Swift.RawRepresentable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","abstract":[],"type":"topic","url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","kind":"article","title":"SetAlgebra Implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/rawValue":{"kind":"symbol","title":"rawValue","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"}],"url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/rawvalue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue","role":"symbol","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" values into JSON.","type":"text"}],"navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/jsonencoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"title":"JSONEncoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/OptionSet-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations","title":"OptionSet Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/init(rawValue:)":{"kind":"symbol","title":"init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/init(rawvalue:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)","role":"symbol","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"title":"Swift.OptionSet","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct":{"navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}],"role":"symbol","title":"JSONEncoder.OutputFormatting","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputFormatting"}],"abstract":[{"type":"text","text":"The formatting of the output JSON data."}],"type":"topic","url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/OutputFormatting-swift.struct/Equatable-Implementations":{"kind":"article","type":"topic","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","url":"\/documentation\/hummingbird\/jsonencoder\/outputformatting-swift.struct\/equatable-implementations","role":"collectionGroup"}}}