{"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The strategy to use for encoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/base64","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/deferredToData"],"title":"Enumeration Cases"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataEncodingStrategy","kind":"identifier"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum"]}],"kind":"symbol","metadata":{"modules":[{"name":"Hummingbird"}],"externalID":"s:10Foundation11JSONEncoderC20DataEncodingStrategyO","symbolKind":"enum","title":"JSONEncoder.DataEncodingStrategy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DataEncodingStrategy"}],"roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataEncodingStrategy"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/base64":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/base64","abstract":[{"type":"text","text":"Encoded the "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" as a Base64-encoded string. This is the default strategy."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"base64"}],"role":"symbol","url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/base64","title":"JSONEncoder.DataEncodingStrategy.base64"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"url":"\/documentation\/hummingbird\/jsonencoder","title":"JSONEncoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}],"abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum":{"url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum","kind":"symbol","title":"JSONEncoder.DataEncodingStrategy","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum","abstract":[{"text":"The strategy to use for encoding ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" values.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataEncodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"DataEncodingStrategy","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/deferredToData":{"url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/deferredtodata","title":"JSONEncoder.DataEncodingStrategy.deferredToData","abstract":[{"type":"text","text":"Defer to "},{"type":"codeVoice","code":"Data"},{"text":" for choosing an encoding.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/deferredToData","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToData","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/custom(_:)":{"url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/custom(_:)","kind":"symbol","title":"JSONEncoder.DataEncodingStrategy.custom(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)","abstract":[{"text":"Encode the ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" as a custom value encoded by the given closure.","type":"text"}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":", ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","title":"Hummingbird","url":"\/documentation\/hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]}}}