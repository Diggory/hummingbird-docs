{"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"The strategy to use for encoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataEncodingStrategy"}],"platforms":["Linux"],"languages":["swift"]}]}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataEncodingStrategy"}],"modules":[{"name":"Hummingbird"}],"roleHeading":"Enumeration","symbolKind":"enum","externalID":"s:10Foundation11JSONEncoderC20DataEncodingStrategyO","navigatorTitle":[{"kind":"identifier","text":"DataEncodingStrategy"}],"role":"symbol","title":"JSONEncoder.DataEncodingStrategy"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/base64","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/deferredToData"],"title":"Enumeration Cases"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"url":"\/documentation\/hummingbird\/jsonencoder","kind":"symbol","title":"JSONEncoder","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into JSON."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/deferredToData":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deferredToData"}],"abstract":[{"type":"text","text":"Defer to "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" for choosing an encoding."}],"title":"JSONEncoder.DataEncodingStrategy.deferredToData","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/deferredToData","url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/deferredtodata","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/custom(_:)":{"url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/custom(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"custom"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)","type":"topic","title":"JSONEncoder.DataEncodingStrategy.custom(_:)","abstract":[{"type":"text","text":"Encode the "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" as a custom value encoded by the given closure."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum":{"url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataEncodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"DataEncodingStrategy","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","title":"JSONEncoder.DataEncodingStrategy","abstract":[{"type":"text","text":"The strategy to use for encoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","title":"Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/base64":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/base64","title":"JSONEncoder.DataEncodingStrategy.base64","url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/base64","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"base64"}],"abstract":[{"type":"text","text":"Encoded the "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" as a Base64-encoded string. This is the default strategy."}],"type":"topic"}}}