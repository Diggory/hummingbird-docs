{"abstract":[{"type":"text","text":"The strategy to use for encoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/base64","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/deferredToData"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"title":"JSONEncoder.DataEncodingStrategy","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataEncodingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"DataEncodingStrategy"}],"roleHeading":"Enumeration","modules":[{"name":"Hummingbird"}],"role":"symbol","symbolKind":"enum","externalID":"s:10Foundation11JSONEncoderC20DataEncodingStrategyO"},"variants":[{"paths":["\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataEncodingStrategy"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/base64":{"abstract":[{"type":"text","text":"Encoded the "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" as a Base64-encoded string. This is the default strategy."}],"role":"symbol","title":"JSONEncoder.DataEncodingStrategy.base64","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/base64","url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/base64","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"base64"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/deferredToData":{"url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/deferredtodata","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deferredToData"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/deferredToData","title":"JSONEncoder.DataEncodingStrategy.deferredToData","type":"topic","abstract":[{"type":"text","text":"Defer to "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" for choosing an encoding."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum":{"url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum","role":"symbol","type":"topic","title":"JSONEncoder.DataEncodingStrategy","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataEncodingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"The strategy to use for encoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"navigatorTitle":[{"text":"DataEncodingStrategy","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"title":"JSONEncoder","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}],"url":"\/documentation\/hummingbird\/jsonencoder","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder/DataEncodingStrategy-swift.enum/custom(_:)":{"abstract":[{"type":"text","text":"Encode the "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" as a custom value encoded by the given closure."}],"role":"symbol","title":"JSONEncoder.DataEncodingStrategy.custom(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)","url":"\/documentation\/hummingbird\/jsonencoder\/dataencodingstrategy-swift.enum\/custom(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"custom"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]}}}