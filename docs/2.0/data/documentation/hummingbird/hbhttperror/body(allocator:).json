{"abstract":[{"type":"text","text":"Get body of error as ByteBuffer"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError\/body(allocator:)"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbhttperror\/body(allocator:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":"?"}],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError"]]},"metadata":{"externalID":"s:15HummingbirdCore11HBHTTPErrorV4body9allocator7NIOCore10ByteBufferVSgAF0gH9AllocatorV_tF","symbolKind":"method","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","role":"symbol","title":"body(allocator:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":"?"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError":{"navigatorTitle":[{"kind":"identifier","text":"HBHTTPError"}],"role":"symbol","title":"HBHTTPError","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPError"}],"abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}],"url":"\/documentation\/hummingbird\/hbhttperror","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError/body(allocator:)":{"abstract":[{"type":"text","text":"Get body of error as ByteBuffer"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier","text":"ByteBufferAllocator"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError\/body(allocator:)","url":"\/documentation\/hummingbird\/hbhttperror\/body(allocator:)","type":"topic","title":"body(allocator:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","role":"collectionGroup","title":"Error Handling","kind":"article","url":"\/documentation\/hummingbird\/errorhandling","abstract":[{"text":"How to build errors for the server to return.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","url":"\/documentation\/index","role":"collection","kind":"article","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}]}}}