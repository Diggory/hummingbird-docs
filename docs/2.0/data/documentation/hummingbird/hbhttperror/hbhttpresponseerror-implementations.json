{"metadata":{"role":"collectionGroup","title":"HBHTTPResponseError Implementations","modules":[{"name":"Hummingbird"},{"name":"HummingbirdCore"}]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError\/response(allocator:)"],"generated":true,"title":"Instance Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError\/HBHTTPResponseError-Implementations"},"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError/response(allocator:)":{"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError\/response(allocator:)","kind":"symbol","role":"symbol","title":"response(allocator:)","url":"\/documentation\/hummingbird\/hbhttperror\/response(allocator:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"response","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","text":"HBResponse"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError":{"url":"\/documentation\/hummingbird\/hbhttperror","title":"HBHTTPError","navigatorTitle":[{"kind":"identifier","text":"HBHTTPError"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBHTTPError"}],"abstract":[{"text":"Default HTTP error. Provides an HTTP status and a message is so desired","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"role":"collectionGroup","url":"\/documentation\/hummingbird\/errorhandling","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","title":"Error Handling","abstract":[{"type":"text","text":"How to build errors for the server to return."}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","title":"Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"kind":"article"}}}