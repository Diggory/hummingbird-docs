{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver\/assumeIsolated(_:file:line:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Actor.assumeIsolated(_:file:line:)","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver\/Actor-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver\/Actor-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver\/Actor-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assumeIsolated"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": ("},{"kind":"keyword","text":"isolated"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#fileID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#line"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbmemorypersistdriver\/assumeisolated(_:file:line:)"]}],"metadata":{"modules":[{"relatedModules":["_Concurrency"],"name":"Hummingbird"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","extendedModule":"_Concurrency","platforms":[{"introducedAt":"17.0","unavailable":false,"name":"iOS","beta":false,"deprecated":false},{"introducedAt":"14.0","unavailable":false,"name":"macOS","beta":false,"deprecated":false},{"introducedAt":"17.0","unavailable":false,"name":"tvOS","beta":false,"deprecated":false},{"introducedAt":"10.0","unavailable":false,"name":"watchOS","beta":false,"deprecated":false}],"title":"assumeIsolated(_:file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assumeIsolated","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"isolated","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"externalID":"s:ScA12_ConcurrencyE14assumeIsolated_4file4lineqd__qd__xYiKXE_s12StaticStringVSutKlF::SYNTHESIZED::s:11Hummingbird21HBMemoryPersistDriverC"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"kind":"article","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/hummingbird\/persistentdata","title":"Persistent data","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMemoryPersistDriver":{"url":"\/documentation\/hummingbird\/hbmemorypersistdriver","title":"HBMemoryPersistDriver","abstract":[{"type":"text","text":"In memory driver for persist system for storing persistent cross request key\/value pairs"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMemoryPersistDriver","kind":"identifier"}],"navigatorTitle":[{"text":"HBMemoryPersistDriver","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMemoryPersistDriver/assumeIsolated(_:file:line:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver\/assumeIsolated(_:file:line:)","type":"topic","kind":"symbol","role":"symbol","abstract":[],"title":"assumeIsolated(_:file:line:)","url":"\/documentation\/hummingbird\/hbmemorypersistdriver\/assumeisolated(_:file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assumeIsolated","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"isolated","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"role":"collection","url":"\/documentation\/index","title":"Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMemoryPersistDriver/Actor-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver\/Actor-Implementations","url":"\/documentation\/hummingbird\/hbmemorypersistdriver\/actor-implementations","abstract":[],"title":"Actor Implementations","kind":"article","role":"collectionGroup","type":"topic"}}}