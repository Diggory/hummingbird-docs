{"seeAlsoSections":[{"generated":true,"anchor":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"title":"Middleware"}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Conforms To"}],"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"]},{"anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/handle(_:context:next:)"],"title":"Instance Methods","generated":true},{"anchor":"Enumerations","title":"Enumerations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/AllowOrigin"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"metadata":{"externalID":"s:11Hummingbird14CORSMiddlewareV","symbolKind":"struct","role":"symbol","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CORSMiddleware"}],"title":"CORSMiddleware"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CORSMiddleware"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"If request has “origin” header then generate CORS headers. If method is OPTIONS"},{"text":" ","type":"text"},{"type":"text","text":"then return an empty body with all the standard CORS headers otherwise send"},{"type":"text","text":" "},{"type":"text","text":"request onto the next handler and when you receive the response add a"},{"type":"text","text":" "},{"text":"“access-control-allow-origin” header","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/hummingbird\/corsmiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"references":{"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/request","kind":"symbol","title":"Request","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol"},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/tracingmiddleware","title":"TracingMiddleware","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"navigatorTitle":[{"kind":"identifier","text":"Response"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"url":"\/documentation\/hummingbirdcore\/response","kind":"symbol","title":"Response","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","title":"CORSMiddleware","kind":"symbol","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/corsmiddleware","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"LogRequestsMiddleware","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/logrequestsmiddleware","title":"LogRequestsMiddleware","navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/handle(_:context:next:)":{"abstract":[{"text":"apply CORS middleware","type":"text"}],"url":"\/documentation\/hummingbird\/corsmiddleware\/handle(_:context:next:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV7Contextxmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"text":": (","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/handle(_:context:next:)","type":"topic","role":"symbol","title":"handle(_:context:next:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"abstract":[{"text":"Version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":" and output is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/routermiddleware","kind":"symbol","title":"RouterMiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}],"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"url":"\/documentation\/hummingbird\/middlewaregroup","title":"MiddlewareGroup","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"abstract":[{"type":"text","text":"Middleware stack result builder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","title":"MiddlewareFixedTypeBuilder","kind":"symbol","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"url":"\/documentation\/hummingbird\/middlewareprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","role":"symbol","title":"MiddlewareProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/requestcontext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"kind":"symbol","title":"RequestContext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MetricsMiddleware"}],"kind":"symbol","url":"\/documentation\/hummingbird\/metricsmiddleware","title":"MetricsMiddleware","navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/AllowOrigin":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AllowOrigin"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/AllowOrigin","title":"CORSMiddleware.AllowOrigin","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AllowOrigin"}],"url":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin","abstract":[{"type":"text","text":"Defines what origins are allowed"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"allowOrigin"},{"text":": ","kind":"text"},{"text":"AllowOrigin","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV11AllowOriginO"},{"kind":"text","text":", "},{"text":"allowHeaders","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:9HTTPTypes9HTTPFieldV","kind":"typeIdentifier","text":"HTTPField"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV","text":"Name"},{"text":"], ","kind":"text"},{"text":"allowMethods","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":"], "},{"text":"allowCredentials","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"exposedHeaders"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]?, ","kind":"text"},{"text":"maxAge","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"role":"symbol","kind":"symbol","title":"init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","abstract":[{"type":"text","text":"Initialize CORS middleware"}],"type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird","kind":"symbol","title":"Hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}