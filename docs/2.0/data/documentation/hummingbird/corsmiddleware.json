{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CORSMiddleware"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"}]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"If request has “origin” header then generate CORS headers. If method is OPTIONS","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"then return an empty body with all the standard CORS headers otherwise send"},{"type":"text","text":" "},{"type":"text","text":"request onto the next handler and when you receive the response add a"},{"text":" ","type":"text"},{"type":"text","text":"“access-control-allow-origin” header"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/corsmiddleware"]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"kind":"symbol","sections":[],"abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CORSMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"externalID":"s:11Hummingbird14CORSMiddlewareV","roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Hummingbird"}],"role":"symbol","title":"CORSMiddleware"},"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"anchor":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"generated":true,"title":"Middleware"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"],"generated":true,"title":"Initializers","anchor":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/handle(_:context:next:)"],"generated":true,"anchor":"Instance-Methods"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/AllowOrigin"],"title":"Enumerations","anchor":"Enumerations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"role":"symbol","title":"Request","url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/AllowOrigin":{"type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware\/alloworigin","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AllowOrigin"}],"navigatorTitle":[{"kind":"identifier","text":"AllowOrigin"}],"kind":"symbol","abstract":[{"type":"text","text":"Defines what origins are allowed"}],"role":"symbol","title":"CORSMiddleware.AllowOrigin","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/AllowOrigin"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"type":"topic","kind":"symbol","title":"MetricsMiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"url":"\/documentation\/hummingbird\/metricsmiddleware"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/corsmiddleware","title":"CORSMiddleware","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"role":"symbol","title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"title":"Response","role":"symbol","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","url":"\/documentation\/hummingbird\/routermiddleware","abstract":[{"text":"Version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"text":" whose Input is ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":" and output is ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference","isActive":true},{"type":"text","text":"."}],"kind":"symbol","title":"RouterMiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"role":"symbol","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/tracingmiddleware","kind":"symbol","title":"TracingMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"TracingMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}]},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/handle(_:context:next:)":{"title":"handle(_:context:next:)","url":"\/documentation\/hummingbird\/corsmiddleware\/handle(_:context:next:)","role":"symbol","kind":"symbol","abstract":[{"text":"apply CORS middleware","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/handle(_:context:next:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV7Contextxmfp"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV7Contextxmfp"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/middlewaregroup","navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"role":"symbol","title":"MiddlewareGroup","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"role":"symbol","title":"MiddlewareFixedTypeBuilder","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","abstract":[{"text":"Middleware stack result builder","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"role":"symbol","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware","type":"topic","kind":"symbol","title":"LogRequestsMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogRequestsMiddleware"}],"navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)":{"type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"allowOrigin","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AllowOrigin","preciseIdentifier":"s:11Hummingbird14CORSMiddlewareV11AllowOriginO"},{"text":", ","kind":"text"},{"text":"allowHeaders","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"HTTPField","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV","text":"Name","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"allowMethods","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier","text":"Method"},{"kind":"text","text":"], "},{"text":"allowCredentials","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"exposedHeaders","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]?, ","kind":"text"},{"text":"maxAge","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"text":"?)","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Initialize CORS middleware"}],"role":"symbol","title":"init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"title":"MiddlewareProtocol","role":"symbol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol"}}}