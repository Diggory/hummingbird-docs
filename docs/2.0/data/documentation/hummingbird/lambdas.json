{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"title":"Additional Features"}],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"HBMustacheLambda"},{"text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Given the object "},{"code":"person","type":"codeVoice"},{"type":"text","text":" defined below"}],"type":"paragraph"},{"code":["struct Person {","    let name: String","    let wrapped: HBMustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: HBMustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"and the following mustache template","type":"text"}],"type":"paragraph"},{"code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try HBMustacheTemplate(string: mustache)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Then ","type":"text"},{"type":"codeVoice","code":"template.render(person)"},{"text":" will output","type":"text"}],"type":"paragraph"},{"code":["<b>John is awesome.<\/b>"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"In this example the template constructed from the contents of the ","type":"text"},{"code":"wrapped","type":"codeVoice"},{"text":" section of the mustache is passed to my ","type":"text"},{"code":"wrapped","type":"codeVoice"},{"text":" function inside the ","type":"text"},{"code":"Person","type":"codeVoice"},{"text":" type.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"HummingbirdMustache"}],"title":"Lambdas"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"url":"\/documentation\/hummingbird\/transforms","role":"article","type":"topic","title":"Transforms","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","abstract":[{"text":"Transforming objects during render","type":"text"}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"type":"topic","abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","kind":"article","role":"article","url":"\/documentation\/hummingbird\/templateinheritance","title":"Template Inheritance"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","abstract":[{"type":"text","text":"Setting template render configuration settings."}],"role":"article","kind":"article","title":"Pragmas\/Configuration variables","url":"\/documentation\/hummingbird\/pragmas"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"title":"HummingbirdMustache","url":"\/documentation\/hummingbirdmustache","abstract":[{"type":"text","text":"Mustache template engine."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","kind":"symbol","role":"collection","type":"topic"}}}