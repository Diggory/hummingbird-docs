{"abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true,"title":"Additional Features"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Article","role":"article","modules":[{"name":"Mustache"}],"title":"Lambdas"},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"MustacheLambda"},{"text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given the object "},{"type":"codeVoice","code":"person"},{"type":"text","text":" defined below"}]},{"code":["struct Person {","    let name: String","    let wrapped: MustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: MustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"and the following mustache template"}]},{"code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try MustacheTemplate(string: mustache)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Then ","type":"text"},{"type":"codeVoice","code":"template.render(person)"},{"text":" will output","type":"text"}]},{"code":["<b>John is awesome.<\/b>"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In this example the template constructed from the contents of the ","type":"text"},{"type":"codeVoice","code":"wrapped"},{"text":" section of the mustache is passed to my ","type":"text"},{"type":"codeVoice","code":"wrapped"},{"text":" function inside the ","type":"text"},{"type":"codeVoice","code":"Person"},{"text":" type.","type":"text"}]}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"type":"topic","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","url":"\/documentation\/hummingbird\/transforms","abstract":[{"text":"Transforming objects during render","type":"text"}],"kind":"article","title":"Transforms"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"type":"topic","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","url":"\/documentation\/hummingbird\/pragmas","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"kind":"article","title":"Pragmas\/Configuration variables"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection","type":"topic","title":"Mustache","url":"\/documentation\/mustache","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"role":"article","title":"Template Inheritance","url":"\/documentation\/hummingbird\/templateinheritance","abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","kind":"article"}}}