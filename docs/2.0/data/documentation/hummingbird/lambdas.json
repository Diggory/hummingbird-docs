{"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"MustacheLambda"},{"type":"text","text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Given the object ","type":"text"},{"code":"person","type":"codeVoice"},{"text":" defined below","type":"text"}]},{"type":"codeListing","code":["struct Person {","    let name: String","    let wrapped: MustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: MustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"and the following mustache template"}]},{"type":"codeListing","code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try MustacheTemplate(string: mustache)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then "},{"type":"codeVoice","code":"template.render(person)"},{"type":"text","text":" will output"}]},{"type":"codeListing","code":["<b>John is awesome.<\/b>"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example the template constructed from the contents of the "},{"type":"codeVoice","code":"wrapped"},{"type":"text","text":" section of the mustache is passed to my "},{"type":"codeVoice","code":"wrapped"},{"type":"text","text":" function inside the "},{"type":"codeVoice","code":"Person"},{"type":"text","text":" type."}]}],"kind":"content"}],"abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true,"title":"Additional Features"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","metadata":{"role":"article","modules":[{"name":"Mustache"}],"roleHeading":"Article","title":"Lambdas"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","title":"Pragmas\/Configuration variables","role":"article","kind":"article","abstract":[{"type":"text","text":"Setting template render configuration settings."}],"type":"topic","url":"\/documentation\/hummingbird\/pragmas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","url":"\/documentation\/hummingbird\/templateinheritance","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"title":"Template Inheritance","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","title":"Transforms","role":"article","type":"topic","url":"\/documentation\/hummingbird\/transforms","abstract":[{"text":"Transforming objects during render","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"title":"Mustache","url":"\/documentation\/mustache","type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","role":"collection"}}}