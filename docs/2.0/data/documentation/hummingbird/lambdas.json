{"metadata":{"modules":[{"name":"HummingbirdMustache"}],"role":"article","roleHeading":"Article","title":"Lambdas"},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"HBMustacheLambda"},{"type":"text","text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given the object "},{"code":"person","type":"codeVoice"},{"type":"text","text":" defined below"}]},{"code":["struct Person {","    let name: String","    let wrapped: HBMustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: HBMustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"and the following mustache template"}]},{"code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try HBMustacheTemplate(string: mustache)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then "},{"type":"codeVoice","code":"template.render(person)"},{"type":"text","text":" will output"}]},{"code":["<b>John is awesome.<\/b>"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example the template constructed from the contents of the "},{"type":"codeVoice","code":"wrapped"},{"type":"text","text":" section of the mustache is passed to my "},{"type":"codeVoice","code":"wrapped"},{"type":"text","text":" function inside the "},{"type":"codeVoice","code":"Person"},{"type":"text","text":" type."}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas"},"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"title":"Additional Features"}],"abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"title":"Template Inheritance","kind":"article","role":"article","abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"type":"topic","url":"\/documentation\/hummingbird\/templateinheritance","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"title":"Transforms","kind":"article","role":"article","abstract":[{"type":"text","text":"Transforming objects during render"}],"type":"topic","url":"\/documentation\/hummingbird\/transforms","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"title":"Pragmas\/Configuration variables","kind":"article","role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","abstract":[{"type":"text","text":"Setting template render configuration settings."}],"url":"\/documentation\/hummingbird\/pragmas"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","type":"topic","url":"\/documentation\/hummingbirdmustache","kind":"symbol","title":"HummingbirdMustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection"}}}