{"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","interfaceLanguage":"swift"},"kind":"article","metadata":{"title":"Lambdas","role":"article","modules":[{"name":"HummingbirdMustache"}],"roleHeading":"Article"},"seeAlsoSections":[{"generated":true,"title":"Additional Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"sections":[],"abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature."}]},{"type":"paragraph","inlineContent":[{"text":"Add a ","type":"text"},{"type":"codeVoice","code":"HBMustacheLambda"},{"text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Given the object ","type":"text"},{"code":"person","type":"codeVoice"},{"text":" defined below","type":"text"}]},{"type":"codeListing","code":["struct Person {","    let name: String","    let wrapped: HBMustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: HBMustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"and the following mustache template"}]},{"type":"codeListing","code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try HBMustacheTemplate(string: mustache)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then "},{"type":"codeVoice","code":"template.render(person)"},{"type":"text","text":" will output"}]},{"type":"codeListing","code":["<b>John is awesome.<\/b>"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example the template constructed from the contents of the "},{"code":"wrapped","type":"codeVoice"},{"type":"text","text":" section of the mustache is passed to my "},{"code":"wrapped","type":"codeVoice"},{"type":"text","text":" function inside the "},{"code":"Person","type":"codeVoice"},{"type":"text","text":" type."}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"abstract":[{"type":"text","text":"Mustache template engine."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","role":"collection","url":"\/documentation\/hummingbirdmustache","type":"topic","title":"HummingbirdMustache","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"type":"topic","role":"article","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","url":"\/documentation\/hummingbird\/pragmas","title":"Pragmas\/Configuration variables","abstract":[{"type":"text","text":"Setting template render configuration settings."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"title":"Template Inheritance","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","url":"\/documentation\/hummingbird\/templateinheritance","role":"article","kind":"article","type":"topic","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","url":"\/documentation\/hummingbird\/transforms","title":"Transforms","abstract":[{"type":"text","text":"Transforming objects during render"}],"role":"article"}}}