{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"sections":[],"kind":"article","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature."}]},{"type":"paragraph","inlineContent":[{"text":"Add a ","type":"text"},{"code":"HBMustacheLambda","type":"codeVoice"},{"text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given the object "},{"type":"codeVoice","code":"person"},{"type":"text","text":" defined below"}]},{"type":"codeListing","syntax":"swift","code":["struct Person {","    let name: String","    let wrapped: HBMustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: HBMustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"and the following mustache template"}]},{"type":"codeListing","syntax":"swift","code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try HBMustacheTemplate(string: mustache)"]},{"type":"paragraph","inlineContent":[{"text":"Then ","type":"text"},{"type":"codeVoice","code":"template.render(person)"},{"text":" will output","type":"text"}]},{"type":"codeListing","syntax":null,"code":["<b>John is awesome.<\/b>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example the template constructed from the contents of the "},{"type":"codeVoice","code":"wrapped"},{"type":"text","text":" section of the mustache is passed to my "},{"type":"codeVoice","code":"wrapped"},{"type":"text","text":" function inside the "},{"type":"codeVoice","code":"Person"},{"type":"text","text":" type."}]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"generated":true,"title":"Additional Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas"},"metadata":{"modules":[{"name":"HummingbirdMustache"}],"roleHeading":"Article","title":"Lambdas","role":"article"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"url":"\/documentation\/hummingbird\/pragmas","role":"article","title":"Pragmas\/Configuration variables","type":"topic","kind":"article","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"url":"\/documentation\/hummingbird\/transforms","role":"article","title":"Transforms","type":"topic","kind":"article","abstract":[{"text":"Transforming objects during render","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"abstract":[{"type":"text","text":"Mustache template engine."}],"role":"collection","kind":"symbol","type":"topic","title":"HummingbirdMustache","url":"\/documentation\/hummingbirdmustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"url":"\/documentation\/hummingbird\/templateinheritance","role":"article","title":"Template Inheritance","type":"topic","kind":"article","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance"}}}