{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas"},"abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"sections":[],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"MustacheLambda"},{"type":"text","text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given the object "},{"type":"codeVoice","code":"person"},{"type":"text","text":" defined below"}]},{"type":"codeListing","syntax":"swift","code":["struct Person {","    let name: String","    let wrapped: MustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: MustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""]},{"type":"paragraph","inlineContent":[{"text":"and the following mustache template","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try MustacheTemplate(string: mustache)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then "},{"type":"codeVoice","code":"template.render(person)"},{"type":"text","text":" will output"}]},{"type":"codeListing","syntax":null,"code":["<b>John is awesome.<\/b>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example the template constructed from the contents of the "},{"code":"wrapped","type":"codeVoice"},{"type":"text","text":" section of the mustache is passed to my "},{"code":"wrapped","type":"codeVoice"},{"text":" function inside the ","type":"text"},{"type":"codeVoice","code":"Person"},{"text":" type.","type":"text"}]}],"kind":"content"}],"kind":"article","metadata":{"title":"Lambdas","modules":[{"name":"Mustache"}],"roleHeading":"Article","role":"article"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"title":"Additional Features","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","type":"topic","title":"Transforms","abstract":[{"type":"text","text":"Transforming objects during render"}],"url":"\/documentation\/hummingbird\/transforms","role":"article","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","url":"\/documentation\/mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"role":"collection","type":"topic","title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"kind":"article","role":"article","title":"Pragmas\/Configuration variables","url":"\/documentation\/hummingbird\/pragmas","type":"topic","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","type":"topic","title":"Template Inheritance","abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"url":"\/documentation\/hummingbird\/templateinheritance","role":"article","kind":"article"}}}