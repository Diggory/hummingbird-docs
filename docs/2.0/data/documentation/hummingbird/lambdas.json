{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Additional Features","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]}],"metadata":{"modules":[{"name":"HummingbirdMustache"}],"title":"Lambdas","roleHeading":"Article","role":"article"},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"code":"HBMustacheLambda","type":"codeVoice"},{"type":"text","text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given the object "},{"type":"codeVoice","code":"person"},{"type":"text","text":" defined below"}]},{"type":"codeListing","syntax":"swift","code":["struct Person {","    let name: String","    let wrapped: HBMustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: HBMustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""]},{"inlineContent":[{"type":"text","text":"and the following mustache template"}],"type":"paragraph"},{"syntax":"swift","code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try HBMustacheTemplate(string: mustache)"],"type":"codeListing"},{"inlineContent":[{"text":"Then ","type":"text"},{"code":"template.render(person)","type":"codeVoice"},{"text":" will output","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["<b>John is awesome.<\/b>"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"In this example the template constructed from the contents of the "},{"code":"wrapped","type":"codeVoice"},{"type":"text","text":" section of the mustache is passed to my "},{"code":"wrapped","type":"codeVoice"},{"type":"text","text":" function inside the "},{"code":"Person","type":"codeVoice"},{"type":"text","text":" type."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"title":"Transforms","url":"\/documentation\/hummingbird\/transforms","type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","abstract":[{"text":"Transforming objects during render","type":"text"}],"role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"type":"topic","role":"article","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","title":"Template Inheritance","url":"\/documentation\/hummingbird\/templateinheritance"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"abstract":[{"type":"text","text":"Setting template render configuration settings."}],"type":"topic","role":"article","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","title":"Pragmas\/Configuration variables","url":"\/documentation\/hummingbird\/pragmas"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"abstract":[{"type":"text","text":"Mustache template engine."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","url":"\/documentation\/hummingbirdmustache","role":"collection","kind":"symbol","type":"topic","title":"HummingbirdMustache"}}}