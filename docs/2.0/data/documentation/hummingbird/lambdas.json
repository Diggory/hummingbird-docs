{"metadata":{"title":"Lambdas","modules":[{"name":"HummingbirdMustache"}],"role":"article","roleHeading":"Article"},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas"},"sections":[],"kind":"article","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"HBMustacheLambda"},{"type":"text","text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Given the object "},{"type":"codeVoice","code":"person"},{"type":"text","text":" defined below"}],"type":"paragraph"},{"code":["struct Person {","    let name: String","    let wrapped: HBMustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: HBMustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"and the following mustache template","type":"text"}],"type":"paragraph"},{"code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try HBMustacheTemplate(string: mustache)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Then "},{"type":"codeVoice","code":"template.render(person)"},{"type":"text","text":" will output"}],"type":"paragraph"},{"code":["<b>John is awesome.<\/b>"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"In this example the template constructed from the contents of the "},{"code":"wrapped","type":"codeVoice"},{"type":"text","text":" section of the mustache is passed to my "},{"code":"wrapped","type":"codeVoice"},{"type":"text","text":" function inside the "},{"code":"Person","type":"codeVoice"},{"type":"text","text":" type."}],"type":"paragraph"}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"title":"Additional Features","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","url":"\/documentation\/hummingbird\/transforms","title":"Transforms","role":"article","abstract":[{"text":"Transforming objects during render","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","url":"\/documentation\/hummingbird\/templateinheritance","title":"Template Inheritance","role":"article","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","url":"\/documentation\/hummingbirdmustache","type":"topic","title":"HummingbirdMustache","abstract":[{"type":"text","text":"Mustache template engine."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"type":"topic","title":"Pragmas\/Configuration variables","kind":"article","url":"\/documentation\/hummingbird\/pragmas","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas"}}}