{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true,"title":"Additional Features"}],"metadata":{"role":"article","modules":[{"name":"Mustache"}],"roleHeading":"Article","title":"Lambdas"},"abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"kind":"article","sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"inlineContent":[{"text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Add a "},{"code":"MustacheLambda","type":"codeVoice"},{"text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Given the object "},{"type":"codeVoice","code":"person"},{"type":"text","text":" defined below"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct Person {","    let name: String","    let wrapped: MustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: MustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""]},{"inlineContent":[{"text":"and the following mustache template","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try MustacheTemplate(string: mustache)"]},{"inlineContent":[{"type":"text","text":"Then "},{"type":"codeVoice","code":"template.render(person)"},{"type":"text","text":" will output"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["<b>John is awesome.<\/b>"]},{"inlineContent":[{"text":"In this example the template constructed from the contents of the ","type":"text"},{"code":"wrapped","type":"codeVoice"},{"text":" section of the mustache is passed to my ","type":"text"},{"code":"wrapped","type":"codeVoice"},{"text":" function inside the ","type":"text"},{"code":"Person","type":"codeVoice"},{"text":" type.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"type":"topic","kind":"article","title":"Pragmas\/Configuration variables","url":"\/documentation\/hummingbird\/pragmas","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","abstract":[{"text":"Setting template render configuration settings.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"abstract":[{"type":"text","text":"Mustache template engine."}],"url":"\/documentation\/mustache","title":"Mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","role":"collection","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"role":"article","title":"Transforms","abstract":[{"text":"Transforming objects during render","type":"text"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","type":"topic","url":"\/documentation\/hummingbird\/transforms"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"role":"article","title":"Template Inheritance","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","type":"topic","url":"\/documentation\/hummingbird\/templateinheritance"}}}