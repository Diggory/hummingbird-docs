{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Add a "},{"code":"MustacheLambda","type":"codeVoice"},{"type":"text","text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Given the object "},{"code":"person","type":"codeVoice"},{"text":" defined below","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["struct Person {","    let name: String","    let wrapped: MustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: MustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""],"syntax":"swift"},{"inlineContent":[{"text":"and the following mustache template","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try MustacheTemplate(string: mustache)"],"syntax":"swift"},{"inlineContent":[{"text":"Then ","type":"text"},{"type":"codeVoice","code":"template.render(person)"},{"text":" will output","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["<b>John is awesome.<\/b>"],"syntax":null},{"inlineContent":[{"text":"In this example the template constructed from the contents of the ","type":"text"},{"code":"wrapped","type":"codeVoice"},{"text":" section of the mustache is passed to my ","type":"text"},{"code":"wrapped","type":"codeVoice"},{"text":" function inside the ","type":"text"},{"code":"Person","type":"codeVoice"},{"text":" type.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"role":"article","modules":[{"name":"Mustache"}],"title":"Lambdas","images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"Article"},"kind":"article","sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true,"title":"Additional Features"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","title":"Transforms","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Transforming objects during render"}],"url":"\/documentation\/hummingbird\/transforms","type":"topic","role":"article","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","role":"article","url":"\/documentation\/hummingbird\/pragmas","abstract":[{"type":"text","text":"Setting template render configuration settings."}],"type":"topic","kind":"article","title":"Pragmas\/Configuration variables"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","title":"Template Inheritance","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"url":"\/documentation\/hummingbird\/templateinheritance","type":"topic","role":"article","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Mustache template engine."}],"url":"\/documentation\/mustache","type":"topic","role":"collection","kind":"symbol"},"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image"}}}