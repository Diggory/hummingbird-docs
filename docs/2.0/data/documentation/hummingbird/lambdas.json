{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"seeAlsoSections":[{"title":"Additional Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true}],"kind":"article","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"The library doesnâ€™t provide a lambda implementation but it does provide something akin to the lambda feature.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"MustacheLambda"},{"type":"text","text":" to the object you want to be rendered and it can be used in a similar way to lambdas are used in Mustache. When you create a section referencing the lambda the contents of the section are passed as a template along with the current object to the lamdba function. This is slightly different from the standard implementation where the unprocessed text is passed to the lambda."}],"type":"paragraph"},{"inlineContent":[{"text":"Given the object ","type":"text"},{"code":"person","type":"codeVoice"},{"text":" defined below","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["struct Person {","    let name: String","    let wrapped: MustacheLambda","}","let person = Person(","    name: \"John\", ","    wrapped: MustacheLambda { object, template in","        return \"<b>\\(template.render(object))<\/b>\"","    }",")",""],"syntax":"swift"},{"inlineContent":[{"text":"and the following mustache template","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try MustacheTemplate(string: mustache)"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Then "},{"type":"codeVoice","code":"template.render(person)"},{"text":" will output","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["<b>John is awesome.<\/b>"],"syntax":null},{"inlineContent":[{"type":"text","text":"In this example the template constructed from the contents of the "},{"code":"wrapped","type":"codeVoice"},{"type":"text","text":" section of the mustache is passed to my "},{"code":"wrapped","type":"codeVoice"},{"type":"text","text":" function inside the "},{"code":"Person","type":"codeVoice"},{"type":"text","text":" type."}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Article","title":"Lambdas","modules":[{"name":"Mustache"}],"role":"article"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","role":"collection","type":"topic","url":"\/documentation\/mustache","title":"Mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"title":"Pragmas\/Configuration variables","kind":"article","url":"\/documentation\/hummingbird\/pragmas","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"type":"topic","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"url":"\/documentation\/hummingbird\/templateinheritance","kind":"article","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"type":"topic","title":"Template Inheritance","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"url":"\/documentation\/hummingbird\/transforms","kind":"article","abstract":[{"text":"Transforming objects during render","type":"text"}],"type":"topic","title":"Transforms","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"}}}