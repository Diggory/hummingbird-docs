{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Collection of routes"}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"]}],"seeAlsoSections":[{"generated":true,"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/init(context:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/on(_:method:responder:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/RouterMethods-Implementations"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteCollection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"platforms":["Linux"]}],"kind":"declarations"}],"sections":[],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"symbolKind":"class","roleHeading":"Class","role":"symbol","title":"RouteCollection","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"externalID":"s:11Hummingbird15RouteCollectionC"},"variants":[{"paths":["\/documentation\/hummingbird\/routecollection"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","title":"RouteCollection","kind":"symbol","url":"\/documentation\/hummingbird\/routecollection","abstract":[{"type":"text","text":"Collection of routes"}],"navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"role":"symbol","url":"\/documentation\/hummingbird\/router","kind":"symbol","navigatorTitle":[{"text":"Router","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Router","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","title":"Router","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","url":"\/documentation\/hummingbird\/routeroptions","abstract":[{"text":"Router Options","type":"text"}],"title":"RouterOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"role":"symbol","title":"EndpointPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/endpointpath","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Endpoint path storage"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"kind":"symbol","title":"RouterGroup","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","url":"\/documentation\/hummingbird\/routergroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterGroup","kind":"identifier"}],"navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","title":"RequestID","role":"symbol","url":"\/documentation\/hummingbird\/requestid","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestID","kind":"identifier"}],"abstract":[{"text":"Generate Unique ID for each request","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"RequestID","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"type":"topic","url":"\/documentation\/hummingbird\/routerresponder","role":"symbol","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","title":"RouterResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}],"title":"HTTPResponderBuilder","kind":"symbol","abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"url":"\/documentation\/hummingbird\/httpresponderbuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"title":"RouterMethods","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"type":"topic","abstract":[{"text":"Conform to ","type":"text"},{"code":"RouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"url":"\/documentation\/hummingbird\/routermethods","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterPath"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","title":"RouterPath","kind":"symbol","url":"\/documentation\/hummingbird\/routerpath","abstract":[{"type":"text","text":"Split router path into components"}],"navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/on(_:method:responder:)":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/routecollection\/on(_:method:responder:)","abstract":[{"text":"Add responder to call when path and method are matched","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Responder"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15RouteCollectionC2on_6method9responderACyxGXDAA10RouterPathV_9HTTPTypes11HTTPRequestV6MethodVqd__t7ContextQyd__RszAA13HTTPResponderRd__lF9ResponderL_qd__mfp","text":"Responder"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/on(_:method:responder:)","title":"on(_:method:responder:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"role":"symbol","navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CallbackResponder","kind":"identifier"}],"title":"CallbackResponder","url":"\/documentation\/hummingbird\/callbackresponder","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/init(context:)":{"url":"\/documentation\/hummingbird\/routecollection\/init(context:)","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15RouteCollectionC7Contextxmfp","text":"Context"},{"kind":"text","text":".Type)"}],"type":"topic","abstract":[{"type":"text","text":"Initialize RouteCollection"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/init(context:)","title":"init(context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/add(middleware:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"middleware","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP"},{"text":"<","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15RouteCollectionC7Contextxmfp"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/add(middleware:)","kind":"symbol","url":"\/documentation\/hummingbird\/routecollection\/add(middleware:)","type":"topic","title":"add(middleware:)","role":"symbol","abstract":[{"type":"text","text":"Add middleware to RouteCollection"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"kind":"symbol","title":"RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"topic","url":"\/documentation\/hummingbird\/requestcontext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"kind":"symbol","title":"HTTPResponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","type":"topic","url":"\/documentation\/hummingbird\/httpresponder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection/RouterMethods-Implementations":{"title":"RouterMethods Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection\/RouterMethods-Implementations","type":"topic","abstract":[],"url":"\/documentation\/hummingbird\/routecollection\/routermethods-implementations","kind":"article","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","title":"Hummingbird"}}}