{"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/init(channel:logger:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/requestcontext\/init(channel:logger:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"]]},"abstract":[{"text":"initialize an ","type":"text"},{"code":"RequestContext","type":"codeVoice"}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"channel","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Channel that initiated this request"}]}]},{"name":"logger","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Logger used for this request"}]}]}],"kind":"parameters"}],"metadata":{"modules":[{"name":"Hummingbird"}],"title":"init(channel:logger:)","required":true,"role":"symbol","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":")"}],"roleHeading":"Initializer","externalID":"s:11Hummingbird14RequestContextP7channel6loggerx7NIOCore7Channel_p_7Logging6LoggerVtcfc"},"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article","title":"Hummingbird","url":"\/documentation\/index","type":"topic","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"kind":"article","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"title":"Request Contexts","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","role":"collectionGroup","type":"topic","url":"\/documentation\/hummingbird\/requestcontexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/init(channel:logger:)":{"required":true,"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/init(channel:logger:)","title":"init(channel:logger:)","url":"\/documentation\/hummingbird\/requestcontext\/init(channel:logger:)","role":"symbol","abstract":[{"text":"initialize an ","type":"text"},{"code":"RequestContext","type":"codeVoice"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"role":"symbol","abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}]}}}