{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","symbolKind":"init","roleHeading":"Initializer","required":true,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":")"}],"title":"init(channel:logger:)","externalID":"s:11Hummingbird14RequestContextP7channel6loggerx7NIOCore7Channel_p_7Logging6LoggerVtcfc","modules":[{"name":"Hummingbird"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/requestcontext\/init(channel:logger:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/init(channel:logger:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"initialize an "},{"type":"codeVoice","code":"RequestContext"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"Channel that initiated this request","type":"text"}],"type":"paragraph"}],"name":"channel"},{"content":[{"inlineContent":[{"text":"Logger used for this request","type":"text"}],"type":"paragraph"}],"name":"logger"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"role":"collectionGroup","url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"type":"topic","title":"Hummingbird","kind":"article","url":"\/documentation\/index","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"type":"text","text":"Protocol for a request context that can be created from a NIO Channel"}],"type":"topic","title":"RequestContext","kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext/init(channel:logger:)":{"url":"\/documentation\/hummingbird\/requestcontext\/init(channel:logger:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"initialize an ","type":"text"},{"code":"RequestContext","type":"codeVoice"}],"required":true,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":")"}],"title":"init(channel:logger:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext\/init(channel:logger:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","title":"Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","role":"collection"}}}