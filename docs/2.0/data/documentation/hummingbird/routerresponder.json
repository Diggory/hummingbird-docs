{"abstract":[{"type":"text","text":"Directs requests to handlers based on the request uri and method."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterResponder","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"Conforms to ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" so need to provide its own implementation of","type":"text"},{"text":" ","type":"text"},{"code":"func respond(to request: Request, context: Context) async throws -> Response","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder\/respond(to:context:)"],"title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"seeAlsoSections":[{"generated":true,"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"]}],"variants":[{"paths":["\/documentation\/hummingbird\/routerresponder"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"navigatorTitle":[{"text":"RouterResponder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterResponder","kind":"identifier"}],"role":"symbol","title":"RouterResponder","externalID":"s:11Hummingbird15RouterResponderV","roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Hummingbird"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"url":"\/documentation\/hummingbird\/routermethods","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"abstract":[{"text":"Conform to ","type":"text"},{"code":"RouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"title":"RouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"url":"\/documentation\/hummingbird\/endpointpath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","type":"topic","title":"EndpointPath","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EndpointPath"}],"abstract":[{"text":"Endpoint path storage","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"url":"\/documentation\/hummingbird\/httpresponderbuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"HTTPResponderBuilder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPResponderBuilder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"url":"\/documentation\/hummingbird\/callbackresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"CallbackResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CallbackResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteHandler":{"abstract":[{"text":"Object for handling requests.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RouteHandler"}],"title":"RouteHandler","url":"\/documentation\/hummingbird\/routehandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouteHandler"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder/respond(to:context:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Context","preciseIdentifier":"s:11Hummingbird15RouterResponderV7Contextxmfp","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder\/respond(to:context:)","title":"respond(to:context:)","type":"topic","url":"\/documentation\/hummingbird\/routerresponder\/respond(to:context:)","abstract":[{"type":"text","text":"Respond to request by calling correct handler"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"url":"\/documentation\/hummingbird\/routergroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"RouterGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","type":"topic","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"url":"\/documentation\/hummingbird\/routeroptions","role":"symbol","abstract":[{"text":"Router Options","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterOptions"}],"type":"topic","title":"RouterOptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterOptions"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"url":"\/documentation\/hummingbird\/httpresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","type":"topic","title":"HTTPResponder","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"url":"\/documentation\/hummingbird\/baserequestcontext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","role":"symbol","type":"topic","navigatorTitle":[{"text":"BaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"title":"BaseRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"url":"\/documentation\/hummingbird\/routerpath","role":"symbol","abstract":[{"type":"text","text":"Split router path into components"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"type":"topic","title":"RouterPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"url":"\/documentation\/hummingbird\/routerresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","type":"topic","title":"RouterResponder","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterResponder"}],"abstract":[{"text":"Directs requests to handlers based on the request uri and method.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"url":"\/documentation\/hummingbird\/router","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","type":"topic","title":"Router","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"navigatorTitle":[{"text":"Router","kind":"identifier"}]}}}