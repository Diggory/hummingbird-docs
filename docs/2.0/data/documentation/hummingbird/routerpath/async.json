{"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/hummingbird\/routerpath\/async"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"async","kind":"identifier"},{"kind":"text","text":": "},{"text":"AsyncSyncSequence","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncAlgorithms0A12SyncSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath\/Sequence-Implementations"]]},"kind":"symbol","metadata":{"extendedModule":"Swift","title":"async","role":"symbol","roleHeading":"Instance Property","symbolKind":"property","modules":[{"relatedModules":["Swift"],"name":"Hummingbird"}],"externalID":"s:ST15AsyncAlgorithmsE5asyncAA0A12SyncSequenceVyxGvp::SYNTHESIZED::s:11Hummingbird10RouterPathV","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"async","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AsyncSyncSequence","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncAlgorithms0A12SyncSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath\/async"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"Sequence.async","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol"},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath/Sequence-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath\/Sequence-Implementations","role":"collectionGroup","type":"topic","title":"Sequence Implementations","abstract":[],"kind":"article","url":"\/documentation\/hummingbird\/routerpath\/sequence-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath/async":{"type":"topic","url":"\/documentation\/hummingbird\/routerpath\/async","kind":"symbol","abstract":[],"title":"async","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath\/async","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"async"},{"text":": ","kind":"text"},{"text":"AsyncSyncSequence","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncAlgorithms0A12SyncSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterPath"}],"title":"RouterPath","kind":"symbol","url":"\/documentation\/hummingbird\/routerpath","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","role":"symbol","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"abstract":[{"type":"text","text":"Split router path into components"}]}}}