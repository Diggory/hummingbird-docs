{"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath\/Element\/recursiveWildcard","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"recursiveWildcard","kind":"identifier"},{"kind":"text","text":": `Self`"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath\/Element"]]},"sections":[],"metadata":{"symbolKind":"property","role":"symbol","title":"recursiveWildcard","externalID":"s:11Hummingbird10RouterPathV7ElementV17recursiveWildcardAEvpZ","roleHeading":"Type Property","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"recursiveWildcard","kind":"identifier"},{"text":": `Self`","kind":"text"}],"modules":[{"name":"Hummingbird"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/routerpath\/element\/recursivewildcard"]}],"abstract":[{"type":"text","text":"Always match and everything after"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath/Element/recursiveWildcard":{"url":"\/documentation\/hummingbird\/routerpath\/element\/recursivewildcard","kind":"symbol","title":"recursiveWildcard","abstract":[{"type":"text","text":"Always match and everything after"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath\/Element\/recursiveWildcard","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"recursiveWildcard"},{"text":": `Self`","kind":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath/Element":{"kind":"symbol","title":"RouterPath.Element","url":"\/documentation\/hummingbird\/routerpath\/element","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Element","kind":"identifier"}],"abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Element"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath\/Element"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerpath","abstract":[{"text":"Split router path into components","type":"text"}],"type":"topic","title":"RouterPath"},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"type":"topic","role":"collection","kind":"article","title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic","role":"collection","kind":"symbol","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}