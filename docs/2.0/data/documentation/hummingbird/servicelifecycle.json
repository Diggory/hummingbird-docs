{"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To provide a mechanism to cleanly start and shutdown a Hummingbird application we have integrated with "},{"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","isActive":true},{"type":"text","text":". This provides lifecycle management for service startup, shutdown and shutdown triggering by signals such as SIGINT and SIGTERM."}]},{"level":2,"type":"heading","anchor":"Service-Lifecycle","text":"Service Lifecycle"},{"type":"paragraph","inlineContent":[{"text":"To use Swift Service Lifecycle you have to conform the service you want managed to the protocol ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle\/service"},{"text":". Internally this needs to call ","type":"text"},{"type":"codeVoice","code":"withGracefulShutdownHandler"},{"text":" to handle graceful shutdown when we receive a shutdown signal.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["struct MyService: Service {","    func run() async throws {","        withGracefulShutdownHandler {","            \/\/ run service","        } onGracefulShutdown {","            \/\/ shutdown service","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Once you have this setup you can then include the service in a list of services added to a service group and have its lifecycle managed.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let serviceGroup = ServiceGroup(","    configuration: .init(","        services: [MyService(), MyOtherService()],","        gracefulShutdownSignals: [.sigterm, .sigint]","        logger: logger","    )",")","try await serviceGroup.run()"]},{"level":2,"type":"heading","anchor":"Hummingbird-Integration","text":"Hummingbird Integration"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Service"},{"type":"text","text":" and also provides a helper function that constructs the "},{"type":"codeVoice","code":"ServiceGroup"},{"type":"text","text":" including the application and then runs it."}]},{"syntax":"swift","type":"codeListing","code":["let app = Application(router: router)","try await app.runService()"]},{"type":"paragraph","inlineContent":[{"text":"All of the types that Hummingbird introduces that require some form of lifecycle management conform to ","type":"text"},{"code":"Service","type":"codeVoice"},{"text":". ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"text":" holds an internal ","type":"text"},{"code":"ServiceGroup","type":"codeVoice"},{"text":" and any service you want managed can be added to the internal group using ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application\/addServices(_:)"},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["var app = Application(router: router)","app.addServices(postgresClient, sessionStorage)","try await app.runService()"]},{"level":2,"type":"heading","anchor":"Managing-server-startup","text":"Managing server startup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In some situations you might want some services to start up before you startup your HTTP server, for instance when doing a database migration. With "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"type":"text","text":" you can add processes to run before starting up the server, but while other services are running using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application\/beforeServerStarts(perform:)"},{"type":"text","text":". You can call "},{"type":"codeVoice","code":"beforeServerStarts"},{"type":"text","text":" multiple times to add multiple processes to be run before we startup the server."}]},{"syntax":"swift","type":"codeListing","code":["var app = Application(router: router)","app.addServices(dbClient)","app.beforeServerStarts {","    try await dbClient.migrate()","}","try await app.runService()"]},{"type":"paragraph","inlineContent":[{"text":"Read the Swift Service Lifecycle ","type":"text"},{"identifier":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle","type":"reference","isActive":true},{"text":" to find out more.","type":"text"}]}]}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","interfaceLanguage":"swift"},"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"Service Lifecycle","modules":[{"name":"Hummingbird"}],"role":"article","roleHeading":"Article"},"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"],"generated":true,"title":"Guides"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","title":"Hummingbird","kind":"symbol","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"type":"topic","title":"Jobs","kind":"article","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","url":"\/documentation\/hummingbird\/jobsguide","role":"collectionGroup"},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","images":[{"identifier":"logo.png","type":"icon"}],"role":"collectionGroup","kind":"article","url":"\/documentation\/hummingbird\/routerguide","title":"Router","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","kind":"article","url":"\/documentation\/index","title":"Hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"role":"collectionGroup","url":"\/documentation\/hummingbird\/persistentdata","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","kind":"article","type":"topic","title":"Persistent data","abstract":[{"type":"text","text":"How to persist data between requests to your server."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"kind":"article","role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"title":"Middleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","url":"\/documentation\/hummingbird\/middlewareguide","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","abstract":[{"text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2","type":"text"}],"url":"\/documentation\/hummingbird\/migratingtov2","role":"article","title":"Migrating to Hummingbird v2","type":"topic","kind":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"title":"Request Contexts","url":"\/documentation\/hummingbird\/requestcontexts","role":"collectionGroup","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"},"https://swiftpackageindex.com/swift-server/swift-service-lifecycle/main/documentation/servicelifecycle":{"url":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle","title":"documentation","type":"link","identifier":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle","titleInlineContent":[{"text":"documentation","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application/addServices(_:)":{"url":"\/documentation\/hummingbird\/application\/addservices(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application\/addServices(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addServices"},{"kind":"text","text":"("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Service","preciseIdentifier":"s:16ServiceLifecycle0A0P"},{"kind":"text","text":"...)"}],"abstract":[{"type":"text","text":"Add service to be managed by application ServiceGroup"}],"type":"topic","title":"addServices(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application/beforeServerStarts(perform:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/application\/beforeserverstarts(perform:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application\/beforeServerStarts(perform:)","type":"topic","title":"beforeServerStarts(perform:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"beforeServerStarts"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": () "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Add a process to run before we kick off the server service"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"role":"collectionGroup","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","kind":"article","type":"topic","title":"Logging, Metrics and Tracing","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"abstract":[{"text":"Hummingbird uses ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":" to decode requests and encode responses.","type":"text"}],"kind":"article","role":"collectionGroup","images":[{"identifier":"logo.png","type":"icon"}],"title":"Encoding and Decoding","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","url":"\/documentation\/hummingbird\/encodinganddecoding","type":"topic"},"https://swiftpackageindex.com/swift-server/swift-service-lifecycle/main/documentation/servicelifecycle/service":{"url":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle\/service","title":"Service","type":"link","identifier":"https:\/\/swiftpackageindex.com\/swift-server\/swift-service-lifecycle\/main\/documentation\/servicelifecycle\/service","titleInlineContent":[{"code":"Service","type":"codeVoice"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"abstract":[{"type":"text","text":"How to build errors for the server to return."}],"kind":"article","role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"title":"Error Handling","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","url":"\/documentation\/hummingbird\/errorhandling","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Application"}],"kind":"symbol","url":"\/documentation\/hummingbird\/application","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"title":"Application","type":"topic"},"https://github.com/swift-server/swift-service-lifecycle":{"url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","title":"Swift Service Lifecycle","type":"link","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"kind":"article","role":"article","images":[{"type":"icon","identifier":"logo.png"}],"title":"Testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","url":"\/documentation\/hummingbird\/testing","type":"topic"}}}