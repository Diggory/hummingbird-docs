{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Hummingbird"}],"roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"externalID":"s:11Hummingbird6RouterC","symbolKind":"class","title":"Router","role":"symbol","navigatorTitle":[{"text":"Router","kind":"identifier"}]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"]}],"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:use:)-3copy"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"]}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"Responder"},{"text":" that will follow these rules.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"BaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Router"},{"type":"text","text":" requires an implementation of  the "},{"type":"codeVoice","code":"on(path:method:use)"},{"type":"text","text":" functions but because it"},{"type":"text","text":" "},{"type":"text","text":"also conforms to "},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" it is also possible to call the method specific functions "},{"type":"codeVoice","code":"get"},{"type":"text","text":", "},{"type":"codeVoice","code":"put"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"head"},{"type":"text","text":", "},{"type":"codeVoice","code":"post"},{"type":"text","text":" and "},{"type":"codeVoice","code":"patch"},{"type":"text","text":".  The route handler closures all return objects conforming to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ResponseGenerator"},{"text":".  This allows us to support routes which return a multitude of types eg","type":"text"}]},{"type":"codeListing","code":["router.get(\"string\") { _, _ -> String in","    return \"string\"","}","router.post(\"status\") { _, _ -> HTTPResponse.Status in","    return .ok","}","router.data(\"data\") { request, context -> ByteBuffer in","    return context.allocator.buffer(string: \"buffer\")","}"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default "},{"type":"codeVoice","code":"Router"},{"type":"text","text":" setup in "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" is the "},{"type":"codeVoice","code":"TrieRouter"},{"type":"text","text":" . This uses a"},{"type":"text","text":" "},{"type":"text","text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction"}]},{"type":"codeListing","code":["router.get(\"user\/*\", use: anyUser)","router.get(\"user\/:id\", use: userWithId)"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both of these match routes which start with “\/user” and the next path segment being anything."},{"type":"text","text":" "},{"type":"text","text":"The second version extracts the path segment out and adds it to "},{"type":"codeVoice","code":"Request.parameters"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"key “id”."}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/router"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"url":"\/documentation\/hummingbird\/routeroptions","role":"symbol","abstract":[{"text":"Router Options","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterOptions"}],"type":"topic","title":"RouterOptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterOptions"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"url":"\/documentation\/hummingbird\/routermethods","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"abstract":[{"text":"Conform to ","type":"text"},{"code":"RouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"title":"RouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","role":"collection","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"kind":"article","type":"topic","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"url":"\/documentation\/hummingbird\/requestcontexts","role":"collectionGroup","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"kind":"article","type":"topic","title":"Request Contexts","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"url":"\/documentation\/hummingbird\/router","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","type":"topic","title":"Router","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"navigatorTitle":[{"text":"Router","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"url":"\/documentation\/hummingbird\/httpresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","type":"topic","title":"HTTPResponder","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/middlewares":{"title":"middlewares","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares","url":"\/documentation\/hummingbird\/router\/middlewares","kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"middlewares","kind":"identifier"},{"text":": ","kind":"text"},{"text":"MiddlewareGroup","preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"kind":"text","text":">"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/add(_:method:responder:)":{"title":"add(_:method:responder:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(_:method:responder:)","url":"\/documentation\/hummingbird\/router\/add(_:method:responder:)","kind":"symbol","role":"symbol","abstract":[{"text":"Add route to router","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"responder"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"kind":"text","text":">)"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"url":"\/documentation\/hummingbird\/routerresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","type":"topic","title":"RouterResponder","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterResponder"}],"abstract":[{"text":"Directs requests to handlers based on the request uri and method.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"title":"Router","url":"\/documentation\/hummingbird\/routerguide","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteHandler":{"abstract":[{"text":"Object for handling requests.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RouteHandler"}],"title":"RouteHandler","url":"\/documentation\/hummingbird\/routehandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouteHandler"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"url":"\/documentation\/hummingbird\/routergroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"RouterGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/on(_:method:use:)-3copy":{"kind":"symbol","title":"on(_:method:use:)","type":"topic","abstract":[{"type":"text","text":"Add path for closure returning type conforming to ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:use:)-3copy","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP","text":"ResponseGenerator","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/router\/on(_:method:use:)-3copy","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"url":"\/documentation\/hummingbird\/endpointpath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","type":"topic","title":"EndpointPath","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EndpointPath"}],"abstract":[{"text":"Endpoint path storage","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"url":"\/documentation\/hummingbird\/httpresponderbuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"HTTPResponderBuilder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPResponderBuilder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"url":"\/documentation\/hummingbird\/routerpath","role":"symbol","abstract":[{"type":"text","text":"Split router path into components"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"type":"topic","title":"RouterPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/buildResponder()":{"title":"buildResponder()","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","url":"\/documentation\/hummingbird\/router\/buildresponder()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"RouterResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15RouterResponderV"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"build responder from router"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/group(_:)":{"title":"group(_:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:)","url":"\/documentation\/hummingbird\/router\/group(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"RouterGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"return new "},{"code":"RouterGroup","type":"codeVoice"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","type":"topic","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouterMethods-Implementations":{"url":"\/documentation\/hummingbird\/router\/routermethods-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations","type":"topic","title":"RouterMethods Implementations","role":"collectionGroup","kind":"article","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"url":"\/documentation\/hummingbird\/baserequestcontext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","role":"symbol","type":"topic","navigatorTitle":[{"text":"BaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"title":"BaseRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/init(context:options:)":{"type":"topic","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RouterOptions","preciseIdentifier":"s:11Hummingbird13RouterOptionsV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(context:options:)","url":"\/documentation\/hummingbird\/router\/init(context:options:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"url":"\/documentation\/hummingbird\/callbackresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","title":"CallbackResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CallbackResponder"}]}}}