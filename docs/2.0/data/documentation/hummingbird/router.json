{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"role":"symbol","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"Router"}],"externalID":"s:11Hummingbird6RouterC","modules":[{"name":"Hummingbird"}],"title":"Router","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"}]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"],"title":"Router"}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"],"kind":"relationships","title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/router"]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:use:)-3copy"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations"],"title":"Default Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","text":"BaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Router"},{"type":"text","text":" requires an implementation of  the "},{"type":"codeVoice","code":"on(path:method:use)"},{"type":"text","text":" functions but because it"},{"type":"text","text":" "},{"type":"text","text":"also conforms to "},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" it is also possible to call the method specific functions "},{"type":"codeVoice","code":"get"},{"type":"text","text":", "},{"type":"codeVoice","code":"put"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"head"},{"type":"text","text":", "},{"type":"codeVoice","code":"post"},{"type":"text","text":" and "},{"type":"codeVoice","code":"patch"},{"type":"text","text":".  The route handler closures all return objects conforming to"},{"type":"text","text":" "},{"type":"codeVoice","code":"ResponseGenerator"},{"type":"text","text":".  This allows us to support routes which return a multitude of types eg"}]},{"syntax":null,"code":["router.get(\"string\") { _, _ -> String in","    return \"string\"","}","router.post(\"status\") { _, _ -> HTTPResponseStatus in","    return .ok","}","router.data(\"data\") { request, context -> ByteBuffer in","    return context.allocator.buffer(string: \"buffer\")","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default "},{"type":"codeVoice","code":"Router"},{"type":"text","text":" setup in "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" is the "},{"type":"codeVoice","code":"TrieRouter"},{"type":"text","text":" . This uses a"},{"type":"text","text":" "},{"type":"text","text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction"}]},{"syntax":null,"code":["router.get(\"user\/*\", use: anyUser)","router.get(\"user\/:id\", use: userWithId)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Both of these match routes which start with “\/user” and the next path segment being anything.","type":"text"},{"text":" ","type":"text"},{"text":"The second version extracts the path segment out and adds it to ","type":"text"},{"code":"Request.parameters","type":"codeVoice"},{"text":" with the","type":"text"},{"text":" ","type":"text"},{"text":"key “id”.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"]]},"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/add(_:method:responder:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/add(_:method:responder:)","url":"\/documentation\/hummingbird\/router\/add(_:method:responder:)","title":"add(_:method:responder:)","abstract":[{"type":"text","text":"Add route to router"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"responder"},{"kind":"text","text":": "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"HTTPResponder","preciseIdentifier":"s:11Hummingbird13HTTPResponderP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"kind":"text","text":">)"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","title":"Router","role":"collectionGroup","url":"\/documentation\/hummingbird\/routerguide","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"abstract":[{"text":"Endpoint path storage","type":"text"}],"type":"topic","navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","title":"EndpointPath","role":"symbol","url":"\/documentation\/hummingbird\/endpointpath","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/group(_:)":{"abstract":[{"type":"text","text":"return new "},{"type":"codeVoice","code":"RouterGroup"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/group(_:)","title":"group(_:)","url":"\/documentation\/hummingbird\/router\/group(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"text":"RouterGroup","preciseIdentifier":"s:11Hummingbird11RouterGroupV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"title":"RouterResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Directs requests to handlers based on the request uri and method."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterResponder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}],"url":"\/documentation\/hummingbird\/routerresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"abstract":[{"text":"Router Options","type":"text"}],"type":"topic","navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","title":"RouterOptions","role":"symbol","url":"\/documentation\/hummingbird\/routeroptions","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"type":"topic","navigatorTitle":[{"text":"BaseRequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","title":"BaseRequestContext","role":"symbol","url":"\/documentation\/hummingbird\/baserequestcontext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/buildResponder()":{"abstract":[{"type":"text","text":"build responder from router"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/buildResponder()","kind":"symbol","url":"\/documentation\/hummingbird\/router\/buildresponder()","title":"buildResponder()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15RouterResponderV","text":"RouterResponder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"kind":"symbol","url":"\/documentation\/hummingbird\/callbackresponder","navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CallbackResponder"}],"abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"title":"CallbackResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"url":"\/documentation\/hummingbird\/httpresponder","title":"HTTPResponder","role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteHandler":{"navigatorTitle":[{"text":"RouteHandler","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteHandler","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routehandler","title":"RouteHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler","abstract":[{"text":"Object for handling requests.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}],"abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"url":"\/documentation\/hummingbird\/httpresponderbuilder","title":"HTTPResponderBuilder","role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"url":"\/documentation\/hummingbird\/routergroup","title":"RouterGroup","role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"kind":"symbol","url":"\/documentation\/hummingbird\/routermethods","navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"title":"RouterMethods","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/init(context:options:)":{"abstract":[],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/router\/init(context:options:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RouterOptions","preciseIdentifier":"s:11Hummingbird13RouterOptionsV"},{"kind":"text","text":")"}],"title":"init(context:options:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/init(context:options:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/on(_:method:use:)-3copy":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/on(_:method:use:)-3copy","url":"\/documentation\/hummingbird\/router\/on(_:method:use:)-3copy","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17ResponseGeneratorP"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Add path for closure returning type conforming to ResponseGenerator"}],"title":"on(_:method:use:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"title":"Request Contexts","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","url":"\/documentation\/hummingbird\/requestcontexts","role":"collectionGroup","type":"topic","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"title":"RouterPath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","url":"\/documentation\/hummingbird\/routerpath","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"type":"topic","abstract":[{"text":"Split router path into components","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/RouterMethods-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/hummingbird\/router\/routermethods-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/RouterMethods-Implementations","title":"RouterMethods Implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"Router","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","title":"Router","role":"symbol","url":"\/documentation\/hummingbird\/router","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router/middlewares":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router\/middlewares","url":"\/documentation\/hummingbird\/router\/middlewares","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"middlewares","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15MiddlewareGroupC","text":"MiddlewareGroup","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird6RouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[],"title":"middlewares"}}}