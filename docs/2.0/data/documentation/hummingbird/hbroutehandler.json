{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler\/Output"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler\/init(from:context:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler\/handle(context:)"],"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbroutehandler"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"languages":["swift"]}]},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Instead of passing a closure to the router you can provide an object it should try and","type":"text"},{"text":" ","type":"text"},{"text":"create before handling the request. This allows you to separate the extraction of data","type":"text"},{"text":" ","type":"text"},{"text":"from the request and the processing of the request. For example","type":"text"}]},{"type":"codeListing","syntax":null,"code":["struct UpdateReminder: HBRouteHandler {","    struct Request: Codable {","        let description: String","        let date: Date","    }","    let update: Request","    let id: String","","    init(from request: HBRequest, context: some HBBaseRequestContext) throws {","        self.update = try await request.decode(as: Request.self, context: context)","        self.id = try request.parameters.require(\"id\")","    }","    func handle(context: some HBBaseRequestContext) async throws -> HTTPResponse.Status {","        let reminder = Reminder(id: id, update: update)","        return reminder.update(on: db)","            .map { _ in .ok }","    }","}"]}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"],"title":"Router","generated":true}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","interfaceLanguage":"swift"},"abstract":[{"text":"Object for handling requests.","type":"text"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"title":"HBRouteHandler","symbolKind":"protocol","roleHeading":"Protocol","externalID":"s:11Hummingbird14HBRouteHandlerP","role":"symbol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler/handle(context:)":{"role":"symbol","url":"\/documentation\/hummingbird\/hbroutehandler\/handle(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","preciseIdentifier":"s:11Hummingbird14HBRouteHandlerP6OutputQa","kind":"typeIdentifier"}],"title":"handle(context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler\/handle(context:)","required":true,"type":"topic","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler/Output":{"title":"Output","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/hummingbird\/hbroutehandler\/output","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Output"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler\/Output","required":true,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","kind":"symbol","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/routerpath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"abstract":[{"text":"Split router path into components","type":"text"}],"title":"RouterPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Options available to routes","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","url":"\/documentation\/hummingbird\/hbroutermethodoptions","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"title":"HBRouterMethodOptions"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","title":"HBResponder","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EndpointPath"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","title":"EndpointPath","abstract":[{"type":"text","text":"Endpoint path storage"}],"navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}],"role":"symbol","url":"\/documentation\/hummingbird\/endpointpath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"kind":"symbol","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"title":"HBRouterMethods","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutermethods","abstract":[{"text":"Conform to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler/init(from:context:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","text":"HBBaseRequestContext","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","title":"init(from:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler\/init(from:context:)","kind":"symbol","required":true,"abstract":[],"url":"\/documentation\/hummingbird\/hbroutehandler\/init(from:context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter":{"role":"symbol","type":"topic","kind":"symbol","title":"HBRouter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouter"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"navigatorTitle":[{"kind":"identifier","text":"HBRouter"}],"url":"\/documentation\/hummingbird\/hbrouter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","title":"HBRouterGroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbroutergroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"type":"topic","title":"HBCallbackResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","kind":"symbol","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"url":"\/documentation\/hummingbird\/hbcallbackresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Object for handling requests.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","url":"\/documentation\/hummingbird\/hbroutehandler","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"title":"HBRouteHandler"}}}