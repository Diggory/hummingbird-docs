{"kind":"symbol","abstract":[{"type":"text","text":"Collapse body into one ByteBuffer."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request\/collectBody(upTo:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collectBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"title":"collectBody(upTo:)","symbolKind":"method","role":"symbol","externalID":"s:15HummingbirdCore7RequestV11collectBody4upTo7NIOCore10ByteBufferVSi_tYaKF","modules":[{"name":"HummingbirdCore"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collectBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upTo","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"maxSize","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"Maxiumum size of body to collect","type":"text"}],"type":"paragraph"}],"name":"upTo"}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"Collated body","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will store the collated ByteBuffer back into the request so is a mutating method. If"},{"type":"text","text":" "},{"type":"text","text":"you donâ€™t need to store the collated ByteBuffer on the request then use"},{"type":"text","text":" "},{"type":"codeVoice","code":"request.body.collect(maxSize:)"},{"type":"text","text":"."}]}]}],"variants":[{"paths":["\/documentation\/hummingbird\/request\/collectbody(upto:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request/collectBody(upTo:)":{"role":"symbol","title":"collectBody(upTo:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request\/collectBody(upTo:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collectBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"type":"topic","url":"\/documentation\/hummingbird\/request\/collectbody(upto:)","abstract":[{"text":"Collapse body into one ByteBuffer.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","url":"\/documentation\/hummingbird\/request","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol"}}}