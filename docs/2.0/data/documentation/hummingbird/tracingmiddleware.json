{"kind":"symbol","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/init(recordingHeaders:attributes:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/handle(_:context:next:)"]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"sections":[],"seeAlsoSections":[{"generated":true,"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware"]}],"metadata":{"title":"TracingMiddleware","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"modules":[{"name":"Hummingbird"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"}],"roleHeading":"Structure","externalID":"s:11Hummingbird17TracingMiddlewareV","symbolKind":"struct"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","text":"RequestContext"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"Creates a span for each request, including attributes such as the HTTP method.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You may opt in to recording a specific subset of HTTP request\/response header values by passing"},{"type":"text","text":" "},{"type":"text","text":"a set of header names."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Uses "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-distributed-tracing"},{"type":"text","text":" for recording the traces."},{"type":"text","text":" "},{"type":"text","text":"Swift-Distributed-Tracing has a flexible backend, which will need to be initialized before any traces are recorded."}],"type":"paragraph"},{"inlineContent":[{"text":"A list of implementations is available in the swift-distributed-tracing repositoryâ€™s README.","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/hummingbird\/tracingmiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"abstract":[{"type":"text","text":"Version of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and output is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"title":"RouterMiddleware","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/routermiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"title":"RequestContext","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"title":"Response","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Response"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"url":"\/documentation\/hummingbirdcore\/response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","navigatorTitle":[{"kind":"identifier","text":"Response"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"title":"CORSMiddleware","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware","kind":"symbol"},"https://github.com/apple/swift-distributed-tracing":{"title":"Swift-Distributed-Tracing","identifier":"https:\/\/github.com\/apple\/swift-distributed-tracing","titleInlineContent":[{"text":"Swift-Distributed-Tracing","type":"text"}],"url":"https:\/\/github.com\/apple\/swift-distributed-tracing","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"title":"Hummingbird","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"role":"symbol","navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"title":"LogRequestsMiddleware","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"LogRequestsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware/handle(_:context:next:)":{"abstract":[],"title":"handle(_:context:next:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird17TracingMiddlewareV7Contextxmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird17TracingMiddlewareV7Contextxmfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/handle(_:context:next:)","kind":"symbol","url":"\/documentation\/hummingbird\/tracingmiddleware\/handle(_:context:next:)","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"title":"Request","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"url":"\/documentation\/hummingbirdcore\/request","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"kind":"article","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","type":"topic","title":"Logging, Metrics and Tracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}],"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"title":"MiddlewareGroup","kind":"symbol","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","url":"\/documentation\/hummingbird\/middlewaregroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"title":"MiddlewareProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"kind":"symbol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsMiddleware"}],"title":"MetricsMiddleware","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/metricsmiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"abstract":[{"text":"Middleware stack result builder","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","navigatorTitle":[{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"title":"MiddlewareFixedTypeBuilder","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","kind":"symbol"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware/init(recordingHeaders:attributes:)":{"title":"init(recordingHeaders:attributes:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/init(recordingHeaders:attributes:)","abstract":[{"text":"Intialize a new TracingMiddleware.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"recordingHeaders","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:Sl","text":"Collection","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes9HTTPFieldV","text":"HTTPField","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV","text":"Name","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"attributes","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Tracing14SpanAttributesV","text":"SpanAttributes","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"url":"\/documentation\/hummingbird\/tracingmiddleware\/init(recordingheaders:attributes:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}],"title":"TracingMiddleware","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/tracingmiddleware","kind":"symbol"}}}