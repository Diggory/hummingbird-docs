{"abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/init(recordingHeaders:attributes:)"]},{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/handle(_:context:next:)"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"RequestContext","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Creates a span for each request, including attributes such as the HTTP method.","type":"text"}]},{"inlineContent":[{"text":"You may opt in to recording a specific subset of HTTP request\/response header values by passing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a set of header names."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Uses "},{"identifier":"https:\/\/github.com\/apple\/swift-distributed-tracing","isActive":true,"type":"reference"},{"type":"text","text":" for recording the traces."},{"text":" ","type":"text"},{"text":"Swift-Distributed-Tracing has a flexible backend, which will need to be initialized before any traces are recorded.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A list of implementations is available in the swift-distributed-tracing repositoryâ€™s README."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/tracingmiddleware"]}],"seeAlsoSections":[{"title":"Middleware","anchor":"Middleware","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware"]}],"metadata":{"modules":[{"name":"Hummingbird"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TracingMiddleware"}],"externalID":"s:11Hummingbird17TracingMiddlewareV","title":"TracingMiddleware","role":"symbol","symbolKind":"struct","navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}],"roleHeading":"Structure"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"},"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"role":"symbol","title":"MiddlewareGroup","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"url":"\/documentation\/hummingbird\/middlewaregroup","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup"},"https://github.com/apple/swift-distributed-tracing":{"type":"link","title":"Swift-Distributed-Tracing","url":"https:\/\/github.com\/apple\/swift-distributed-tracing","titleInlineContent":[{"text":"Swift-Distributed-Tracing","type":"text"}],"identifier":"https:\/\/github.com\/apple\/swift-distributed-tracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}]},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsMiddleware","kind":"identifier"}],"title":"MetricsMiddleware","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/metricsmiddleware","type":"topic","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"title":"Response","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"navigatorTitle":[{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"url":"\/documentation\/index","type":"topic","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"role":"symbol","title":"LogRequestsMiddleware","navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"title":"Request","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware/init(recordingHeaders:attributes:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"recordingHeaders"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV","text":"HTTPField"},{"text":".","kind":"text"},{"text":"Name","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"attributes"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Tracing14SpanAttributesV","kind":"typeIdentifier","text":"SpanAttributes"},{"text":"?)","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/tracingmiddleware\/init(recordingheaders:attributes:)","title":"init(recordingHeaders:attributes:)","abstract":[{"text":"Intialize a new TracingMiddleware.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/init(recordingHeaders:attributes:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"title":"CORSMiddleware","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/corsmiddleware","type":"topic","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware/handle(_:context:next:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17TracingMiddlewareV7Contextxmfp"},{"kind":"text","text":", "},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17TracingMiddlewareV7Contextxmfp","text":"Context"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/tracingmiddleware\/handle(_:context:next:)","title":"handle(_:context:next:)","abstract":[],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/handle(_:context:next:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"title":"MiddlewareFixedTypeBuilder","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","abstract":[{"text":"Middleware stack result builder","type":"text"}],"navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","title":"MiddlewareProtocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"role":"symbol","title":"TracingMiddleware","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"url":"\/documentation\/hummingbird\/tracingmiddleware","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"role":"symbol","title":"RouterMiddleware","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"abstract":[{"text":"Version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/routermiddleware","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware"}}}