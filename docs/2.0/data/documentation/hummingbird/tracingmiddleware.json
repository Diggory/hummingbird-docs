{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"typeIdentifier","text":"RequestContext"}]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"text":"Creates a span for each request, including attributes such as the HTTP method.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You may opt in to recording a specific subset of HTTP request\/response header values by passing","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a set of header names."}]},{"type":"paragraph","inlineContent":[{"text":"Uses ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-distributed-tracing","type":"reference"},{"text":" for recording the traces.","type":"text"},{"type":"text","text":" "},{"text":"Swift-Distributed-Tracing has a flexible backend, which will need to be initialized before any traces are recorded.","type":"text"}]},{"inlineContent":[{"text":"A list of implementations is available in the swift-distributed-tracing repositoryâ€™s README.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/init(recordingHeaders:attributes:)"],"generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/handle(_:context:next:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/tracingmiddleware"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"},"metadata":{"modules":[{"name":"Hummingbird"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"title":"TracingMiddleware","roleHeading":"Structure","externalID":"s:11Hummingbird17TracingMiddlewareV","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}]},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"generated":true,"anchor":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware"],"title":"Middleware"}],"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"abstract":[{"type":"text","text":"Middleware stack result builder"}],"role":"symbol","title":"MiddlewareFixedTypeBuilder","navigatorTitle":[{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"url":"\/documentation\/hummingbird\/loggingmetricsandtracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","role":"collectionGroup","kind":"article","type":"topic","title":"Logging, Metrics and Tracing","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"title":"Response","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","url":"\/documentation\/hummingbirdcore\/response","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Response"}],"navigatorTitle":[{"text":"Response","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","url":"\/documentation\/hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"role":"symbol","title":"TracingMiddleware","navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","url":"\/documentation\/hummingbird\/tracingmiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TracingMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","role":"symbol","kind":"symbol","type":"topic","title":"LogRequestsMiddleware","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"role":"symbol","title":"MetricsMiddleware","navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","url":"\/documentation\/hummingbird\/metricsmiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsMiddleware"}]},"https://github.com/apple/swift-distributed-tracing":{"title":"Swift-Distributed-Tracing","type":"link","titleInlineContent":[{"type":"text","text":"Swift-Distributed-Tracing"}],"identifier":"https:\/\/github.com\/apple\/swift-distributed-tracing","url":"https:\/\/github.com\/apple\/swift-distributed-tracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"role":"symbol","title":"MiddlewareGroup","navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","url":"\/documentation\/hummingbird\/middlewaregroup","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"kind":"symbol","title":"MiddlewareProtocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"role":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"kind":"symbol","title":"RouterMiddleware","abstract":[{"text":"Version of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},{"text":" whose Input is ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference","isActive":true},{"type":"text","text":" and output is "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/hummingbird\/routermiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMiddleware"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","title":"Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware/init(recordingHeaders:attributes:)":{"abstract":[{"type":"text","text":"Intialize a new TracingMiddleware."}],"role":"symbol","title":"init(recordingHeaders:attributes:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/init(recordingHeaders:attributes:)","url":"\/documentation\/hummingbird\/tracingmiddleware\/init(recordingheaders:attributes:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"recordingHeaders"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV","text":"HTTPField"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Name","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV"},{"text":">, ","kind":"text"},{"text":"attributes","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SpanAttributes","preciseIdentifier":"s:7Tracing14SpanAttributesV"},{"text":"?)","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware/handle(_:context:next:)":{"url":"\/documentation\/hummingbird\/tracingmiddleware\/handle(_:context:next:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17TracingMiddlewareV7Contextxmfp"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17TracingMiddlewareV7Contextxmfp","text":"Context"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier","text":"Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/handle(_:context:next:)","role":"symbol","kind":"symbol","type":"topic","title":"handle(_:context:next:)","abstract":[]},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"kind":"article","url":"\/documentation\/index","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CORSMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","kind":"symbol","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"role":"symbol","type":"topic","title":"CORSMiddleware","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/corsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","title":"RequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/requestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"type":"topic"}}}