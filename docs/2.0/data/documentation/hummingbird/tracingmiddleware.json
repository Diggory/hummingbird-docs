{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/init(recordingHeaders:attributes:)"],"anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/handle(_:context:next:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TracingMiddleware","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"}]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Creates a span for each request, including attributes such as the HTTP method."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You may opt in to recording a specific subset of HTTP request\/response header values by passing","type":"text"},{"text":" ","type":"text"},{"text":"a set of header names.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Uses ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-distributed-tracing","isActive":true},{"text":" for recording the traces.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Swift-Distributed-Tracing has a flexible backend, which will need to be initialized before any traces are recorded."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A list of implementations is available in the swift-distributed-tracing repositoryâ€™s README."}]}],"kind":"content"}],"sections":[],"seeAlsoSections":[{"anchor":"Middleware","title":"Middleware","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware"]}],"metadata":{"externalID":"s:11Hummingbird17TracingMiddlewareV","symbolKind":"struct","navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}],"roleHeading":"Structure","title":"TracingMiddleware","role":"symbol","modules":[{"name":"Hummingbird"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/tracingmiddleware"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"kind":"symbol","title":"Response","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"url":"\/documentation\/hummingbird\/tracingmiddleware","title":"TracingMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TracingMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/request","title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic","role":"collection","kind":"symbol","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"url":"\/documentation\/hummingbird\/metricsmiddleware","title":"MetricsMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"url":"\/documentation\/hummingbird\/corsmiddleware","title":"CORSMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"abstract":[{"text":"Version of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"reference"},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":" and output is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"type":"text","text":"."}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"kind":"symbol","title":"RouterMiddleware","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routermiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware/init(recordingHeaders:attributes:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/init(recordingHeaders:attributes:)","type":"topic","abstract":[{"text":"Intialize a new TracingMiddleware.","type":"text"}],"title":"init(recordingHeaders:attributes:)","role":"symbol","url":"\/documentation\/hummingbird\/tracingmiddleware\/init(recordingheaders:attributes:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"recordingHeaders","kind":"externalParam"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV","text":"HTTPField"},{"text":".","kind":"text"},{"text":"Name","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV"},{"text":">, ","kind":"text"},{"text":"attributes","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SpanAttributes","preciseIdentifier":"s:7Tracing14SpanAttributesV"},{"text":"?)","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"type":"topic","role":"collection","kind":"article","title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware/handle(_:context:next:)":{"kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17TracingMiddlewareV7Contextxmfp"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17TracingMiddlewareV7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier","text":"Response"}],"role":"symbol","title":"handle(_:context:next:)","url":"\/documentation\/hummingbird\/tracingmiddleware\/handle(_:context:next:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware\/handle(_:context:next:)"},"https://github.com/apple/swift-distributed-tracing":{"identifier":"https:\/\/github.com\/apple\/swift-distributed-tracing","type":"link","title":"Swift-Distributed-Tracing","titleInlineContent":[{"text":"Swift-Distributed-Tracing","type":"text"}],"url":"https:\/\/github.com\/apple\/swift-distributed-tracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"url":"\/documentation\/hummingbird\/middlewaregroup","title":"MiddlewareGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareGroup","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}]},"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"kind":"symbol","title":"MiddlewareProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareProtocol"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"type":"topic","kind":"symbol","abstract":[{"text":"Middleware stack result builder","type":"text"}],"url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","title":"MiddlewareFixedTypeBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"kind":"symbol","title":"LogRequestsMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogRequestsMiddleware"}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware"}}}