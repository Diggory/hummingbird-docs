{"kind":"symbol","metadata":{"role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","text":"HBResponseGenerator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Instance Method","modules":[{"name":"Hummingbird"}],"title":"get(_:options:use:)","externalID":"s:11Hummingbird15HBRouterMethodsPAAE3get_7options3usexSS_AA0B13MethodOptionsVqd__0A4Core9HBRequestV_7ContextQztYaYbKctAA19HBResponseGeneratorRd__lF","extendedModule":"Hummingbird"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods\/get(_:options:use:)-8ajnt"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"path","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" = \"\", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions"},{"text":" = [], ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handler","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods\/Context"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/hummingbird\/hbroutermethods\/get(_:options:use:)-8ajnt"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"GET path for async closure returning type conforming to HBResponseGenerator"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"title":"HBRouterMethodOptions","abstract":[{"text":"Options available to routes","type":"text"}],"url":"\/documentation\/hummingbird\/hbroutermethodoptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods/Context":{"type":"topic","role":"symbol","title":"Context","abstract":[],"required":true,"url":"\/documentation\/hummingbird\/hbroutermethods\/context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods\/Context","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"abstract":[{"text":"Conform to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBRouterMethods","kind":"identifier"}],"type":"topic","title":"HBRouterMethods","url":"\/documentation\/hummingbird\/hbroutermethods","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"type":"topic","role":"collectionGroup","title":"Router","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"url":"\/documentation\/hummingbird\/router","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods/get(_:options:use:)-8ajnt":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods\/get(_:options:use:)-8ajnt","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/hbroutermethods\/get(_:options:use:)-8ajnt","abstract":[{"text":"GET path for async closure returning type conforming to HBResponseGenerator","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"get(_:options:use:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseGenerator":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"HBResponseGenerator","kind":"identifier"}],"title":"HBResponseGenerator","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"url":"\/documentation\/hummingbird\/hbresponsegenerator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequest":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"title":"HBRequest","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/hbrequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"url":"\/documentation\/index","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection"}}}