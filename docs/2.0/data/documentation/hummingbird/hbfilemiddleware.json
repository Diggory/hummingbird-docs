{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware\/init(_:cacheControl:searchForIndexHtml:threadPool:logger:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware\/handle(_:context:next:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"seeAlsoSections":[{"title":"Middleware","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware"]}],"kind":"symbol","sections":[],"metadata":{"title":"HBFileMiddleware","role":"symbol","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"HBFileMiddleware"}],"externalID":"s:11Hummingbird16HBFileMiddlewareV","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFileMiddleware"}],"modules":[{"name":"Hummingbird"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbfilemiddleware"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"abstract":[{"type":"text","text":"Middleware for serving static files."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFileMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","text":"HBBaseRequestContext","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If router returns a 404 ie a route was not found then this middleware will treat the request"},{"type":"text","text":" "},{"type":"text","text":"path as a filename relative to a defined rootFolder (this defaults to “public”). It checks to see if"},{"type":"text","text":" "},{"type":"text","text":"a file exists there and if so the file contents are passed back in the response."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The file middleware supports both HEAD and GET methods and supports parsing of"},{"type":"text","text":" "},{"type":"text","text":"“if-modified-since”, “if-none-match”, “if-range” and ’range” headers. It will output “content-length”,"},{"type":"text","text":" "},{"type":"text","text":"“modified-date”, “eTag”, “content-type”, “cache-control” and “content-range” headers where"},{"type":"text","text":" "},{"type":"text","text":"they are relevant."}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFileMiddleware"}],"type":"topic","title":"HBFileMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware","abstract":[{"type":"text","text":"Middleware for serving static files."}],"url":"\/documentation\/hummingbird\/hbfilemiddleware","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBFileMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"kind":"symbol","navigatorTitle":[{"text":"HBTracingMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbtracingmiddleware","title":"HBTracingMiddleware","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBTracingMiddleware","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBMiddlewareProtocol","url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"url":"\/documentation\/hummingbird\/hbcorsmiddleware","role":"symbol","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"title":"HBCORSMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","title":"MiddlewareProtocol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileMiddleware/handle(_:context:next:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware\/handle(_:context:next:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird16HBFileMiddlewareV7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird16HBFileMiddlewareV7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier","text":"HBResponse"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","text":"HBResponse"}],"url":"\/documentation\/hummingbird\/hbfilemiddleware\/handle(_:context:next:)","kind":"symbol","title":"handle(_:context:next:)","type":"topic","role":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileMiddleware/init(_:cacheControl:searchForIndexHtml:threadPool:logger:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware\/init(_:cacheControl:searchForIndexHtml:threadPool:logger:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cacheControl"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird14HBCacheControlV","kind":"typeIdentifier","text":"HBCacheControl"},{"kind":"text","text":", "},{"kind":"externalParam","text":"searchForIndexHtml"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"threadPool"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC","kind":"typeIdentifier","text":"NIOThreadPool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbird\/hbfilemiddleware\/init(_:cachecontrol:searchforindexhtml:threadpool:logger:)","kind":"symbol","title":"init(_:cacheControl:searchForIndexHtml:threadPool:logger:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Create HBFileMiddleware"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"title":"Middleware","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"url":"\/documentation\/hummingbird\/middleware","abstract":[{"text":"Middleware Handler with generic input, context and output types","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"title":"HBMiddlewareGroup","url":"\/documentation\/hummingbird\/hbmiddlewaregroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}],"navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"title":"HBBaseRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbbaserequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"url":"\/documentation\/hummingbird\/hblogrequestsmiddleware","title":"HBLogRequestsMiddleware","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"url":"\/documentation\/hummingbird\/hbmetricsmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMetricsMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"role":"symbol","title":"HBMetricsMiddleware","kind":"symbol","type":"topic"}}}