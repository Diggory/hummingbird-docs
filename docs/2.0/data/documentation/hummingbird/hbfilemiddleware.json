{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbfilemiddleware"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"abstract":[{"text":"Middleware for serving static files.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFileMiddleware"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","text":"HBBaseRequestContext"}],"languages":["swift"]}]},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If router returns a 404 ie a route was not found then this middleware will treat the request"},{"type":"text","text":" "},{"type":"text","text":"path as a filename relative to a defined rootFolder (this defaults to “public”). It checks to see if"},{"type":"text","text":" "},{"type":"text","text":"a file exists there and if so the file contents are passed back in the response."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The file middleware supports both HEAD and GET methods and supports parsing of"},{"type":"text","text":" "},{"type":"text","text":"“if-modified-since”, “if-none-match”, “if-range” and ’range” headers. It will output “content-length”,"},{"type":"text","text":" "},{"type":"text","text":"“modified-date”, “eTag”, “content-type”, “cache-control” and “content-range” headers where"},{"type":"text","text":" "},{"type":"text","text":"they are relevant."}]}],"kind":"content"}],"metadata":{"roleHeading":"Structure","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFileMiddleware","kind":"identifier"}],"role":"symbol","externalID":"s:11Hummingbird16HBFileMiddlewareV","navigatorTitle":[{"text":"HBFileMiddleware","kind":"identifier"}],"title":"HBFileMiddleware","modules":[{"name":"Hummingbird"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware\/init(_:cacheControl:searchForIndexHtml:threadPool:logger:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware\/handle(_:context:next:)"],"title":"Instance Methods"}],"kind":"symbol","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware"],"title":"Middleware"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Conforms To"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"title":"HBBaseRequestContext","type":"topic","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMetricsMiddleware","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbmetricsmiddleware","type":"topic","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"title":"HBMetricsMiddleware","kind":"symbol","navigatorTitle":[{"text":"HBMetricsMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareProtocol"}],"type":"topic","title":"HBMiddlewareProtocol","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareProtocol"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","type":"topic","title":"HBLogRequestsMiddleware","url":"\/documentation\/hummingbird\/hblogrequestsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware","title":"HBFileMiddleware","type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/hbfilemiddleware","abstract":[{"text":"Middleware for serving static files.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBFileMiddleware"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFileMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"url":"\/documentation\/hummingbird\/hbcorsmiddleware","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBCORSMiddleware"}],"title":"HBCORSMiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileMiddleware/handle(_:context:next:)":{"url":"\/documentation\/hummingbird\/hbfilemiddleware\/handle(_:context:next:)","abstract":[],"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird16HBFileMiddlewareV7Contextxmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird16HBFileMiddlewareV7Contextxmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware\/handle(_:context:next:)","title":"handle(_:context:next:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileMiddleware/init(_:cacheControl:searchForIndexHtml:threadPool:logger:)":{"type":"topic","url":"\/documentation\/hummingbird\/hbfilemiddleware\/init(_:cachecontrol:searchforindexhtml:threadpool:logger:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileMiddleware\/init(_:cacheControl:searchForIndexHtml:threadPool:logger:)","abstract":[{"text":"Create HBFileMiddleware","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"cacheControl","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBCacheControl","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14HBCacheControlV"},{"text":", ","kind":"text"},{"text":"searchForIndexHtml","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"threadPool","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOThreadPool","kind":"typeIdentifier","preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:cacheControl:searchForIndexHtml:threadPool:logger:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware Handler with generic input, context and output types"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","type":"topic","title":"Middleware","url":"\/documentation\/hummingbird\/middleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}],"role":"symbol","kind":"symbol","title":"HBTracingMiddleware","url":"\/documentation\/hummingbird\/hbtracingmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBTracingMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","type":"topic","navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"HBMiddlewareGroup","url":"\/documentation\/hummingbird\/hbmiddlewaregroup","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}]}}}