{"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier","text":"RequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","title":"writeFile(buffer:path:context:)","symbolKind":"method","externalID":"s:11Hummingbird6FileIOV05writeB06buffer4path7contexty7NIOCore10ByteBufferV_SSxtYaKAA14RequestContextRzlF"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/fileio\/writefile(buffer:path:context:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"buffer","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"ByteBuffer to write.","type":"text"}]}],"name":"contents"},{"content":[{"inlineContent":[{"type":"text","text":"Path to write to"}],"type":"paragraph"}],"name":"path"},{"content":[{"inlineContent":[{"type":"text","text":"Logger"}],"type":"paragraph"}],"name":"logger"}],"kind":"parameters"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/writeFile(buffer:path:context:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Write contents of buffer to file","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","title":"Hummingbird","role":"collection","url":"\/documentation\/hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO/writeFile(buffer:path:context:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/writeFile(buffer:path:context:)","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/fileio\/writefile(buffer:path:context:)","abstract":[{"text":"Write contents of buffer to file","type":"text"}],"title":"writeFile(buffer:path:context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeFile","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"title":"RequestContext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"url":"\/documentation\/hummingbird\/requestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"role":"symbol","title":"FileIO","url":"\/documentation\/hummingbird\/fileio","abstract":[{"text":"Manages File reading and writing.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileIO"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","navigatorTitle":[{"kind":"identifier","text":"FileIO"}]}}}