{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:context:chunkLength:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"chunkLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" = NonBlockingFileIO.defaultChunkSize) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody"}]}],"kind":"declarations"},{"parameters":[{"name":"path","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"System file path"}]}]},{"name":"context","content":[{"inlineContent":[{"text":"Context this request is being called in","type":"text"}],"type":"paragraph"}]},{"name":"chunkLength","content":[{"inlineContent":[{"text":"Size of the chunks read from disk and loaded into memory (in bytes). Defaults to the value suggested by ","type":"text"},{"type":"codeVoice","code":"swift-nio"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Response body"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Depending on the file size this will return either a response body containing a ByteBuffer or a stream that will provide the"},{"type":"text","text":" "},{"type":"text","text":"file in chunks."}]}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Instance Method","title":"loadFile(path:context:chunkLength:)","symbolKind":"method","modules":[{"name":"Hummingbird"}],"role":"symbol","externalID":"s:11Hummingbird6FileIOV04loadB04path7context11chunkLength0A4Core12ResponseBodyVSS_xSitYaKAA14RequestContextRzlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier","text":"RequestContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"chunkLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","kind":"typeIdentifier","text":"ResponseBody"}]},"abstract":[{"type":"text","text":"Load file and return response body"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/fileio\/loadfile(path:context:chunklength:)"]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext","role":"symbol","title":"RequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBody":{"navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"kind":"symbol","url":"\/documentation\/hummingbird\/responsebody","title":"ResponseBody","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Response body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBody"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","role":"collection","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO/loadFile(path:context:chunkLength:)":{"role":"symbol","kind":"symbol","abstract":[{"text":"Load file and return response body","type":"text"}],"url":"\/documentation\/hummingbird\/fileio\/loadfile(path:context:chunklength:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:context:chunkLength:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"chunkLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","kind":"typeIdentifier"}],"type":"topic","title":"loadFile(path:context:chunkLength:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/fileio","abstract":[{"type":"text","text":"Manages File reading and writing."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","title":"FileIO","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileIO"}],"navigatorTitle":[{"kind":"identifier","text":"FileIO"}]}}}