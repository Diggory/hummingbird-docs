{"abstract":[{"type":"text","text":"Load part of file and return response body."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:range:context:chunkLength:)"},"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"kind":"text","text":"("},{"text":"path","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SN","text":"ClosedRange","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":">, ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"},{"text":", ","kind":"text"},{"text":"chunkLength","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" = NonBlockingFileIO.defaultChunkSize) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"ResponseBody","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"path","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"System file path"}]}]},{"name":"range","content":[{"type":"paragraph","inlineContent":[{"text":"Range defining how much of the file is to be loaded","type":"text"}]}]},{"name":"context","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Context this request is being called in"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Size of the chunks read from disk and loaded into memory (in bytes). Defaults to the value suggested by ","type":"text"},{"type":"codeVoice","code":"swift-nio"},{"text":".","type":"text"}]}],"name":"chunkLength"}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Response body plus file size"}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Depending on the size of the part this will return either a response body containing a ByteBuffer or a stream that will provide the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"file in chunks."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:chunklength:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]]},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadFile"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"range"},{"text":": ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP"},{"kind":"text","text":", "},{"text":"chunkLength","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","kind":"typeIdentifier","text":"ResponseBody"}],"modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:11Hummingbird6FileIOV04loadB04path5range7context11chunkLength0A4Core12ResponseBodyVSS_SNySiGxSitYaKAA14RequestContextRzlF","title":"loadFile(path:range:context:chunkLength:)","role":"symbol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"title":"FileIO","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","url":"\/documentation\/hummingbird\/fileio","abstract":[{"type":"text","text":"Manages File reading and writing."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FileIO"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileIO","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO/loadFile(path:range:context:chunkLength:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"range"},{"text":": ","kind":"text"},{"text":"ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"chunkLength"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","text":"ResponseBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:range:context:chunkLength:)","title":"loadFile(path:range:context:chunkLength:)","url":"\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:chunklength:)","kind":"symbol","role":"symbol","abstract":[{"text":"Load part of file and return response body.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"topic","title":"RequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/requestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","title":"Request","kind":"symbol","navigatorTitle":[{"text":"Request","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"url":"\/documentation\/hummingbirdcore\/request","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","kind":"symbol","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"logo.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"type":"topic","url":"\/documentation\/hummingbirdcore\/responsebody","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ResponseBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","role":"symbol","title":"ResponseBody","abstract":[{"type":"text","text":"Response body"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"kind":"symbol"}}}