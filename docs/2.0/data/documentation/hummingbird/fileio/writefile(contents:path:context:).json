{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]]},"abstract":[{"text":"Write contents of request body to file","type":"text"}],"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"contents"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RequestBody","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestBody"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"BaseRequestContext","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"contents","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Request body to write."}]}]},{"name":"path","content":[{"inlineContent":[{"text":"Path to write to","type":"text"}],"type":"paragraph"}]},{"name":"logger","content":[{"inlineContent":[{"type":"text","text":"Logger"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This can be used to save arbitrary ByteBuffers by passing in ","type":"text"},{"code":".byteBuffer(ByteBuffer)","type":"codeVoice"},{"text":" as contents","type":"text"}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/writeFile(contents:path:context:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","title":"writeFile(contents:path:context:)","role":"symbol","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"contents"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RequestBody","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"BaseRequestContext","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"externalID":"s:11Hummingbird6FileIOV05writeB08contents4path7contexty0A4Core11RequestBodyV_SSxtYaKAA04BaseI7ContextRzlF"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/fileio\/writefile(contents:path:context:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"type":"topic","url":"\/documentation\/hummingbird\/fileio","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","title":"FileIO","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileIO"}],"navigatorTitle":[{"kind":"identifier","text":"FileIO"}],"abstract":[{"text":"Manages File reading and writing.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"identifier"}],"title":"BaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","type":"topic","navigatorTitle":[{"text":"BaseRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"url":"\/documentation\/hummingbird\/baserequestcontext","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO/writeFile(contents:path:context:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/writeFile(contents:path:context:)","title":"writeFile(contents:path:context:)","url":"\/documentation\/hummingbird\/fileio\/writefile(contents:path:context:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"contents"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RequestBody","preciseIdentifier":"s:15HummingbirdCore11RequestBodyV"},{"kind":"text","text":", "},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","kind":"typeIdentifier","text":"BaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"type":"topic","abstract":[{"text":"Write contents of request body to file","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestBody":{"title":"RequestBody","abstract":[{"type":"text","text":"Request Body"}],"kind":"symbol","url":"\/documentation\/hummingbird\/requestbody","navigatorTitle":[{"text":"RequestBody","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestBody","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestBody"}}}