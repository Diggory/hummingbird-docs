{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]]},"sections":[],"metadata":{"title":"writeFile(contents:path:context:)","externalID":"s:11Hummingbird6FileIOV05writeB08contents4path7contextyx_SSq_tYaKSciRzAA14RequestContextR_7NIOCore10ByteBufferV7ElementRtzr0_lF","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"writeFile"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"AS"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contents"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6FileIOV05writeB08contents4path7contextyx_SSq_tYaKSciRzAA14RequestContextR_7NIOCore10ByteBufferV7ElementRtzr0_lF2ASL_xmfp","text":"AS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"path"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"text":"RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"roleHeading":"Instance Method","modules":[{"name":"Hummingbird"}]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/writeFile(contents:path:context:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"writeFile","kind":"identifier"},{"kind":"text","text":"<"},{"text":"AS","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"contents","kind":"externalParam"},{"kind":"text","text":": "},{"text":"AS","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6FileIOV05writeB08contents4path7contextyx_SSq_tYaKSciRzAA14RequestContextR_7NIOCore10ByteBufferV7ElementRtzr0_lF2ASL_xmfp"},{"text":", ","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier","text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"AS"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sci","text":"AsyncSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AS","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"contents","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AsyncSequence of buffers to write."}]}]},{"name":"path","content":[{"type":"paragraph","inlineContent":[{"text":"Path to write to","type":"text"}]}]},{"name":"context","content":[{"type":"paragraph","inlineContent":[{"text":"Request Context","type":"text"}]}]}]}],"variants":[{"paths":["\/documentation\/hummingbird\/fileio\/writefile(contents:path:context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Write contents of AsyncSequence of buffers to file"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"title":"FileIO","navigatorTitle":[{"text":"FileIO","kind":"identifier"}],"url":"\/documentation\/hummingbird\/fileio","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FileIO","kind":"identifier"}],"abstract":[{"text":"Manages File reading and writing.","type":"text"}],"kind":"symbol","type":"topic"},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO/writeFile(contents:path:context:)":{"title":"writeFile(contents:path:context:)","url":"\/documentation\/hummingbird\/fileio\/writefile(contents:path:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/writeFile(contents:path:context:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"writeFile"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"AS"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contents"},{"kind":"text","text":": "},{"text":"AS","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird6FileIOV05writeB08contents4path7contextyx_SSq_tYaKSciRzAA14RequestContextR_7NIOCore10ByteBufferV7ElementRtzr0_lF2ASL_xmfp"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Write contents of AsyncSequence of buffers to file","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","url":"\/documentation\/hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","title":"Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","title":"RequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/requestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"type":"topic"}}}