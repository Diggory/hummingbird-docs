{"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Load part of file and return response body.","type":"text"}],"metadata":{"roleHeading":"Instance Method","externalID":"s:11Hummingbird6FileIOV04loadB04path5range7context0A4Core12ResponseBodyVSS_SNySiGxtYaKAA18BaseRequestContextRzlF","modules":[{"name":"Hummingbird"}],"role":"symbol","title":"loadFile(path:range:context:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:range:context:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"range"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","kind":"typeIdentifier","text":"BaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","kind":"typeIdentifier","text":"ResponseBody"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"System file path","type":"text"}]}],"name":"path"},{"content":[{"inlineContent":[{"type":"text","text":"Range defining how much of the file is to be loaded"}],"type":"paragraph"}],"name":"range"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Context this request is being called in"}]}],"name":"context"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"Response body plus file size","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Depending on the size of the part this will return either a response body containing a ByteBuffer or a stream that will provide the"},{"type":"text","text":" "},{"type":"text","text":"file in chunks."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO/loadFile(path:range:context:)":{"abstract":[{"text":"Load part of file and return response body.","type":"text"}],"kind":"symbol","role":"symbol","title":"loadFile(path:range:context:)","url":"\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:range:context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBody":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","type":"topic","abstract":[{"text":"Response body","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseBody"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"kind":"symbol","url":"\/documentation\/hummingbird\/responsebody","title":"ResponseBody"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","type":"topic","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BaseRequestContext"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BaseRequestContext"}],"kind":"symbol","url":"\/documentation\/hummingbird\/baserequestcontext","title":"BaseRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"navigatorTitle":[{"kind":"identifier","text":"FileIO"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileIO"}],"url":"\/documentation\/hummingbird\/fileio","abstract":[{"type":"text","text":"Manages File reading and writing."}],"type":"topic","kind":"symbol","role":"symbol","title":"FileIO","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"}}}