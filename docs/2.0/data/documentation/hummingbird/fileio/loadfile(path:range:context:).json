{"variants":[{"paths":["\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"abstract":[{"text":"Load part of file and return response body.","type":"text"}],"metadata":{"modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> (","kind":"text"},{"text":"ResponseBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV"},{"text":", ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"externalID":"s:11Hummingbird6FileIOV04loadB04path5range7context0A4Core12ResponseBodyV_SitSS_SNySiGxtYaKAA18BaseRequestContextRzlF","title":"loadFile(path:range:context:)","role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"range"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","text":"BaseRequestContext","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","text":"ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"System file path","type":"text"}],"type":"paragraph"}],"name":"path"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Range defining how much of the file is to be loaded"}]}],"name":"range"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Context this request is being called in","type":"text"}]}],"name":"context"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"text":"Response body plus file size","type":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Depending on the size of the part this will return either a response body containing a ByteBuffer or a stream that will provide the"},{"type":"text","text":" "},{"type":"text","text":"file in chunks."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:range:context:)"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBody":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBody"}],"abstract":[{"type":"text","text":"Response body"}],"url":"\/documentation\/hummingbird\/responsebody","type":"topic","title":"ResponseBody","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"identifier"}],"title":"BaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","type":"topic","navigatorTitle":[{"text":"BaseRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"url":"\/documentation\/hummingbird\/baserequestcontext","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"type":"topic","url":"\/documentation\/hummingbird\/fileio","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","title":"FileIO","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileIO"}],"navigatorTitle":[{"kind":"identifier","text":"FileIO"}],"abstract":[{"text":"Manages File reading and writing.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO/loadFile(path:range:context:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:range:context:)","kind":"symbol","abstract":[{"text":"Load part of file and return response body.","type":"text"}],"type":"topic","title":"loadFile(path:range:context:)","role":"symbol","url":"\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadFile"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"range","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SN","text":"ClosedRange","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","kind":"typeIdentifier","text":"BaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ("},{"preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","kind":"typeIdentifier","text":"ResponseBody"},{"kind":"text","text":", "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","kind":"symbol"}}}