{"abstract":[{"text":"Get environment variable with name as a certain type","type":"text"}],"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/hbenvironment\/get(_:as:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"s"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBEnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","text":"T"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBEnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","text":"T"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s25LosslessStringConvertibleP","text":"LosslessStringConvertible"}]}]},{"kind":"parameters","parameters":[{"name":"s","content":[{"type":"paragraph","inlineContent":[{"text":"Environment variable name","type":"text"}]}]},{"name":"as","content":[{"inlineContent":[{"text":"Type we want variable to be cast to","type":"text"}],"type":"paragraph"}]}]}],"metadata":{"externalID":"s:11Hummingbird13HBEnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBEnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"text":".Type) -> ","kind":"text"},{"text":"T","preciseIdentifier":"s:11Hummingbird13HBEnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"get(_:as:)","modules":[{"name":"Hummingbird"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEnvironment\/get(_:as:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEnvironment"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBEnvironment/get(_:as:)":{"kind":"symbol","url":"\/documentation\/hummingbird\/hbenvironment\/get(_:as:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEnvironment\/get(_:as:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBEnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBEnvironmentV3get_2asxSgSS_xmts25LosslessStringConvertibleRzlF1TL_xmfp"},{"text":"?","kind":"text"}],"title":"get(_:as:)","type":"topic","abstract":[{"type":"text","text":"Get environment variable with name as a certain type"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBEnvironment":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEnvironment","role":"symbol","title":"HBEnvironment","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBEnvironment"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBEnvironment","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbenvironment","type":"topic","abstract":[{"type":"text","text":"Access environment variables"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird"}}}