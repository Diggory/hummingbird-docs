{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"metadata":{"roleHeading":"Class","symbolKind":"class","externalID":"s:11Hummingbird8HBRouterC","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouter"}],"modules":[{"name":"Hummingbird"}],"title":"HBRouter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouter"}]},"variants":[{"paths":["\/documentation\/hummingbird\/hbrouter"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouter"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","kind":"typeIdentifier","text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"code":"HBRouter","type":"codeVoice"},{"text":" requires an implementation of  the ","type":"text"},{"code":"on(path:method:use)","type":"codeVoice"},{"text":" functions but because it","type":"text"},{"text":" ","type":"text"},{"text":"also conforms to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" it is also possible to call the method specific functions ","type":"text"},{"code":"get","type":"codeVoice"},{"text":", ","type":"text"},{"code":"put","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"code":"head","type":"codeVoice"},{"text":", ","type":"text"},{"code":"post","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"patch","type":"codeVoice"},{"text":".  The route handler closures all return objects conforming to","type":"text"},{"text":" ","type":"text"},{"code":"HBResponseGenerator","type":"codeVoice"},{"text":".  This allows us to support routes which return a multitude of types eg","type":"text"}],"type":"paragraph"},{"code":["router.get(\"string\") { _, _ -> String in","    return \"string\"","}","router.post(\"status\") { _, _ -> HTTPResponseStatus in","    return .ok","}","router.data(\"data\") { request, context -> ByteBuffer in","    return context.allocator.buffer(string: \"buffer\")","}"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"The default ","type":"text"},{"code":"Router","type":"codeVoice"},{"text":" setup in ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":" is the ","type":"text"},{"code":"TrieRouter","type":"codeVoice"},{"text":" . This uses a","type":"text"},{"text":" ","type":"text"},{"text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction","type":"text"}],"type":"paragraph"},{"code":["router.get(\"user\/*\", use: anyUser)","router.get(\"user\/:id\", use: userWithId)"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Both of these match routes which start with “\/user” and the next path segment being anything."},{"type":"text","text":" "},{"type":"text","text":"The second version extracts the path segment out and adds it to "},{"type":"codeVoice","code":"HBRequest.parameters"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"key “id”."}],"type":"paragraph"}],"kind":"content"}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods"],"title":"Conforms To","kind":"relationships"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/init(context:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/middlewares"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/add(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/on(_:method:options:use:)-1zuke"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/HBRouterMethods-Implementations"],"title":"Default Implementations"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"],"title":"Router"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","role":"symbol","url":"\/documentation\/hummingbird\/hbroutehandler","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}],"title":"HBRouteHandler","navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"abstract":[{"text":"Object for handling requests.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"url":"\/documentation\/hummingbird\/hbbaserequestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a request. Provides context for request processing"}],"title":"HBBaseRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"url":"\/documentation\/hummingbird\/routerpath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","abstract":[{"text":"Split router path into components","type":"text"}],"title":"RouterPath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"title":"Request Contexts","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","role":"collectionGroup","kind":"article","url":"\/documentation\/hummingbird\/requestcontexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBResponder"}],"type":"topic","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","role":"symbol","url":"\/documentation\/hummingbird\/hbresponder","title":"HBResponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponderBuilder":{"url":"\/documentation\/hummingbird\/hbresponderbuilder","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder","kind":"symbol","title":"HBResponderBuilder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponderBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"HBResponderBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that has a single method to build a responder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouter","kind":"identifier"}],"title":"HBRouter","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"url":"\/documentation\/hummingbird\/hbrouter","navigatorTitle":[{"text":"HBRouter","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"url":"\/documentation\/hummingbird\/router","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"title":"Router","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/buildResponder()":{"url":"\/documentation\/hummingbird\/hbrouter\/buildresponder()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"build router"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/buildResponder()","title":"buildResponder()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17HBRouterResponderV","text":"HBRouterResponder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/HBRouterMethods-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/HBRouterMethods-Implementations","url":"\/documentation\/hummingbird\/hbrouter\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"kind":"symbol","abstract":[{"text":"Endpoint path storage","type":"text"}],"title":"EndpointPath","url":"\/documentation\/hummingbird\/endpointpath","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EndpointPath"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/middlewares":{"type":"topic","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"middlewares"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBMiddlewareGroup","preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp"},{"kind":"text","text":">"}],"abstract":[],"title":"middlewares","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/middlewares","url":"\/documentation\/hummingbird\/hbrouter\/middlewares","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/add(_:method:responder:)":{"url":"\/documentation\/hummingbird\/hbrouter\/add(_:method:responder:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Add route to router"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/add(_:method:responder:)","title":"add(_:method:responder:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"responder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11HBResponderP","text":"HBResponder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":">)","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","role":"symbol","url":"\/documentation\/hummingbird\/hbroutermethods","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"title":"HBRouterMethods","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"abstract":[{"text":"Conform to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","title":"HBCallbackResponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbcallbackresponder","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/on(_:method:options:use:)-1zuke":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/on(_:method:options:use:)-1zuke","role":"symbol","title":"on(_:method:options:use:)","type":"topic","url":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-1zuke","abstract":[{"type":"text","text":"Add path for closure returning type conforming to ResponseFutureEncodable"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"HBResponseGenerator","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/index","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/hbroutermethodoptions","abstract":[{"text":"Options available to routes","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBRouterMethodOptions"}],"title":"HBRouterMethodOptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/init(context:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp"},{"text":".Type)","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/init(context:)","role":"symbol","url":"\/documentation\/hummingbird\/hbrouter\/init(context:)","title":"init(context:)","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"kind":"symbol","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"suffix to the endpoint path"}],"type":"topic","url":"\/documentation\/hummingbird\/hbroutergroup","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"title":"HBRouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/group(_:)":{"abstract":[{"text":"return new ","type":"text"},{"type":"codeVoice","code":"RouterGroup"}],"url":"\/documentation\/hummingbird\/hbrouter\/group(_:)","title":"group(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"group"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"HBRouterGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/group(_:)"}}}