{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbrouter"]}],"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods"],"type":"conformsTo","kind":"relationships"}],"kind":"symbol","metadata":{"title":"HBRouter","externalID":"s:11Hummingbird8HBRouterC","symbolKind":"class","navigatorTitle":[{"text":"HBRouter","kind":"identifier"}],"modules":[{"name":"HummingbirdLambda"}],"role":"symbol","roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouter","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"HBResponder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/init(context:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/middlewares"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/add(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/on(_:method:options:use:)-1zuke"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/HBRouterMethods-Implementations"]}],"seeAlsoSections":[{"title":"Router","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouter","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","text":"HBBaseRequestContext","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"code":"HBRouter","type":"codeVoice"},{"text":" requires an implementation of  the ","type":"text"},{"code":"on(path:method:use)","type":"codeVoice"},{"text":" functions but because it","type":"text"},{"text":" ","type":"text"},{"text":"also conforms to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" it is also possible to call the method specific functions ","type":"text"},{"code":"get","type":"codeVoice"},{"text":", ","type":"text"},{"code":"put","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"code":"head","type":"codeVoice"},{"text":", ","type":"text"},{"code":"post","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"patch","type":"codeVoice"},{"text":".  The route handler closures all return objects conforming to","type":"text"},{"text":" ","type":"text"},{"code":"HBResponseGenerator","type":"codeVoice"},{"text":".  This allows us to support routes which return a multitude of types eg","type":"text"}],"type":"paragraph"},{"code":["router.get(\"string\") { _, _ -> String in","    return \"string\"","}","router.post(\"status\") { _, _ -> HTTPResponseStatus in","    return .ok","}","router.data(\"data\") { request, context -> ByteBuffer in","    return context.allocator.buffer(string: \"buffer\")","}"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"The default ","type":"text"},{"code":"Router","type":"codeVoice"},{"text":" setup in ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":" is the ","type":"text"},{"code":"TrieRouter","type":"codeVoice"},{"text":" . This uses a","type":"text"},{"text":" ","type":"text"},{"text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction","type":"text"}],"type":"paragraph"},{"code":["router.get(\"user\/*\", use: anyUser)","router.get(\"user\/:id\", use: userWithId)"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"Both of these match routes which start with “\/user” and the next path segment being anything.","type":"text"},{"text":" ","type":"text"},{"text":"The second version extracts the path segment out and adds it to ","type":"text"},{"type":"codeVoice","code":"HBRequest.parameters"},{"text":" with the","type":"text"},{"text":" ","type":"text"},{"text":"key “id”.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder":{"abstract":[{"text":"Directs requests to handlers based on the request uri and method.","type":"text"}],"title":"HBRouterResponder","navigatorTitle":[{"text":"HBRouterResponder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbrouterresponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/on(_:method:options:use:)-1zuke":{"abstract":[{"text":"Add path for closure returning type conforming to ResponseFutureEncodable","type":"text"}],"title":"on(_:method:options:use:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/on(_:method:options:use:)-1zuke","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbrouter\/on(_:method:options:use:)-1zuke","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> some ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","text":"HBResponseGenerator","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/init(context:)":{"title":"init(context:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"abstract":[],"type":"topic","url":"\/documentation\/hummingbird\/hbrouter\/init(context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/init(context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter":{"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"type":"text","text":" that will follow these rules."}],"title":"HBRouter","navigatorTitle":[{"kind":"identifier","text":"HBRouter"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbrouter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouter"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/add(_:method:responder:)":{"abstract":[{"text":"Add route to router","type":"text"}],"title":"add(_:method:responder:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/add(_:method:responder:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbrouter\/add(_:method:responder:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"text":"responder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":">)","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"abstract":[{"type":"text","text":"Options available to routes"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutermethodoptions","title":"HBRouterMethodOptions","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponderBuilder":{"title":"HBResponderBuilder","role":"symbol","navigatorTitle":[{"text":"HBResponderBuilder","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponderBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that has a single method to build a responder"}],"type":"topic","url":"\/documentation\/hummingbird\/hbresponderbuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","role":"collection","kind":"article","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"type":"topic","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","abstract":[{"type":"text","text":"Split router path into components"}],"role":"symbol","title":"RouterPath","url":"\/documentation\/hummingbird\/routerpath","navigatorTitle":[{"kind":"identifier","text":"RouterPath"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"title":"HBResponder","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbresponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/group(_:)":{"abstract":[{"text":"return new ","type":"text"},{"code":"RouterGroup","type":"codeVoice"}],"title":"group(_:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/group(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbrouter\/group(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"group","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"HBRouterGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/buildResponder()":{"title":"buildResponder()","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"HBRouterResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBRouterResponderV"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"build router"}],"type":"topic","url":"\/documentation\/hummingbird\/hbrouter\/buildresponder()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/buildResponder()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"title":"HBBaseRequestContext","url":"\/documentation\/hummingbird\/hbbaserequestcontext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"title":"HBRouterMethods","type":"topic","abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"HBRouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"url":"\/documentation\/hummingbird\/hbroutermethods","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/HBRouterMethods-Implementations":{"abstract":[],"title":"HBRouterMethods Implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/HBRouterMethods-Implementations","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/hbrouter\/hbroutermethods-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"title":"HBRouterGroup","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbroutergroup","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","type":"topic","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","url":"\/documentation\/hummingbird\/router","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"title":"HBCallbackResponder","role":"symbol","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}],"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"type":"topic","url":"\/documentation\/hummingbird\/hbcallbackresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"abstract":[{"text":"Endpoint path storage","type":"text"}],"title":"EndpointPath","navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/endpointpath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EndpointPath"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/middlewares":{"title":"middlewares","role":"symbol","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"middlewares","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[],"type":"topic","url":"\/documentation\/hummingbird\/hbrouter\/middlewares","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/middlewares"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","type":"topic","role":"collectionGroup","url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"abstract":[{"text":"Object for handling requests.","type":"text"}],"title":"HBRouteHandler","navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbroutehandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}]}}}