{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter"},"seeAlsoSections":[{"title":"Router","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouter"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"HBRouter"},{"text":" requires an implementation of  the ","type":"text"},{"type":"codeVoice","code":"on(path:method:use)"},{"text":" functions but because it","type":"text"},{"text":" ","type":"text"},{"text":"also conforms to ","type":"text"},{"type":"codeVoice","code":"HBRouterMethods"},{"text":" it is also possible to call the method specific functions ","type":"text"},{"type":"codeVoice","code":"get"},{"text":", ","type":"text"},{"type":"codeVoice","code":"put"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"head"},{"text":", ","type":"text"},{"type":"codeVoice","code":"post"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"patch"},{"text":".  The route handler closures all return objects conforming to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"HBResponseGenerator"},{"text":".  This allows us to support routes which return a multitude of types eg","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["router.get(\"string\") { _, _ -> String in","    return \"string\"","}","router.post(\"status\") { _, _ -> HTTPResponseStatus in","    return .ok","}","router.data(\"data\") { request, context -> ByteBuffer in","    return context.allocator.buffer(string: \"buffer\")","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The default "},{"code":"Router","type":"codeVoice"},{"type":"text","text":" setup in "},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":" is the "},{"code":"TrieRouter","type":"codeVoice"},{"type":"text","text":" . This uses a"},{"type":"text","text":" "},{"type":"text","text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction"}],"type":"paragraph"},{"syntax":null,"code":["router.get(\"user\/*\", use: anyUser)","router.get(\"user\/:id\", use: userWithId)"],"type":"codeListing"},{"inlineContent":[{"text":"Both of these match routes which start with “\/user” and the next path segment being anything.","type":"text"},{"text":" ","type":"text"},{"text":"The second version extracts the path segment out and adds it to ","type":"text"},{"type":"codeVoice","code":"HBRequest.parameters"},{"text":" with the","type":"text"},{"text":" ","type":"text"},{"text":"key “id”.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouter","kind":"identifier"}],"role":"symbol","symbolKind":"class","navigatorTitle":[{"text":"HBRouter","kind":"identifier"}],"title":"HBRouter","roleHeading":"Class","externalID":"s:11Hummingbird8HBRouterC","modules":[{"name":"Hummingbird"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/init(context:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/middlewares"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/add(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/on(_:method:use:)-99gpn"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/HBRouterMethods-Implementations"]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbrouter"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods"],"type":"conformsTo"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","url":"\/documentation\/hummingbird\/hbroutermethods","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"role":"symbol","title":"HBRouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"role":"symbol","title":"HBResponder","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"url":"\/documentation\/hummingbird\/hbresponder","type":"topic","kind":"symbol","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/on(_:method:use:)-99gpn":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/on(_:method:use:)-99gpn","url":"\/documentation\/hummingbird\/hbrouter\/on(_:method:use:)-99gpn","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","role":"symbol","title":"on(_:method:use:)","abstract":[{"text":"Add path for closure returning type conforming to HBResponseGenerator","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/add(_:method:responder:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/add(_:method:responder:)","url":"\/documentation\/hummingbird\/hbrouter\/add(_:method:responder:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"text":"responder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp"},{"text":">)","kind":"text"}],"type":"topic","role":"symbol","title":"add(_:method:responder:)","abstract":[{"text":"Add route to router","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"role":"collection","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","url":"\/documentation\/hummingbird\/hbroutehandler","navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"Object for handling requests."}],"role":"symbol","title":"HBRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/HBRouterMethods-Implementations":{"title":"HBRouterMethods Implementations","type":"topic","url":"\/documentation\/hummingbird\/hbrouter\/hbroutermethods-implementations","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/HBRouterMethods-Implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbroutergroup","title":"HBRouterGroup","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","url":"\/documentation\/hummingbird\/hbbaserequestcontext","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"role":"symbol","title":"HBBaseRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","abstract":[{"text":"Endpoint path storage","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/endpointpath","title":"EndpointPath","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouter"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","url":"\/documentation\/hummingbird\/hbrouter","navigatorTitle":[{"kind":"identifier","text":"HBRouter"}],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"role":"symbol","title":"HBRouter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponderBuilder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponderBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"HBResponderBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder","abstract":[{"text":"A type that has a single method to build a responder","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/hbresponderbuilder","title":"HBResponderBuilder","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterResponder","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","url":"\/documentation\/hummingbird\/hbrouterresponder","navigatorTitle":[{"text":"HBRouterResponder","kind":"identifier"}],"abstract":[{"text":"Directs requests to handlers based on the request uri and method.","type":"text"}],"role":"symbol","title":"HBRouterResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/buildResponder()":{"title":"buildResponder()","role":"symbol","url":"\/documentation\/hummingbird\/hbrouter\/buildresponder()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"HBRouterResponder","preciseIdentifier":"s:11Hummingbird17HBRouterResponderV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp"},{"text":">","kind":"text"}],"abstract":[{"text":"build responder from router","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/buildResponder()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/init(context:)":{"abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/hbrouter\/init(context:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":".Type)","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/init(context:)","title":"init(context:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/group(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/group(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"HBRouterGroup","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp"},{"kind":"text","text":">"}],"title":"group(_:)","abstract":[{"text":"return new ","type":"text"},{"type":"codeVoice","code":"RouterGroup"}],"url":"\/documentation\/hummingbird\/hbrouter\/group(_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterPath","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","url":"\/documentation\/hummingbird\/routerpath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"abstract":[{"type":"text","text":"Split router path into components"}],"role":"symbol","title":"RouterPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","url":"\/documentation\/hummingbird\/hbcallbackresponder","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}],"abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"role":"symbol","title":"HBCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter/middlewares":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"middlewares"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC","text":"HBMiddlewareGroup"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird8HBRouterC7Contextxmfp","text":"Context"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter\/middlewares","url":"\/documentation\/hummingbird\/hbrouter\/middlewares","abstract":[],"role":"symbol","title":"middlewares"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","url":"\/documentation\/hummingbird\/requestcontexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"role":"collectionGroup","title":"Request Contexts"}}}