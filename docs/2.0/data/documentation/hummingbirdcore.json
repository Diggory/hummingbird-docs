{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore"]}],"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming "},{"type":"codeVoice","code":"ChannelSetup"},{"type":"text","text":" which defines how the server responds. It has two functions "},{"type":"codeVoice","code":"initialize"},{"type":"text","text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and "},{"type":"codeVoice","code":"handle"},{"type":"text","text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let server = Server(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return Response(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]},{"inlineContent":[{"type":"text","text":"Hummingbird makes use of "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"type":"text","text":" to manage startup and shutdown. "},{"type":"codeVoice","code":"Server"},{"type":"text","text":" conforms to the "},{"type":"codeVoice","code":"Service"},{"type":"text","text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"],"title":"HTTP Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"],"title":"Miscellaneous"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"hierarchy":{"paths":[[]]},"metadata":{"images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Framework","title":"HummingbirdCore","externalID":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}],"symbolKind":"module","role":"collection"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannelValue":{"abstract":[{"type":"text","text":"Protocol for typed server child channel"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ServerChildChannelValue"}],"title":"ServerChildChannelValue","url":"\/documentation\/hummingbirdcore\/serverchildchannelvalue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerChildChannelValue"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/BindAddress":{"navigatorTitle":[{"text":"BindAddress","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/bindaddress","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindAddress","kind":"identifier"}],"kind":"symbol","title":"BindAddress","abstract":[{"text":"Address to bind server to","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","role":"symbol","type":"topic","title":"FlatDictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}]},"logo.png":{"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","abstract":[{"text":"HTTP server class","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Server"}],"url":"\/documentation\/hummingbirdcore\/server","title":"Server","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Server"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"text":"Request","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/request","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","type":"topic","title":"Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"url":"\/documentation\/hummingbirdcore\/requestbody","kind":"symbol","abstract":[{"text":"Request Body","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","type":"topic","title":"RequestBody","navigatorTitle":[{"kind":"identifier","text":"RequestBody"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder","abstract":[{"text":"Build server that takes an HTTP responder","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPServerBuilder"}],"url":"\/documentation\/hummingbirdcore\/httpserverbuilder","title":"HTTPServerBuilder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerBuilder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server.","type":"text"}],"kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter":{"navigatorTitle":[{"kind":"identifier","text":"ResponseWriter"}],"url":"\/documentation\/hummingbirdcore\/responsewriter","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"ResponseWriter that writes directly to AsyncChannel"}],"title":"ResponseWriter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseWriter"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","title":"HummingbirdTLS","type":"topic","url":"\/documentation\/hummingbirdtls"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"abstract":[{"text":"Simple URL parser","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","title":"URI","kind":"symbol","url":"\/documentation\/hummingbirdcore\/uri","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URI"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"URI"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"title":"ServerConfiguration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/serverconfiguration","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerConfiguration"}],"navigatorTitle":[{"kind":"identifier","text":"ServerConfiguration"}],"kind":"symbol","abstract":[{"type":"text","text":"HTTP server configuration"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","kind":"symbol","abstract":[{"text":"Channel Handler that controls whether we should accept new connections","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","type":"topic","title":"AvailableConnectionsChannelHandler","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"type":"topic","url":"\/documentation\/hummingbirdcore\/serverchildchannel","abstract":[{"text":"Generic server child channel setup protocol","type":"text"}],"kind":"symbol","title":"ServerChildChannel","navigatorTitle":[{"text":"ServerChildChannel","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerChildChannel","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","kind":"symbol","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"topic","title":"Response","navigatorTitle":[{"kind":"identifier","text":"Response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","type":"topic","title":"HummingbirdCore","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"abstract":[{"type":"text","text":"Protocol for HTTP channels"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","title":"HTTPChannelHandler","kind":"symbol","url":"\/documentation\/hummingbirdcore\/httpchannelhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPChannelHandler"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPChannelHandler"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"url":"\/documentation\/hummingbirdcore\/responsebody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","role":"symbol","abstract":[{"type":"text","text":"Response body"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBody"}],"kind":"symbol","title":"ResponseBody","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/MaximumAvailableConnections":{"kind":"symbol","abstract":[{"text":"Implementation of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","type":"reference"},{"text":" that sets a maximum limit to the number","type":"text"},{"text":" ","type":"text"},{"text":"of open connections","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MaximumAvailableConnections"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MaximumAvailableConnections"}],"title":"MaximumAvailableConnections","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdcore\/maximumavailableconnections"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsDelegate":{"url":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate","kind":"symbol","abstract":[{"text":"Delegate for ","type":"text"},{"code":"AvailableConnectionsChannelHandler","type":"codeVoice"},{"text":" that defines if we should accept","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","type":"topic","title":"AvailableConnectionsDelegate","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsDelegate"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}],"title":"ResponseBodyWriter","url":"\/documentation\/hummingbirdcore\/responsebodywriter","navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","kind":"symbol"},"https://github.com/swift-server/swift-service-lifecycle":{"url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link","title":"Swift Service Lifecycle","titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"role":"symbol","title":"HTTP1Channel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1Channel"}],"abstract":[{"text":"Child channel for processing HTTP1","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HTTP1Channel"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/http1channel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","type":"topic","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"HTTPUserEventHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPUserEventHandler"}],"title":"HTTPUserEventHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdcore\/httpusereventhandler"}}}