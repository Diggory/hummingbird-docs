{"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPUserEventHandler"]},{"title":"Request","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBURL","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody"]},{"title":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyWriter"]},{"title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"]},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming "},{"type":"codeVoice","code":"HBChannelSetup"},{"type":"text","text":" which defines how the server responds. It has two functions "},{"type":"codeVoice","code":"initialize"},{"type":"text","text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and "},{"type":"codeVoice","code":"handle"},{"type":"text","text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let server = HBServer(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]},{"inlineContent":[{"text":"Hummingbird makes use of ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"text":" to manage startup and shutdown. ","type":"text"},{"type":"codeVoice","code":"HBServer"},{"text":" conforms to the ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]}],"kind":"content"}],"sections":[],"kind":"symbol","hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"metadata":{"role":"collection","title":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}],"roleHeading":"Framework","symbolKind":"module","externalID":"HummingbirdCore"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"kind":"symbol","navigatorTitle":[{"text":"HTTPChannelHandler","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Protocol for HTTP channels"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","url":"\/documentation\/hummingbirdcore\/httpchannelhandler","title":"HTTPChannelHandler","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","role":"symbol","title":"HTTP1Channel","type":"topic","kind":"symbol","navigatorTitle":[{"text":"HTTP1Channel","kind":"identifier"}],"abstract":[{"type":"text","text":"Child channel for processing HTTP1"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1Channel","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/http1channel"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBody":{"url":"\/documentation\/hummingbird\/hbresponsebody","role":"symbol","kind":"symbol","abstract":[{"text":"Response body","type":"text"}],"navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}],"title":"HBResponseBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPUserEventHandler":{"url":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPUserEventHandler","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPUserEventHandler","abstract":[],"title":"HBHTTPUserEventHandler","navigatorTitle":[{"kind":"identifier","text":"HBHTTPUserEventHandler"}],"type":"topic"},"https://github.com/swift-server/swift-service-lifecycle":{"url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"type":"text","text":"Swift Service Lifecycle"}],"title":"Swift Service Lifecycle","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPResponseError":{"navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponseError"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBHTTPResponseError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError","kind":"symbol","url":"\/documentation\/hummingbird\/hbhttpresponseerror","role":"symbol","abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"type":"topic","title":"HBHTTPResponseError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBURL":{"url":"\/documentation\/hummingbirdcore\/hburl","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBURL","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBURL","abstract":[{"text":"Simple URL parser","type":"text"}],"title":"HBURL","navigatorTitle":[{"text":"HBURL","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBHTTPError","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbhttperror","title":"HBHTTPError","role":"symbol","navigatorTitle":[{"text":"HBHTTPError","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponse":{"abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponse"}],"title":"HBResponse","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBResponse"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponse","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/hbresponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamedRequestBody":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBStreamedRequestBody","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HBStreamedRequestBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody","role":"symbol","url":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody","title":"HBStreamedRequestBody","abstract":[{"type":"text","text":"A type that represents an HTTP request body."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder","role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPChannelBuilder"}],"title":"HBHTTPChannelBuilder","navigatorTitle":[{"kind":"identifier","text":"HBHTTPChannelBuilder"}],"abstract":[{"type":"text","text":"Build Channel Setup that takes an HTTP responder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChildChannel":{"title":"HBChildChannel","navigatorTitle":[{"text":"HBChildChannel","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBChildChannel","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChildChannel","type":"topic","url":"\/documentation\/hummingbirdcore\/hbchildchannel","role":"symbol","abstract":[{"text":"HTTPServer child channel setup protocol","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBRequestBody"}],"type":"topic","navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","role":"symbol","url":"\/documentation\/hummingbird\/hbrequestbody","title":"HBRequestBody","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"url":"\/documentation\/hummingbirdcore\/flatdictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"title":"FlatDictionary","navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBServerConfiguration":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServerConfiguration","role":"symbol","title":"HBServerConfiguration","type":"topic","kind":"symbol","navigatorTitle":[{"text":"HBServerConfiguration","kind":"identifier"}],"abstract":[{"text":"HTTP server configuration","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBServerConfiguration","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbserverconfiguration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"url":"\/documentation\/hummingbird\/hbbindaddress","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"HBBindAddress","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","abstract":[{"type":"text","text":"Address to bind server to"}],"title":"HBBindAddress","navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"title":"HummingbirdTLS","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","url":"\/documentation\/hummingbirdtls","kind":"symbol","role":"collection","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBodyWriter":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBodyWriter","kind":"identifier"}],"role":"symbol","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyWriter","url":"\/documentation\/hummingbird\/hbresponsebodywriter","navigatorTitle":[{"text":"HBResponseBodyWriter","kind":"identifier"}],"title":"HBResponseBodyWriter","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBServer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBServer","kind":"identifier"}],"title":"HBServer","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"HTTP server class","type":"text"}],"url":"\/documentation\/hummingbirdcore\/hbserver","navigatorTitle":[{"text":"HBServer","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"url":"\/documentation\/hummingbird\/hbrequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"title":"HBRequest","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/hbparser","abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"title":"HBParser","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"}}}