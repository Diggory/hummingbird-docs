{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming ","type":"text"},{"type":"codeVoice","code":"ChannelSetup"},{"text":" which defines how the server responds. It has two functions ","type":"text"},{"type":"codeVoice","code":"initialize"},{"text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and ","type":"text"},{"type":"codeVoice","code":"handle"},{"text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let server = Server(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return Response(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]},{"inlineContent":[{"text":"Hummingbird makes use of ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"reference"},{"text":" to manage startup and shutdown. ","type":"text"},{"code":"Server","type":"codeVoice"},{"text":" conforms to the ","type":"text"},{"code":"Service","type":"codeVoice"},{"text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]}],"kind":"content"}],"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Address","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnectionChannel"],"title":"Client"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"],"title":"Miscellaneous"}],"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Framework","externalID":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}],"symbolKind":"module","role":"collection","title":"HummingbirdCore"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ClientConnectionChannel":{"abstract":[{"type":"text","text":"ClientConnection child channel setup protocol"}],"navigatorTitle":[{"text":"ClientConnectionChannel","kind":"identifier"}],"title":"ClientConnectionChannel","url":"\/documentation\/hummingbirdcore\/clientconnectionchannel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClientConnectionChannel"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnectionChannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"abstract":[{"type":"text","text":"HTTPServer child channel setup protocol"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ServerChildChannel"}],"url":"\/documentation\/hummingbirdcore\/serverchildchannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","title":"ServerChildChannel","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerChildChannel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","role":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Address":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Address","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Address","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/address","title":"Address","navigatorTitle":[{"text":"Address","kind":"identifier"}],"type":"topic","abstract":[{"text":"Address to bind server to","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","type":"topic","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","title":"HummingbirdCore","role":"collection","kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"title":"URI","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","url":"\/documentation\/hummingbirdcore\/uri","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"URI","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"URI","kind":"identifier"}],"abstract":[{"text":"Simple URL parser","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ResponseBodyWriter","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","role":"symbol","abstract":[],"title":"ResponseBodyWriter","navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"url":"\/documentation\/hummingbirdcore\/responsebodywriter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"url":"\/documentation\/hummingbirdcore\/httpchannelhandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","type":"topic","title":"HTTPChannelHandler","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPChannelHandler"}],"abstract":[{"text":"Protocol for HTTP channels","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPChannelHandler"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder":{"url":"\/documentation\/hummingbirdcore\/httpchannelbuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder","type":"topic","title":"HTTPChannelBuilder","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPChannelBuilder"}],"abstract":[{"text":"Build Channel Setup that takes an HTTP responder","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPChannelBuilder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"url":"\/documentation\/hummingbirdcore\/httpusereventhandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler","navigatorTitle":[{"text":"HTTPUserEventHandler","kind":"identifier"}],"abstract":[],"role":"symbol","type":"topic","kind":"symbol","title":"HTTPUserEventHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPUserEventHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"url":"\/documentation\/hummingbirdcore\/serverconfiguration","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerConfiguration","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","role":"symbol","type":"topic","navigatorTitle":[{"text":"ServerConfiguration","kind":"identifier"}],"abstract":[{"text":"HTTP server configuration","type":"text"}],"title":"ServerConfiguration"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"url":"\/documentation\/hummingbirdcore\/requestbody","role":"symbol","abstract":[{"text":"Request Body","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestBody"}],"type":"topic","title":"RequestBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","title":"FlatDictionary","type":"topic","url":"\/documentation\/hummingbirdcore\/flatdictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"text":" ","type":"text"},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"abstract":[{"text":"HTTP server class","type":"text"}],"navigatorTitle":[{"text":"Server","kind":"identifier"}],"title":"Server","url":"\/documentation\/hummingbirdcore\/server","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Server","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPResponseError":{"title":"HTTPResponseError","navigatorTitle":[{"text":"HTTPResponseError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPResponseError","type":"topic","url":"\/documentation\/hummingbirdcore\/httpresponseerror","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponseError","kind":"identifier"}],"abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseBody"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","title":"ResponseBody","type":"topic","url":"\/documentation\/hummingbirdcore\/responsebody","abstract":[{"type":"text","text":"Response body"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","url":"\/documentation\/hummingbirdcore\/http1channel","role":"symbol","abstract":[{"text":"Child channel for processing HTTP1","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1Channel"}],"navigatorTitle":[{"kind":"identifier","text":"HTTP1Channel"}],"title":"HTTP1Channel","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","navigatorTitle":[{"kind":"identifier","text":"Response"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"title":"Response","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPError":{"url":"\/documentation\/hummingbirdcore\/httperror","role":"symbol","abstract":[{"text":"Default HTTP error. Provides an HTTP status and a message","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HTTPError","kind":"identifier"}],"type":"topic","title":"HTTPError","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPError","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPError","kind":"identifier"}]},"https://github.com/swift-server/swift-service-lifecycle":{"url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link","title":"Swift Service Lifecycle","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"type":"text","text":"Swift Service Lifecycle"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ClientConnection":{"title":"ClientConnection","url":"\/documentation\/hummingbirdcore\/clientconnection","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientConnection","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ClientConnection","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnection","abstract":[{"text":"A generic client connection to a server.","type":"text"}]}}}