{"metadata":{"externalID":"HummingbirdCore","symbolKind":"module","modules":[{"name":"HummingbirdCore"}],"title":"HummingbirdCore","roleHeading":"Framework","role":"collection"},"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"sections":[],"kind":"symbol","hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Address","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnectionChannel"],"title":"Client"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"],"title":"Miscellaneous"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore"]}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming "},{"type":"codeVoice","code":"ChannelSetup"},{"type":"text","text":" which defines how the server responds. It has two functions "},{"type":"codeVoice","code":"initialize"},{"type":"text","text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and "},{"type":"codeVoice","code":"handle"},{"type":"text","text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body."}]},{"syntax":"swift","type":"codeListing","code":["let server = Server(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return Response(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]},{"type":"paragraph","inlineContent":[{"text":"Hummingbird makes use of ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","isActive":true},{"text":" to manage startup and shutdown. ","type":"text"},{"type":"codeVoice","code":"Server"},{"text":" conforms to the ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"title":"FlatDictionary","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","url":"\/documentation\/hummingbirdcore\/flatdictionary","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"type":"topic","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"abstract":[{"text":"HTTP server class","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Server"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","title":"Server","role":"symbol","url":"\/documentation\/hummingbirdcore\/server","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Address":{"abstract":[{"text":"Address to bind server to","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Address"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Address"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Address","title":"Address","role":"symbol","url":"\/documentation\/hummingbirdcore\/address","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPResponseError":{"type":"topic","title":"HTTPResponseError","url":"\/documentation\/hummingbirdcore\/httpresponseerror","navigatorTitle":[{"kind":"identifier","text":"HTTPResponseError"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPResponseError","kind":"symbol","abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponseError"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"abstract":[{"text":"Child channel for processing HTTP1","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTP1Channel"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTP1Channel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","title":"HTTP1Channel","role":"symbol","url":"\/documentation\/hummingbirdcore\/http1channel","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"type":"topic","navigatorTitle":[{"text":"Response","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","title":"Response","role":"symbol","url":"\/documentation\/hummingbirdcore\/response","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"kind":"symbol","url":"\/documentation\/hummingbirdcore\/uri","navigatorTitle":[{"kind":"identifier","text":"URI"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"URI"}],"abstract":[{"text":"Simple URL parser","type":"text"}],"title":"URI","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","abstract":[],"role":"symbol","url":"\/documentation\/hummingbirdcore\/responsebodywriter","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseBodyWriter"}],"title":"ResponseBodyWriter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"abstract":[{"text":"HTTP server configuration","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ServerConfiguration"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ServerConfiguration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","title":"ServerConfiguration","role":"symbol","url":"\/documentation\/hummingbirdcore\/serverconfiguration","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ClientConnectionChannel":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"ClientConnection child channel setup protocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnectionChannel","title":"ClientConnectionChannel","navigatorTitle":[{"text":"ClientConnectionChannel","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClientConnectionChannel","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/clientconnectionchannel","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPError":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPError","role":"symbol","url":"\/documentation\/hummingbirdcore\/httperror","navigatorTitle":[{"kind":"identifier","text":"HTTPError"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPError"}],"title":"HTTPError","abstract":[{"text":"Default HTTP error. Provides an HTTP status and a message","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"title":"HTTPChannelHandler","navigatorTitle":[{"kind":"identifier","text":"HTTPChannelHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","url":"\/documentation\/hummingbirdcore\/httpchannelhandler","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPChannelHandler"}],"type":"topic","abstract":[{"text":"Protocol for HTTP channels","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"type":"topic","title":"ResponseBody","navigatorTitle":[{"text":"ResponseBody","kind":"identifier"}],"abstract":[{"text":"Response body","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBody","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/responsebody","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder":{"title":"HTTPChannelBuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelBuilder","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/httpchannelbuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder","role":"symbol","navigatorTitle":[{"text":"HTTPChannelBuilder","kind":"identifier"}],"abstract":[{"text":"Build Channel Setup that takes an HTTP responder","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","kind":"symbol","type":"topic","role":"collection"},"https://github.com/swift-server/swift-service-lifecycle":{"url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","title":"Swift Service Lifecycle","titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}],"type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection","type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ClientConnection":{"title":"ClientConnection","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/clientconnection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientConnection","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnection","kind":"symbol","abstract":[{"text":"A generic client connection to a server.","type":"text"}],"navigatorTitle":[{"text":"ClientConnection","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","kind":"symbol","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"title":"HTTPUserEventHandler","navigatorTitle":[{"kind":"identifier","text":"HTTPUserEventHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler","url":"\/documentation\/hummingbirdcore\/httpusereventhandler","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPUserEventHandler","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"abstract":[{"text":"HTTPServer child channel setup protocol","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ServerChildChannel"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ServerChildChannel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","title":"ServerChildChannel","role":"symbol","url":"\/documentation\/hummingbirdcore\/serverchildchannel","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"title":"RequestBody","navigatorTitle":[{"text":"RequestBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","url":"\/documentation\/hummingbirdcore\/requestbody","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestBody","kind":"identifier"}],"type":"topic","abstract":[{"text":"Request Body","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"kind":"symbol"}}}