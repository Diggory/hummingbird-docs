{"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"sections":[],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming ","type":"text"},{"code":"HBChannelSetup","type":"codeVoice"},{"text":" which defines how the server responds. It has two functions ","type":"text"},{"code":"initialize","type":"codeVoice"},{"text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and ","type":"text"},{"code":"handle","type":"codeVoice"},{"text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body.","type":"text"}]},{"type":"codeListing","code":["let server = HBServer(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Hummingbird makes use of ","type":"text"},{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","isActive":true,"type":"reference"},{"text":" to manage startup and shutdown. ","type":"text"},{"code":"HBServer","type":"codeVoice"},{"text":" conforms to the ","type":"text"},{"code":"Service","type":"codeVoice"},{"text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal.","type":"text"}]},{"type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"module","roleHeading":"Framework","externalID":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}],"role":"collection","title":"HummingbirdCore"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPUserEventHandler"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBURL","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyWriter"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"],"title":"Miscellaneous"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder"],"title":"Structures"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBServerConfiguration":{"abstract":[{"text":"HTTP server configuration","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBServerConfiguration"}],"url":"\/documentation\/hummingbirdcore\/hbserverconfiguration","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBServerConfiguration"}],"kind":"symbol","title":"HBServerConfiguration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServerConfiguration","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"kind":"symbol","abstract":[{"type":"text","text":"Protocol for HTTP channels"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelHandler","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","role":"symbol","navigatorTitle":[{"text":"HTTPChannelHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/httpchannelhandler","title":"HTTPChannelHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponseError":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponseError","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponseerror","role":"symbol","abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"navigatorTitle":[{"text":"HBHTTPResponseError","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponseError","kind":"identifier"}],"title":"HBHTTPResponseError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser":{"type":"topic","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser","abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"title":"HBParser","url":"\/documentation\/hummingbirdcore\/hbparser","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"url":"\/documentation\/hummingbirdhttp2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","type":"topic","role":"collection","title":"HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody":{"navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","kind":"symbol","type":"topic","title":"HBResponseBody","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}],"abstract":[{"type":"text","text":"Response body"}],"url":"\/documentation\/hummingbirdcore\/hbresponsebody"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBServer":{"kind":"symbol","abstract":[{"type":"text","text":"HTTP server class"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBServer"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBServer"}],"url":"\/documentation\/hummingbirdcore\/hbserver","title":"HBServer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponse":{"navigatorTitle":[{"text":"HBResponse","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponse","kind":"symbol","type":"topic","title":"HBResponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponse","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"url":"\/documentation\/hummingbirdcore\/hbresponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPUserEventHandler":{"kind":"symbol","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPUserEventHandler","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPUserEventHandler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPUserEventHandler"}],"url":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler","title":"HBHTTPUserEventHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamedRequestBody":{"kind":"symbol","abstract":[{"type":"text","text":"A type that represents an HTTP request body."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamedRequestBody"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBStreamedRequestBody"}],"url":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody","title":"HBStreamedRequestBody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBBindAddress":{"kind":"symbol","abstract":[{"type":"text","text":"Address to bind server to"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"HBBindAddress","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","role":"symbol","navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbbindaddress","title":"HBBindAddress"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"HTTP1Channel"}],"url":"\/documentation\/hummingbirdcore\/http1channel","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1Channel"}],"kind":"symbol","title":"HTTP1Channel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"kind":"symbol","title":"FlatDictionary","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChildChannel":{"abstract":[{"text":"HTTPServer child channel setup protocol","type":"text"}],"navigatorTitle":[{"text":"HBChildChannel","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbchildchannel","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBChildChannel","kind":"identifier"}],"kind":"symbol","title":"HBChildChannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChildChannel","role":"symbol"},"https://github.com/swift-server/swift-service-lifecycle":{"titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}],"type":"link","title":"Swift Service Lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdtls","type":"topic","kind":"symbol","title":"HummingbirdTLS","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPError":{"abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}],"navigatorTitle":[{"text":"HBHTTPError","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbhttperror","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPError","kind":"identifier"}],"kind":"symbol","title":"HBHTTPError","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPError","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBURL":{"abstract":[{"type":"text","text":"Simple URL parser"}],"navigatorTitle":[{"text":"HBURL","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hburl","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBURL","kind":"identifier"}],"kind":"symbol","title":"HBURL","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBURL","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequest":{"navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest","kind":"symbol","type":"topic","title":"HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/hbrequest"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder":{"title":"HBHTTPChannelBuilder","navigatorTitle":[{"text":"HBHTTPChannelBuilder","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBHTTPChannelBuilder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder","abstract":[{"type":"text","text":"Build Channel Setup that takes an HTTP responder"}],"url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbrequestbody","navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"abstract":[],"role":"symbol","title":"HBRequestBody","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBodyWriter":{"navigatorTitle":[{"text":"HBResponseBodyWriter","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyWriter","kind":"symbol","type":"topic","title":"HBResponseBodyWriter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBodyWriter","kind":"identifier"}],"abstract":[],"url":"\/documentation\/hummingbirdcore\/hbresponsebodywriter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","kind":"symbol"}}}