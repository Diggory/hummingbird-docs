{"metadata":{"roleHeading":"Framework","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","title":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}],"symbolKind":"module","externalID":"HummingbirdCore"},"topicSections":[{"title":"Server","anchor":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections"]},{"title":"HTTP Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"],"anchor":"HTTP-Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"],"anchor":"Request","title":"Request"},{"anchor":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter"],"title":"Response"},{"title":"Miscellaneous","anchor":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]}],"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"hierarchy":{"paths":[[]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming "},{"code":"ChannelSetup","type":"codeVoice"},{"text":" which defines how the server responds. It has two functions ","type":"text"},{"type":"codeVoice","code":"initialize"},{"type":"text","text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and "},{"type":"codeVoice","code":"handle"},{"text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let server = Server(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return Response(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]},{"inlineContent":[{"text":"Hummingbird makes use of ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","isActive":true},{"text":" to manage startup and shutdown. ","type":"text"},{"code":"Server","type":"codeVoice"},{"text":" conforms to the ","type":"text"},{"code":"Service","type":"codeVoice"},{"type":"text","text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal."}],"type":"paragraph"},{"code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift","type":"codeListing"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"role":"symbol","title":"URI","navigatorTitle":[{"text":"URI","kind":"identifier"}],"abstract":[{"type":"text","text":"Simple URL parser"}],"url":"\/documentation\/hummingbirdcore\/uri","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URI"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","title":"HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server.","type":"text"}],"url":"\/documentation\/hummingbirdhttp2","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"role":"symbol","title":"ServerConfiguration","navigatorTitle":[{"text":"ServerConfiguration","kind":"identifier"}],"abstract":[{"text":"HTTP server configuration","type":"text"}],"url":"\/documentation\/hummingbirdcore\/serverconfiguration","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ServerConfiguration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration"},"https://github.com/swift-server/swift-service-lifecycle":{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","title":"Swift Service Lifecycle","type":"link","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"type":"text","text":"Swift Service Lifecycle"}]},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"role":"symbol","title":"HTTPChannelHandler","navigatorTitle":[{"kind":"identifier","text":"HTTPChannelHandler"}],"abstract":[{"text":"Protocol for HTTP channels","type":"text"}],"url":"\/documentation\/hummingbirdcore\/httpchannelhandler","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","title":"HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsDelegate":{"navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate","title":"AvailableConnectionsDelegate","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"abstract":[{"text":"Delegate for ","type":"text"},{"code":"AvailableConnectionsChannelHandler","type":"codeVoice"},{"type":"text","text":" that defines if we should accept"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"navigatorTitle":[{"kind":"identifier","text":"Server"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/server","title":"Server","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Server","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP server class"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"title":"Response","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"navigatorTitle":[{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/BindAddress":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/bindaddress","abstract":[{"text":"Address to bind server to","type":"text"}],"title":"BindAddress","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BindAddress"}],"navigatorTitle":[{"kind":"identifier","text":"BindAddress"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"title":"Request","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannelValue":{"title":"ServerChildChannelValue","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerChildChannelValue","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for typed server child channel"}],"url":"\/documentation\/hummingbirdcore\/serverchildchannelvalue","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","kind":"symbol","navigatorTitle":[{"text":"ServerChildChannelValue","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"navigatorTitle":[{"kind":"identifier","text":"HTTP1Channel"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/http1channel","title":"HTTP1Channel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTP1Channel"}],"abstract":[{"type":"text","text":"Child channel for processing HTTP1"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"navigatorTitle":[{"text":"ResponseBody","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/responsebody","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ResponseBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","kind":"symbol","title":"ResponseBody","abstract":[{"type":"text","text":"Response body"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"role":"symbol","title":"AvailableConnectionsChannelHandler","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"abstract":[{"text":"Channel Handler that controls whether we should accept new connections","type":"text"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter":{"kind":"symbol","navigatorTitle":[{"text":"ResponseWriter","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseWriter"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","role":"symbol","url":"\/documentation\/hummingbirdcore\/responsewriter","title":"ResponseWriter","abstract":[{"text":"ResponseWriter that writes directly to AsyncChannel","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"navigatorTitle":[{"kind":"identifier","text":"ServerChildChannel"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/serverchildchannel","title":"ServerChildChannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerChildChannel"}],"abstract":[{"text":"Generic server child channel setup protocol","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdtls","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}],"title":"HummingbirdTLS","type":"topic","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder":{"title":"HTTPServerBuilder","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HTTPServerBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"Build server that takes an HTTP responder"}],"url":"\/documentation\/hummingbirdcore\/httpserverbuilder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder","kind":"symbol","navigatorTitle":[{"text":"HTTPServerBuilder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"role":"symbol","title":"FlatDictionary","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"text":" ","type":"text"},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlatDictionary"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"title":"HTTPUserEventHandler","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"HTTPUserEventHandler","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/httpusereventhandler","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"HTTPUserEventHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/MaximumAvailableConnections":{"navigatorTitle":[{"text":"MaximumAvailableConnections","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/maximumavailableconnections","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MaximumAvailableConnections"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections","kind":"symbol","title":"MaximumAvailableConnections","abstract":[{"type":"text","text":"Implementation of "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","type":"reference"},{"text":" that sets a maximum limit to the number","type":"text"},{"type":"text","text":" "},{"text":"of open connections","type":"text"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"title":"RequestBody","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestBody"}],"abstract":[{"text":"Request Body","type":"text"}],"url":"\/documentation\/hummingbirdcore\/requestbody","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","kind":"symbol","navigatorTitle":[{"text":"RequestBody","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/responsebodywriter","title":"ResponseBodyWriter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP Response Body part writer"}]}}}