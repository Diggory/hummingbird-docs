{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"sections":[],"metadata":{"roleHeading":"Framework","title":"HummingbirdCore","externalID":"HummingbirdCore","role":"collection","symbolKind":"module","modules":[{"name":"HummingbirdCore"}]},"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"kind":"symbol","primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming ","type":"text"},{"code":"ChannelSetup","type":"codeVoice"},{"text":" which defines how the server responds. It has two functions ","type":"text"},{"code":"initialize","type":"codeVoice"},{"text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and ","type":"text"},{"code":"handle","type":"codeVoice"},{"text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body.","type":"text"}]},{"code":["let server = Server(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return Response(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Hummingbird makes use of ","type":"text"},{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"reference","isActive":true},{"text":" to manage startup and shutdown. ","type":"text"},{"type":"codeVoice","code":"Server"},{"text":" conforms to the ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal.","type":"text"}]},{"code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Address","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestBody"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnectionChannel"],"title":"Client"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"],"title":"Miscellaneous"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBodyWriter":{"title":"ResponseBodyWriter","navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBodyWriter"}],"url":"\/documentation\/hummingbird\/responsebodywriter","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestBody":{"kind":"symbol","abstract":[{"text":"Request Body","type":"text"}],"title":"RequestBody","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestBody","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/requestbody","navigatorTitle":[{"kind":"identifier","text":"RequestBody"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ClientConnectionChannel":{"title":"ClientConnectionChannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnectionChannel","url":"\/documentation\/hummingbirdcore\/clientconnectionchannel","navigatorTitle":[{"kind":"identifier","text":"ClientConnectionChannel"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"ClientConnection child channel setup protocol"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClientConnectionChannel"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPError":{"navigatorTitle":[{"kind":"identifier","text":"HTTPError"}],"title":"HTTPError","abstract":[{"text":"Default HTTP error. Provides an HTTP status and a message","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","type":"topic","url":"\/documentation\/hummingbird\/httperror","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPError"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","kind":"symbol","title":"HTTPChannelHandler","url":"\/documentation\/hummingbirdcore\/httpchannelhandler","navigatorTitle":[{"text":"HTTPChannelHandler","kind":"identifier"}],"type":"topic","abstract":[{"text":"Protocol for HTTP channels","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"title":"Request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"url":"\/documentation\/hummingbird\/request","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"title":"Server","navigatorTitle":[{"kind":"identifier","text":"Server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","abstract":[{"text":"HTTP server class","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Server"}],"url":"\/documentation\/hummingbirdcore\/server","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPUserEventHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler","kind":"symbol","title":"HTTPUserEventHandler","url":"\/documentation\/hummingbirdcore\/httpusereventhandler","navigatorTitle":[{"kind":"identifier","text":"HTTPUserEventHandler"}],"type":"topic","abstract":[],"role":"symbol"},"https://github.com/swift-server/swift-service-lifecycle":{"title":"Swift Service Lifecycle","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}],"url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ClientConnection":{"title":"ClientConnection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnection","abstract":[{"type":"text","text":"A generic client connection to a server."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClientConnection"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/clientconnection","navigatorTitle":[{"kind":"identifier","text":"ClientConnection"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder","kind":"symbol","title":"HTTPChannelBuilder","url":"\/documentation\/hummingbirdcore\/httpchannelbuilder","navigatorTitle":[{"text":"HTTPChannelBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"Build Channel Setup that takes an HTTP responder","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","type":"topic","title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"title":"HummingbirdHTTP2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","role":"collection","type":"topic","url":"\/documentation\/hummingbirdhttp2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"kind":"symbol","abstract":[{"text":"Simple URL parser","type":"text"}],"title":"URI","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"URI","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/uri","navigatorTitle":[{"text":"URI","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1Channel","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","kind":"symbol","title":"HTTP1Channel","url":"\/documentation\/hummingbirdcore\/http1channel","navigatorTitle":[{"text":"HTTP1Channel","kind":"identifier"}],"type":"topic","abstract":[{"text":"Child channel for processing HTTP1","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Response":{"title":"Response","navigatorTitle":[{"kind":"identifier","text":"Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"url":"\/documentation\/hummingbird\/response","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"title":"FlatDictionary","navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","abstract":[{"text":"Provides Dictionary like indexing, but uses a flat array of key","type":"text"},{"text":" ","type":"text"},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBody":{"title":"ResponseBody","navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","abstract":[{"type":"text","text":"Response body"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBody"}],"url":"\/documentation\/hummingbird\/responsebody","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponseError":{"navigatorTitle":[{"kind":"identifier","text":"HTTPResponseError"}],"title":"HTTPResponseError","abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError","type":"topic","url":"\/documentation\/hummingbird\/httpresponseerror","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponseError"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerChildChannel","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","kind":"symbol","title":"ServerChildChannel","url":"\/documentation\/hummingbirdcore\/serverchildchannel","navigatorTitle":[{"text":"ServerChildChannel","kind":"identifier"}],"type":"topic","abstract":[{"text":"HTTPServer child channel setup protocol","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Address":{"title":"Address","navigatorTitle":[{"kind":"identifier","text":"Address"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Address","abstract":[{"text":"Address to bind server to","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Address"}],"url":"\/documentation\/hummingbird\/address","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerConfiguration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","kind":"symbol","title":"ServerConfiguration","url":"\/documentation\/hummingbirdcore\/serverconfiguration","navigatorTitle":[{"kind":"identifier","text":"ServerConfiguration"}],"type":"topic","abstract":[{"type":"text","text":"HTTP server configuration"}],"role":"symbol"}}}