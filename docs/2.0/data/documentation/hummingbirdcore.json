{"hierarchy":{"paths":[[]]},"metadata":{"role":"collection","symbolKind":"module","roleHeading":"Framework","title":"HummingbirdCore","externalID":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}]},"kind":"symbol","topicSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Address","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"]},{"title":"Request","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"]},{"title":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter"]},{"title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPResponseError"]},{"title":"Client","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnectionChannel"]},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming ","type":"text"},{"code":"ChannelSetup","type":"codeVoice"},{"text":" which defines how the server responds. It has two functions ","type":"text"},{"code":"initialize","type":"codeVoice"},{"text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and ","type":"text"},{"code":"handle","type":"codeVoice"},{"text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body.","type":"text"}]},{"type":"codeListing","code":["let server = Server(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return Response(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Hummingbird makes use of "},{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","isActive":true,"type":"reference"},{"type":"text","text":" to manage startup and shutdown. "},{"code":"Server","type":"codeVoice"},{"type":"text","text":" conforms to the "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal."}]},{"type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"navigatorTitle":[{"kind":"identifier","text":"RequestBody"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","abstract":[{"text":"Request Body","type":"text"}],"type":"topic","title":"RequestBody","kind":"symbol","url":"\/documentation\/hummingbirdcore\/requestbody","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"navigatorTitle":[{"text":"HTTPUserEventHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/httpusereventhandler","title":"HTTPUserEventHandler","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPUserEventHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler","role":"symbol","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"navigatorTitle":[{"kind":"identifier","text":"HTTP1Channel"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1Channel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","abstract":[{"text":"Child channel for processing HTTP1","type":"text"}],"type":"topic","title":"HTTP1Channel","kind":"symbol","url":"\/documentation\/hummingbirdcore\/http1channel","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"type":"topic","title":"HummingbirdCore","kind":"symbol","url":"\/documentation\/hummingbirdcore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","title":"ResponseBodyWriter","url":"\/documentation\/hummingbirdcore\/responsebodywriter","role":"symbol","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Address":{"url":"\/documentation\/hummingbirdcore\/address","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Address"}],"title":"Address","navigatorTitle":[{"kind":"identifier","text":"Address"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Address","role":"symbol","kind":"symbol","abstract":[{"text":"Address to bind server to","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"url":"\/documentation\/hummingbirdcore\/server","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Server","kind":"identifier"}],"title":"Server","navigatorTitle":[{"text":"Server","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","role":"symbol","kind":"symbol","abstract":[{"text":"HTTP server class","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"navigatorTitle":[{"text":"ServerChildChannel","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerChildChannel","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","abstract":[{"text":"HTTPServer child channel setup protocol","type":"text"}],"type":"topic","title":"ServerChildChannel","kind":"symbol","url":"\/documentation\/hummingbirdcore\/serverchildchannel","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"navigatorTitle":[{"kind":"identifier","text":"URI"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"URI","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/uri","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","role":"symbol","title":"URI","abstract":[{"text":"Simple URL parser","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","abstract":[{"text":"Provides Dictionary like indexing, but uses a flat array of key","type":"text"},{"text":" ","type":"text"},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"type":"topic","title":"FlatDictionary","kind":"symbol","url":"\/documentation\/hummingbirdcore\/flatdictionary","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ClientConnectionChannel":{"navigatorTitle":[{"text":"ClientConnectionChannel","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientConnectionChannel","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/clientconnectionchannel","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnectionChannel","role":"symbol","title":"ClientConnectionChannel","abstract":[{"text":"ClientConnection child channel setup protocol","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","title":"Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ClientConnection":{"url":"\/documentation\/hummingbirdcore\/clientconnection","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"A generic client connection to a server.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientConnection","kind":"identifier"}],"title":"ClientConnection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnection","navigatorTitle":[{"text":"ClientConnection","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"navigatorTitle":[{"text":"ServerConfiguration","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerConfiguration","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/serverconfiguration","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","role":"symbol","title":"ServerConfiguration","abstract":[{"text":"HTTP server configuration","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"type":"topic","url":"\/documentation\/hummingbirdtls","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","title":"HummingbirdTLS","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"type":"topic","title":"Request","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPResponseError":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponseError"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponseError"}],"abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"url":"\/documentation\/hummingbirdcore\/httpresponseerror","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPResponseError","role":"symbol","title":"HTTPResponseError","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"title":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","navigatorTitle":[{"text":"Response","kind":"identifier"}]},"https://github.com/swift-server/swift-service-lifecycle":{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link","title":"Swift Service Lifecycle","titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPError":{"url":"\/documentation\/hummingbirdcore\/httperror","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPError"}],"title":"HTTPError","navigatorTitle":[{"kind":"identifier","text":"HTTPError"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPError","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelBuilder","kind":"identifier"}],"title":"HTTPChannelBuilder","url":"\/documentation\/hummingbirdcore\/httpchannelbuilder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder","kind":"symbol","abstract":[{"text":"Build Channel Setup that takes an HTTP responder","type":"text"}],"navigatorTitle":[{"text":"HTTPChannelBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/httpchannelhandler","title":"HTTPChannelHandler","abstract":[{"text":"Protocol for HTTP channels","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","kind":"symbol","navigatorTitle":[{"text":"HTTPChannelHandler","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"url":"\/documentation\/hummingbirdcore\/responsebody","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Response body"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBody","kind":"identifier"}],"title":"ResponseBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","navigatorTitle":[{"text":"ResponseBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"url":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","role":"collection","kind":"symbol","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}]}}}