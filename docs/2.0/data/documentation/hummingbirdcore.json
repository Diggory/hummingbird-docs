{"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPUserEventHandler"]},{"title":"Request","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBURL","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody"]},{"title":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyWriter"]},{"title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"]},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBClientChannel"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder"]}],"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"hierarchy":{"paths":[[]]},"kind":"symbol","sections":[],"metadata":{"title":"HummingbirdCore","externalID":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}],"symbolKind":"module","role":"collection","roleHeading":"Framework"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming ","type":"text"},{"code":"HBChannelSetup","type":"codeVoice"},{"text":" which defines how the server responds. It has two functions ","type":"text"},{"code":"initialize","type":"codeVoice"},{"text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and ","type":"text"},{"code":"handle","type":"codeVoice"},{"text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body.","type":"text"}],"type":"paragraph"},{"code":["let server = HBServer(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Hummingbird makes use of "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"type":"text","text":" to manage startup and shutdown. "},{"code":"HBServer","type":"codeVoice"},{"type":"text","text":" conforms to the "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal."}],"type":"paragraph"},{"code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing","syntax":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponse":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponse"}],"kind":"symbol","title":"HBResponse","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponse"}],"url":"\/documentation\/hummingbird\/hbresponse","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponse"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPResponseError":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponseError"}],"kind":"symbol","title":"HBHTTPResponseError","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponseError"}],"url":"\/documentation\/hummingbird\/hbhttpresponseerror","abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"title":"HTTPChannelHandler","url":"\/documentation\/hummingbirdcore\/httpchannelhandler","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","type":"topic","abstract":[{"type":"text","text":"Protocol for HTTP channels"}],"kind":"symbol","navigatorTitle":[{"text":"HTTPChannelHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBClient":{"type":"topic","role":"symbol","abstract":[],"title":"HBClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBClient","url":"\/documentation\/hummingbirdcore\/hbclient","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBClient","kind":"identifier"}],"navigatorTitle":[{"text":"HBClient","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser":{"title":"HBParser","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbparser","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPError","kind":"identifier"}],"title":"HBHTTPError","url":"\/documentation\/hummingbird\/hbhttperror","type":"topic","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","kind":"symbol","navigatorTitle":[{"text":"HBHTTPError","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBClientChannel":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBClientChannel","kind":"symbol","title":"HBClientChannel","abstract":[{"type":"text","text":"HBClient child channel setup protocol"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBClientChannel"}],"navigatorTitle":[{"kind":"identifier","text":"HBClientChannel"}],"url":"\/documentation\/hummingbirdcore\/hbclientchannel","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAddress":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAddress"}],"type":"topic","title":"HBAddress","navigatorTitle":[{"kind":"identifier","text":"HBAddress"}],"url":"\/documentation\/hummingbird\/hbaddress","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Address to bind server to"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAddress"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"title":"FlatDictionary","navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Provides Dictionary like indexing, but uses a flat array of key","type":"text"},{"text":" ","type":"text"},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"title":"HBRequest","url":"\/documentation\/hummingbird\/hbrequest","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"title":"HTTP1Channel","url":"\/documentation\/hummingbirdcore\/http1channel","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1Channel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","type":"topic","abstract":[{"type":"text","text":"Child channel for processing HTTP1"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTP1Channel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"type":"topic","title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBodyWriter":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseBodyWriter"}],"title":"HBResponseBodyWriter","url":"\/documentation\/hummingbird\/hbresponsebodywriter","type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyWriter","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponseBodyWriter"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBServerConfiguration":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBServerConfiguration"}],"type":"topic","title":"HBServerConfiguration","navigatorTitle":[{"kind":"identifier","text":"HBServerConfiguration"}],"url":"\/documentation\/hummingbirdcore\/hbserverconfiguration","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"HTTP server configuration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServerConfiguration"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPUserEventHandler":{"title":"HBHTTPUserEventHandler","navigatorTitle":[{"text":"HBHTTPUserEventHandler","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPUserEventHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPUserEventHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBURL":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBURL"}],"type":"topic","title":"HBURL","navigatorTitle":[{"kind":"identifier","text":"HBURL"}],"url":"\/documentation\/hummingbirdcore\/hburl","kind":"symbol","role":"symbol","abstract":[{"text":"Simple URL parser","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBURL"},"https://github.com/swift-server/swift-service-lifecycle":{"type":"link","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","title":"Swift Service Lifecycle","titleInlineContent":[{"type":"text","text":"Swift Service Lifecycle"}],"url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder":{"title":"HBHTTPChannelBuilder","url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPChannelBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder","type":"topic","abstract":[{"type":"text","text":"Build Channel Setup that takes an HTTP responder"}],"kind":"symbol","navigatorTitle":[{"text":"HBHTTPChannelBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChildChannel":{"title":"HBChildChannel","navigatorTitle":[{"text":"HBChildChannel","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"HTTPServer child channel setup protocol","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBChildChannel","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbchildchannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChildChannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBServer":{"title":"HBServer","navigatorTitle":[{"text":"HBServer","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"HTTP server class"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBServer","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbserver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServer"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"url":"\/documentation\/hummingbird\/hbrequestbody","abstract":[{"type":"text","text":"Request Body"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBRequestBody"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestBody"}],"role":"symbol","title":"HBRequestBody"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBody":{"navigatorTitle":[{"kind":"identifier","text":"HBResponseBody"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbresponsebody","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","kind":"symbol","type":"topic","title":"HBResponseBody","abstract":[{"type":"text","text":"Response body"}]}}}