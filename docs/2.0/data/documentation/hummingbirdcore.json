{"hierarchy":{"paths":[[]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"],"title":"HTTP Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"],"title":"Miscellaneous"}],"kind":"symbol","metadata":{"modules":[{"name":"HummingbirdCore"}],"symbolKind":"module","title":"HummingbirdCore","externalID":"HummingbirdCore","roleHeading":"Framework","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"sections":[],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"primaryContentSections":[{"content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming ","type":"text"},{"type":"codeVoice","code":"ChannelSetup"},{"text":" which defines how the server responds. It has two functions ","type":"text"},{"type":"codeVoice","code":"initialize"},{"text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and ","type":"text"},{"type":"codeVoice","code":"handle"},{"text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body.","type":"text"}],"type":"paragraph"},{"code":["let server = Server(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return Response(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Hummingbird makes use of ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"text":" to manage startup and shutdown. ","type":"text"},{"type":"codeVoice","code":"Server"},{"text":" conforms to the ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal.","type":"text"}],"type":"paragraph"},{"code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsDelegate":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Delegate for "},{"type":"codeVoice","code":"AvailableConnectionsChannelHandler"},{"text":" that defines if we should accept","type":"text"}],"title":"AvailableConnectionsDelegate","url":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AvailableConnectionsDelegate"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"abstract":[{"text":"HTTP Response Body part writer","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBodyWriter"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/responsebodywriter","title":"ResponseBodyWriter","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"url":"\/documentation\/hummingbirdcore\/request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/BindAddress":{"navigatorTitle":[{"kind":"identifier","text":"BindAddress"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","url":"\/documentation\/hummingbirdcore\/bindaddress","abstract":[{"text":"Address to bind server to","type":"text"}],"title":"BindAddress","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BindAddress","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"navigatorTitle":[{"text":"ResponseBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ResponseBody","kind":"identifier"}],"abstract":[{"text":"Response body","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/responsebody","role":"symbol","title":"ResponseBody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Response","kind":"identifier"}],"title":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"navigatorTitle":[{"kind":"identifier","text":"Server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Server"}],"abstract":[{"type":"text","text":"HTTP server class"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/server","role":"symbol","title":"Server"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/MaximumAvailableConnections":{"abstract":[{"type":"text","text":"Implementation of "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","isActive":true,"type":"reference"},{"type":"text","text":" that sets a maximum limit to the number"},{"text":" ","type":"text"},{"type":"text","text":"of open connections"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"MaximumAvailableConnections","kind":"identifier"}],"title":"MaximumAvailableConnections","url":"\/documentation\/hummingbirdcore\/maximumavailableconnections","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MaximumAvailableConnections","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","title":"HummingbirdCore","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder":{"abstract":[{"text":"Build server that takes an HTTP responder","type":"text"}],"navigatorTitle":[{"text":"HTTPServerBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/httpserverbuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder","kind":"symbol","title":"HTTPServerBuilder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerBuilder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannelValue":{"kind":"symbol","abstract":[{"text":"Protocol for typed server child channel","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/serverchildchannelvalue","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ServerChildChannelValue"}],"title":"ServerChildChannelValue","navigatorTitle":[{"kind":"identifier","text":"ServerChildChannelValue"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"URI","kind":"identifier"}],"title":"URI","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URI"}],"url":"\/documentation\/hummingbirdcore\/uri","abstract":[{"type":"text","text":"Simple URL parser"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"abstract":[{"text":"Generic server child channel setup protocol","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ServerChildChannel","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/serverchildchannel","title":"ServerChildChannel","role":"symbol","navigatorTitle":[{"text":"ServerChildChannel","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseWriter"}],"abstract":[{"type":"text","text":"ResponseWriter that writes directly to AsyncChannel"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseWriter"}],"title":"ResponseWriter","url":"\/documentation\/hummingbirdcore\/responsewriter","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"kind":"symbol","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"title":"AvailableConnectionsChannelHandler","navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"title":"HTTPUserEventHandler","abstract":[],"url":"\/documentation\/hummingbirdcore\/httpusereventhandler","navigatorTitle":[{"text":"HTTPUserEventHandler","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPUserEventHandler"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"abstract":[{"type":"text","text":"Child channel for processing HTTP1"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1Channel"}],"title":"HTTP1Channel","navigatorTitle":[{"kind":"identifier","text":"HTTP1Channel"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/http1channel","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"abstract":[{"text":"HTTP server configuration","type":"text"}],"navigatorTitle":[{"text":"ServerConfiguration","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/serverconfiguration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","kind":"symbol","title":"ServerConfiguration","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerConfiguration","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"abstract":[{"type":"text","text":"Request Body"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/requestbody","title":"RequestBody","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestBody"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"url":"\/documentation\/hummingbirdcore\/flatdictionary","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"role":"symbol","title":"FlatDictionary","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","abstract":[{"text":"Provides Dictionary like indexing, but uses a flat array of key","type":"text"},{"text":" ","type":"text"},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"type":"topic","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}],"images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","type":"topic","role":"collection","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server."}],"images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"abstract":[{"text":"Protocol for HTTP channels","type":"text"}],"navigatorTitle":[{"text":"HTTPChannelHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/httpchannelhandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","kind":"symbol","title":"HTTPChannelHandler","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelHandler","kind":"identifier"}],"type":"topic"},"https://github.com/swift-server/swift-service-lifecycle":{"type":"link","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"type":"text","text":"Swift Service Lifecycle"}],"url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","title":"Swift Service Lifecycle"}}}