{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"Framework","role":"collection","title":"HummingbirdCore","externalID":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}],"symbolKind":"module"},"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"],"title":"HTTP Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"],"title":"Miscellaneous"}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming "},{"type":"codeVoice","code":"ChannelSetup"},{"type":"text","text":" which defines how the server responds. It has two functions "},{"type":"codeVoice","code":"initialize"},{"type":"text","text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and "},{"type":"codeVoice","code":"handle"},{"type":"text","text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body."}],"type":"paragraph"},{"type":"codeListing","code":["let server = Server(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return Response(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Hummingbird makes use of "},{"isActive":true,"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"reference"},{"type":"text","text":" to manage startup and shutdown. "},{"code":"Server","type":"codeVoice"},{"type":"text","text":" conforms to the "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal."}],"type":"paragraph"},{"type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift"}]}],"kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter":{"title":"ResponseWriter","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ResponseWriter"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/responsewriter","abstract":[{"type":"text","text":"ResponseWriter that writes directly to AsyncChannel"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseWriter","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"text":"Request","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","title":"Request","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/flatdictionary","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"title":"FlatDictionary","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/MaximumAvailableConnections":{"role":"symbol","abstract":[{"type":"text","text":"Implementation of "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","isActive":true,"type":"reference"},{"type":"text","text":" that sets a maximum limit to the number"},{"type":"text","text":" "},{"type":"text","text":"of open connections"}],"url":"\/documentation\/hummingbirdcore\/maximumavailableconnections","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MaximumAvailableConnections"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections","navigatorTitle":[{"kind":"identifier","text":"MaximumAvailableConnections"}],"type":"topic","title":"MaximumAvailableConnections"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"title":"HTTPUserEventHandler","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPUserEventHandler"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/httpusereventhandler","abstract":[],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPUserEventHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"title":"Hummingbird","type":"topic"},"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsDelegate":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","abstract":[{"type":"text","text":"Delegate for "},{"code":"AvailableConnectionsChannelHandler","type":"codeVoice"},{"type":"text","text":" that defines if we should accept"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"title":"AvailableConnectionsDelegate","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/BindAddress":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","url":"\/documentation\/hummingbirdcore\/bindaddress","abstract":[{"type":"text","text":"Address to bind server to"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindAddress"}],"kind":"symbol","title":"BindAddress","navigatorTitle":[{"kind":"identifier","text":"BindAddress"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"navigatorTitle":[{"text":"Response","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","url":"\/documentation\/hummingbirdcore\/response","title":"Response","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"title":"RequestBody","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}],"abstract":[{"text":"Request Body","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RequestBody"}],"url":"\/documentation\/hummingbirdcore\/requestbody","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"title":"HummingbirdHTTP2","role":"collection","type":"topic","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server."}],"url":"\/documentation\/hummingbirdhttp2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol"},"https://github.com/swift-server/swift-service-lifecycle":{"titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}],"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","title":"Swift Service Lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"title":"AvailableConnectionsChannelHandler","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"title":"ServerConfiguration","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerConfiguration"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","abstract":[{"text":"HTTP server configuration","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/serverconfiguration","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ServerConfiguration"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"url":"\/documentation\/hummingbirdcore\/uri","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"URI"}],"abstract":[{"type":"text","text":"Simple URL parser"}],"role":"symbol","navigatorTitle":[{"text":"URI","kind":"identifier"}],"type":"topic","kind":"symbol","title":"URI"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1Channel","kind":"identifier"}],"abstract":[{"text":"Child channel for processing HTTP1","type":"text"}],"navigatorTitle":[{"text":"HTTP1Channel","kind":"identifier"}],"title":"HTTP1Channel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","url":"\/documentation\/hummingbirdcore\/http1channel","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"url":"\/documentation\/hummingbirdtls","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","type":"topic","abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdTLS","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ResponseBodyWriter","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/responsebodywriter","type":"topic","title":"ResponseBodyWriter","abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerChildChannel"}],"url":"\/documentation\/hummingbirdcore\/serverchildchannel","type":"topic","title":"ServerChildChannel","abstract":[{"type":"text","text":"Generic server child channel setup protocol"}],"navigatorTitle":[{"kind":"identifier","text":"ServerChildChannel"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","url":"\/documentation\/hummingbirdcore","type":"topic","title":"HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannelValue":{"role":"symbol","abstract":[{"type":"text","text":"Protocol for typed server child channel"}],"url":"\/documentation\/hummingbirdcore\/serverchildchannelvalue","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerChildChannelValue","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","navigatorTitle":[{"text":"ServerChildChannelValue","kind":"identifier"}],"type":"topic","title":"ServerChildChannelValue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPChannelHandler"}],"url":"\/documentation\/hummingbirdcore\/httpchannelhandler","type":"topic","title":"HTTPChannelHandler","abstract":[{"type":"text","text":"Protocol for HTTP channels"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPChannelHandler"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"role":"symbol","abstract":[{"type":"text","text":"HTTP server class"}],"url":"\/documentation\/hummingbirdcore\/server","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Server","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","navigatorTitle":[{"text":"Server","kind":"identifier"}],"type":"topic","title":"Server"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"title":"ResponseBody","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/responsebody","abstract":[{"type":"text","text":"Response body"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerBuilder"}],"url":"\/documentation\/hummingbirdcore\/httpserverbuilder","type":"topic","title":"HTTPServerBuilder","abstract":[{"type":"text","text":"Build server that takes an HTTP responder"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPServerBuilder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder"}}}