{"metadata":{"symbolKind":"module","modules":[{"name":"HummingbirdCore"}],"role":"collection","externalID":"HummingbirdCore","title":"HummingbirdCore","roleHeading":"Framework"},"kind":"symbol","sections":[],"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming "},{"type":"codeVoice","code":"HBChannelSetup"},{"type":"text","text":" which defines how the server responds. It has two functions "},{"type":"codeVoice","code":"initialize"},{"type":"text","text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and "},{"type":"codeVoice","code":"handle"},{"type":"text","text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body."}]},{"type":"codeListing","syntax":"swift","code":["let server = HBServer(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Hummingbird makes use of "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"type":"text","text":" to manage startup and shutdown. "},{"type":"codeVoice","code":"HBServer"},{"type":"text","text":" conforms to the "},{"type":"codeVoice","code":"Service"},{"type":"text","text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal."}]},{"type":"codeListing","syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPUserEventHandler"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBURL","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyWriter"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"],"title":"Miscellaneous"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder"],"title":"Structures"}],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"type":"topic","url":"\/documentation\/hummingbirdcore\/hbrequestbody","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","title":"HBRequestBody","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponseError":{"kind":"symbol","role":"symbol","title":"HBHTTPResponseError","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponseError","kind":"identifier"}],"abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}],"navigatorTitle":[{"text":"HBHTTPResponseError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponseError","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponseerror"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequest":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequest"}],"url":"\/documentation\/hummingbirdcore\/hbrequest","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"title":"HBRequest","navigatorTitle":[{"kind":"identifier","text":"HBRequest"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPUserEventHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPUserEventHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPUserEventHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler","abstract":[],"title":"HBHTTPUserEventHandler","navigatorTitle":[{"text":"HBHTTPUserEventHandler","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPChannelBuilder"}],"url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder","abstract":[{"type":"text","text":"Build Channel Setup that takes an HTTP responder"}],"title":"HBHTTPChannelBuilder","navigatorTitle":[{"kind":"identifier","text":"HBHTTPChannelBuilder"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBodyWriter":{"url":"\/documentation\/hummingbirdcore\/hbresponsebodywriter","kind":"symbol","navigatorTitle":[{"text":"HBResponseBodyWriter","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBodyWriter","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyWriter","title":"HBResponseBodyWriter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"title":"FlatDictionary","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPChannelHandler"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPChannelHandler"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/httpchannelhandler","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","role":"symbol","title":"HTTPChannelHandler","abstract":[{"text":"Protocol for HTTP channels","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","type":"topic","title":"HummingbirdTLS","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdtls"},"https://github.com/swift-server/swift-service-lifecycle":{"titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}],"title":"Swift Service Lifecycle","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","type":"topic","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponse":{"navigatorTitle":[{"text":"HBResponse","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbresponse","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBResponse","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponse","kind":"symbol","type":"topic","title":"HBResponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBServerConfiguration":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServerConfiguration","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBServerConfiguration","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbserverconfiguration","abstract":[{"type":"text","text":"HTTP server configuration"}],"title":"HBServerConfiguration","navigatorTitle":[{"text":"HBServerConfiguration","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBBindAddress":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBindAddress","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbbindaddress","abstract":[{"type":"text","text":"Address to bind server to"}],"title":"HBBindAddress","navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPError":{"url":"\/documentation\/hummingbirdcore\/hbhttperror","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPError"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPError","title":"HBHTTPError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseBody"}],"role":"symbol","abstract":[{"type":"text","text":"Response body"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/hbresponsebody","navigatorTitle":[{"kind":"identifier","text":"HBResponseBody"}],"title":"HBResponseBody","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"url":"\/documentation\/hummingbirdcore\/http1channel","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1Channel","kind":"identifier"}],"navigatorTitle":[{"text":"HTTP1Channel","kind":"identifier"}],"kind":"symbol","role":"symbol","type":"topic","title":"HTTP1Channel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","kind":"symbol","title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","type":"topic","role":"collection","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChildChannel":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBChildChannel"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBChildChannel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChildChannel","abstract":[{"text":"HTTPServer child channel setup protocol","type":"text"}],"role":"symbol","title":"HBChildChannel","type":"topic","url":"\/documentation\/hummingbirdcore\/hbchildchannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBURL":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBURL","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBURL"}],"url":"\/documentation\/hummingbirdcore\/hburl","abstract":[{"type":"text","text":"Simple URL parser"}],"title":"HBURL","navigatorTitle":[{"kind":"identifier","text":"HBURL"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamedRequestBody":{"type":"topic","url":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody","title":"HBStreamedRequestBody","abstract":[{"text":"A type that represents an HTTP request body.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamedRequestBody","kind":"identifier"}],"navigatorTitle":[{"text":"HBStreamedRequestBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","type":"topic","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"url":"\/documentation\/hummingbirdcore\/hbparser","abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"title":"HBParser","navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBServer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBServer","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbserver","abstract":[{"type":"text","text":"HTTP server class"}],"title":"HBServer","navigatorTitle":[{"text":"HBServer","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol"}}}