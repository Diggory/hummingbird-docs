{"sections":[],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"metadata":{"modules":[{"name":"HummingbirdCore"}],"role":"collection","title":"HummingbirdCore","externalID":"HummingbirdCore","symbolKind":"module","roleHeading":"Framework"},"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming ","type":"text"},{"type":"codeVoice","code":"HBChannelSetup"},{"text":" which defines how the server responds. It has two functions ","type":"text"},{"type":"codeVoice","code":"initialize"},{"text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and ","type":"text"},{"type":"codeVoice","code":"handle"},{"text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body.","type":"text"}]},{"code":["let server = HBServer(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Hummingbird makes use of "},{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"reference","isActive":true},{"type":"text","text":" to manage startup and shutdown. "},{"type":"codeVoice","code":"HBServer"},{"type":"text","text":" conforms to the "},{"type":"codeVoice","code":"Service"},{"type":"text","text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal."}]},{"code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPUserEventHandler"],"title":"Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBURL","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody"],"title":"Request"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyWriter"],"title":"Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"],"title":"Miscellaneous"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder"],"title":"Structures"}],"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"hierarchy":{"paths":[[]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"url":"\/documentation\/hummingbirdcore","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponse":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponse","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"url":"\/documentation\/hummingbirdcore\/hbresponse","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponse","navigatorTitle":[{"text":"HBResponse","kind":"identifier"}],"type":"topic","title":"HBResponse","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBServer":{"title":"HBServer","abstract":[{"type":"text","text":"HTTP server class"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBServer"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServer","type":"topic","url":"\/documentation\/hummingbirdcore\/hbserver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBServer"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequest":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"title":"HBRequest","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/hbrequest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamedRequestBody":{"url":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody","role":"symbol","abstract":[{"type":"text","text":"A type that represents an HTTP request body."}],"title":"HBStreamedRequestBody","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBStreamedRequestBody"}],"navigatorTitle":[{"text":"HBStreamedRequestBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"url":"\/documentation\/hummingbirdtls","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","kind":"symbol","title":"HummingbirdTLS","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChildChannel":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbchildchannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChildChannel","kind":"symbol","navigatorTitle":[{"text":"HBChildChannel","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBChildChannel","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTPServer child channel setup protocol"}],"type":"topic","title":"HBChildChannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"title":"HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdhttp2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder","type":"topic","title":"HBHTTPChannelBuilder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBHTTPChannelBuilder"}],"abstract":[{"type":"text","text":"Build Channel Setup that takes an HTTP responder"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPChannelBuilder"}],"url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser","title":"HBParser","url":"\/documentation\/hummingbirdcore\/hbparser","navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"kind":"symbol","abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponseError":{"abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponseerror","role":"symbol","title":"HBHTTPResponseError","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponseError","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponseError"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponseError"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBodyWriter":{"abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/hbresponsebodywriter","role":"symbol","title":"HBResponseBodyWriter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyWriter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBodyWriter","kind":"identifier"}],"navigatorTitle":[{"text":"HBResponseBodyWriter","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBBindAddress":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBBindAddress"}],"url":"\/documentation\/hummingbirdcore\/hbbindaddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBindAddress"}],"title":"HBBindAddress","abstract":[{"type":"text","text":"Address to bind server to"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBBindAddress"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBServerConfiguration":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBServerConfiguration","url":"\/documentation\/hummingbirdcore\/hbserverconfiguration","title":"HBServerConfiguration","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBServerConfiguration","kind":"identifier"}],"abstract":[{"text":"HTTP server configuration","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBServerConfiguration","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"url":"\/documentation\/hummingbirdcore\/flatdictionary","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"type":"topic","title":"FlatDictionary","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdcore\/httpchannelhandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","abstract":[{"text":"Protocol for HTTP channels","type":"text"}],"role":"symbol","title":"HTTPChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelHandler","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPChannelHandler"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1Channel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTP1Channel"}],"type":"topic","title":"HTTP1Channel","abstract":[{"type":"text","text":"Child channel for processing HTTP1"}],"url":"\/documentation\/hummingbirdcore\/http1channel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","title":"HBRequestBody","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}],"abstract":[],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbrequestbody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPError":{"abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttperror","role":"symbol","title":"HBHTTPError","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPError","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPError","kind":"identifier"}],"navigatorTitle":[{"text":"HBHTTPError","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBURL":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBURL","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBURL","title":"HBURL","url":"\/documentation\/hummingbirdcore\/hburl","navigatorTitle":[{"text":"HBURL","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Simple URL parser"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPUserEventHandler":{"title":"HBHTTPUserEventHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPUserEventHandler","role":"symbol","abstract":[],"url":"\/documentation\/hummingbirdcore\/hbhttpusereventhandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPUserEventHandler"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPUserEventHandler"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}],"abstract":[{"type":"text","text":"Response body"}],"url":"\/documentation\/hummingbirdcore\/hbresponsebody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}],"type":"topic","title":"HBResponseBody","kind":"symbol"},"https://github.com/swift-server/swift-service-lifecycle":{"title":"Swift Service Lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}],"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link"}}}