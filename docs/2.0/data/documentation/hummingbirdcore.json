{"hierarchy":{"paths":[[]]},"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"sections":[],"metadata":{"title":"HummingbirdCore","role":"collection","modules":[{"name":"HummingbirdCore"}],"roleHeading":"Framework","externalID":"HummingbirdCore","symbolKind":"module"},"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming "},{"type":"codeVoice","code":"ChannelSetup"},{"type":"text","text":" which defines how the server responds. It has two functions "},{"type":"codeVoice","code":"initialize"},{"type":"text","text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and "},{"type":"codeVoice","code":"handle"},{"type":"text","text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body."}]},{"syntax":"swift","code":["let server = Server(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return Response(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Hummingbird makes use of ","type":"text"},{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","isActive":true,"type":"reference"},{"text":" to manage startup and shutdown. ","type":"text"},{"type":"codeVoice","code":"Server"},{"text":" conforms to the ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal.","type":"text"}]},{"syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing"}],"kind":"content"}],"topicSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Address","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"]},{"title":"Request","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestBody"]},{"title":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnectionChannel"],"title":"Client"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"],"title":"Miscellaneous"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBodyWriter":{"url":"\/documentation\/hummingbird\/responsebodywriter","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}],"title":"ResponseBodyWriter","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","navigatorTitle":[{"text":"ServerConfiguration","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/serverconfiguration","title":"ServerConfiguration","kind":"symbol","abstract":[{"text":"HTTP server configuration","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerConfiguration","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ClientConnectionChannel":{"role":"symbol","abstract":[{"type":"text","text":"ClientConnection child channel setup protocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnectionChannel","type":"topic","title":"ClientConnectionChannel","kind":"symbol","url":"\/documentation\/hummingbirdcore\/clientconnectionchannel","navigatorTitle":[{"kind":"identifier","text":"ClientConnectionChannel"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClientConnectionChannel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","type":"topic","url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Address":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Address","navigatorTitle":[{"text":"Address","kind":"identifier"}],"url":"\/documentation\/hummingbird\/address","title":"Address","kind":"symbol","abstract":[{"text":"Address to bind server to","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Address","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelBuilder","navigatorTitle":[{"text":"HTTPChannelBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/httpchannelbuilder","title":"HTTPChannelBuilder","kind":"symbol","abstract":[{"text":"Build Channel Setup that takes an HTTP responder","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPChannelBuilder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","title":"FlatDictionary","type":"topic","url":"\/documentation\/hummingbirdcore\/flatdictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","navigatorTitle":[{"text":"ServerChildChannel","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/serverchildchannel","title":"ServerChildChannel","kind":"symbol","abstract":[{"text":"HTTPServer child channel setup protocol","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerChildChannel","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBody":{"role":"symbol","url":"\/documentation\/hummingbird\/responsebody","navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","type":"topic","title":"ResponseBody","abstract":[{"type":"text","text":"Response body"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","kind":"symbol","title":"HummingbirdHTTP2","role":"collection","type":"topic","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"url":"\/documentation\/hummingbirdhttp2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ClientConnection":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ClientConnection","role":"symbol","abstract":[{"type":"text","text":"A generic client connection to a server."}],"navigatorTitle":[{"text":"ClientConnection","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ClientConnection","kind":"identifier"}],"kind":"symbol","title":"ClientConnection","url":"\/documentation\/hummingbirdcore\/clientconnection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponseError":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPResponseError"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPResponseError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError","url":"\/documentation\/hummingbird\/httpresponseerror","kind":"symbol","title":"HTTPResponseError","abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPError":{"role":"symbol","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPError"}],"title":"HTTPError","navigatorTitle":[{"kind":"identifier","text":"HTTPError"}],"type":"topic","url":"\/documentation\/hummingbird\/httperror","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler","navigatorTitle":[{"text":"HTTPUserEventHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/httpusereventhandler","title":"HTTPUserEventHandler","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPUserEventHandler","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/uri","navigatorTitle":[{"text":"URI","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URI","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","type":"topic","title":"URI","abstract":[{"text":"Simple URL parser","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","title":"HTTPChannelHandler","type":"topic","url":"\/documentation\/hummingbirdcore\/httpchannelhandler","abstract":[{"type":"text","text":"Protocol for HTTP channels"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPChannelHandler"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPChannelHandler"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection","url":"\/documentation\/hummingbirdtls","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"kind":"symbol","type":"topic","title":"HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Response":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"type":"topic","title":"Response","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"url":"\/documentation\/hummingbird\/response","navigatorTitle":[{"kind":"identifier","text":"Response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","navigatorTitle":[{"text":"Server","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/server","title":"Server","kind":"symbol","abstract":[{"text":"HTTP server class","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Server","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","title":"Request","type":"topic","url":"\/documentation\/hummingbird\/request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestBody":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestBody","url":"\/documentation\/hummingbird\/requestbody","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Request Body"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestBody","kind":"identifier"}],"title":"RequestBody","navigatorTitle":[{"kind":"identifier","text":"RequestBody"}]},"https://github.com/swift-server/swift-service-lifecycle":{"title":"Swift Service Lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","titleInlineContent":[{"text":"Swift Service Lifecycle","type":"text"}],"type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","navigatorTitle":[{"text":"HTTP1Channel","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/http1channel","title":"HTTP1Channel","kind":"symbol","abstract":[{"text":"Child channel for processing HTTP1","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1Channel","kind":"identifier"}],"type":"topic"}}}