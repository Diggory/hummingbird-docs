{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections"]},{"title":"HTTP Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler"]},{"title":"Request","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestBody"]},{"title":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter"]},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Framework","modules":[{"name":"HummingbirdCore"}],"externalID":"HummingbirdCore","symbolKind":"module","role":"collection","title":"HummingbirdCore"},"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based server. The server is setup with a type conforming ","type":"text"},{"code":"ChannelSetup","type":"codeVoice"},{"text":" which defines how the server responds. It has two functions ","type":"text"},{"code":"initialize","type":"codeVoice"},{"text":" defines how to setup a server channel ie should it be HTTP1, should it include TLS etc and ","type":"text"},{"code":"handle","type":"codeVoice"},{"text":" defines how we should respond to individual messages. For example the following is an HTTP1 server that always returns a response containing the word “Hello” in the body.","type":"text"}]},{"type":"codeListing","code":["let server = Server(","    childChannelSetup: HTTP1Channel { _, context in","        let responseBody = channel.allocator.buffer(string: \"Hello\")","        return Response(status: .ok, body: .init(byteBuffer: responseBody))","    },","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Hummingbird makes use of ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"reference"},{"text":" to manage startup and shutdown. ","type":"text"},{"code":"Server","type":"codeVoice"},{"text":" conforms to the ","type":"text"},{"code":"Service","type":"codeVoice"},{"text":" protocol required by Swift Service Lifecycle. The following will start the above server and ensure it shuts down gracefully on a shutdown signal.","type":"text"}]},{"type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift"}],"kind":"content"}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/URI":{"type":"topic","abstract":[{"type":"text","text":"Simple URL parser"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/URI","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URI"}],"navigatorTitle":[{"kind":"identifier","text":"URI"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/uri","role":"symbol","title":"URI"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"role":"symbol","type":"topic","title":"FlatDictionary","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/flatdictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BindAddress":{"title":"BindAddress","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindAddress","kind":"identifier"}],"url":"\/documentation\/hummingbird\/bindaddress","kind":"symbol","abstract":[{"text":"Address to bind server to","type":"text"}],"navigatorTitle":[{"text":"BindAddress","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BindAddress"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"url":"\/documentation\/hummingbird\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic","title":"Request","kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"navigatorTitle":[{"text":"Request","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBodyWriter":{"url":"\/documentation\/hummingbird\/responsebodywriter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBodyWriter"}],"type":"topic","title":"ResponseBodyWriter","kind":"symbol","abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBuilder":{"url":"\/documentation\/hummingbirdcore\/httpserverbuilder","type":"topic","title":"HTTPServerBuilder","navigatorTitle":[{"kind":"identifier","text":"HTTPServerBuilder"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerBuilder"}],"abstract":[{"text":"Build server that takes an HTTP responder","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"abstract":[{"type":"text","text":"HTTP server configuration"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerConfiguration","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","title":"ServerConfiguration","navigatorTitle":[{"text":"ServerConfiguration","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/serverconfiguration","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannelValue":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ServerChildChannelValue"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerChildChannelValue"}],"title":"ServerChildChannelValue","abstract":[{"text":"Protocol for typed server child channel","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/serverchildchannelvalue","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"kind":"symbol","navigatorTitle":[{"text":"HTTP1Channel","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTP1Channel"}],"title":"HTTP1Channel","abstract":[{"type":"text","text":"Child channel for processing HTTP1"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/http1channel","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}],"role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","url":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Response":{"url":"\/documentation\/hummingbird\/response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"type":"topic","title":"Response","navigatorTitle":[{"text":"Response","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBody":{"navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"kind":"symbol","url":"\/documentation\/hummingbird\/responsebody","title":"ResponseBody","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Response body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBody","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBody"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPUserEventHandler":{"url":"\/documentation\/hummingbirdcore\/httpusereventhandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPUserEventHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPUserEventHandler","kind":"identifier"}],"type":"topic","title":"HTTPUserEventHandler","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"HTTPUserEventHandler","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"kind":"symbol","title":"ServerChildChannel","url":"\/documentation\/hummingbirdcore\/serverchildchannel","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","navigatorTitle":[{"kind":"identifier","text":"ServerChildChannel"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServerChildChannel"}],"abstract":[{"type":"text","text":"Generic server child channel setup protocol"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird","role":"collection","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPChannelHandler":{"url":"\/documentation\/hummingbirdcore\/httpchannelhandler","type":"topic","title":"HTTPChannelHandler","navigatorTitle":[{"kind":"identifier","text":"HTTPChannelHandler"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPChannelHandler"}],"abstract":[{"text":"Protocol for HTTP channels","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPChannelHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"kind":"symbol","navigatorTitle":[{"text":"Server","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Server","kind":"identifier"}],"title":"Server","abstract":[{"type":"text","text":"HTTP server class"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/server","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestBody":{"navigatorTitle":[{"kind":"identifier","text":"RequestBody"}],"abstract":[{"type":"text","text":"Request Body"}],"kind":"symbol","url":"\/documentation\/hummingbird\/requestbody","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}],"type":"topic","title":"RequestBody","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestBody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsDelegate":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"title":"AvailableConnectionsDelegate","abstract":[{"type":"text","text":"Delegate for "},{"type":"codeVoice","code":"AvailableConnectionsChannelHandler"},{"text":" that defines if we should accept","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","url":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter":{"abstract":[{"type":"text","text":"ResponseWriter that writes directly to AsyncChannel"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ResponseWriter","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","title":"ResponseWriter","url":"\/documentation\/hummingbirdcore\/responsewriter","navigatorTitle":[{"text":"ResponseWriter","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"role":"symbol","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","title":"AvailableConnectionsChannelHandler","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler"},"https://github.com/swift-server/swift-service-lifecycle":{"titleInlineContent":[{"type":"text","text":"Swift Service Lifecycle"}],"title":"Swift Service Lifecycle","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/MaximumAvailableConnections":{"navigatorTitle":[{"kind":"identifier","text":"MaximumAvailableConnections"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MaximumAvailableConnections"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections","url":"\/documentation\/hummingbirdcore\/maximumavailableconnections","abstract":[{"type":"text","text":"Implementation of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","isActive":true},{"type":"text","text":" that sets a maximum limit to the number"},{"type":"text","text":" "},{"type":"text","text":"of open connections"}],"role":"symbol","title":"MaximumAvailableConnections","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","title":"HummingbirdCore","kind":"symbol","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection"}}}