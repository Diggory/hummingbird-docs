{"hierarchy":{"paths":[[]]},"topicSections":[{"anchor":"Testing","title":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdwstesting"]}],"sections":[],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Integrates with the Hummingbird test framework ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","isActive":true},{"type":"text","text":"."}]},{"type":"codeListing","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"WebSocket testing requires a live server so it only works with the "},{"type":"codeVoice","code":".live"},{"type":"text","text":" and "},{"code":".ahc","type":"codeVoice"},{"text":" test frameworks.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting"},"kind":"symbol","metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"symbolKind":"module","roleHeading":"Framework","modules":[{"name":"HummingbirdWSTesting"}],"externalID":"HummingbirdWSTesting","title":"HummingbirdWSTesting","role":"collection"},"references":{"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"kind":"symbol","type":"topic","role":"collection","title":"WSClient","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/wsclient"},"logo.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","kind":"symbol","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"kind":"symbol","type":"topic","role":"collection","title":"HummingbirdWebSocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdwebsocket"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"title":"HummingbirdTesting","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","role":"collection","kind":"symbol","url":"\/documentation\/hummingbirdtesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"title":"ws(_:configuration:logger:handler:)","role":"symbol","abstract":[{"text":"Test WebSocket endpoint","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ws"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8WSClient28WebSocketClientConfigurationV","text":"WebSocketClientConfiguration"},{"kind":"text","text":", "},{"text":"logger","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6WSCore20WebSocketDataHandlera","text":"WebSocketDataHandler","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"WebSocketClient","kind":"typeIdentifier","preciseIdentifier":"s:8WSClient15WebSocketClientV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8WSClient15WebSocketClientV7ContextV","kind":"typeIdentifier","text":"Context"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"WebSocketCloseFrame","kind":"typeIdentifier","preciseIdentifier":"s:6WSCore19WebSocketCloseFrameV"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"title":"HummingbirdWSTesting","abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"url":"\/documentation\/hummingbirdwstesting","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]}}}