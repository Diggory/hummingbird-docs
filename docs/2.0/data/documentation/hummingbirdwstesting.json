{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdwstesting"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"],"anchor":"Testing"}],"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"title":"Related Documentation","anchor":"Related-Documentation"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Integrates with the Hummingbird test framework "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"WebSocket testing requires a live server so it only works with the ","type":"text"},{"type":"codeVoice","code":".live"},{"text":" and ","type":"text"},{"code":".ahc","type":"codeVoice"},{"text":" test frameworks.","type":"text"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting"},"metadata":{"role":"collection","symbolKind":"module","externalID":"HummingbirdWSTesting","modules":[{"name":"HummingbirdWSTesting"}],"title":"HummingbirdWSTesting","images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"Framework"},"references":{"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","title":"WSClient","url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"kind":"symbol","abstract":[{"type":"text","text":"Test WebSocket endpoint"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ws"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8WSClient28WebSocketClientConfigurationV","text":"WebSocketClientConfiguration"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"WebSocketDataHandler","preciseIdentifier":"s:6WSCore20WebSocketDataHandlera"},{"text":"<","kind":"text"},{"text":"WebSocketClient","kind":"typeIdentifier","preciseIdentifier":"s:8WSClient15WebSocketClientV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8WSClient15WebSocketClientV7ContextV","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6WSCore19WebSocketCloseFrameV","text":"WebSocketCloseFrame"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","title":"ws(_:configuration:logger:handler:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","kind":"symbol","title":"HummingbirdWSTesting","type":"topic","url":"\/documentation\/hummingbirdwstesting","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Testing framework for WebSockets"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"title":"HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","type":"topic","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","title":"HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","kind":"symbol"}}}