{"variants":[{"paths":["\/documentation\/hummingbirdwstesting"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"role":"collection","symbolKind":"module","images":[{"identifier":"logo.png","type":"icon"}],"modules":[{"name":"HummingbirdWSTesting"}],"title":"HummingbirdWSTesting","roleHeading":"Framework","externalID":"HummingbirdWSTesting"},"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient"],"anchor":"Related-Documentation"}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Integrates with the Hummingbird test framework ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},{"type":"text","text":"."}]},{"type":"codeListing","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"WebSocket testing requires a live server so it only works with the ","type":"text"},{"type":"codeVoice","code":".live"},{"text":" and ","type":"text"},{"code":".ahc","type":"codeVoice"},{"type":"text","text":" test frameworks."}]}]}],"hierarchy":{"paths":[[]]},"topicSections":[{"anchor":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"],"title":"Testing"}],"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"type":"topic","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"url":"\/documentation\/hummingbirdwebsocket","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"url":"\/documentation\/hummingbirdtesting","type":"topic","title":"HummingbirdTesting","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSClient":{"type":"topic","abstract":[{"text":"Adds support for connecting to WebSocket.","type":"text"}],"url":"\/documentation\/hummingbirdwsclient","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdWSClient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","title":"ws(_:configuration:logger:handler:)","abstract":[{"type":"text","text":"Test WebSocket endpoint"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"ws","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"configuration","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:19HummingbirdWSClient28WebSocketClientConfigurationV","text":"WebSocketClientConfiguration","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WebSocketDataHandler","preciseIdentifier":"s:17HummingbirdWSCore20WebSocketDataHandlera"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV","text":"WebSocketClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV7ContextV","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"WebSocketCloseFrame","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdWSCore19WebSocketCloseFrameV"},{"kind":"text","text":"?"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","role":"symbol","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"url":"\/documentation\/hummingbirdwstesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdWSTesting","abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"type":"topic","role":"collection","kind":"symbol"},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]}}}