{"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"],"title":"Testing"}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrates with the Hummingbird test framework "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},{"type":"text","text":"."}]},{"code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"WebSocket testing requires a live server so it only works with the "},{"code":".live","type":"codeVoice"},{"type":"text","text":" and "},{"code":".ahc","type":"codeVoice"},{"type":"text","text":" test frameworks."}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","interfaceLanguage":"swift"},"hierarchy":{"paths":[[]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"variants":[{"paths":["\/documentation\/hummingbirdwstesting"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"module","externalID":"HummingbirdWSTesting","images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Framework","title":"HummingbirdWSTesting","modules":[{"name":"HummingbirdWSTesting"}],"role":"collection"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient"],"title":"Related Documentation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","role":"collection","title":"Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/hummingbirdwstesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"title":"HummingbirdWSTesting","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"type":"topic","role":"collection","kind":"symbol","title":"HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ws","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebSocketClientConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:19HummingbirdWSClient28WebSocketClientConfigurationV"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebSocketDataHandler","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdWSCore20WebSocketDataHandlera"},{"text":"<","kind":"text"},{"text":"WebSocketClient","kind":"typeIdentifier","preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV7ContextV"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"WebSocketCloseFrame","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdWSCore19WebSocketCloseFrameV"},{"text":"?","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","abstract":[{"type":"text","text":"Test WebSocket endpoint"}],"title":"ws(_:configuration:logger:handler:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSClient":{"title":"HummingbirdWSClient","type":"topic","role":"collection","abstract":[{"type":"text","text":"Adds support for connecting to WebSocket."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdwsclient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"url":"\/documentation\/hummingbirdtesting","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","title":"HummingbirdTesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"kind":"symbol"},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}]}}}