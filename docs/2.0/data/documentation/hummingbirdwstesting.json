{"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"variants":[{"paths":["\/documentation\/hummingbirdwstesting"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Integrates with the Hummingbird test framework "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"WebSocket testing requires a live server so it only works with the "},{"code":".live","type":"codeVoice"},{"type":"text","text":" and "},{"code":".ahc","type":"codeVoice"},{"type":"text","text":" test frameworks."}]}],"kind":"content"}],"sections":[],"kind":"symbol","metadata":{"title":"HummingbirdWSTesting","modules":[{"name":"HummingbirdWSTesting"}],"externalID":"HummingbirdWSTesting","roleHeading":"Framework","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"symbolKind":"module"},"topicSections":[{"title":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"url":"\/documentation\/hummingbirdtesting","type":"topic","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdTesting","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"kind":"symbol","role":"collection","title":"HummingbirdWebSocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdwebsocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdwstesting","title":"HummingbirdWSTesting","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"abstract":[{"type":"text","text":"Test WebSocket endpoint"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ws"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:19HummingbirdWSClient28WebSocketClientConfigurationV","text":"WebSocketClientConfiguration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdWSCore20WebSocketDataHandlera","kind":"typeIdentifier","text":"WebSocketDataHandler"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV","kind":"typeIdentifier","text":"WebSocketClient"},{"kind":"text","text":"."},{"preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV7ContextV","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdWSCore19WebSocketCloseFrameV","kind":"typeIdentifier","text":"WebSocketCloseFrame"},{"kind":"text","text":"?"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","role":"symbol","title":"ws(_:configuration:logger:handler:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSClient":{"kind":"symbol","role":"collection","title":"HummingbirdWSClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdwsclient","abstract":[{"type":"text","text":"Adds support for connecting to WebSocket."}]},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}]}}}