{"hierarchy":{"paths":[[]]},"sections":[],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient"]}],"metadata":{"externalID":"HummingbirdWSTesting","symbolKind":"module","modules":[{"name":"HummingbirdWSTesting"}],"roleHeading":"Framework","title":"HummingbirdWSTesting","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Integrates with the Hummingbird test framework "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"WebSocket testing requires a live server so it only works with the "},{"type":"codeVoice","code":".live"},{"type":"text","text":" and "},{"code":".ahc","type":"codeVoice"},{"type":"text","text":" test frameworks."}]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","interfaceLanguage":"swift"},"topicSections":[{"anchor":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"],"title":"Testing"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/hummingbirdwstesting"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"type":"topic","title":"HummingbirdTesting","role":"collection","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"url":"\/documentation\/hummingbirdtesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ws"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"WebSocketClientConfiguration","preciseIdentifier":"s:19HummingbirdWSClient28WebSocketClientConfigurationV"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebSocketDataHandler","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdWSCore20WebSocketDataHandlera"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"WebSocketClient","preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV"},{"kind":"text","text":"."},{"preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV7ContextV","text":"Context","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdWSCore19WebSocketCloseFrameV","text":"WebSocketCloseFrame","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","abstract":[{"type":"text","text":"Test WebSocket endpoint"}],"type":"topic","kind":"symbol","title":"ws(_:configuration:logger:handler:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"role":"collection","abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdWSTesting","url":"\/documentation\/hummingbirdwstesting","kind":"symbol"},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSClient":{"type":"topic","title":"HummingbirdWSClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient","url":"\/documentation\/hummingbirdwsclient","kind":"symbol","abstract":[{"text":"Adds support for connecting to WebSocket.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"role":"collection","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","kind":"symbol","title":"HummingbirdWebSocket","images":[{"identifier":"logo.png","type":"icon"}]}}}