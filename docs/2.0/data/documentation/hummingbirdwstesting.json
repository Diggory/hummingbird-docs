{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"title":"Related Documentation","anchor":"Related-Documentation"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"inlineContent":[{"text":"Integrates with the Hummingbird test framework ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"WebSocket testing requires a live server so it only works with the "},{"type":"codeVoice","code":".live"},{"text":" and ","type":"text"},{"type":"codeVoice","code":".ahc"},{"type":"text","text":" test frameworks."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdwstesting"]}],"sections":[],"metadata":{"role":"collection","roleHeading":"Framework","symbolKind":"module","externalID":"HummingbirdWSTesting","modules":[{"name":"HummingbirdWSTesting"}],"title":"HummingbirdWSTesting","images":[{"identifier":"logo.png","type":"icon"}]},"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"title":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"],"anchor":"Testing"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","title":"HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","role":"collection","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"kind":"symbol","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"WSClient","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"kind":"symbol","url":"\/documentation\/wsclient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","title":"HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","role":"collection","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"kind":"symbol","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"title":"HummingbirdWSTesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","url":"\/documentation\/hummingbirdwstesting","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","type":"topic","abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"ws","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebSocketClientConfiguration","preciseIdentifier":"s:8WSClient28WebSocketClientConfigurationV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": "},{"text":"WebSocketDataHandler","preciseIdentifier":"s:6WSCore20WebSocketDataHandlera","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:8WSClient15WebSocketClientV","text":"WebSocketClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:8WSClient15WebSocketClientV7ContextV"},{"kind":"text","text":">) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6WSCore19WebSocketCloseFrameV","text":"WebSocketCloseFrame"},{"text":"?","kind":"text"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","abstract":[{"text":"Test WebSocket endpoint","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","title":"ws(_:configuration:logger:handler:)"},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]}}}