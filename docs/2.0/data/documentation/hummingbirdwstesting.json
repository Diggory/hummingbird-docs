{"sections":[],"metadata":{"modules":[{"name":"HummingbirdWSTesting"}],"title":"HummingbirdWSTesting","symbolKind":"module","role":"collection","externalID":"HummingbirdWSTesting","images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"Framework"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Integrates with the Hummingbird test framework ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},{"type":"text","text":"."}]},{"syntax":"swift","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"WebSocket testing requires a live server so it only works with the "},{"type":"codeVoice","code":".live"},{"text":" and ","type":"text"},{"type":"codeVoice","code":".ahc"},{"type":"text","text":" test frameworks."}],"type":"paragraph"}]}],"hierarchy":{"paths":[[]]},"kind":"symbol","topicSections":[{"anchor":"Testing","title":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdwstesting"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"anchor":"Related-Documentation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"kind":"symbol","type":"topic","role":"collection","abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdWSTesting","url":"\/documentation\/hummingbirdwstesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"title":"WSClient","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"url":"\/documentation\/wsclient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"abstract":[{"text":"Test WebSocket endpoint","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","role":"symbol","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"ws","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"text":": ","kind":"text"},{"text":"WebSocketClientConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:8WSClient28WebSocketClientConfigurationV"},{"kind":"text","text":", "},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6WSCore20WebSocketDataHandlera","text":"WebSocketDataHandler"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:8WSClient15WebSocketClientV","text":"WebSocketClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:8WSClient15WebSocketClientV7ContextV"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"WebSocketCloseFrame","preciseIdentifier":"s:6WSCore19WebSocketCloseFrameV","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"ws(_:configuration:logger:handler:)","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"title":"HummingbirdWebSocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","type":"topic","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","type":"topic","role":"collection","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","kind":"symbol"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"type":"image","identifier":"logo.png"}}}