{"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/hummingbirdwstesting"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"],"title":"Testing"}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient"],"title":"Related Documentation"}],"metadata":{"symbolKind":"module","roleHeading":"Framework","modules":[{"name":"HummingbirdWSTesting"}],"role":"collection","title":"HummingbirdWSTesting","externalID":"HummingbirdWSTesting"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Integrates with the Hummingbird test framework ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"syntax":"swift","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"WebSocket testing requires a live server so it only works with the "},{"code":".live","type":"codeVoice"},{"type":"text","text":" and "},{"code":".ahc","type":"codeVoice"},{"type":"text","text":" test frameworks."}],"type":"paragraph"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","title":"HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","kind":"symbol","title":"ws(_:configuration:logger:handler:)","role":"symbol","abstract":[{"text":"Test WebSocket endpoint","type":"text"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"text":"WebSocketClientConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:19HummingbirdWSClient28WebSocketClientConfigurationV"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebSocketDataHandler","preciseIdentifier":"s:17HummingbirdWSCore20WebSocketDataHandlera","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"WebSocketClient","preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV7ContextV","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"WebSocketCloseFrame","preciseIdentifier":"s:17HummingbirdWSCore19WebSocketCloseFrameV"},{"kind":"text","text":"?"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSClient":{"abstract":[{"text":"Adds support for connecting to WebSocket.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","title":"HummingbirdWSClient","url":"\/documentation\/hummingbirdwsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"title":"HummingbirdTesting","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdtesting","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdwstesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","type":"topic","kind":"symbol","title":"HummingbirdWSTesting"}}}