{"sections":[],"topicSections":[{"title":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient"]}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Integrates with the Hummingbird test framework ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},{"text":".","type":"text"}]},{"type":"codeListing","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"WebSocket testing requires a live server so it only works with the ","type":"text"},{"code":".live","type":"codeVoice"},{"text":" and ","type":"text"},{"code":".ahc","type":"codeVoice"},{"text":" test frameworks.","type":"text"}]}],"kind":"content"}],"metadata":{"externalID":"HummingbirdWSTesting","title":"HummingbirdWSTesting","roleHeading":"Framework","symbolKind":"module","images":[{"identifier":"logo.png","type":"icon"}],"modules":[{"name":"HummingbirdWSTesting"}],"role":"collection"},"hierarchy":{"paths":[[]]},"abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdwstesting"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","type":"topic","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","type":"topic","title":"Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"logo.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"url":"\/documentation\/hummingbirdtesting","type":"topic","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"title":"HummingbirdTesting","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"title":"HummingbirdWSTesting","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"role":"collection","type":"topic","url":"\/documentation\/hummingbirdwstesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSClient":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdWSClient","url":"\/documentation\/hummingbirdwsclient","type":"topic","abstract":[{"text":"Adds support for connecting to WebSocket.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ws","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:19HummingbirdWSClient28WebSocketClientConfigurationV","text":"WebSocketClientConfiguration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdWSCore20WebSocketDataHandlera","text":"WebSocketDataHandler","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV","text":"WebSocketClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV7ContextV","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdWSCore19WebSocketCloseFrameV","text":"WebSocketCloseFrame"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","abstract":[{"type":"text","text":"Test WebSocket endpoint"}],"type":"topic","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","kind":"symbol","role":"symbol","title":"ws(_:configuration:logger:handler:)"}}}