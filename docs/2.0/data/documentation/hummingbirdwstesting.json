{"hierarchy":{"paths":[[]]},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"module","externalID":"HummingbirdWSTesting","modules":[{"name":"HummingbirdWSTesting"}],"role":"collection","title":"HummingbirdWSTesting","roleHeading":"Framework"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"text":"Integrates with the Hummingbird test framework ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"]},{"inlineContent":[{"text":"WebSocket testing requires a live server so it only works with the ","type":"text"},{"code":".live","type":"codeVoice"},{"text":" and ","type":"text"},{"code":".ahc","type":"codeVoice"},{"text":" test frameworks.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient"],"title":"Related Documentation"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdwstesting"]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"],"title":"Testing"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"type":"topic","role":"symbol","title":"ws(_:configuration:logger:handler:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","abstract":[{"type":"text","text":"Test WebSocket endpoint"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ws","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:19HummingbirdWSClient28WebSocketClientConfigurationV","kind":"typeIdentifier","text":"WebSocketClientConfiguration"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"WebSocketDataHandler","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdWSCore20WebSocketDataHandlera"},{"text":"<","kind":"text"},{"text":"WebSocketClient","kind":"typeIdentifier","preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:19HummingbirdWSClient15WebSocketClientV7ContextV"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"WebSocketCloseFrame","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdWSCore19WebSocketCloseFrameV"},{"text":"?","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"title":"HummingbirdTesting","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdtesting"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"url":"\/documentation\/hummingbirdwebsocket","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","title":"HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"title":"HummingbirdWSTesting","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdwstesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSClient":{"url":"\/documentation\/hummingbirdwsclient","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Adds support for connecting to WebSocket.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient","title":"HummingbirdWSClient"}}}