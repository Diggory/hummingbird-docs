{"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbirdwstesting"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"],"title":"Testing","anchor":"Testing"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Integrates with the Hummingbird test framework ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},{"type":"text","text":"."}]},{"code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"WebSocket testing requires a live server so it only works with the ","type":"text"},{"code":".live","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":".ahc"},{"type":"text","text":" test frameworks."}],"type":"paragraph"}]}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","interfaceLanguage":"swift"},"metadata":{"role":"collection","symbolKind":"module","title":"HummingbirdWSTesting","externalID":"HummingbirdWSTesting","images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Framework","modules":[{"name":"HummingbirdWSTesting"}]},"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"title":"Related Documentation","anchor":"Related-Documentation"}],"abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"title":"HummingbirdWebSocket","type":"topic","url":"\/documentation\/hummingbirdwebsocket","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}]},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"title":"WSClient","type":"topic","url":"\/documentation\/wsclient","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"role":"collection","url":"\/documentation\/hummingbirdtesting","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","kind":"symbol","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"url":"\/documentation\/hummingbirdwstesting","title":"HummingbirdWSTesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"type":"topic","url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ws","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"WebSocketClientConfiguration","preciseIdentifier":"s:8WSClient28WebSocketClientConfigurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"handler"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6WSCore20WebSocketDataHandlera","text":"WebSocketDataHandler"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:8WSClient15WebSocketClientV","kind":"typeIdentifier","text":"WebSocketClient"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:8WSClient15WebSocketClientV7ContextV"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"WebSocketCloseFrame","preciseIdentifier":"s:6WSCore19WebSocketCloseFrameV"},{"kind":"text","text":"?"}],"title":"ws(_:configuration:logger:handler:)","abstract":[{"type":"text","text":"Test WebSocket endpoint"}]}}}