{"abstract":[{"text":"Testing framework for WebSockets","type":"text"}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Integrates with the Hummingbird test framework ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","isActive":true},{"type":"text","text":"."}]},{"type":"codeListing","code":["let router = Router(context: BasicWebSocketRequestContext.self)","router.ws(\"\/ws\") { _, outbound, _ in","    try await outbound.write(.text(\"Hello\"))","}","let application = Application(","    router: router,","    server: .http1WebSocketUpgrade(webSocketRouter: router)",")","_ = try await application.test(.live) { client in","    try await client.ws(\"\/ws\") { inbound, _, _ in","        var inboundIterator = inbound.messages(maxSize: .max).makeAsyncIterator()","        let msg = try await inboundIterator.next()","        XCTAssertEqual(msg, .text(\"Hello\"))","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"WebSocket testing requires a live server so it only works with the ","type":"text"},{"type":"codeVoice","code":".live"},{"type":"text","text":" and "},{"type":"codeVoice","code":".ahc"},{"text":" test frameworks.","type":"text"}]}],"kind":"content"}],"topicSections":[{"anchor":"Testing","title":"Testing","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)"]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdwstesting"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"modules":[{"name":"HummingbirdWSTesting"}],"roleHeading":"Framework","symbolKind":"module","externalID":"HummingbirdWSTesting","title":"HummingbirdWSTesting"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"anchor":"Related-Documentation","title":"Related Documentation"}],"hierarchy":{"paths":[[]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol/ws(_:configuration:logger:handler:)":{"url":"\/documentation\/hummingbirdtesting\/testclientprotocol\/ws(_:configuration:logger:handler:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ws"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"text":": ","kind":"text"},{"text":"WebSocketClientConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:8WSClient28WebSocketClientConfigurationV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"logger"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6WSCore20WebSocketDataHandlera","text":"WebSocketDataHandler","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"WebSocketClient","preciseIdentifier":"s:8WSClient15WebSocketClientV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8WSClient15WebSocketClientV7ContextV","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:6WSCore19WebSocketCloseFrameV","text":"WebSocketCloseFrame","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"ws(_:configuration:logger:handler:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol\/ws(_:configuration:logger:handler:)","abstract":[{"type":"text","text":"Test WebSocket endpoint"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"title":"HummingbirdTesting","kind":"symbol","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"url":"\/documentation\/hummingbirdtesting","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"url":"\/documentation\/hummingbirdwebsocket","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdWebSocket","role":"collection","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/wsclient","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","role":"collection","type":"topic","title":"WSClient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSTesting":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSTesting","title":"HummingbirdWSTesting","type":"topic","role":"collection","url":"\/documentation\/hummingbirdwstesting","abstract":[{"type":"text","text":"Testing framework for WebSockets"}],"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}]}}}