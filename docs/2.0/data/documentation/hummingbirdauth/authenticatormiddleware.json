{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"RouterMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","preciseIdentifier":"s:11Hummingbird16RouterMiddlewareP","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AuthRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"Requires an "},{"code":"authenticate","type":"codeVoice"},{"type":"text","text":" function that returns authentication data when successful."},{"type":"text","text":" "},{"type":"text","text":"If it is unsuccessful then nil should be returned so middleware further down the"},{"type":"text","text":" "},{"type":"text","text":"middleware chain can do authentication. If you donâ€™t want any further middleware to"},{"type":"text","text":" "},{"type":"text","text":"run then throw an error."}],"type":"paragraph"},{"inlineContent":[{"text":"To use an authenticator middleware it is required that your request context conform to","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext"},{"text":" so the middleware can attach authentication data to","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/auth"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A simple username, password authenticator could be implemented as follows. If the"},{"type":"text","text":" "},{"type":"text","text":"authenticator is successful it returns a "},{"type":"codeVoice","code":"User"},{"type":"text","text":" struct, otherwise it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["struct BasicAuthenticator: AuthenticatorMiddleware {","    func authenticate<Context: AuthRequestContext>(request: Request, context: Context) async throws -> User? {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.headers.basic","        guard let basic = request.headers.basic else { return nil }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        let user = try await database.getUserWithUsername(basic.username)","        \/\/ did we find a user","        guard let user = user else { return nil }","        \/\/ verify password against password hash stored in database. If valid","        \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","        \/\/ This should be run on the thread pool as it is a long process.","        return try await context.threadPool.runIfActive {","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","    }","}"],"syntax":"swift","type":"codeListing"}]}],"abstract":[{"text":"Protocol for a middleware that checks if a request is authenticated.","type":"text"}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware"],"type":"inheritedBy","kind":"relationships","title":"Inherited By"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"],"title":"Authenticators"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"},"metadata":{"modules":[{"name":"HummingbirdAuth"}],"role":"symbol","symbolKind":"protocol","navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}],"externalID":"s:15HummingbirdAuth23AuthenticatorMiddlewareP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"roleHeading":"Protocol","title":"AuthenticatorMiddleware"},"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Value"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)-9d1lq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/handle(_:context:next:)"],"title":"Instance Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/authenticatormiddleware"]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext/auth":{"url":"\/documentation\/hummingbirdauth\/authrequestcontext\/auth","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"auth","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdAuth10LoginCacheV","kind":"typeIdentifier","text":"LoginCache"}],"abstract":[{"type":"text","text":"Login cache"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/auth","kind":"symbol","required":true,"title":"auth","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"title":"AuthRequestContext","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/authrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"navigatorTitle":[{"text":"Response","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","url":"\/documentation\/hummingbirdcore\/response","title":"Response","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"title":"MiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddleware":{"role":"collectionGroup","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware","title":"Authenticator Middleware","kind":"article","abstract":[{"text":"Request authentication middleware","type":"text"}],"url":"\/documentation\/hummingbird\/authenticatormiddleware"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdBasicAuth/BasicAuthenticator":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"BasicAuthenticator","kind":"identifier"}],"kind":"symbol","title":"BasicAuthenticator","abstract":[{"type":"text","text":"Basic password authenticator"}],"url":"\/documentation\/hummingbirdbasicauth\/basicauthenticator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicAuthenticator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionAuthenticator":{"title":"SessionAuthenticator","role":"symbol","type":"topic","abstract":[{"text":"Session authenticator","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SessionAuthenticator","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/sessionauthenticator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","navigatorTitle":[{"text":"SessionAuthenticator","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","abstract":[{"text":"Version of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"reference"},{"text":" whose Input is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":" and output is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/routermiddleware","role":"symbol","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"title":"RouterMiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"title":"HummingbirdAuth","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdauth","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/handle(_:context:next:)":{"abstract":[{"text":"Calls ","type":"text"},{"type":"codeVoice","code":"authenticate"},{"text":" and if it returns a valid authenticatable object ","type":"text"},{"type":"codeVoice","code":"login"},{"text":" with this object","type":"text"}],"url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/handle(_:context:next:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/handle(_:context:next:)","title":"handle(_:context:next:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/authenticate(request:context:)-9d1lq":{"kind":"symbol","title":"authenticate(request:context:)","defaultImplementations":1,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"authenticate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth23AuthenticatorMiddlewareP5ValueQa","text":"Value"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)-9d1lq","abstract":[{"type":"text","text":"Called by middleware to see if request can authenticate."}],"role":"symbol","required":true,"url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)-9d1lq"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"role":"symbol","abstract":[{"text":"Middleware returning 401 for unauthenticated requests","type":"text"}],"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","type":"topic","title":"IsAuthenticatedMiddleware","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionMiddleware":{"title":"SessionMiddleware","type":"topic","navigatorTitle":[{"text":"SessionMiddleware","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/sessionmiddleware","abstract":[{"text":"Session authenticator","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionMiddleware","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"title":"AuthenticatorMiddleware","navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware","abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"type":"topic","role":"symbol"},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/Value":{"title":"Value","type":"topic","required":true,"kind":"symbol","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/value","abstract":[{"text":"type to be authenticated","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Authenticatable","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth15AuthenticatableP"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Value","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","title":"Context","abstract":[],"url":"\/documentation\/hummingbird\/middlewareprotocol\/context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"text":"Request","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","title":"Request","type":"topic"}}}