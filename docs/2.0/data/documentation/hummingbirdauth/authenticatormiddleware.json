{"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdauth\/authenticatormiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Authenticators","generated":true,"anchor":"Authenticators","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"]}],"metadata":{"symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"modules":[{"name":"HummingbirdAuth"}],"navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}],"externalID":"s:15HummingbirdAuth23AuthenticatorMiddlewareP","roleHeading":"Protocol","title":"AuthenticatorMiddleware","role":"symbol"},"abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AuthenticatorMiddleware"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird16RouterMiddlewareP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","text":"RouterMiddleware"},{"text":" ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","text":"Context"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","kind":"typeIdentifier","text":"AuthRequestContext"}]}]},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires an "},{"type":"codeVoice","code":"authenticate"},{"type":"text","text":" function that returns authentication data when successful."},{"type":"text","text":" "},{"text":"If it is unsuccessful then nil should be returned so middleware further down the","type":"text"},{"text":" ","type":"text"},{"text":"middleware chain can do authentication. If you donâ€™t want any further middleware to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"run then throw an error."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use an authenticator middleware it is required that your request context conform to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext"},{"type":"text","text":" so the middleware can attach authentication data to"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/identity-swift.property","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"A simple username, password authenticator could be implemented as follows. If the","type":"text"},{"type":"text","text":" "},{"text":"authenticator is successful it returns a ","type":"text"},{"code":"User","type":"codeVoice"},{"type":"text","text":" struct, otherwise it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"code":["struct BasicAuthenticator<Context: AuthRequestContext>: AuthenticatorMiddleware {","    func authenticate(request: Request, context: Context) async throws -> User? {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.headers.basic","        guard let basic = request.headers.basic else { return nil }","        \/\/ check if user exists in the database","        guard let user = try await database.getUserWithUsername(basic.username) else {","            return nil","        }","        \/\/ verify password against password hash stored in database. If valid","        \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","        \/\/ This should be run on the thread pool as it is a long process.","        return try await context.threadPool.runIfActive {","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","    }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"topicSections":[{"anchor":"Associated-Types","title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Identity"],"generated":true},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)"],"anchor":"Instance-Methods","title":"Instance Methods"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"]]},"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"},{"type":"conformingTypes","title":"Conforming Types","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/Identity":{"type":"topic","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/identity","required":true,"kind":"symbol","title":"Identity","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Identity","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Identity"}],"role":"symbol","abstract":[{"text":"Type to be authenticated","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionAuthenticator":{"url":"\/documentation\/hummingbirdauth\/sessionauthenticator","role":"symbol","navigatorTitle":[{"text":"SessionAuthenticator","kind":"identifier"}],"abstract":[{"type":"text","text":"Session authenticator"}],"title":"SessionAuthenticator","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionAuthenticator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/ClosureAuthenticator":{"title":"ClosureAuthenticator","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ClosureAuthenticator","kind":"identifier"}],"navigatorTitle":[{"text":"ClosureAuthenticator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ClosureAuthenticator","url":"\/documentation\/hummingbirdauth\/closureauthenticator","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Authenticator that uses a closure to return authentication state"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"title":"MiddlewareProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic","url":"\/documentation\/hummingbird\/middlewareprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","role":"symbol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"kind":"symbol"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthRequestContext"}],"navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"role":"symbol","type":"topic","title":"AuthRequestContext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","url":"\/documentation\/hummingbirdauth\/authrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AuthenticatorMiddleware"}],"url":"\/documentation\/hummingbirdauth\/authenticatormiddleware","navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","role":"symbol","title":"AuthenticatorMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/authenticate(request:context:)":{"title":"authenticate(request:context:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)","kind":"symbol","type":"topic","required":true,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"authenticate","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Identity","preciseIdentifier":"s:15HummingbirdAuth23AuthenticatorMiddlewareP8IdentityQa","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Called by middleware to see if request can authenticate."}],"url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"abstract":[{"text":"Middleware returning 401 for unauthenticated requests","type":"text"}],"title":"IsAuthenticatedMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"title":"RouterMiddleware","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/routermiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"abstract":[{"type":"text","text":"Version of "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"reference"},{"type":"text","text":" whose Input is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"type":"text","text":"."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"url":"\/documentation\/hummingbird\/middlewareprotocol\/context","role":"symbol","abstract":[],"title":"Context","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","required":true,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"title":"Response","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Response"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext/identity-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"identity","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP8IdentityQa","text":"Identity","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/hummingbirdauth\/authrequestcontext\/identity-swift.property","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/identity-swift.property","kind":"symbol","abstract":[{"type":"text","text":"The authenticated identity"}],"title":"identity","role":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdBasicAuth/BasicAuthenticator":{"url":"\/documentation\/hummingbirdbasicauth\/basicauthenticator","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicAuthenticator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","navigatorTitle":[{"kind":"identifier","text":"BasicAuthenticator"}],"title":"BasicAuthenticator","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Basic password authenticator"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdauth","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"Hummingbird Documentation","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article"}}}