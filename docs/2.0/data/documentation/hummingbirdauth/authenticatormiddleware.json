{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthenticatorMiddleware"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","kind":"typeIdentifier","text":"RouterMiddleware","preciseIdentifier":"s:11Hummingbird16RouterMiddlewareP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","kind":"typeIdentifier","text":"AuthRequestContext","preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP"}]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires an "},{"type":"codeVoice","code":"authenticate"},{"type":"text","text":" function that returns authentication data when successful."},{"type":"text","text":" "},{"type":"text","text":"If it is unsuccessful then nil should be returned so middleware further down the"},{"type":"text","text":" "},{"type":"text","text":"middleware chain can do authentication. If you donâ€™t want any further middleware to"},{"type":"text","text":" "},{"type":"text","text":"run then throw an error."}]},{"type":"paragraph","inlineContent":[{"text":"To use an authenticator middleware it is required that your request context conform to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","type":"reference"},{"text":" so the middleware can attach authentication data to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/auth","type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A simple username, password authenticator could be implemented as follows. If the"},{"type":"text","text":" "},{"type":"text","text":"authenticator is successful it returns a "},{"code":"User","type":"codeVoice"},{"type":"text","text":" struct, otherwise it returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"codeListing","code":["struct BasicAuthenticator: AuthenticatorMiddleware {","    func authenticate<Context: AuthRequestContext>(request: Request, context: Context) async throws -> User? {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.headers.basic","        guard let basic = request.headers.basic else { return nil }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        let user = try await database.getUserWithUsername(basic.username)","        \/\/ did we find a user","        guard let user = user else { return nil }","        \/\/ verify password against password hash stored in database. If valid","        \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","        \/\/ This should be run on the thread pool as it is a long process.","        return try await context.threadPool.runIfActive {","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","    }","}"],"syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/authenticatormiddleware"]}],"sections":[],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]},{"title":"Inherited By","type":"inheritedBy","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware"]},{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"},"metadata":{"title":"AuthenticatorMiddleware","externalID":"s:15HummingbirdAuth23AuthenticatorMiddlewareP","roleHeading":"Protocol","modules":[{"name":"HummingbirdAuth"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AuthenticatorMiddleware"}],"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthenticatorMiddleware"}]},"abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware"]]},"seeAlsoSections":[{"title":"Authenticators","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/Authenticatable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"]}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)-9d1lq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/handle(_:context:next:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","url":"\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"role":"symbol","navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","title":"IsAuthenticatedMiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","abstract":[{"text":"Middleware returning 401 for unauthenticated requests","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionAuthenticator":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","title":"SessionAuthenticator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SessionAuthenticator"}],"navigatorTitle":[{"kind":"identifier","text":"SessionAuthenticator"}],"role":"symbol","abstract":[{"text":"Session authenticator","type":"text"}],"url":"\/documentation\/hummingbirdauth\/sessionauthenticator","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"title":"Context","abstract":[],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"kind":"symbol","type":"topic","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","url":"\/documentation\/hummingbird\/middlewareprotocol\/context","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","title":"AuthRequestContext","navigatorTitle":[{"text":"AuthRequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthRequestContext","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Protocol that all request contexts should conform to if they want to support","type":"text"},{"text":" ","type":"text"},{"text":"authentication middleware","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/authrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddleware":{"role":"collectionGroup","abstract":[{"type":"text","text":"Request authentication middleware"}],"type":"topic","title":"Authenticator Middleware","kind":"article","url":"\/documentation\/hummingbird\/authenticatormiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"abstract":[{"text":"Protocol for a middleware that checks if a request is authenticated.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","title":"AuthenticatorMiddleware","kind":"symbol","navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/authenticatormiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/handle(_:context:next:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/handle(_:context:next:)","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/handle(_:context:next:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"}],"title":"handle(_:context:next:)","abstract":[{"type":"text","text":"Calls "},{"type":"codeVoice","code":"authenticate"},{"type":"text","text":" and if it returns a valid authenticatable object "},{"type":"codeVoice","code":"login"},{"type":"text","text":" with this object"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/Value":{"url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/value","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Authenticatable","preciseIdentifier":"s:15HummingbirdAuth15AuthenticatableP","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"type to be authenticated"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Value","title":"Value","required":true,"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/authenticate(request:context:)-9d1lq":{"url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)-9d1lq","title":"authenticate(request:context:)","defaultImplementations":1,"abstract":[{"type":"text","text":"Called by middleware to see if request can authenticate."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)-9d1lq","required":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"authenticate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth23AuthenticatorMiddlewareP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext/auth":{"abstract":[{"type":"text","text":"Login cache"}],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/auth","url":"\/documentation\/hummingbirdauth\/authrequestcontext\/auth","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"auth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth10LoginCacheV","text":"LoginCache"}],"title":"auth","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","url":"\/documentation\/hummingbirdauth\/sessionmiddleware","abstract":[{"type":"text","text":"Session authenticator"}],"role":"symbol","deprecated":true,"navigatorTitle":[{"kind":"identifier","text":"SessionMiddleware"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionMiddleware","kind":"identifier"}],"kind":"symbol","title":"SessionMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Response":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"kind":"symbol","title":"Response","navigatorTitle":[{"kind":"identifier","text":"Response"}],"type":"topic","url":"\/documentation\/hummingbird\/response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"kind":"symbol","title":"MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMiddleware"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/routermiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","abstract":[{"text":"Version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"text":" whose Input is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","isActive":true},{"text":" and output is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","isActive":true},{"text":".","type":"text"}],"role":"symbol","title":"RouterMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"type":"topic","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"title":"Request","url":"\/documentation\/hummingbird\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/Authenticatable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/Authenticatable","url":"\/documentation\/hummingbirdauth\/authenticatable","abstract":[{"type":"text","text":"Protocol for objects that can be returned by an "},{"code":"AuthenticatorMiddleware","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Authenticatable"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Authenticatable"}],"kind":"symbol","title":"Authenticatable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"kind":"symbol","title":"HummingbirdAuth","type":"topic","url":"\/documentation\/hummingbirdauth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdBasicAuth/BasicAuthenticator":{"title":"BasicAuthenticator","url":"\/documentation\/hummingbirdbasicauth\/basicauthenticator","kind":"symbol","abstract":[{"text":"Basic password authenticator","type":"text"}],"navigatorTitle":[{"text":"BasicAuthenticator","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicAuthenticator","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"}}}