{"abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware"]]},"relationshipsSections":[{"title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom"},{"title":"Inherited By","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware"],"type":"inheritedBy"},{"title":"Conforming Types","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator"],"type":"conformingTypes"}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)-9d1lq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/handle(_:context:next:)"]}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"RouterMiddleware","preciseIdentifier":"s:11Hummingbird16RouterMiddlewareP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"AuthRequestContext","preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"text":"Requires an ","type":"text"},{"type":"codeVoice","code":"authenticate"},{"text":" function that returns authentication data when successful.","type":"text"},{"text":" ","type":"text"},{"text":"If it is unsuccessful then nil should be returned so middleware further down the","type":"text"},{"text":" ","type":"text"},{"text":"middleware chain can do authentication. If you donâ€™t want any further middleware to","type":"text"},{"text":" ","type":"text"},{"text":"run then throw an error.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To use an authenticator middleware it is required that your request context conform to"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","type":"reference"},{"type":"text","text":" so the middleware can attach authentication data to"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/auth","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"A simple username, password authenticator could be implemented as follows. If the","type":"text"},{"text":" ","type":"text"},{"text":"authenticator is successful it returns a ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" struct, otherwise it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct BasicAuthenticator: AuthenticatorMiddleware {","    func authenticate<Context: AuthRequestContext>(request: Request, context: Context) async throws -> User? {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.headers.basic","        guard let basic = request.headers.basic else { return nil }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        let user = try await database.getUserWithUsername(basic.username)","        \/\/ did we find a user","        guard let user = user else { return nil }","        \/\/ verify password against password hash stored in database. If valid","        \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","        \/\/ This should be run on the thread pool as it is a long process.","        return try await context.threadPool.runIfActive {","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","    }","}"]}]}],"seeAlsoSections":[{"title":"Authenticators","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/Authenticatable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"],"generated":true}],"variants":[{"paths":["\/documentation\/hummingbirdauth\/authenticatormiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"AuthenticatorMiddleware","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"modules":[{"name":"HummingbirdAuth"}],"navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}],"symbolKind":"protocol","externalID":"s:15HummingbirdAuth23AuthenticatorMiddlewareP","roleHeading":"Protocol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext/auth":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"auth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdAuth10LoginCacheV","kind":"typeIdentifier","text":"LoginCache"}],"url":"\/documentation\/hummingbirdauth\/authrequestcontext\/auth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/auth","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Login cache"}],"role":"symbol","title":"auth","required":true},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","role":"collection","url":"\/documentation\/index","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdBasicAuth/BasicAuthenticator":{"abstract":[{"type":"text","text":"Basic password authenticator"}],"role":"symbol","url":"\/documentation\/hummingbirdbasicauth\/basicauthenticator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicAuthenticator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdBasicAuth\/BasicAuthenticator","title":"BasicAuthenticator","navigatorTitle":[{"kind":"identifier","text":"BasicAuthenticator"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"type":"topic","title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/Value":{"abstract":[{"type":"text","text":"type to be authenticated"}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth15AuthenticatableP","text":"Authenticatable"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Value","title":"Value","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/value","kind":"symbol","role":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddleware":{"abstract":[{"type":"text","text":"Request authentication middleware"}],"kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware","url":"\/documentation\/hummingbird\/authenticatormiddleware","title":"Authenticator Middleware","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"title":"AuthenticatorMiddleware","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AuthenticatorMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"AuthenticatorMiddleware"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","abstract":[{"text":"Protocol for a middleware that checks if a request is authenticated.","type":"text"}],"url":"\/documentation\/hummingbirdauth\/authenticatormiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic","title":"MiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionMiddleware":{"abstract":[{"type":"text","text":"Session authenticator"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/sessionmiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionMiddleware","kind":"identifier"}],"deprecated":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionMiddleware","title":"SessionMiddleware","navigatorTitle":[{"text":"SessionMiddleware","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionAuthenticator":{"abstract":[{"text":"Session authenticator","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SessionAuthenticator"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionAuthenticator","navigatorTitle":[{"kind":"identifier","text":"SessionAuthenticator"}],"title":"SessionAuthenticator","url":"\/documentation\/hummingbirdauth\/sessionauthenticator","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","url":"\/documentation\/hummingbirdauth","title":"HummingbirdAuth","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"abstract":[{"type":"text","text":"Version of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","url":"\/documentation\/hummingbird\/routermiddleware","title":"RouterMiddleware","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"abstract":[{"type":"text","text":"Middleware returning 401 for unauthenticated requests"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","title":"IsAuthenticatedMiddleware","navigatorTitle":[{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/Authenticatable":{"title":"Authenticatable","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Authenticatable"}],"navigatorTitle":[{"kind":"identifier","text":"Authenticatable"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/Authenticatable","abstract":[{"type":"text","text":"Protocol for objects that can be returned by an "},{"type":"codeVoice","code":"AuthenticatorMiddleware"},{"type":"text","text":"."}],"url":"\/documentation\/hummingbirdauth\/authenticatable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/authenticate(request:context:)-9d1lq":{"abstract":[{"text":"Called by middleware to see if request can authenticate.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"authenticate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth23AuthenticatorMiddlewareP5ValueQa","text":"Value"},{"kind":"text","text":"?"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)-9d1lq","title":"authenticate(request:context:)","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)-9d1lq","kind":"symbol","role":"symbol","defaultImplementations":1,"required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"type":"topic","title":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","abstract":[],"required":true,"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol\/context"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/handle(_:context:next:)":{"abstract":[{"text":"Calls ","type":"text"},{"code":"authenticate","type":"codeVoice"},{"type":"text","text":" and if it returns a valid authenticatable object "},{"code":"login","type":"codeVoice"},{"type":"text","text":" with this object"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/handle(_:context:next:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/handle(_:context:next:)","title":"handle(_:context:next:)","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"type":"topic","title":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/response"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/authrequestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AuthRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","title":"AuthRequestContext","navigatorTitle":[{"kind":"identifier","text":"AuthRequestContext"}],"type":"topic","kind":"symbol"}}}