{"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbauthenticator"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Authenticators"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Authenticators"]]},"metadata":{"title":"HBAuthenticator","modules":[{"name":"HummingbirdAuth"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"}],"roleHeading":"Protocol","symbolKind":"protocol","navigatorTitle":[{"text":"HBAuthenticator","kind":"identifier"}],"role":"symbol","externalID":"s:15HummingbirdAuth15HBAuthenticatorP"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:context:)-5xiri","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/handle(_:context:next:)"]}],"abstract":[{"text":"Protocol for a middleware that checks if a request is authenticated.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","text":"HBMiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBMiddlewareProtocolP"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","text":"HBAuthRequestContextProtocol","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth28HBAuthRequestContextProtocolP"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Requires an "},{"code":"authenticate","type":"codeVoice"},{"type":"text","text":" function that returns authentication data when successdul."},{"type":"text","text":" "},{"type":"text","text":"If it is unsuccessful then nil should be returned so middleware further down the"},{"type":"text","text":" "},{"type":"text","text":"middleware chain can do authentication. If you donâ€™t want any further middleware to"},{"type":"text","text":" "},{"type":"text","text":"run then throw an error."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To use an authenticator middleware it is required that your request context conform to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol"},{"type":"text","text":" so the middleware can attach authentication data to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol\/auth"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"A simple username, password authenticator could be implemented as follows. If the","type":"text"},{"text":" ","type":"text"},{"text":"authenticator is successful it returns a ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" struct, otherwise it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["struct BasicAuthenticator: HBAuthenticator {","    func authenticate<Context: HBAuthRequestContextProtocol>(request: HBRequest, context: Context) async throws -> User? {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.headers.basic","        guard let basic = request.headers.basic else { return nil }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        let user = try await database.getUserWithUsername(basic.username)","        \/\/ did we find a user","        guard let user = user else { return nil }","        \/\/ verify password against password hash stored in database. If valid","        \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","        \/\/ This should be run on the thread pool as it is a long process.","        return try await context.threadPool.runIfActive {","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"seeAlsoSections":[{"title":"Authenticators","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"],"generated":true}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"},{"title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator"],"type":"inheritedBy","kind":"relationships"}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"title":"HummingbirdAuth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"url":"\/documentation\/hummingbirdauth","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"url":"\/documentation\/hummingbird\/middlewareprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","title":"MiddlewareProtocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"title":"HBMiddlewareProtocol","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol/auth":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"auth"},{"text":": ","kind":"text"},{"text":"HBLoginCache","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth12HBLoginCacheV"}],"url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol\/auth","type":"topic","role":"symbol","abstract":[{"text":"Login cache","type":"text"}],"title":"auth","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol\/auth","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"title":"IsAuthenticatedMiddleware","abstract":[{"type":"text","text":"Middleware returning 404 for unauthenticated requests"}],"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","navigatorTitle":[{"kind":"identifier","text":"IsAuthenticatedMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","url":"\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol":{"navigatorTitle":[{"kind":"identifier","text":"HBAuthRequestContextProtocol"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthRequestContextProtocol"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","type":"topic","title":"HBAuthRequestContextProtocol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/handle(_:context:next:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/handle(_:context:next:)","abstract":[{"text":"Calls ","type":"text"},{"code":"authenticate","type":"codeVoice"},{"text":" and if it returns a valid authenticatable object ","type":"text"},{"code":"login","type":"codeVoice"},{"text":" with this object","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"}],"title":"handle(_:context:next:)","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/handle(_:context:next:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator":{"url":"\/documentation\/hummingbirdauth\/hbauthenticator","abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAuthenticator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","title":"HBAuthenticator","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticator"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/Value":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value","abstract":[{"text":"type to be authenticated","type":"text"}],"role":"symbol","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBAuthenticatable","preciseIdentifier":"s:15HummingbirdAuth17HBAuthenticatableP","kind":"typeIdentifier"}],"title":"Value","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSessionAuthenticator":{"url":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","abstract":[{"type":"text","text":"Session authenticator"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBSessionAuthenticator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator","title":"HBSessionAuthenticator","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSessionAuthenticator"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/authenticate(request:context:)-5xiri":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"authenticate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:15HummingbirdAuth15HBAuthenticatorP5ValueQa","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:context:)-5xiri","title":"authenticate(request:context:)","abstract":[{"text":"Called by middleware to see if request can authenticate.","type":"text"}],"required":true,"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:context:)-5xiri"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Authenticators":{"title":"Authenticators","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Authenticators","url":"\/documentation\/hummingbird\/authenticators","role":"collectionGroup","kind":"article","abstract":[{"type":"text","text":"Request authentication middleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticatable":{"navigatorTitle":[{"kind":"identifier","text":"HBAuthenticatable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticatable"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthenticatable","abstract":[{"type":"text","text":"Protocol for objects that can be returned by an "},{"type":"codeVoice","code":"HBAuthenticator"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","type":"topic","title":"HBAuthenticatable"}}}