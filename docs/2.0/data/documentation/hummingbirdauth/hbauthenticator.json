{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Authenticators"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Authenticators"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:context:)-5xiri","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/handle(_:context:next:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]},{"title":"Inherited By","type":"inheritedBy","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator"]}],"kind":"symbol","seeAlsoSections":[{"title":"Authenticators","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBMiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","preciseIdentifier":"s:11Hummingbird20HBMiddlewareProtocolP","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"HBAuthRequestContextProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","preciseIdentifier":"s:15HummingbirdAuth28HBAuthRequestContextProtocolP","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires an "},{"type":"codeVoice","code":"authenticate"},{"type":"text","text":" function that returns authentication data when successdul."},{"type":"text","text":" "},{"type":"text","text":"If it is unsuccessful then nil should be returned so middleware further down the"},{"type":"text","text":" "},{"type":"text","text":"middleware chain can do authentication. If you donâ€™t want any further middleware to"},{"type":"text","text":" "},{"type":"text","text":"run then throw an error."}]},{"type":"paragraph","inlineContent":[{"text":"To use an authenticator middleware it is required that your request context conform to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol"},{"text":" so the middleware can attach authentication data to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol\/auth"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A simple username, password authenticator could be implemented as follows. If the"},{"type":"text","text":" "},{"type":"text","text":"authenticator is successful it returns a "},{"type":"codeVoice","code":"User"},{"type":"text","text":" struct, otherwise it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"code":["struct BasicAuthenticator: HBAuthenticator {","    func authenticate<Context: HBAuthRequestContextProtocol>(request: HBRequest, context: Context) async throws -> User? {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.headers.basic","        guard let basic = request.headers.basic else { return nil }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        let user = try await database.getUserWithUsername(basic.username)","        \/\/ did we find a user","        guard let user = user else { return nil }","        \/\/ verify password against password hash stored in database. If valid","        \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","        \/\/ This should be run on the thread pool as it is a long process.","        return try await context.threadPool.runIfActive {","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","    }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbauthenticator"]}],"abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"metadata":{"symbolKind":"protocol","title":"HBAuthenticator","role":"symbol","navigatorTitle":[{"text":"HBAuthenticator","kind":"identifier"}],"roleHeading":"Protocol","modules":[{"name":"HummingbirdAuth"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"}],"externalID":"s:15HummingbirdAuth15HBAuthenticatorP"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol/auth":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"auth","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBLoginCache","preciseIdentifier":"s:15HummingbirdAuth12HBLoginCacheV","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"auth","abstract":[{"type":"text","text":"Login cache"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol\/auth","required":true,"url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol\/auth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/Value":{"type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth17HBAuthenticatableP","text":"HBAuthenticatable","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"type to be authenticated"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","title":"Value","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticatable":{"title":"HBAuthenticatable","type":"topic","navigatorTitle":[{"text":"HBAuthenticatable","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticatable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBAuthenticatable","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for objects that can be returned by an "},{"type":"codeVoice","code":"HBAuthenticator"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator":{"type":"topic","abstract":[{"text":"Protocol for a middleware that checks if a request is authenticated.","type":"text"}],"title":"HBAuthenticator","url":"\/documentation\/hummingbirdauth\/hbauthenticator","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBAuthenticator"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAuthenticator"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","role":"collection","url":"\/documentation\/hummingbirdauth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"title":"HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","type":"topic","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","navigatorTitle":[{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"kind":"symbol","title":"HBAuthRequestContextProtocol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthRequestContextProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","kind":"symbol","abstract":[{"text":"Middleware returning 404 for unauthenticated requests","type":"text"}],"title":"IsAuthenticatedMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSessionAuthenticator":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator","abstract":[{"text":"Session authenticator","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSessionAuthenticator"}],"navigatorTitle":[{"kind":"identifier","text":"HBSessionAuthenticator"}],"url":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","role":"symbol","title":"HBSessionAuthenticator"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","url":"\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareProtocol":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareProtocol"}],"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"role":"symbol","title":"HBMiddlewareProtocol","url":"\/documentation\/hummingbirdlambda\/hbmiddlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Authenticators":{"type":"topic","kind":"article","role":"collectionGroup","title":"Authenticators","abstract":[{"type":"text","text":"Request authentication middleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Authenticators","url":"\/documentation\/hummingbird\/authenticators"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/authenticate(request:context:)-5xiri":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:context:)-5xiri","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:context:)-5xiri","defaultImplementations":1,"abstract":[{"text":"Called by middleware to see if request can authenticate.","type":"text"}],"type":"topic","title":"authenticate(request:context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"authenticate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth15HBAuthenticatorP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/handle(_:context:next:)":{"url":"\/documentation\/hummingbirdauth\/hbauthenticator\/handle(_:context:next:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/handle(_:context:next:)","type":"topic","kind":"symbol","title":"handle(_:context:next:)","abstract":[{"text":"Calls ","type":"text"},{"type":"codeVoice","code":"authenticate"},{"text":" and if it returns a valid authenticatable object ","type":"text"},{"type":"codeVoice","code":"login"},{"text":" with this object","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/MiddlewareProtocol":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"role":"symbol","title":"MiddlewareProtocol","url":"\/documentation\/hummingbirdlambda\/middlewareprotocol"}}}