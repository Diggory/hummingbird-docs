{"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"},{"title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator"],"kind":"relationships"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticator"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBMiddlewareProtocolP","text":"HBMiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth28HBAuthRequestContextProtocolP","text":"HBAuthRequestContextProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires an "},{"type":"codeVoice","code":"authenticate"},{"type":"text","text":" function that returns authentication data when successdul."},{"type":"text","text":" "},{"type":"text","text":"If it is unsuccessful then nil should be returned so middleware further down the"},{"type":"text","text":" "},{"type":"text","text":"middleware chain can do authentication. If you donâ€™t want any further middleware to"},{"type":"text","text":" "},{"type":"text","text":"run then throw an error."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use an authenticator middleware it is required that your request context conform to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol"},{"type":"text","text":" so the middleware can attach authentication data to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol\/auth"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"A simple username, password authenticator could be implemented as follows. If the","type":"text"},{"text":" ","type":"text"},{"text":"authenticator is successful it returns a ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" struct, otherwise it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct BasicAuthenticator: HBAuthenticator {","    func authenticate<Context: HBAuthRequestContextProtocol>(request: HBRequest, context: Context) async throws -> User? {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.headers.basic","        guard let basic = request.headers.basic else { return nil }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        let user = try await database.getUserWithUsername(basic.username)","        \/\/ did we find a user","        guard let user = user else { return nil }","        \/\/ verify password against password hash stored in database. If valid","        \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","        \/\/ This should be run on the thread pool as it is a long process.","        return try await context.threadPool.runIfActive {","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","    }","}"]}],"kind":"content"}],"kind":"symbol","metadata":{"symbolKind":"protocol","title":"HBAuthenticator","role":"symbol","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticator"}],"modules":[{"name":"HummingbirdAuth"}],"externalID":"s:15HummingbirdAuth15HBAuthenticatorP","navigatorTitle":[{"kind":"identifier","text":"HBAuthenticator"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbauthenticator"]}],"seeAlsoSections":[{"title":"Authenticators","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"]}],"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:context:)-5xiri","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/handle(_:context:next:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Authenticators"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Authenticators"]]},"abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"kind":"symbol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"title":"MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareProtocol"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/Value":{"kind":"symbol","type":"topic","abstract":[{"text":"type to be authenticated","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBAuthenticatable","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth17HBAuthenticatableP"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value","required":true,"url":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","title":"Value","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticatable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","title":"HBAuthenticatable","abstract":[{"type":"text","text":"Protocol for objects that can be returned by an "},{"type":"codeVoice","code":"HBAuthenticator"},{"type":"text","text":"."}],"kind":"symbol","navigatorTitle":[{"text":"HBAuthenticatable","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticatable","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticatable","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/authenticate(request:context:)-5xiri":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:context:)-5xiri","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"authenticate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdAuth15HBAuthenticatorP5ValueQa","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"title":"authenticate(request:context:)","abstract":[{"type":"text","text":"Called by middleware to see if request can authenticate."}],"url":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:context:)-5xiri","kind":"symbol","defaultImplementations":1,"required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator":{"kind":"symbol","abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"title":"HBAuthenticator","url":"\/documentation\/hummingbirdauth\/hbauthenticator","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBAuthenticator"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","navigatorTitle":[{"kind":"identifier","text":"HBAuthenticator"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/handle(_:context:next:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","text":"HBResponse","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","text":"HBResponse","kind":"typeIdentifier"}],"role":"symbol","type":"topic","title":"handle(_:context:next:)","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/handle(_:context:next:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/handle(_:context:next:)","abstract":[{"type":"text","text":"Calls "},{"type":"codeVoice","code":"authenticate"},{"type":"text","text":" and if it returns a valid authenticatable object "},{"type":"codeVoice","code":"login"},{"type":"text","text":" with this object"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"kind":"article","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/index","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"kind":"symbol","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSessionAuthenticator":{"kind":"symbol","abstract":[{"text":"Session authenticator","type":"text"}],"title":"HBSessionAuthenticator","url":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSessionAuthenticator"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator","navigatorTitle":[{"kind":"identifier","text":"HBSessionAuthenticator"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Authenticators":{"url":"\/documentation\/hummingbird\/authenticators","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Authenticators","abstract":[{"type":"text","text":"Request authentication middleware"}],"title":"Authenticators","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"abstract":[{"text":"Middleware returning 404 for unauthenticated requests","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"title":"IsAuthenticatedMiddleware","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBMiddlewareProtocol"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"title":"HBMiddlewareProtocol","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareProtocol"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol/auth":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"auth","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth12HBLoginCacheV","text":"HBLoginCache","kind":"typeIdentifier"}],"type":"topic","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol\/auth","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol\/auth","title":"auth","abstract":[{"type":"text","text":"Login cache"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthRequestContextProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"HBAuthRequestContextProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","role":"symbol","title":"HBAuthRequestContextProtocol","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}]}}}