{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","preciseIdentifier":"s:11Hummingbird20HBMiddlewareProtocolP"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"HBAuthRequestContextProtocol","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","preciseIdentifier":"s:15HummingbirdAuth28HBAuthRequestContextProtocolP"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Authenticators should conform to protocol ","type":"text"},{"code":"HBAuthenticator","type":"codeVoice"},{"text":". This requires you implement the function","type":"text"},{"text":" ","type":"text"},{"code":"authenticate(request: HBRequest) -> EventLoopFuture<Value?>","type":"codeVoice"},{"text":" where ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" is an","type":"text"},{"text":" ","type":"text"},{"text":"object conforming to the protocol ","type":"text"},{"code":"HBAuthenticatable","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A simple username, password authenticator could be implemented as follows. If the authenticator is successful"},{"type":"text","text":" "},{"type":"text","text":"it returns a "},{"type":"codeVoice","code":"User"},{"type":"text","text":" struct, otherwise it returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"type":"codeListing","code":["struct BasicAuthenticator: HBAuthenticator {","    func authenticate<Context: HBAuthRequestContextProtocol>(request: HBRequest, context: Context) async throws -> User? {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.headers.basic","        guard let basic = request.headers.basic else { return nil }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        let user = try await database.getUserWithUsername(basic.username)","        \/\/ did we find a user","        guard let user = user else { return nil }","        \/\/ verify password against password hash stored in database. If valid","        \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","        \/\/ This should be run on the thread pool as it is a long process.","        return try await context.threadPool.runIfActive {","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","    }","}"],"syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbauthenticator"]}],"kind":"symbol","abstract":[{"text":"Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"text":"authentication data.","type":"text"}],"metadata":{"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticator"}],"title":"HBAuthenticator","navigatorTitle":[{"kind":"identifier","text":"HBAuthenticator"}],"roleHeading":"Protocol","externalID":"s:15HummingbirdAuth15HBAuthenticatorP","modules":[{"name":"HummingbirdAuth"}],"role":"symbol"},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:context:)-5xiri","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/handle(_:context:next:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","interfaceLanguage":"swift"},"sections":[],"seeAlsoSections":[{"title":"Authenticators","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"]}],"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"},{"type":"inheritedBy","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator"],"kind":"relationships"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/handle(_:context:next:)":{"url":"\/documentation\/hummingbirdauth\/hbauthenticator\/handle(_:context:next:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/handle(_:context:next:)","type":"topic","abstract":[{"type":"text","text":"Calls "},{"type":"codeVoice","code":"authenticate"},{"type":"text","text":" and if it returns a valid autheniticatable object "},{"type":"codeVoice","code":"login"},{"type":"text","text":" with this object"}],"title":"handle(_:context:next:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore10HBResponseV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore10HBResponseV"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"role":"collection","type":"topic","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","title":"HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/authenticate(request:context:)-5xiri":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:context:)-5xiri","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:context:)-5xiri","kind":"symbol","abstract":[{"text":"Called by middleware to see if request is authenticated.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"authenticate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth15HBAuthenticatorP5ValueQa","text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"required":true,"title":"authenticate(request:context:)","defaultImplementations":1},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"}],"type":"topic","kind":"symbol","title":"HBAuthenticator","url":"\/documentation\/hummingbirdauth\/hbauthenticator","abstract":[{"text":"Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"text":"authentication data.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"HBAuthenticator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/Value":{"role":"symbol","abstract":[{"type":"text","text":"type to be authenticated"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Value"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:15HummingbirdAuth17HBAuthenticatableP","kind":"typeIdentifier","text":"HBAuthenticatable"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","title":"Value","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol":{"abstract":[{"text":"Protocol that all request contexts should conform to if they want to support","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"authentication middleware"}],"url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","title":"HBAuthRequestContextProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","navigatorTitle":[{"text":"HBAuthRequestContextProtocol","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSessionAuthenticator":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator","abstract":[{"text":"Session authenticator","type":"text"}],"role":"symbol","title":"HBSessionAuthenticator","navigatorTitle":[{"text":"HBSessionAuthenticator","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSessionAuthenticator","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbsessionauthenticator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IsAuthenticatedMiddleware"}],"title":"IsAuthenticatedMiddleware","url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","abstract":[{"type":"text","text":"Middleware returning 404 for unauthenticated requests"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticatable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticatable"}],"kind":"symbol","abstract":[{"type":"text","text":"Protocol for objects that can be returned by an "},{"type":"codeVoice","code":"HBAuthenticator"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"HBAuthenticatable"}],"title":"HBAuthenticatable","type":"topic","url":"\/documentation\/hummingbirdauth\/hbauthenticatable","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"title":"HBMiddlewareProtocol","url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","title":"MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}]}}}