{"metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"HummingbirdAuth"}],"title":"authenticate(request:context:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"authenticate"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier","text":"Context"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Identity","preciseIdentifier":"s:15HummingbirdAuth23AuthenticatorMiddlewareP8IdentityQa"},{"kind":"text","text":"?"}],"required":true,"externalID":"s:15HummingbirdAuth23AuthenticatorMiddlewareP12authenticate7request7context8IdentityQzSg0A4Core7RequestV_7ContextQztYaKF"},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"authenticate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","text":"Context","preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Identity","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Identity","preciseIdentifier":"s:15HummingbirdAuth23AuthenticatorMiddlewareP8IdentityQa"},{"text":"?","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"Should return an object if authenticated, return nil is not authenticated","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"but want the request to be passed onto the next middleware or the router, or throw an error"},{"type":"text","text":" "},{"text":"if the request should not proceed any further","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Called by middleware to see if request can authenticate."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddleware":{"title":"Authenticator Middleware","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/authenticatormiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware","role":"collectionGroup","kind":"article","abstract":[{"text":"Request authentication middleware","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol/Context":{"kind":"symbol","required":true,"url":"\/documentation\/hummingbird\/middlewareprotocol\/context","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol\/Context","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"}],"type":"topic","title":"Context"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","kind":"symbol","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","title":"Request","kind":"symbol","navigatorTitle":[{"text":"Request","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"url":"\/documentation\/hummingbirdcore\/request","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/Identity":{"abstract":[{"type":"text","text":"Type to be authenticated"}],"required":true,"title":"Identity","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/Identity","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/identity","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Identity","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware/authenticate(request:context:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware\/authenticate(request:context:)","role":"symbol","title":"authenticate(request:context:)","url":"\/documentation\/hummingbirdauth\/authenticatormiddleware\/authenticate(request:context:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"authenticate","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Identity","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth23AuthenticatorMiddlewareP8IdentityQa"},{"text":"?","kind":"text"}],"required":true,"abstract":[{"type":"text","text":"Called by middleware to see if request can authenticate."}],"kind":"symbol"},"logo.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/index":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","kind":"article","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthenticatorMiddleware":{"title":"AuthenticatorMiddleware","abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthenticatorMiddleware","type":"topic","role":"symbol","navigatorTitle":[{"text":"AuthenticatorMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/authenticatormiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AuthenticatorMiddleware","kind":"identifier"}],"kind":"symbol"}}}