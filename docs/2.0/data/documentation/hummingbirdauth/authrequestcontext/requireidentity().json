{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/authrequestcontext\/requireidentity()"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext"]]},"metadata":{"externalID":"s:15HummingbirdAuth0B14RequestContextPAAE15requireIdentity0F0QzyKF","role":"symbol","symbolKind":"method","title":"requireIdentity()","extendedModule":"HummingbirdAuth","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requireIdentity","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP8IdentityQa","text":"Identity","kind":"typeIdentifier"}],"roleHeading":"Instance Method","modules":[{"name":"HummingbirdAuth"}]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Return Identity attached to context."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"requireIdentity","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Identity","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/Identity-swift.associatedtype","preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP8IdentityQa"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"If Identity does not exist then throw a 401 (Unauthorized) status","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/requireIdentity()"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext/Identity-swift.associatedtype":{"url":"\/documentation\/hummingbirdauth\/authrequestcontext\/identity-swift.associatedtype","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/Identity-swift.associatedtype","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Identity"},{"text":" : ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}],"title":"Identity","required":true,"type":"topic","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext/requireIdentity()":{"title":"requireIdentity()","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext\/requireIdentity()","type":"topic","abstract":[{"type":"text","text":"Return Identity attached to context."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"requireIdentity","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Identity","preciseIdentifier":"s:15HummingbirdAuth0B14RequestContextP8IdentityQa","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdauth\/authrequestcontext\/requireidentity()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"type":"topic","title":"AuthRequestContext","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AuthRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AuthRequestContext"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"text":"authentication middleware","type":"text"}],"url":"\/documentation\/hummingbirdauth\/authrequestcontext"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddleware":{"url":"\/documentation\/hummingbird\/authenticatormiddleware","role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware","title":"Authenticator Middleware","type":"topic","abstract":[{"type":"text","text":"Request authentication middleware"}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"role":"collection","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"url":"\/documentation\/hummingbirdauth","type":"topic","kind":"symbol","title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","images":[{"type":"icon","identifier":"logo.png"}]}}}