{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"HummingbirdRedis","relatedModules":["RediStack"]}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"psetex","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"RedisKey","preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","preciseIdentifier":"s:9RediStack11RedisClientP011HummingbirdC0E6psetex_6toJSON24expirationInMilliseconds7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__SitSERd__lF5ValueL_qd__mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expirationInMilliseconds","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"extendedModule":"RediStack","externalID":"s:9RediStack11RedisClientP011HummingbirdC0E6psetex_6toJSON24expirationInMilliseconds7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__SitSERd__lF::SYNTHESIZED::s:16HummingbirdRedis28HBRedisConnectionPoolServiceV","roleHeading":"Instance Method","title":"psetex(_:toJSON:expirationInMilliseconds:)","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/RedisClient-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"psetex"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RedisKey","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:9RediStack11RedisClientP011HummingbirdC0E6psetex_6toJSON24expirationInMilliseconds7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__SitSERd__lF5ValueL_qd__mfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expirationInMilliseconds"},{"kind":"text","text":" "},{"kind":"internalParam","text":"expiration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Encodable","preciseIdentifier":"s:SE"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"key","content":[{"inlineContent":[{"text":"The key to use to uniquely identify this value.","type":"text"}],"type":"paragraph"}]},{"name":"value","content":[{"inlineContent":[{"type":"text","text":"The value to set the key to."}],"type":"paragraph"}]},{"name":"expiration","content":[{"inlineContent":[{"type":"text","text":"The number of milliseconds after which to expire the key."}],"type":"paragraph"}]}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A "},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that resolves if the operation was successful."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"See ","type":"text"},{"type":"reference","identifier":"https:\/\/redis.io\/commands\/psetex","isActive":true}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Regardless of the type of data stored at the key, it will be overwritten to a “string” data type.","type":"text"}]}],"style":"important","name":"Important","type":"aside"},{"inlineContent":[{"text":"ie. If the key is a reference to a Sorted Set, its value will be overwritten to be a “string” data type.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The actual expiration used will be the specified value or "},{"type":"codeVoice","code":"1"},{"type":"text","text":", whichever is larger."}]}],"style":"important","name":"Important","type":"aside"}],"kind":"content"}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Sets a key to the provided value and an expiration timeout in milliseconds."}],"variants":[{"paths":["\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/psetex(_:tojson:expirationinmilliseconds:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/psetex(_:toJSON:expirationInMilliseconds:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService":{"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","navigatorTitle":[{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"title":"HBRedisConnectionPoolService","type":"topic","abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}]},"https://redis.io/commands/psetex":{"url":"https:\/\/redis.io\/commands\/psetex","title":"https:\/\/redis.io\/commands\/psetex","titleInlineContent":[{"type":"text","text":"https:\/\/redis.io\/commands\/psetex"}],"type":"link","identifier":"https:\/\/redis.io\/commands\/psetex"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","type":"topic","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/RedisClient-Implementations":{"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/redisclient-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/RedisClient-Implementations","title":"RedisClient Implementations","type":"topic","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/psetex(_:toJSON:expirationInMilliseconds:)":{"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/psetex(_:tojson:expirationinmilliseconds:)","role":"symbol","kind":"symbol","title":"psetex(_:toJSON:expirationInMilliseconds:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"psetex"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack11RedisClientP011HummingbirdC0E6psetex_6toJSON24expirationInMilliseconds7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__SitSERd__lF5ValueL_qd__mfp","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expirationInMilliseconds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Sets a key to the provided value and an expiration timeout in milliseconds."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/psetex(_:toJSON:expirationInMilliseconds:)"}}}