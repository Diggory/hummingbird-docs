{"abstract":[{"type":"text","text":"Starts the connection pool."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/activate(logger:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/activate(logger:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"activate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":"? = nil)","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"logger","content":[{"inlineContent":[{"text":"An optional logger to use for any log statements generated while starting up the pool.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If one is not provided, the pool will use its default logger."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"This method is safe to call multiple times.","type":"text"}],"type":"paragraph"}]}],"sections":[],"metadata":{"roleHeading":"Instance Method","title":"activate(logger:)","symbolKind":"method","role":"symbol","modules":[{"name":"HummingbirdRedis"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"activate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"?)"}],"externalID":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV8activate6loggery7Logging6LoggerVSg_tF"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/activate(logger:)":{"abstract":[{"text":"Starts the connection pool.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/activate(logger:)","kind":"symbol","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/activate(logger:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"activate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":"?)"}],"type":"topic","role":"symbol","title":"activate(logger:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","type":"topic","kind":"symbol","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"title":"HummingbirdRedis","url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"navigatorTitle":[{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"title":"HBRedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","kind":"symbol","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}]}}}