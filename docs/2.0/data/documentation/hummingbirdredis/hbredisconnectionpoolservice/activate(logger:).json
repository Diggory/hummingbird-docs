{"metadata":{"modules":[{"name":"HummingbirdRedis"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"activate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","title":"activate(logger:)","externalID":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV8activate6loggery7Logging6LoggerVSg_tF"},"abstract":[{"text":"Starts the connection pool.","type":"text"}],"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/activate(logger:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/activate(logger:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"activate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"? = nil)"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An optional logger to use for any log statements generated while starting up the pool."},{"type":"text","text":" "},{"type":"text","text":"If one is not provided, the pool will use its default logger."}]}],"name":"logger"}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is safe to call multiple times."}]}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/activate(logger:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/activate(logger:)","abstract":[{"text":"Starts the connection pool.","type":"text"}],"role":"symbol","title":"activate(logger:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"activate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/activate(logger:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService":{"abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisConnectionPoolService","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBRedisConnectionPoolService","kind":"identifier"}],"title":"HBRedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","title":"HummingbirdRedis","url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","type":"topic","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]}}}