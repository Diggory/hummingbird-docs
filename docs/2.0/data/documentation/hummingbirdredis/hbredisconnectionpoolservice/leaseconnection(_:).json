{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leaseConnection(_:)"},"metadata":{"title":"leaseConnection(_:)","role":"symbol","modules":[{"name":"HummingbirdRedis"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">"}],"extendedModule":"HummingbirdRedis","roleHeading":"Instance Method","externalID":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leaseconnection(_:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:9RediStack15RedisConnectionC","kind":"typeIdentifier","text":"RedisConnection"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that receives exclusive access to the provided ","type":"text"},{"code":"RedisConnection","type":"codeVoice"},{"text":" for the lifetime of the closure for specialized Redis command chains.","type":"text"}]}],"name":"operation"}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" that resolves the value of the "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" in the provided closure operation."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"aside","name":"Warning","content":[{"inlineContent":[{"text":"Attempting to create PubSub subscriptions with connections leased in the closure will result in a failed ","type":"text"},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"warning"},{"type":"paragraph","inlineContent":[{"code":"RedisConnectionPool","type":"codeVoice"},{"text":" manages PubSub state and requires exclusive control over creating PubSub subscriptions.","type":"text"}]},{"type":"aside","name":"Important","content":[{"inlineContent":[{"text":"This connection ","type":"text"},{"inlineContent":[{"type":"text","text":"MUST NOT"}],"type":"strong"},{"text":" be stored outside of the closure. It is only available exclusively within the closure.","type":"text"}],"type":"paragraph"}],"style":"important"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All operations should be done inside the closure as chained "},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"type":"text","text":" callbacks."}]},{"type":"paragraph","inlineContent":[{"text":"For example:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let countFuture = pool.leaseConnection {","    let client = $0.logging(to: myLogger)","    return client.authorize(with: userPassword)","        .flatMap { connection.select(database: userDatabase) }","        .flatMap { connection.increment(counterKey) }","}"]},{"type":"aside","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"text":"Some commands change the state of the connection that are not tracked client-side,","type":"text"},{"text":" ","type":"text"},{"text":"and will not be automatically reset when the connection is returned to the pool.","type":"text"}]}],"style":"warning"},{"type":"paragraph","inlineContent":[{"text":"When the connection is reused from the pool, it will retain this state and may affect future commands executed with it.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, if ","type":"text"},{"code":"select(database:)","type":"codeVoice"},{"text":" is used, all future commands made with this connection will be against the selected database.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To protect against future issues, make sure the final commands executed are to reset the connection to itâ€™s previous known state.","type":"text"}]}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","role":"collection","type":"topic","url":"\/documentation\/hummingbirdredis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/leaseConnection(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leaseConnection(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"RedisConnection","preciseIdentifier":"s:9RediStack15RedisConnectionC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leaseconnection(_:)","title":"leaseConnection(_:)","role":"symbol","abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService":{"title":"HBRedisConnectionPoolService","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","kind":"symbol"}}}