{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService"]]},"abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leaseConnection(_:)","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"operation","content":[{"inlineContent":[{"text":"A closure that receives exclusive access to the provided ","type":"text"},{"type":"codeVoice","code":"RedisConnection"},{"text":" for the lifetime of the closure for specialized Redis command chains.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"A ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":" that resolves the value of the ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":" in the provided closure operation.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"aside","style":"warning","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"text":"Attempting to create PubSub subscriptions with connections leased in the closure will result in a failed ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"RedisConnectionPool"},{"text":" manages PubSub state and requires exclusive control over creating PubSub subscriptions.","type":"text"}]},{"type":"aside","style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This connection "},{"inlineContent":[{"type":"text","text":"MUST NOT"}],"type":"strong"},{"type":"text","text":" be stored outside of the closure. It is only available exclusively within the closure."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All operations should be done inside the closure as chained "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" callbacks."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":"swift","code":["let countFuture = pool.leaseConnection {","    let client = $0.logging(to: myLogger)","    return client.authorize(with: userPassword)","        .flatMap { connection.select(database: userDatabase) }","        .flatMap { connection.increment(counterKey) }","}"]},{"type":"aside","style":"warning","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Some commands change the state of the connection that are not tracked client-side,"},{"type":"text","text":" "},{"type":"text","text":"and will not be automatically reset when the connection is returned to the pool."}]}]},{"type":"paragraph","inlineContent":[{"text":"When the connection is reused from the pool, it will retain this state and may affect future commands executed with it.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, if ","type":"text"},{"type":"codeVoice","code":"select(database:)"},{"text":" is used, all future commands made with this connection will be against the selected database.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To protect against future issues, make sure the final commands executed are to reset the connection to itâ€™s previous known state."}]}]}],"metadata":{"title":"leaseConnection(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:9RediStack15RedisConnectionC","kind":"typeIdentifier","text":"RedisConnection"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"externalID":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF","modules":[{"name":"HummingbirdRedis"}],"extendedModule":"HummingbirdRedis","symbolKind":"method","role":"symbol"},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leaseconnection(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","url":"\/documentation\/hummingbirdredis","title":"HummingbirdRedis","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService":{"abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","navigatorTitle":[{"text":"HBRedisConnectionPoolService","kind":"identifier"}],"title":"HBRedisConnectionPoolService","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisConnectionPoolService","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/leaseConnection(_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leaseConnection(_:)","abstract":[{"type":"text","text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations."}],"role":"symbol","title":"leaseConnection(_:)","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leaseconnection(_:)","kind":"symbol"}}}