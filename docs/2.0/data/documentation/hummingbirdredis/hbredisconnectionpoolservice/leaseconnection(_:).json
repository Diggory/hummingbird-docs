{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService"]]},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"RedisConnection","preciseIdentifier":"s:9RediStack15RedisConnectionC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp"},{"kind":"text","text":">"}],"symbolKind":"method","title":"leaseConnection(_:)","extendedModule":"HummingbirdRedis","roleHeading":"Instance Method","modules":[{"name":"HummingbirdRedis"}],"externalID":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leaseconnection(_:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leaseConnection(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"operation","content":[{"inlineContent":[{"type":"text","text":"A closure that receives exclusive access to the provided "},{"type":"codeVoice","code":"RedisConnection"},{"type":"text","text":" for the lifetime of the closure for specialized Redis command chains."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that resolves the value of the "},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"type":"text","text":" in the provided closure operation."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"aside","style":"warning","content":[{"inlineContent":[{"type":"text","text":"Attempting to create PubSub subscriptions with connections leased in the closure will result in a failed "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Warning"},{"inlineContent":[{"code":"RedisConnectionPool","type":"codeVoice"},{"text":" manages PubSub state and requires exclusive control over creating PubSub subscriptions.","type":"text"}],"type":"paragraph"},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"This connection ","type":"text"},{"inlineContent":[{"text":"MUST NOT","type":"text"}],"type":"strong"},{"text":" be stored outside of the closure. It is only available exclusively within the closure.","type":"text"}]}],"name":"Important"},{"inlineContent":[{"text":"All operations should be done inside the closure as chained ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":" callbacks.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let countFuture = pool.leaseConnection {","    let client = $0.logging(to: myLogger)","    return client.authorize(with: userPassword)","        .flatMap { connection.select(database: userDatabase) }","        .flatMap { connection.increment(counterKey) }","}"]},{"type":"aside","style":"warning","content":[{"inlineContent":[{"type":"text","text":"Some commands change the state of the connection that are not tracked client-side,"},{"type":"text","text":" "},{"type":"text","text":"and will not be automatically reset when the connection is returned to the pool."}],"type":"paragraph"}],"name":"Warning"},{"inlineContent":[{"type":"text","text":"When the connection is reused from the pool, it will retain this state and may affect future commands executed with it."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, if "},{"type":"codeVoice","code":"select(database:)"},{"type":"text","text":" is used, all future commands made with this connection will be against the selected database."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To protect against future issues, make sure the final commands executed are to reset the connection to itâ€™s previous known state."}],"type":"paragraph"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/leaseConnection(_:)":{"title":"leaseConnection(_:)","abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"RedisConnection","preciseIdentifier":"s:9RediStack15RedisConnectionC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leaseConnection(_:)","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leaseconnection(_:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","title":"HummingbirdRedis","role":"collection","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService":{"type":"topic","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","title":"HBRedisConnectionPoolService"}}}