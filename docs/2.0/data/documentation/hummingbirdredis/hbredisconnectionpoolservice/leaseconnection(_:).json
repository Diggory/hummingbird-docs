{"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leaseconnection(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:9RediStack15RedisConnectionC","kind":"typeIdentifier","text":"RedisConnection"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]}]},{"parameters":[{"name":"operation","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that receives exclusive access to the provided "},{"code":"RedisConnection","type":"codeVoice"},{"type":"text","text":" for the lifetime of the closure for specialized Redis command chains."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":" that resolves the value of the ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":" in the provided closure operation.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"content":[{"inlineContent":[{"text":"Attempting to create PubSub subscriptions with connections leased in the closure will result in a failed ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"warning","type":"aside","name":"Warning"},{"inlineContent":[{"code":"RedisConnectionPool","type":"codeVoice"},{"text":" manages PubSub state and requires exclusive control over creating PubSub subscriptions.","type":"text"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"This connection ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"MUST NOT"}]},{"text":" be stored outside of the closure. It is only available exclusively within the closure.","type":"text"}]}],"style":"important","type":"aside","name":"Important"},{"inlineContent":[{"type":"text","text":"All operations should be done inside the closure as chained "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" callbacks."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let countFuture = pool.leaseConnection {","    let client = $0.logging(to: myLogger)","    return client.authorize(with: userPassword)","        .flatMap { connection.select(database: userDatabase) }","        .flatMap { connection.increment(counterKey) }","}"]},{"content":[{"inlineContent":[{"type":"text","text":"Some commands change the state of the connection that are not tracked client-side,"},{"type":"text","text":" "},{"type":"text","text":"and will not be automatically reset when the connection is returned to the pool."}],"type":"paragraph"}],"style":"warning","type":"aside","name":"Warning"},{"inlineContent":[{"type":"text","text":"When the connection is reused from the pool, it will retain this state and may affect future commands executed with it."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, if ","type":"text"},{"type":"codeVoice","code":"select(database:)"},{"text":" is used, all future commands made with this connection will be against the selected database.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"To protect against future issues, make sure the final commands executed are to reset the connection to itâ€™s previous known state.","type":"text"}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Instance Method","extendedModule":"HummingbirdRedis","role":"symbol","modules":[{"name":"HummingbirdRedis"}],"externalID":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"RedisConnection","preciseIdentifier":"s:9RediStack15RedisConnectionC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","title":"leaseConnection(_:)"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leaseConnection(_:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisConnectionPoolService","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"navigatorTitle":[{"text":"HBRedisConnectionPoolService","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"HBRedisConnectionPoolService"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/leaseConnection(_:)":{"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leaseconnection(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"leaseConnection(_:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leaseConnection(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","url":"\/documentation\/hummingbirdredis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"type":"topic","kind":"symbol","role":"collection","title":"HummingbirdRedis"}}}