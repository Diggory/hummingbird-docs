{"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setex"},{"kind":"text","text":"("},{"preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier","text":"RedisKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expirationInSeconds"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":">"}],"extendedModule":"RediStack","modules":[{"relatedModules":["RediStack"],"name":"HummingbirdRedis"}],"externalID":"s:9RediStack11RedisClientP011HummingbirdC0E5setex_6toJSON19expirationInSeconds7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__SitSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV","title":"setex(_:toJSON:expirationInSeconds:)","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/setex(_:toJSON:expirationInSeconds:)"},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"RedisKey","preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expirationInSeconds","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"expiration","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The key to use to uniquely identify this value."}],"type":"paragraph"}],"name":"key"},{"content":[{"inlineContent":[{"type":"text","text":"The value to set the key to."}],"type":"paragraph"}],"name":"value"},{"content":[{"inlineContent":[{"type":"text","text":"The number of seconds after which to expire the key."}],"type":"paragraph"}],"name":"expiration"}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":" that resolves if the operation was successful.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"See "},{"identifier":"https:\/\/redis.io\/commands\/setex","isActive":true,"type":"reference"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"Regardless of the type of data stored at the key, it will be overwritten to a “string” data type."}],"type":"paragraph"}],"type":"aside","name":"Important","style":"important"},{"inlineContent":[{"text":"ie. If the key is a reference to a Sorted Set, its value will be overwritten to be a “string” data type.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"The actual expiration used will be the specified value or "},{"code":"1","type":"codeVoice"},{"type":"text","text":", whichever is larger."}],"type":"paragraph"}],"type":"aside","name":"Important","style":"important"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/setex(_:tojson:expirationinseconds:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"]]},"abstract":[{"type":"text","text":"Sets a key to the provided value and an expiration timeout in seconds."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"https://redis.io/commands/setex":{"type":"link","title":"https:\/\/redis.io\/commands\/setex","url":"https:\/\/redis.io\/commands\/setex","titleInlineContent":[{"text":"https:\/\/redis.io\/commands\/setex","type":"text"}],"identifier":"https:\/\/redis.io\/commands\/setex"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/setex(_:toJSON:expirationInSeconds:)":{"type":"topic","title":"setex(_:toJSON:expirationInSeconds:)","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/setex(_:tojson:expirationinseconds:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setex","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier","text":"RedisKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expirationInSeconds"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Sets a key to the provided value and an expiration timeout in seconds.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/setex(_:toJSON:expirationInSeconds:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"role":"symbol","title":"RedisConnectionPoolService","navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/RedisClient-Implementations":{"role":"collectionGroup","title":"RedisClient Implementations","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","title":"HummingbirdRedis","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","url":"\/documentation\/hummingbirdredis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]}}}