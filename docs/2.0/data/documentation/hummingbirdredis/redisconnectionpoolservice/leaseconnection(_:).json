{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"RedisConnection","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"operation","content":[{"inlineContent":[{"type":"text","text":"A closure that receives exclusive access to the provided "},{"type":"codeVoice","code":"RedisConnection"},{"type":"text","text":" for the lifetime of the closure for specialized Redis command chains."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that resolves the value of the "},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"type":"text","text":" in the provided closure operation."}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"style":"warning","content":[{"inlineContent":[{"type":"text","text":"Attempting to create PubSub subscriptions with connections leased in the closure will result in a failed "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","name":"Warning"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"RedisConnectionPool"},{"type":"text","text":" manages PubSub state and requires exclusive control over creating PubSub subscriptions."}]},{"style":"important","content":[{"inlineContent":[{"type":"text","text":"This connection "},{"type":"strong","inlineContent":[{"type":"text","text":"MUST NOT"}]},{"type":"text","text":" be stored outside of the closure. It is only available exclusively within the closure."}],"type":"paragraph"}],"type":"aside","name":"Important"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All operations should be done inside the closure as chained "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" callbacks."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"code":["let countFuture = pool.leaseConnection {","    let client = $0.logging(to: myLogger)","    return client.authorize(with: userPassword)","        .flatMap { connection.select(database: userDatabase) }","        .flatMap { connection.increment(counterKey) }","}"],"type":"codeListing","syntax":"swift"},{"style":"warning","content":[{"inlineContent":[{"text":"Some commands change the state of the connection that are not tracked client-side,","type":"text"},{"text":" ","type":"text"},{"text":"and will not be automatically reset when the connection is returned to the pool.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Warning"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the connection is reused from the pool, it will retain this state and may affect future commands executed with it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if "},{"type":"codeVoice","code":"select(database:)"},{"type":"text","text":" is used, all future commands made with this connection will be against the selected database."}]},{"type":"paragraph","inlineContent":[{"text":"To protect against future issues, make sure the final commands executed are to reset the connection to itâ€™s previous known state.","type":"text"}]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"HummingbirdRedis"}],"title":"leaseConnection(_:)","role":"symbol","extendedModule":"HummingbirdRedis","externalID":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"abstract":[{"type":"text","text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/leaseConnection(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","kind":"symbol","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"leaseConnection(_:)","type":"topic","abstract":[{"type":"text","text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"type":"topic","title":"RedisConnectionPoolService","navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}],"abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","kind":"symbol","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"type":"topic","title":"HummingbirdRedis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","url":"\/documentation\/hummingbirdredis"}}}