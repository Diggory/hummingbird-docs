{"abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"]]},"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"RedisConnection","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">","kind":"text"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that receives exclusive access to the provided ","type":"text"},{"code":"RedisConnection","type":"codeVoice"},{"text":" for the lifetime of the closure for specialized Redis command chains.","type":"text"}]}],"name":"operation"}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A "},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that resolves the value of the "},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"type":"text","text":" in the provided closure operation."}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"aside","style":"warning","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"text":"Attempting to create PubSub subscriptions with connections leased in the closure will result in a failed ","type":"text"},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":".","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":" manages PubSub state and requires exclusive control over creating PubSub subscriptions."}]},{"type":"aside","style":"important","name":"Important","content":[{"inlineContent":[{"text":"This connection ","type":"text"},{"type":"strong","inlineContent":[{"text":"MUST NOT","type":"text"}]},{"text":" be stored outside of the closure. It is only available exclusively within the closure.","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All operations should be done inside the closure as chained "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" callbacks."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"syntax":"swift","type":"codeListing","code":["let countFuture = pool.leaseConnection {","    let client = $0.logging(to: myLogger)","    return client.authorize(with: userPassword)","        .flatMap { connection.select(database: userDatabase) }","        .flatMap { connection.increment(counterKey) }","}"]},{"type":"aside","style":"warning","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Some commands change the state of the connection that are not tracked client-side,"},{"type":"text","text":" "},{"type":"text","text":"and will not be automatically reset when the connection is returned to the pool."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the connection is reused from the pool, it will retain this state and may affect future commands executed with it."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, if "},{"code":"select(database:)","type":"codeVoice"},{"type":"text","text":" is used, all future commands made with this connection will be against the selected database."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To protect against future issues, make sure the final commands executed are to reset the connection to itâ€™s previous known state."}]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">"}],"title":"leaseConnection(_:)","externalID":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"HummingbirdRedis"}],"extendedModule":"HummingbirdRedis","role":"symbol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/leaseConnection(_:)":{"type":"topic","abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"role":"symbol","kind":"symbol","title":"leaseConnection(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdRedis","kind":"symbol","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","role":"collection","type":"topic"},"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolService"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolService"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","title":"RedisConnectionPoolService"}}}