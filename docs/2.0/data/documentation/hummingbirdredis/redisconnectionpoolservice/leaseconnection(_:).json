{"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"method","externalID":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"leaseConnection","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T"},{"text":">","kind":"text"}],"extendedModule":"HummingbirdRedis","roleHeading":"Instance Method","title":"leaseConnection(_:)","role":"symbol","modules":[{"name":"HummingbirdRedis"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"operation","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"RedisConnection","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC"},{"kind":"text","text":") -> "},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that receives exclusive access to the provided "},{"type":"codeVoice","code":"RedisConnection"},{"type":"text","text":" for the lifetime of the closure for specialized Redis command chains."}],"type":"paragraph"}],"name":"operation"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":" that resolves the value of the ","type":"text"},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":" in the provided closure operation.","type":"text"}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"style":"warning","name":"Warning","type":"aside","content":[{"inlineContent":[{"text":"Attempting to create PubSub subscriptions with connections leased in the closure will result in a failed ","type":"text"},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":".","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"code":"RedisConnectionPool","type":"codeVoice"},{"type":"text","text":" manages PubSub state and requires exclusive control over creating PubSub subscriptions."}]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"This connection "},{"inlineContent":[{"type":"text","text":"MUST NOT"}],"type":"strong"},{"text":" be stored outside of the closure. It is only available exclusively within the closure.","type":"text"}],"type":"paragraph"}],"style":"important","name":"Important"},{"inlineContent":[{"type":"text","text":"All operations should be done inside the closure as chained "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":" callbacks.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example:"}],"type":"paragraph"},{"syntax":"swift","code":["let countFuture = pool.leaseConnection {","    let client = $0.logging(to: myLogger)","    return client.authorize(with: userPassword)","        .flatMap { connection.select(database: userDatabase) }","        .flatMap { connection.increment(counterKey) }","}"],"type":"codeListing"},{"type":"aside","name":"Warning","style":"warning","content":[{"inlineContent":[{"text":"Some commands change the state of the connection that are not tracked client-side,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and will not be automatically reset when the connection is returned to the pool."}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"text":"When the connection is reused from the pool, it will retain this state and may affect future commands executed with it.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example, if "},{"code":"select(database:)","type":"codeVoice"},{"type":"text","text":" is used, all future commands made with this connection will be against the selected database."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To protect against future issues, make sure the final commands executed are to reset the connection to itâ€™s previous known state."}]}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"topic","kind":"symbol","title":"HummingbirdRedis","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","kind":"symbol","role":"symbol","title":"RedisConnectionPoolService","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RedisConnectionPoolService"}],"navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolService"}],"abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","kind":"article","title":"Hummingbird Documentation","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/leaseConnection(_:)":{"kind":"symbol","role":"symbol","abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"title":"leaseConnection(_:)","type":"topic","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"RedisConnection","preciseIdentifier":"s:9RediStack15RedisConnectionC"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"kind":"text","text":">) -> "},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp"},{"text":">","kind":"text"}]}}}