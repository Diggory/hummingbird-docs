{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:9RediStack15RedisConnectionC","kind":"typeIdentifier","text":"RedisConnection"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"HummingbirdRedis"}],"title":"leaseConnection(_:)","extendedModule":"HummingbirdRedis","externalID":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF","symbolKind":"method"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"operation"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack15RedisConnectionC","text":"RedisConnection"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T"},{"kind":"text","text":">"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A closure that receives exclusive access to the provided ","type":"text"},{"type":"codeVoice","code":"RedisConnection"},{"text":" for the lifetime of the closure for specialized Redis command chains.","type":"text"}],"type":"paragraph"}],"name":"operation"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" that resolves the value of the "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" in the provided closure operation."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"style":"warning","content":[{"inlineContent":[{"type":"text","text":"Attempting to create PubSub subscriptions with connections leased in the closure will result in a failed "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","name":"Warning"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"RedisConnectionPool"},{"type":"text","text":" manages PubSub state and requires exclusive control over creating PubSub subscriptions."}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This connection "},{"type":"strong","inlineContent":[{"type":"text","text":"MUST NOT"}]},{"type":"text","text":" be stored outside of the closure. It is only available exclusively within the closure."}]}],"type":"aside","name":"Important"},{"type":"paragraph","inlineContent":[{"text":"All operations should be done inside the closure as chained ","type":"text"},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"text":" callbacks.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example:","type":"text"}]},{"code":["let countFuture = pool.leaseConnection {","    let client = $0.logging(to: myLogger)","    return client.authorize(with: userPassword)","        .flatMap { connection.select(database: userDatabase) }","        .flatMap { connection.increment(counterKey) }","}"],"type":"codeListing","syntax":"swift"},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"text":"Some commands change the state of the connection that are not tracked client-side,","type":"text"},{"text":" ","type":"text"},{"text":"and will not be automatically reset when the connection is returned to the pool.","type":"text"}]}],"type":"aside","name":"Warning"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the connection is reused from the pool, it will retain this state and may affect future commands executed with it."}]},{"type":"paragraph","inlineContent":[{"text":"For example, if ","type":"text"},{"code":"select(database:)","type":"codeVoice"},{"text":" is used, all future commands made with this connection will be against the selected database.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To protect against future issues, make sure the final commands executed are to reset the connection to itâ€™s previous known state."}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"]]},"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"type":"topic","title":"HummingbirdRedis","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","role":"collection","url":"\/documentation\/hummingbirdredis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}],"title":"RedisConnectionPoolService","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/leaseConnection(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leaseConnection"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"preciseIdentifier":"s:9RediStack15RedisConnectionC","kind":"typeIdentifier","text":"RedisConnection"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis0B21ConnectionPoolServiceV05leaseC0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bC0CclF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/leaseConnection(_:)","title":"leaseConnection(_:)","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/leaseconnection(_:)","abstract":[{"type":"text","text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations."}]}}}