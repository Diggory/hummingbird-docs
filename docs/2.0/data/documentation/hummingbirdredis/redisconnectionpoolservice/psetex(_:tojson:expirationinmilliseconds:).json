{"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"psetex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expirationInMilliseconds","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"expiration","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key to use to uniquely identify this value."}]}],"name":"key"},{"content":[{"inlineContent":[{"text":"The value to set the key to.","type":"text"}],"type":"paragraph"}],"name":"value"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The number of milliseconds after which to expire the key.","type":"text"}]}],"name":"expiration"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":" that resolves if the operation was successful.","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"isActive":true,"identifier":"https:\/\/redis.io\/commands\/psetex","type":"reference"}]},{"style":"important","name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Regardless of the type of data stored at the key, it will be overwritten to a “string” data type."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"ie. If the key is a reference to a Sorted Set, its value will be overwritten to be a “string” data type."}]},{"style":"important","name":"Important","type":"aside","content":[{"inlineContent":[{"type":"text","text":"The actual expiration used will be the specified value or "},{"code":"1","type":"codeVoice"},{"type":"text","text":", whichever is larger."}],"type":"paragraph"}]}]}],"abstract":[{"text":"Sets a key to the provided value and an expiration timeout in milliseconds.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"]]},"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/psetex(_:tojson:expirationinmilliseconds:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/psetex(_:toJSON:expirationInMilliseconds:)"},"metadata":{"title":"psetex(_:toJSON:expirationInMilliseconds:)","symbolKind":"method","extendedModule":"RediStack","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"psetex"},{"kind":"text","text":"("},{"preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier","text":"RedisKey"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"},{"text":", ","kind":"text"},{"text":"expirationInMilliseconds","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"role":"symbol","roleHeading":"Instance Method","modules":[{"relatedModules":["RediStack"],"name":"HummingbirdRedis"}],"externalID":"s:9RediStack11RedisClientP011HummingbirdC0E6psetex_6toJSON24expirationInMilliseconds7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__SitSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/RedisClient-Implementations":{"type":"topic","title":"RedisClient Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations","kind":"article","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/psetex(_:toJSON:expirationInMilliseconds:)":{"kind":"symbol","title":"psetex(_:toJSON:expirationInMilliseconds:)","abstract":[{"text":"Sets a key to the provided value and an expiration timeout in milliseconds.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"psetex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RedisKey","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expirationInMilliseconds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/psetex(_:toJSON:expirationInMilliseconds:)","type":"topic","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/psetex(_:tojson:expirationinmilliseconds:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"type":"topic","title":"RedisConnectionPoolService","navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}],"abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","kind":"symbol","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice"},"https://redis.io/commands/psetex":{"title":"https:\/\/redis.io\/commands\/psetex","titleInlineContent":[{"text":"https:\/\/redis.io\/commands\/psetex","type":"text"}],"identifier":"https:\/\/redis.io\/commands\/psetex","type":"link","url":"https:\/\/redis.io\/commands\/psetex"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"type":"topic","title":"HummingbirdRedis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","url":"\/documentation\/hummingbirdredis"}}}