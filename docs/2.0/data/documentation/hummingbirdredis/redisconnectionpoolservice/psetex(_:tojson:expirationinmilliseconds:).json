{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"psetex"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier","text":"RedisKey"},{"kind":"text","text":", "},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expirationInMilliseconds","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"expiration","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"key","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key to use to uniquely identify this value."}]}]},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The value to set the key to.","type":"text"}]}]},{"name":"expiration","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of milliseconds after which to expire the key."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"NIO.EventLoopFuture","type":"codeVoice"},{"text":" that resolves if the operation was successful.","type":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"See ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/redis.io\/commands\/psetex"}],"type":"paragraph"},{"style":"important","content":[{"inlineContent":[{"type":"text","text":"Regardless of the type of data stored at the key, it will be overwritten to a “string” data type."}],"type":"paragraph"}],"type":"aside","name":"Important"},{"inlineContent":[{"type":"text","text":"ie. If the key is a reference to a Sorted Set, its value will be overwritten to be a “string” data type."}],"type":"paragraph"},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The actual expiration used will be the specified value or "},{"type":"codeVoice","code":"1"},{"type":"text","text":", whichever is larger."}]}],"type":"aside","name":"Important"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"]]},"abstract":[{"type":"text","text":"Sets a key to the provided value and an expiration timeout in milliseconds."}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/psetex(_:toJSON:expirationInMilliseconds:)"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"relatedModules":["RediStack"],"name":"HummingbirdRedis"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"psetex","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RedisKey","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"},{"text":", ","kind":"text"},{"text":"expirationInMilliseconds","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"role":"symbol","extendedModule":"RediStack","externalID":"s:9RediStack11RedisClientP011HummingbirdC0E6psetex_6toJSON24expirationInMilliseconds7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__SitSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV","title":"psetex(_:toJSON:expirationInMilliseconds:)","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/psetex(_:tojson:expirationinmilliseconds:)"]}],"references":{"https://redis.io/commands/psetex":{"titleInlineContent":[{"text":"https:\/\/redis.io\/commands\/psetex","type":"text"}],"url":"https:\/\/redis.io\/commands\/psetex","title":"https:\/\/redis.io\/commands\/psetex","identifier":"https:\/\/redis.io\/commands\/psetex","type":"link"},"logo.png":{"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/RedisClient-Implementations":{"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations","type":"topic","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations","role":"collectionGroup","title":"RedisClient Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/psetex(_:toJSON:expirationInMilliseconds:)":{"abstract":[{"type":"text","text":"Sets a key to the provided value and an expiration timeout in milliseconds."}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/psetex(_:tojson:expirationinmilliseconds:)","title":"psetex(_:toJSON:expirationInMilliseconds:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/psetex(_:toJSON:expirationInMilliseconds:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"psetex","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expirationInMilliseconds","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","role":"symbol","title":"RedisConnectionPoolService","navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdredis","role":"collection","title":"HummingbirdRedis","kind":"symbol"}}}