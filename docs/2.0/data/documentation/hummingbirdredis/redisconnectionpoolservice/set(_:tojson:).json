{"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"relatedModules":["RediStack"],"name":"HummingbirdRedis"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier","text":"RedisKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":">","kind":"text"}],"role":"symbol","title":"set(_:toJSON:)","extendedModule":"RediStack","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__tSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"RedisKey","preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"key","content":[{"type":"paragraph","inlineContent":[{"text":"The key to use to uniquely identify this value.","type":"text"}]}]},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to set the key to."}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that resolves if the operation was successful.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Any previous expiration set on the key is discarded if the SET operation was successful.","type":"text"}]},{"content":[{"inlineContent":[{"type":"text","text":"Regardless of the type of value stored at the key, it will be overwritten to a string value."}],"type":"paragraph"}],"type":"aside","name":"Important","style":"important"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/redis.io\/commands\/set","isActive":true}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"]]},"kind":"symbol","abstract":[{"type":"text","text":"Sets the value stored in the key provided, overwriting the previous value."}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"type":"topic","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolService"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","kind":"symbol","title":"RedisConnectionPoolService","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolService"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/RedisClient-Implementations":{"title":"RedisClient Implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations","kind":"article","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations","role":"collectionGroup","abstract":[]},"https://redis.io/commands/set":{"title":"https:\/\/redis.io\/commands\/set","type":"link","titleInlineContent":[{"type":"text","text":"https:\/\/redis.io\/commands\/set"}],"identifier":"https:\/\/redis.io\/commands\/set","url":"https:\/\/redis.io\/commands\/set"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/set(_:toJSON:)":{"title":"set(_:toJSON:)","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Sets the value stored in the key provided, overwriting the previous value."}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"type":"topic","url":"\/documentation\/hummingbirdredis","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis"}}}