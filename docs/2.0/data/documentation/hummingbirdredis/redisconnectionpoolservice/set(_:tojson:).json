{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"RedisKey","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}]}]},{"parameters":[{"name":"key","content":[{"type":"paragraph","inlineContent":[{"text":"The key to use to uniquely identify this value.","type":"text"}]}]},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to set the key to."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that resolves if the operation was successful."}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"Any previous expiration set on the key is discarded if the SET operation was successful.","type":"text"}],"type":"paragraph"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Regardless of the type of value stored at the key, it will be overwritten to a string value.","type":"text"}]}],"style":"important","name":"Important"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/redis.io\/commands\/set","type":"reference"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Sets the value stored in the key provided, overwriting the previous value.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"]]},"metadata":{"title":"set(_:toJSON:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","externalID":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__tSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV","modules":[{"relatedModules":["RediStack"],"name":"HummingbirdRedis"}],"roleHeading":"Instance Method","role":"symbol","extendedModule":"RediStack"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"topic","role":"collection","url":"\/documentation\/hummingbirdredis","title":"HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/RedisClient-Implementations":{"type":"topic","abstract":[],"title":"RedisClient Implementations","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/set(_:toJSON:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Sets the value stored in the key provided, overwriting the previous value."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:)","title":"set(_:toJSON:)","type":"topic","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:)","kind":"symbol","role":"symbol"},"https://redis.io/commands/set":{"title":"https:\/\/redis.io\/commands\/set","url":"https:\/\/redis.io\/commands\/set","titleInlineContent":[{"type":"text","text":"https:\/\/redis.io\/commands\/set"}],"identifier":"https:\/\/redis.io\/commands\/set","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"title":"RedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}],"abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","role":"symbol"}}}