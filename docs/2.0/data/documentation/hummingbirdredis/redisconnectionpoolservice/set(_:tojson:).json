{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier","text":"RedisKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key to use to uniquely identify this value."}]}],"name":"key"},{"content":[{"inlineContent":[{"type":"text","text":"The value to set the key to."}],"type":"paragraph"}],"name":"value"}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that resolves if the operation was successful."}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"Any previous expiration set on the key is discarded if the SET operation was successful."}],"type":"paragraph"},{"style":"important","type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"Regardless of the type of value stored at the key, it will be overwritten to a string value.","type":"text"}]}]},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/redis.io\/commands\/set"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"]]},"abstract":[{"type":"text","text":"Sets the value stored in the key provided, overwriting the previous value."}],"sections":[],"metadata":{"extendedModule":"RediStack","modules":[{"relatedModules":["RediStack"],"name":"HummingbirdRedis"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RedisKey","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__tSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV","title":"set(_:toJSON:)","symbolKind":"method"},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/RedisClient-Implementations":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations","title":"RedisClient Implementations","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolService"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolService"}],"title":"RedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","title":"HummingbirdRedis","url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/set(_:toJSON:)":{"role":"symbol","title":"set(_:toJSON:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RedisKey","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Sets the value stored in the key provided, overwriting the previous value."}],"kind":"symbol","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:)"},"https://redis.io/commands/set":{"identifier":"https:\/\/redis.io\/commands\/set","title":"https:\/\/redis.io\/commands\/set","titleInlineContent":[{"text":"https:\/\/redis.io\/commands\/set","type":"text"}],"url":"https:\/\/redis.io\/commands\/set","type":"link"}}}