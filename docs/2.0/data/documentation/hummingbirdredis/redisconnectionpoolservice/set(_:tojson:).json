{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key to use to uniquely identify this value."}]}],"name":"key"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to set the key to."}]}],"name":"value"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that resolves if the operation was successful."}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Any previous expiration set on the key is discarded if the SET operation was successful.","type":"text"}]},{"type":"aside","style":"important","content":[{"inlineContent":[{"type":"text","text":"Regardless of the type of value stored at the key, it will be overwritten to a string value."}],"type":"paragraph"}],"name":"Important"},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/redis.io\/commands\/set","type":"reference"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:)"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:)"]}],"abstract":[{"type":"text","text":"Sets the value stored in the key provided, overwriting the previous value."}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"modules":[{"name":"HummingbirdRedis","relatedModules":["RediStack"]}],"title":"set(_:toJSON:)","role":"symbol","symbolKind":"method","externalID":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON7NIOCore15EventLoopFutureCyytGAA0C3KeyV_qd__tSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV","extendedModule":"RediStack","roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis","role":"collection","url":"\/documentation\/hummingbirdredis","kind":"symbol","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/set(_:toJSON:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"preciseIdentifier":"s:9RediStack8RedisKeyV","kind":"typeIdentifier","text":"RedisKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:)","abstract":[{"type":"text","text":"Sets the value stored in the key provided, overwriting the previous value."}],"title":"set(_:toJSON:)","role":"symbol","kind":"symbol"},"https://redis.io/commands/set":{"url":"https:\/\/redis.io\/commands\/set","type":"link","identifier":"https:\/\/redis.io\/commands\/set","title":"https:\/\/redis.io\/commands\/set","titleInlineContent":[{"type":"text","text":"https:\/\/redis.io\/commands\/set"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","title":"RedisConnectionPoolService","role":"symbol","navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/RedisClient-Implementations":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations","title":"RedisClient Implementations","role":"collectionGroup","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations","kind":"article","abstract":[]}}}