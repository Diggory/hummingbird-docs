{"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/setnx(_:tojson:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Sets the key to the provided value if the key does not exist."}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setnx"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RedisKey","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:9RediStack11RedisClientP011HummingbirdC0E5setnx_6toJSON7NIOCore15EventLoopFutureCySbGAA0C3KeyV_qd__tSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV","symbolKind":"method","role":"symbol","extendedModule":"RediStack","roleHeading":"Instance Method","modules":[{"relatedModules":["RediStack"],"name":"HummingbirdRedis"}],"title":"setnx(_:toJSON:)"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/setnx(_:toJSON:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setnx"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:SE","text":"Encodable"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"key","content":[{"inlineContent":[{"type":"text","text":"The key to use to uniquely identify this value."}],"type":"paragraph"}]},{"name":"value","content":[{"inlineContent":[{"type":"text","text":"The value to set the key to."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the operation successfully completed.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/redis.io\/commands\/setnx","type":"reference"}],"type":"paragraph"},{"style":"important","name":"Important","content":[{"inlineContent":[{"text":"Regardless of the type of data stored at the key, it will be overwritten to a “string” data type.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"inlineContent":[{"text":"ie. If the key is a reference to a Sorted Set, its value will be overwritten to be a “string” data type.","type":"text"}],"type":"paragraph"}]}],"references":{"https://redis.io/commands/setnx":{"type":"link","identifier":"https:\/\/redis.io\/commands\/setnx","titleInlineContent":[{"type":"text","text":"https:\/\/redis.io\/commands\/setnx"}],"title":"https:\/\/redis.io\/commands\/setnx","url":"https:\/\/redis.io\/commands\/setnx"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdRedis","kind":"symbol","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/RedisClient-Implementations":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations","abstract":[],"type":"topic","role":"collectionGroup","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations","title":"RedisClient Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolService"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolService"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","title":"RedisConnectionPoolService"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/setnx(_:toJSON:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/setnx(_:toJSON:)","abstract":[{"type":"text","text":"Sets the key to the provided value if the key does not exist."}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/setnx(_:tojson:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setnx"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey"},{"kind":"text","text":", "},{"kind":"externalParam","text":"toJSON"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":">","kind":"text"}],"title":"setnx(_:toJSON:)","role":"symbol","kind":"symbol","type":"topic"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}]}}}