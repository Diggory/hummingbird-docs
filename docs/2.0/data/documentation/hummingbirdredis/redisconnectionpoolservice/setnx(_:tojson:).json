{"metadata":{"externalID":"s:9RediStack11RedisClientP011HummingbirdC0E5setnx_6toJSON7NIOCore15EventLoopFutureCySbGAA0C3KeyV_qd__tSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV","title":"setnx(_:toJSON:)","extendedModule":"RediStack","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setnx","kind":"identifier"},{"text":"(","kind":"text"},{"text":"RedisKey","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"HummingbirdRedis","relatedModules":["RediStack"]}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setnx","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"]}]},{"parameters":[{"name":"key","content":[{"type":"paragraph","inlineContent":[{"text":"The key to use to uniquely identify this value.","type":"text"}]}]},{"name":"value","content":[{"inlineContent":[{"text":"The value to set the key to.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the operation successfully completed.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/redis.io\/commands\/setnx","type":"reference"}],"type":"paragraph"},{"style":"important","name":"Important","type":"aside","content":[{"inlineContent":[{"text":"Regardless of the type of data stored at the key, it will be overwritten to a “string” data type.","type":"text"}],"type":"paragraph"}]},{"inlineContent":[{"text":"ie. If the key is a reference to a Sorted Set, its value will be overwritten to be a “string” data type.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"text":"Sets the key to the provided value if the key does not exist.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"]]},"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/setnx(_:tojson:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/setnx(_:toJSON:)"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/RedisClient-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations","title":"RedisClient Implementations","type":"topic","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations","abstract":[],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","title":"RedisConnectionPoolService","type":"topic","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolService"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolService"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"kind":"symbol","type":"topic","title":"HummingbirdRedis","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"url":"\/documentation\/hummingbirdredis"},"https://redis.io/commands/setnx":{"url":"https:\/\/redis.io\/commands\/setnx","title":"https:\/\/redis.io\/commands\/setnx","type":"link","identifier":"https:\/\/redis.io\/commands\/setnx","titleInlineContent":[{"type":"text","text":"https:\/\/redis.io\/commands\/setnx"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/setnx(_:toJSON:)":{"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/setnx(_:tojson:)","title":"setnx(_:toJSON:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setnx","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Sets the key to the provided value if the key does not exist."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/setnx(_:toJSON:)","role":"symbol"}}}