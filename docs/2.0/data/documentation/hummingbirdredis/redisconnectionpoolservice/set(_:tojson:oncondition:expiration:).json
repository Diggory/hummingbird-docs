{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"RedisKey","preciseIdentifier":"s:9RediStack8RedisKeyV"},{"text":", ","kind":"text"},{"text":"toJSON","kind":"externalParam"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onCondition"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack24RedisSetCommandConditionV","text":"RedisSetCommandCondition","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"expiration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9RediStack25RedisSetCommandExpirationV","kind":"typeIdentifier","text":"RedisSetCommandExpiration"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"RedisSetCommandResult","preciseIdentifier":"s:9RediStack21RedisSetCommandResultO","kind":"typeIdentifier"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"HummingbirdRedis","relatedModules":["RediStack"]}],"title":"set(_:toJSON:onCondition:expiration:)","externalID":"s:9RediStack11RedisClientP011HummingbirdC0E3set_6toJSON11onCondition10expirationAA0C16SetCommandResultOAA0C3KeyV_qd__AA0clmJ0VAA0clM10ExpirationVSgtYaKSERd__lF::SYNTHESIZED::s:16HummingbirdRedis0B21ConnectionPoolServiceV","extendedModule":"RediStack"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:onCondition:expiration:)"},"kind":"symbol","abstract":[{"type":"text","text":"Sets the key to the provided value with options to control how it is set."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"toJSON","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"onCondition","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"condition","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack24RedisSetCommandConditionV","kind":"typeIdentifier","text":"RedisSetCommandCondition"},{"kind":"text","text":" = .none, "},{"kind":"externalParam","text":"expiration"},{"text":": ","kind":"text"},{"text":"RedisSetCommandExpiration","kind":"typeIdentifier","preciseIdentifier":"s:9RediStack25RedisSetCommandExpirationV"},{"text":"? = nil) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack21RedisSetCommandResultO","text":"RedisSetCommandResult"}]}],"kind":"declarations"},{"parameters":[{"name":"key","content":[{"type":"paragraph","inlineContent":[{"text":"The key to use to uniquely identify this value.","type":"text"}]}]},{"name":"value","content":[{"inlineContent":[{"type":"text","text":"The value to set the key to."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The condition under which the key should be set.","type":"text"}],"type":"paragraph"}],"name":"condition"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The expiration to use when setting the key. No expiration is set if ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}],"name":"expiration"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"NIO.EventLoopFuture"},{"type":"text","text":" indicating the result of the operation;"},{"text":" ","type":"text"},{"type":"codeVoice","code":".ok"},{"type":"text","text":" if the operation was successful and "},{"type":"codeVoice","code":".conditionNotMet"},{"type":"text","text":" if the specified "},{"type":"codeVoice","code":"condition"},{"type":"text","text":" was not met."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/redis.io\/commands\/set","isActive":true}]},{"name":"Important","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Regardless of the type of data stored at the key, it will be overwritten to a “string” data type."}]}],"type":"aside"}]}],"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:oncondition:expiration:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/set(_:toJSON:onCondition:expiration:)":{"role":"symbol","abstract":[{"text":"Sets the key to the provided value with options to control how it is set.","type":"text"}],"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/set(_:tojson:oncondition:expiration:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/set(_:toJSON:onCondition:expiration:)","title":"set(_:toJSON:onCondition:expiration:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack8RedisKeyV","text":"RedisKey"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"toJSON"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"onCondition","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9RediStack24RedisSetCommandConditionV","text":"RedisSetCommandCondition","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expiration","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9RediStack25RedisSetCommandExpirationV","kind":"typeIdentifier","text":"RedisSetCommandExpiration"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack21RedisSetCommandResultO","text":"RedisSetCommandResult"}]},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","type":"topic","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","role":"collection","title":"HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","kind":"article","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"title":"Hummingbird Documentation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"https://redis.io/commands/set":{"titleInlineContent":[{"type":"text","text":"https:\/\/redis.io\/commands\/set"}],"title":"https:\/\/redis.io\/commands\/set","identifier":"https:\/\/redis.io\/commands\/set","type":"link","url":"https:\/\/redis.io\/commands\/set"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","kind":"symbol","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","title":"RedisConnectionPoolService","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolService","kind":"identifier"}],"navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService/RedisClient-Implementations":{"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice\/redisclient-implementations","kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService\/RedisClient-Implementations","title":"RedisClient Implementations","role":"collectionGroup"}}}