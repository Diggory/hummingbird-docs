{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice"]}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisConnectionPoolService","kind":"identifier"}],"symbolKind":"struct","externalID":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV","roleHeading":"Structure","navigatorTitle":[{"text":"HBRedisConnectionPoolService","kind":"identifier"}],"title":"HBRedisConnectionPoolService","modules":[{"name":"HummingbirdRedis"}],"role":"symbol"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"code":"HBRedisConnectionPoolService","type":"codeVoice"},{"text":" is a wrapper for a redis connection pool which also conforms to ","type":"text"},{"code":"Service","type":"codeVoice"},{"text":" from ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"text":".","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Create a Redis Connection Pool","let redis = try HBRedisConnectionPoolService(","    .init(","        hostname: Self.redisHostname, ","        port: 6379,","        pool: .init(maximumConnectionCount: 32)","    ),","    logger: Logger(label: \"Redis\")",")","\/\/ Call Redis function. Currently there are no async\/await versions ","\/\/ of the functions so have to call `get` to await for EventLoopFuture result","try await redis.set(\"Test\", to: \"hello\").get()"]},{"level":2,"text":"Service Lifecycle","anchor":"Service-Lifecycle","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given "},{"type":"codeVoice","code":"HBRedisConnectionPoolService"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Service"},{"type":"text","text":" you can have its lifecycle managed by either adding it to the Hummingbird "},{"type":"codeVoice","code":"ServiceGroup"},{"type":"text","text":" using "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication\/addServices(_:)","type":"reference","isActive":true},{"type":"text","text":" from "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication","type":"reference","isActive":true},{"type":"text","text":" or adding it to an independently managed "},{"type":"codeVoice","code":"ServiceGroup"},{"type":"text","text":"."}]}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"]]},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/9RediStack11RedisClientP","doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Conforms To","kind":"relationships"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration"],"title":"Connection Pool"}],"abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/init(_:eventLoopGroupProvider:logger:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/availableConnectionCount","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leasedConnectionCount","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/pool"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/activate(logger:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/close()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leaseConnection(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/updateConnectionAddresses(_:logger:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/RedisClient-Implementations"],"title":"Default Implementations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/RedisClient-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/RedisClient-Implementations","abstract":[],"title":"RedisClient Implementations","role":"collectionGroup","kind":"article","type":"topic","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/redisclient-implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/availableConnectionCount":{"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/availableconnectioncount","type":"topic","title":"availableConnectionCount","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/availableConnectionCount","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"availableConnectionCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"text":"The count of connections that are active and available for use.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","url":"\/documentation\/hummingbirdredis","type":"topic","kind":"symbol","title":"HummingbirdRedis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/activate(logger:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/activate(logger:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"activate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"?)"}],"title":"activate(logger:)","abstract":[{"type":"text","text":"Starts the connection pool."}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/activate(logger:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplication":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication","url":"\/documentation\/hummingbird\/hbapplication","role":"symbol","type":"topic","navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"title":"HBApplication","kind":"symbol","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/pool":{"title":"pool","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"pool"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9RediStack19RedisConnectionPoolC","text":"RedisConnectionPool"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/pool","type":"topic","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/pool","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConfiguration":{"navigatorTitle":[{"text":"HBRedisConfiguration","kind":"identifier"}],"url":"\/documentation\/hummingbirdredis\/hbredisconfiguration","title":"HBRedisConfiguration","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisConfiguration","kind":"identifier"}],"kind":"symbol","abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration"},"https://github.com/swift-server/swift-service-lifecycle":{"type":"link","title":"Swift Service Lifecycle","titleInlineContent":[{"type":"text","text":"Swift Service Lifecycle"}],"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService":{"role":"symbol","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","navigatorTitle":[{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"title":"HBRedisConnectionPoolService","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/id":{"type":"topic","title":"id","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/id","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/id","abstract":[{"type":"text","text":"A unique identifer to represent this connection."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/updateConnectionAddresses(_:logger:)":{"title":"updateConnectionAddresses(_:logger:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Updates the list of valid connection addresses."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/updateConnectionAddresses(_:logger:)","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/updateconnectionaddresses(_:logger:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateConnectionAddresses"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier","text":"SocketAddress"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"text":"?)","kind":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/init(_:eventLoopGroupProvider:logger:)":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV","kind":"typeIdentifier","text":"HBRedisConfiguration"},{"kind":"text","text":", "},{"text":"eventLoopGroupProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopGroupProvider","preciseIdentifier":"s:11Hummingbird22EventLoopGroupProviderO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/init(_:eventloopgroupprovider:logger:)","abstract":[{"type":"text","text":"Initialize RedisConnectionPoolService"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/init(_:eventLoopGroupProvider:logger:)","title":"init(_:eventLoopGroupProvider:logger:)"},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","title":"ServiceLifecycle.Service"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/leaseConnection(_:)":{"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leaseconnection(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leaseConnection","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"RedisConnection","preciseIdentifier":"s:9RediStack15RedisConnectionC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","preciseIdentifier":"s:16HummingbirdRedis28HBRedisConnectionPoolServiceV05leaseD0y7NIOCore15EventLoopFutureCyxGAH9RediStack0bD0CclF1TL_xmfp","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leaseConnection(_:)","abstract":[{"text":"Provides limited exclusive access to a connection to be used in a user-defined specialized closure of operations.","type":"text"}],"title":"leaseConnection(_:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplication/addServices(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addServices"},{"text":"(","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"},{"kind":"text","text":"...)"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication\/addServices(_:)","title":"addServices(_:)","kind":"symbol","url":"\/documentation\/hummingbird\/hbapplication\/addservices(_:)","role":"symbol","type":"topic","abstract":[{"text":"Add service to be managed by application ServiceGroup","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/leasedConnectionCount":{"type":"topic","title":"leasedConnectionCount","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/leasedConnectionCount","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leasedConnectionCount","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/leasedconnectioncount","abstract":[{"type":"text","text":"The number of connections that have been handed out and are in active use."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","title":"Hummingbird","role":"collection","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/9RediStack11RedisClientP":{"type":"unresolvable","title":"RediStack.RedisClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/9RediStack11RedisClientP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/run()":{"type":"topic","title":"run()","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/run()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/run()","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService/close()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","abstract":[{"text":"Closes all connections in the pool and deactivates the pool from creating new connections.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService\/close()","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice\/close()","title":"close()"}}}