{"topicSections":[{"title":"Additional Features","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]},{"title":"Articles","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax"]},{"title":"Template Library","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLibrary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTemplate"]},{"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"]},{"title":"Content Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentTypes"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParserContext"]}],"sections":[],"metadata":{"title":"Mustache","externalID":"Mustache","modules":[{"name":"Mustache"}],"role":"collection","symbolKind":"module","roleHeading":"Framework"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"},"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache"]}],"abstract":[{"text":"Mustache template engine.","type":"text"}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Mustache is a “logic-less” templating language commonly used in web and mobile platforms. You can find out more about Mustache "},{"identifier":"http:\/\/mustache.github.io\/mustache.5.html","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"While swift-mustache has been designed to be used with the Hummingbird server framework it has no dependencies and can be used as a standalone library.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Usage","anchor":"Usage","type":"heading"},{"inlineContent":[{"text":"Load your templates from the filesystem","type":"text"}],"type":"paragraph"},{"code":["let library = MustacheLibrary(\"folder\/my\/templates\/are\/in\")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"This will look for all the files with the extension “.mustache” in the specified folder and subfolders and attempt to load them. Each file is registed with the name of the file (with subfolder, if inside a subfolder) minus the “mustache” extension."}],"type":"paragraph"},{"inlineContent":[{"text":"Render an object with a template","type":"text"}],"type":"paragraph"},{"code":["let output = library.render(object, withTemplate: \"myTemplate\")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"code":"HummingbirdMustache","type":"codeVoice"},{"type":"text","text":" treats an object as a set of key\/value pairs when rendering and will render both dictionaries and objects via "},{"code":"Mirror","type":"codeVoice"},{"type":"text","text":" reflection. Find out more on how Mustache renders objects "},{"type":"reference","isActive":true,"identifier":"https:\/\/hummingbird-project.github.io\/hummingbird\/current\/hummingbird-mustache\/mustache-syntax.html"},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"text":"Support","anchor":"Support","type":"heading"},{"inlineContent":[{"text":"Hummingbird Mustache supports all standard Mustache tags and is fully compliant with the Mustache ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/mustache\/spec","isActive":true},{"text":" with the exception of the Lambda support.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","references":{"https://github.com/mustache/spec":{"url":"https:\/\/github.com\/mustache\/spec","type":"link","titleInlineContent":[{"text":"spec","type":"text"}],"identifier":"https:\/\/github.com\/mustache\/spec","title":"spec"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheContentType":{"navigatorTitle":[{"kind":"identifier","text":"MustacheContentType"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheContentType"}],"title":"MustacheContentType","url":"\/documentation\/mustache\/mustachecontenttype","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Protocol for content types"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentType"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTemplate":{"url":"\/documentation\/mustache\/mustachetemplate","title":"MustacheTemplate","type":"topic","navigatorTitle":[{"text":"MustacheTemplate","kind":"identifier"}],"abstract":[{"type":"text","text":"Class holding Mustache template"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTemplate"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTemplate","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"type":"topic","url":"\/documentation\/mustache\/mustacheparent","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"title":"MustacheParent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"url":"\/documentation\/mustache","title":"Mustache","type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"type":"topic","url":"\/documentation\/mustache\/mustachelambda","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}],"title":"MustacheLambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheSyntax":{"kind":"article","abstract":[{"text":"Overview of Mustache Syntax","type":"text"}],"url":"\/documentation\/hummingbird\/mustachesyntax","role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","title":"Mustache Syntax"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","url":"\/documentation\/hummingbird\/lambdas","title":"Lambdas","abstract":[{"text":"Hummingbird Mustache Lambda implementation","type":"text"}],"kind":"article","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TemplateInheritance":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TemplateInheritance","abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/templateinheritance","kind":"article","title":"Template Inheritance","role":"article"},"https://hummingbird-project.github.io/hummingbird/current/hummingbird-mustache/mustache-syntax.html":{"url":"https:\/\/hummingbird-project.github.io\/hummingbird\/current\/hummingbird-mustache\/mustache-syntax.html","type":"link","titleInlineContent":[{"text":"here","type":"text"}],"identifier":"https:\/\/hummingbird-project.github.io\/hummingbird\/current\/hummingbird-mustache\/mustache-syntax.html","title":"here"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"type":"topic","url":"\/documentation\/mustache\/mustachetransformable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"title":"MustacheTransformable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"url":"\/documentation\/hummingbird\/pragmas","title":"Pragmas\/Configuration variables","abstract":[{"text":"Setting template render configuration settings.","type":"text"}],"kind":"article","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParserContext":{"kind":"symbol","role":"symbol","abstract":[{"text":"context used in parser error","type":"text"}],"navigatorTitle":[{"text":"MustacheParserContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParserContext","kind":"identifier"}],"type":"topic","title":"MustacheParserContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParserContext","url":"\/documentation\/mustache\/mustacheparsercontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"kind":"article","abstract":[{"text":"Transforming objects during render","type":"text"}],"url":"\/documentation\/hummingbird\/transforms","role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","title":"Transforms"},"http://mustache.github.io/mustache.5.html":{"url":"http:\/\/mustache.github.io\/mustache.5.html","type":"link","titleInlineContent":[{"text":"here","type":"text"}],"identifier":"http:\/\/mustache.github.io\/mustache.5.html","title":"here"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheContentTypes":{"url":"\/documentation\/mustache\/mustachecontenttypes","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheContentTypes"}],"title":"MustacheContentTypes","abstract":[{"type":"text","text":"Map of strings to content types."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheContentTypes","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MustacheContentTypes"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLibrary":{"url":"\/documentation\/mustache\/mustachelibrary","title":"MustacheLibrary","type":"topic","navigatorTitle":[{"text":"MustacheLibrary","kind":"identifier"}],"abstract":[{"text":"Class holding a collection of mustache templates.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLibrary","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLibrary","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"type":"topic","url":"\/documentation\/mustache\/mustachecustomrenderable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheCustomRenderable"}],"title":"MustacheCustomRenderable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String(describing)"},{"text":".","type":"text"}],"role":"symbol"}}}