{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda"],"title":"Rendering","generated":true}],"metadata":{"symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheParent","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBMustacheParent","kind":"identifier"}],"modules":[{"name":"HummingbirdMustache"}],"externalID":"s:19HummingbirdMustache16HBMustacheParentP","roleHeading":"Protocol","title":"HBMustacheParent"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheParent","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/hummingbirdmustache\/hbmustacheparent"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent\/child(named:)"],"title":"Instance Methods"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheLambda":{"title":"HBMustacheLambda","type":"topic","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda","navigatorTitle":[{"kind":"identifier","text":"HBMustacheLambda"}],"role":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustachelambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheParent/child(named:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"child","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"named"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustacheparent\/child(named:)","abstract":[],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent\/child(named:)","title":"child(named:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheParent":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheParent","kind":"identifier"}],"navigatorTitle":[{"text":"HBMustacheParent","kind":"identifier"}],"title":"HBMustacheParent","kind":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustacheparent","type":"topic","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheCustomRenderable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheCustomRenderable"}],"abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBMustacheCustomRenderable"}],"title":"HBMustacheCustomRenderable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheTransformable","kind":"identifier"}],"abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","type":"topic","navigatorTitle":[{"text":"HBMustacheTransformable","kind":"identifier"}],"title":"HBMustacheTransformable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"url":"\/documentation\/hummingbirdmustache","type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","role":"collection","kind":"symbol","title":"HummingbirdMustache"}}}