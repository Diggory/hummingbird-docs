{"seeAlsoSections":[{"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda"],"generated":true}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"metadata":{"roleHeading":"Protocol","role":"symbol","externalID":"s:19HummingbirdMustache16HBMustacheParentP","symbolKind":"protocol","title":"HBMustacheParent","navigatorTitle":[{"text":"HBMustacheParent","kind":"identifier"}],"modules":[{"name":"HummingbirdMustache"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheParent","kind":"identifier"}]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent\/child(named:)"]}],"variants":[{"paths":["\/documentation\/hummingbirdmustache\/hbmustacheparent"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheParent"}],"languages":["swift"],"platforms":["Linux"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheParent/child(named:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent\/child(named:)","role":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustacheparent\/child(named:)","kind":"symbol","abstract":[],"title":"child(named:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"child","kind":"identifier"},{"text":"(","kind":"text"},{"text":"named","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"required":true,"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheCustomRenderable":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBMustacheCustomRenderable","kind":"identifier"}],"abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"code":"String(describing)","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable","title":"HBMustacheCustomRenderable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheCustomRenderable"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"url":"\/documentation\/hummingbirdmustache","abstract":[{"type":"text","text":"Mustache template engine."}],"kind":"symbol","role":"collection","type":"topic","title":"HummingbirdMustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheParent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","navigatorTitle":[{"text":"HBMustacheParent","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustacheparent","kind":"symbol","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"title":"HBMustacheParent","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheParent","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable":{"navigatorTitle":[{"text":"HBMustacheTransformable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable","kind":"symbol","role":"symbol","abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"title":"HBMustacheTransformable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheTransformable","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheLambda":{"title":"HBMustacheLambda","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheLambda","kind":"identifier"}],"url":"\/documentation\/hummingbirdmustache\/hbmustachelambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"navigatorTitle":[{"text":"HBMustacheLambda","kind":"identifier"}]}}}