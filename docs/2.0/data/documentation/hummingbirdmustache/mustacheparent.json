{"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/MustacheParent\/child(named:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/MustacheParent","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"kind":"symbol","seeAlsoSections":[{"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/MustacheLambda"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdmustache\/mustacheparent"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"sections":[],"metadata":{"symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"role":"symbol","roleHeading":"Protocol","navigatorTitle":[{"text":"MustacheParent","kind":"identifier"}],"externalID":"s:19HummingbirdMustache0B6ParentP","title":"MustacheParent","modules":[{"name":"HummingbirdMustache"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/MustacheTransformable":{"title":"MustacheTransformable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/MustacheTransformable","type":"topic","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdmustache\/mustachetransformable","navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/MustacheParent":{"title":"MustacheParent","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/MustacheParent","type":"topic","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"text":"of using Mirror","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdmustache\/mustacheparent","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/MustacheCustomRenderable":{"title":"MustacheCustomRenderable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheCustomRenderable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/MustacheCustomRenderable","type":"topic","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"code":"String(describing)","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdmustache\/mustachecustomrenderable","navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/MustacheParent/child(named:)":{"title":"child(named:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"child","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"named"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/MustacheParent\/child(named:)","type":"topic","abstract":[],"required":true,"kind":"symbol","url":"\/documentation\/hummingbirdmustache\/mustacheparent\/child(named:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/MustacheLambda":{"title":"MustacheLambda","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/MustacheLambda","type":"topic","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"kind":"symbol","url":"\/documentation\/hummingbirdmustache\/mustachelambda","navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"title":"HummingbirdMustache","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","type":"topic","abstract":[{"type":"text","text":"Mustache template engine."}],"kind":"symbol","url":"\/documentation\/hummingbirdmustache"}}}