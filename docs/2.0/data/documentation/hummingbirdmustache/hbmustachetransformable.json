{"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable\/transform(_:)"]}],"metadata":{"externalID":"s:19HummingbirdMustache23HBMustacheTransformableP","roleHeading":"Protocol","symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheTransformable"}],"title":"HBMustacheTransformable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMustacheTransformable"}],"modules":[{"name":"HummingbirdMustache"}]},"seeAlsoSections":[{"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda"],"generated":true}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheTransformable"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"The syntax for applying transforms is ","type":"text"},{"code":"{{transform(variable)}}","type":"codeVoice"},{"text":". Transforms can be applied to both","type":"text"},{"text":" ","type":"text"},{"text":"variables, sections and inverted sections.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A simple example would be ensuring a string is lowercase."}],"type":"paragraph"},{"syntax":null,"code":["{{lowercased(myString)}}"],"type":"codeListing"},{"inlineContent":[{"text":"If applying a transform to a sequence then the closing element of the sequence should include the","type":"text"},{"text":" ","type":"text"},{"text":"transform name eg","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"],"type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbirdmustache\/hbmustachetransformable"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"abstract":[{"text":"Mustache template engine.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","kind":"symbol","role":"collection","title":"HummingbirdMustache","url":"\/documentation\/hummingbirdmustache","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheParent":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMustacheParent","kind":"identifier"}],"navigatorTitle":[{"text":"HBMustacheParent","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustacheparent","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"type":"topic","title":"HBMustacheParent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheLambda":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheLambda"}],"navigatorTitle":[{"kind":"identifier","text":"HBMustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdmustache\/hbmustachelambda","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"type":"topic","title":"HBMustacheLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable":{"abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheTransformable"}],"title":"HBMustacheTransformable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable","navigatorTitle":[{"kind":"identifier","text":"HBMustacheTransformable"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable/transform(_:)":{"title":"transform(_:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable\/transform(_:)","type":"topic","abstract":[],"url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable\/transform(_:)","kind":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transform","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheCustomRenderable":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMustacheCustomRenderable"}],"abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"role":"symbol","title":"HBMustacheCustomRenderable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","url":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheCustomRenderable"}],"type":"topic"}}}