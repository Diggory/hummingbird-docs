{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cb"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" "},{"preciseIdentifier":"s:19HummingbirdMustache16HBMustacheLambdaV8Callbacka","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda\/Callback","text":"Callback"},{"kind":"text","text":")"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"function to be called by lambda"}]}],"name":"cb"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda\/init(_:)"},"abstract":[{"type":"text","text":"Initialize "},{"type":"codeVoice","code":"HBMustacheLambda"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda"]]},"metadata":{"modules":[{"name":"HummingbirdMustache"}],"symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Callback","preciseIdentifier":"s:19HummingbirdMustache16HBMustacheLambdaV8Callbacka"},{"kind":"text","text":")"}],"roleHeading":"Initializer","role":"symbol","title":"init(_:)","externalID":"s:19HummingbirdMustache16HBMustacheLambdaVyACSSyp_AA0C8TemplateCtccfc"},"variants":[{"paths":["\/documentation\/hummingbirdmustache\/hbmustachelambda\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"type":"topic","title":"HummingbirdMustache","url":"\/documentation\/hummingbirdmustache","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","kind":"symbol","abstract":[{"type":"text","text":"Mustache template engine."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheLambda":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"title":"HBMustacheLambda","url":"\/documentation\/hummingbirdmustache\/hbmustachelambda","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheLambda"}],"navigatorTitle":[{"kind":"identifier","text":"HBMustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheLambda/Callback":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda\/Callback","title":"HBMustacheLambda.Callback","url":"\/documentation\/hummingbirdmustache\/hbmustachelambda\/callback","abstract":[{"type":"text","text":"lambda callback"}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Callback","kind":"identifier"}],"navigatorTitle":[{"text":"Callback","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheLambda/init(_:)":{"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Callback","kind":"typeIdentifier","preciseIdentifier":"s:19HummingbirdMustache16HBMustacheLambdaV8Callbacka"},{"text":")","kind":"text"}],"title":"init(_:)","url":"\/documentation\/hummingbirdmustache\/hbmustachelambda\/init(_:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda\/init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Initialize "},{"code":"HBMustacheLambda","type":"codeVoice"}]}}}