{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody\/map(_:)-5zyt0"},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/map(_:)-5zyt0"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody\/AsyncSequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Transformed"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":">"}]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"code":"AsyncSequence.map(_:)","type":"codeVoice"},{"type":"text","text":"."}],"metadata":{"title":"map(_:)","extendedModule":"_Concurrency","roleHeading":"Instance Method","role":"symbol","externalID":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:15HummingbirdCore21HBStreamedRequestBodyV","modules":[{"relatedModules":["_Concurrency"],"name":"HummingbirdCore"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Transformed"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV","kind":"typeIdentifier","text":"AsyncMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":">"}],"symbolKind":"method","platforms":[{"unavailable":false,"beta":false,"name":"iOS","introducedAt":"13.0","deprecated":false},{"unavailable":false,"beta":false,"name":"macOS","introducedAt":"10.15","deprecated":false},{"unavailable":false,"beta":false,"name":"tvOS","introducedAt":"13.0","deprecated":false},{"unavailable":false,"beta":false,"name":"watchOS","introducedAt":"6.0","deprecated":false}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamedRequestBody/AsyncSequence-Implementations":{"url":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody\/AsyncSequence-Implementations","abstract":[],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamedRequestBody/map(_:)-5zyt0":{"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody\/map(_:)-5zyt0","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Transformed"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody\/map(_:)-5zyt0","title":"map(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamedRequestBody":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbstreamedrequestbody","navigatorTitle":[{"text":"HBStreamedRequestBody","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamedRequestBody","kind":"identifier"}],"title":"HBStreamedRequestBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamedRequestBody","abstract":[{"text":"A type that represents an HTTP request body.","type":"text"}]}}}