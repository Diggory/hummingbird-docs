{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Delegate","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Delegate"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","preciseIdentifier":"s:15HummingbirdCore28AvailableConnectionsDelegateP","text":"AvailableConnectionsDelegate","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"inlineContent":[{"text":"Handler is initialized with a delegate object that makes the decision on whether to accept a new connection","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/7NIOCore14ChannelHandlerP","doc:\/\/com.opticalaberration.hummingbird\/7NIOCore21ChannelInboundHandlerP","doc:\/\/com.opticalaberration.hummingbird\/7NIOCore22ChannelOutboundHandlerP"]}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","externalID":"s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","title":"AvailableConnectionsChannelHandler","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"symbolKind":"class","roleHeading":"Class","modules":[{"name":"HummingbirdCore"}]},"abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"seeAlsoSections":[{"anchor":"Server","title":"Server","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections"]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/init(delegate:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/init(maxConnections:)"],"title":"Initializers","anchor":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/channelRead(context:data:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/read(context:)"],"anchor":"Instance-Methods","generated":true},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundOut","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/OutboundIn","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/OutboundOut"],"anchor":"Type-Aliases","title":"Type Aliases"},{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelHandler-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelInboundHandler-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelOutboundHandler-Implementations"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannel":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannel","abstract":[{"text":"Generic server child channel setup protocol","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/serverchildchannel","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerChildChannel","kind":"identifier"}],"title":"ServerChildChannel","role":"symbol","navigatorTitle":[{"text":"ServerChildChannel","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/channelRead(context:data:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/channelRead(context:data:)","abstract":[],"title":"channelRead(context:data:)","type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelread(context:data:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"role":"collection","url":"\/documentation\/hummingbirdcore","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerChildChannelValue":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ServerChildChannelValue","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerChildChannelValue","url":"\/documentation\/hummingbirdcore\/serverchildchannelvalue","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ServerChildChannelValue"}],"title":"ServerChildChannelValue","abstract":[{"text":"Protocol for typed server child channel","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelInboundHandler-Implementations","kind":"article","title":"ChannelInboundHandler Implementations","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelinboundhandler-implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/OutboundIn":{"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/outboundin","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/OutboundIn","role":"symbol","title":"AvailableConnectionsChannelHandler.OutboundIn","abstract":[],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/init(delegate:)":{"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/init(delegate:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"delegate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Delegate","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore34AvailableConnectionsChannelHandlerC8Delegatexmfp"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initialize handler with a delegate defining when connections are available"}],"title":"init(delegate:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/init(delegate:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/MaximumAvailableConnections":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/MaximumAvailableConnections","kind":"symbol","title":"MaximumAvailableConnections","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MaximumAvailableConnections"}],"type":"topic","role":"symbol","abstract":[{"text":"Implementation of ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","isActive":true,"type":"reference"},{"type":"text","text":" that sets a maximum limit to the number"},{"type":"text","text":" "},{"type":"text","text":"of open connections"}],"url":"\/documentation\/hummingbirdcore\/maximumavailableconnections","navigatorTitle":[{"kind":"identifier","text":"MaximumAvailableConnections"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ServerConfiguration":{"title":"ServerConfiguration","abstract":[{"text":"HTTP server configuration","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ServerConfiguration","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ServerConfiguration"}],"navigatorTitle":[{"text":"ServerConfiguration","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/serverconfiguration"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/ChannelHandler-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelHandler-Implementations","abstract":[],"title":"ChannelHandler Implementations","type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelhandler-implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/read(context:)":{"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/read(context:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"abstract":[],"title":"read(context:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/read(context:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/7NIOCore14ChannelHandlerP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore14ChannelHandlerP","title":"NIOCore.ChannelHandler"},"doc://com.opticalaberration.hummingbird/7NIOCore22ChannelOutboundHandlerP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore22ChannelOutboundHandlerP","title":"NIOCore.ChannelOutboundHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/InboundOut":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundOut","abstract":[],"title":"AvailableConnectionsChannelHandler.InboundOut","type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundout","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"InboundOut","kind":"identifier"}],"navigatorTitle":[{"text":"InboundOut","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/ChannelOutboundHandler-Implementations":{"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channeloutboundhandler-implementations","abstract":[],"title":"ChannelOutboundHandler Implementations","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelOutboundHandler-Implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/7NIOCore21ChannelInboundHandlerP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore21ChannelInboundHandlerP","title":"NIOCore.ChannelInboundHandler","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/InboundIn":{"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InboundIn"}],"abstract":[],"title":"AvailableConnectionsChannelHandler.InboundIn","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"title":"AvailableConnectionsChannelHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/init(maxConnections:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/init(maxConnections:)","abstract":[{"text":"Initialize handler to only make a set number of connections available","type":"text"}],"title":"init(maxConnections:)","type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/init(maxconnections:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"maxConnections","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/BindAddress":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindAddress","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/bindaddress","navigatorTitle":[{"text":"BindAddress","kind":"identifier"}],"type":"topic","title":"BindAddress","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/BindAddress","abstract":[{"type":"text","text":"Address to bind server to"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/OutboundOut":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OutboundOut"}],"kind":"symbol","title":"AvailableConnectionsChannelHandler.OutboundOut","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/OutboundOut","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/outboundout","abstract":[],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsDelegate":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"type":"topic","abstract":[{"type":"text","text":"Delegate for "},{"code":"AvailableConnectionsChannelHandler","type":"codeVoice"},{"text":" that defines if we should accept","type":"text"}],"title":"AvailableConnectionsDelegate","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsDelegate"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsDelegate","url":"\/documentation\/hummingbirdcore\/availableconnectionsdelegate"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Server":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Server","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Server","kind":"identifier"}],"navigatorTitle":[{"text":"Server","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/server","kind":"symbol","type":"topic","title":"Server","abstract":[{"text":"HTTP server class","type":"text"}],"role":"symbol"}}}