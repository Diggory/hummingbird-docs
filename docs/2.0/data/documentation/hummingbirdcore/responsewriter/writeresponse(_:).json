{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"consuming","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"writeResponse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"head","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponse","preciseIdentifier":"s:9HTTPTypes12HTTPResponseV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"head","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Response head"}]}]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/responsewriter\/writeresponse(_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"modules":[{"name":"HummingbirdCore"}],"roleHeading":"Instance Method","externalID":"s:15HummingbirdCore14ResponseWriterV05writeC0yy9HTTPTypes12HTTPResponseVYaKF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeResponse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HTTPResponse","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes12HTTPResponseV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","title":"writeResponse(_:)"},"abstract":[{"type":"text","text":"Write full HTTP response that doesn’t include a body"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter\/writeResponse(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/responsewriter","kind":"symbol","title":"ResponseWriter","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseWriter"}],"type":"topic","abstract":[{"text":"ResponseWriter that writes directly to AsyncChannel","type":"text"}],"navigatorTitle":[{"text":"ResponseWriter","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter/writeResponse(_:)":{"type":"topic","title":"writeResponse(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter\/writeResponse(_:)","url":"\/documentation\/hummingbirdcore\/responsewriter\/writeresponse(_:)","abstract":[{"text":"Write full HTTP response that doesn’t include a body","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"writeResponse","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"HTTPResponse","preciseIdentifier":"s:9HTTPTypes12HTTPResponseV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCore","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"}}}