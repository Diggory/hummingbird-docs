{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"symbol","externalID":"s:15HummingbirdCore14ResponseWriterV05writeC0yy9HTTPTypes12HTTPResponseVYaKF","title":"writeResponse(_:)","modules":[{"name":"HummingbirdCore"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeResponse"},{"kind":"text","text":"("},{"preciseIdentifier":"s:9HTTPTypes12HTTPResponseV","text":"HTTPResponse","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter"]]},"abstract":[{"type":"text","text":"Write full HTTP response that doesn’t include a body"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"consuming","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"writeResponse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"head","kind":"internalParam"},{"kind":"text","text":": "},{"text":"HTTPResponse","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes12HTTPResponseV"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"Response head","type":"text"}],"type":"paragraph"}],"name":"head"}],"kind":"parameters"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter\/writeResponse(_:)"},"variants":[{"paths":["\/documentation\/hummingbirdcore\/responsewriter\/writeresponse(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter":{"title":"ResponseWriter","type":"topic","url":"\/documentation\/hummingbirdcore\/responsewriter","role":"symbol","abstract":[{"text":"ResponseWriter that writes directly to AsyncChannel","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ResponseWriter","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","navigatorTitle":[{"text":"ResponseWriter","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCore","type":"topic"},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter/writeResponse(_:)":{"url":"\/documentation\/hummingbirdcore\/responsewriter\/writeresponse(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeResponse"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes12HTTPResponseV","kind":"typeIdentifier","text":"HTTPResponse"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"title":"writeResponse(_:)","type":"topic","abstract":[{"type":"text","text":"Write full HTTP response that doesn’t include a body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter\/writeResponse(_:)"}}}