{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"writeResponse"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes12HTTPResponseV","text":"HTTPResponse"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"roleHeading":"Instance Method","externalID":"s:15HummingbirdCore14ResponseWriterV05writeC0yy9HTTPTypes12HTTPResponseVYaKF","title":"writeResponse(_:)","modules":[{"name":"HummingbirdCore"}],"role":"symbol"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter\/writeResponse(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Write full HTTP response that doesn’t include a body"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"consuming"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeResponse","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"head"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes12HTTPResponseV","text":"HTTPResponse"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Response head"}],"type":"paragraph"}],"name":"head"}]}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/responsewriter\/writeresponse(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter/writeResponse(_:)":{"url":"\/documentation\/hummingbirdcore\/responsewriter\/writeresponse(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter\/writeResponse(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"writeResponse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HTTPResponse","preciseIdentifier":"s:9HTTPTypes12HTTPResponseV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Write full HTTP response that doesn’t include a body"}],"kind":"symbol","title":"writeResponse(_:)","type":"topic","role":"symbol"},"logo.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseWriter":{"type":"topic","kind":"symbol","title":"ResponseWriter","url":"\/documentation\/hummingbirdcore\/responsewriter","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseWriter"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseWriter","abstract":[{"text":"ResponseWriter that writes directly to AsyncChannel","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseWriter"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","title":"HummingbirdCore","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"type":"topic","role":"collection"}}}