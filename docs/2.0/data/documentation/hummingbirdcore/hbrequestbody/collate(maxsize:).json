{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbrequestbody\/collate(maxsize:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"}],"symbolKind":"method","title":"collate(maxSize:)","externalID":"s:15HummingbirdCore13HBRequestBodyO7collate7maxSize7NIOCore10ByteBufferVSi_tYaKF","roleHeading":"Instance Method","modules":[{"name":"Hummingbird"}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/collate(maxSize:)"},"abstract":[{"type":"text","text":"Return as a single ByteBuffer. This function is required as "},{"type":"codeVoice","code":"ByteBuffer.collect(upTo:)"},{"type":"text","text":" "},{"type":"text","text":"assumes the request body can be iterated."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBody"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestBody"}],"abstract":[],"role":"symbol","title":"HBRequestBody","url":"\/documentation\/hummingbirdcore\/hbrequestbody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","role":"collection","kind":"symbol","type":"topic","title":"HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody/collate(maxSize:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/collate(maxSize:)","url":"\/documentation\/hummingbirdcore\/hbrequestbody\/collate(maxsize:)","kind":"symbol","title":"collate(maxSize:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"abstract":[{"type":"text","text":"Return as a single ByteBuffer. This function is required as "},{"type":"codeVoice","code":"ByteBuffer.collect(upTo:)"},{"type":"text","text":" "},{"type":"text","text":"assumes the request body can be iterated."}]}}}