{"abstract":[{"type":"text","text":"Return as a single ByteBuffer. This function is required as "},{"type":"codeVoice","code":"ByteBuffer.collect(upTo:)"},{"type":"text","text":" "},{"type":"text","text":"assumes the request body can be iterated."}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"}],"platforms":["Linux"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/collate(maxSize:)"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"}],"externalID":"s:15HummingbirdCore13HBRequestBodyO7collate7maxSize7NIOCore10ByteBufferVSi_tYaKF","symbolKind":"method","title":"collate(maxSize:)","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"HummingbirdCore"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/hbrequestbody\/collate(maxsize:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody"]]},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"url":"\/documentation\/hummingbirdcore\/hbrequestbody","kind":"symbol","title":"HBRequestBody","navigatorTitle":[{"text":"HBRequestBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","type":"topic","role":"symbol","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBody","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody/collate(maxSize:)":{"title":"collate(maxSize:)","abstract":[{"type":"text","text":"Return as a single ByteBuffer. This function is required as "},{"type":"codeVoice","code":"ByteBuffer.collect(upTo:)"},{"type":"text","text":" "},{"type":"text","text":"assumes the request body can be iterated."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody\/collate(maxSize:)","role":"symbol","url":"\/documentation\/hummingbirdcore\/hbrequestbody\/collate(maxsize:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","kind":"symbol","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}]}}}