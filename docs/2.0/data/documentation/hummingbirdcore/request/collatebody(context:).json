{"kind":"symbol","sections":[],"abstract":[{"text":"Collapse body into one ByteBuffer.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/request\/collatebody(context:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request\/collateBody(context:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collateBody"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","text":"BaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"request context","type":"text"}]}],"name":"context"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Collated body"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will store the collated ByteBuffer back into the request so is a mutating method. If"},{"type":"text","text":" "},{"type":"text","text":"you donâ€™t need to store the collated ByteBuffer on the request then use"},{"type":"text","text":" "},{"type":"codeVoice","code":"request.body.collate(maxSize:)"},{"type":"text","text":"."}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collateBody"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","text":"BaseRequestContext","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"}],"modules":[{"name":"Hummingbird","relatedModules":["HummingbirdCore"]}],"role":"symbol","extendedModule":"HummingbirdCore","externalID":"s:15HummingbirdCore7RequestV0A0E11collateBody7context7NIOCore10ByteBufferVx_tYaKAD04BaseC7ContextRzlF","roleHeading":"Instance Method","title":"collateBody(context:)","symbolKind":"method"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","title":"Request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request/collateBody(context:)":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/request\/collatebody(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collateBody","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"}],"type":"topic","title":"collateBody(context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request\/collateBody(context:)","kind":"symbol","abstract":[{"text":"Collapse body into one ByteBuffer.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","type":"topic","title":"HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"role":"symbol","type":"topic","title":"BaseRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"BaseRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","url":"\/documentation\/hummingbird\/baserequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","role":"collection"}}}