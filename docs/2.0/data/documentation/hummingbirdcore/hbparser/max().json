{"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Sequence.max()"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser\/Sequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@warn_unqualified_access","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser\/max()"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"extendedModule":"Swift","title":"max()","externalID":"s:STsSL7ElementRpzrlE3maxABSgyF::SYNTHESIZED::s:15HummingbirdCore8HBParserV","symbolKind":"method","modules":[{"relatedModules":["Swift"],"name":"HummingbirdCore"}],"role":"symbol","roleHeading":"Instance Method","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Comparable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/hbparser\/max()"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","kind":"symbol","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser","url":"\/documentation\/hummingbirdcore\/hbparser","kind":"symbol","abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"type":"topic","title":"HBParser","navigatorTitle":[{"kind":"identifier","text":"HBParser"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser/Sequence-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser\/Sequence-Implementations","url":"\/documentation\/hummingbirdcore\/hbparser\/sequence-implementations","kind":"article","abstract":[],"type":"topic","title":"Sequence Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser/max()":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser\/max()","title":"max()","abstract":[],"url":"\/documentation\/hummingbirdcore\/hbparser\/max()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"max"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}