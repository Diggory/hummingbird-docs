{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"advance"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":".overflow"}],"type":"paragraph"}],"name":"Throws"}]}],"abstract":[{"type":"text","text":"Move forward one character"}],"metadata":{"modules":[{"name":"HummingbirdCore"}],"externalID":"s:15HummingbirdCore8HBParserV7advanceyyKF","symbolKind":"method","extendedModule":"HummingbirdCore","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"advance"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"role":"symbol","title":"advance()","roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser\/advance()","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbparser\/advance()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser/advance()":{"url":"\/documentation\/hummingbirdcore\/hbparser\/advance()","role":"symbol","type":"topic","title":"advance()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser\/advance()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"advance","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Move forward one character","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser":{"title":"HBParser","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbparser","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"}}}