{"kind":"symbol","metadata":{"title":"read(_:)","roleHeading":"Instance Method","extendedModule":"HummingbirdCore","role":"symbol","externalID":"s:15HummingbirdCore8HBParserV4readySbs7UnicodeO6ScalarVKF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO","text":"Unicode"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"modules":[{"name":"HummingbirdCore"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"char","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"char","content":[{"type":"paragraph","inlineContent":[{"text":"character to compare against","type":"text"}]}]}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"If current character was the one we expected"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":".overflow"}]}],"name":"Throws"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser\/read(_:)-15lu3","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbparser\/read(_:)-15lu3"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Read the current character and return if it is as intended. If character test returns true then move forward 1","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbparser","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser","kind":"symbol","abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"role":"symbol","title":"HBParser"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser/read(_:)-15lu3":{"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbparser\/read(_:)-15lu3","role":"symbol","title":"read(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser\/read(_:)-15lu3","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Read the current character and return if it is as intended. If character test returns true then move forward 1","type":"text"}]}}}