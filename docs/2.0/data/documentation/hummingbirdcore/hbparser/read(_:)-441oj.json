{"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"extendedModule":"HummingbirdCore","role":"symbol","externalID":"s:15HummingbirdCore8HBParserV4readySbShys7UnicodeO6ScalarVGKF","modules":[{"name":"HummingbirdCore"}],"symbolKind":"method","roleHeading":"Instance Method","title":"read(_:)"},"abstract":[{"type":"text","text":"Read the current character and check if it is in a set of characters If character test returns true then move forward 1"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/hbparser\/read(_:)-441oj"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser\/read(_:)-441oj","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"characterSet","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Set of characters to compare against"}],"type":"paragraph"}],"name":"characterSet"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"If current character is in character set","type":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"name":"Throws","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":".overflow"}]}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser":{"navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"type":"topic","abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"title":"HBParser","url":"\/documentation\/hummingbirdcore\/hbparser","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBParser/read(_:)-441oj":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/hbparser\/read(_:)-441oj","title":"read(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBParser\/read(_:)-441oj","abstract":[{"type":"text","text":"Read the current character and check if it is in a set of characters If character test returns true then move forward 1"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"text":"<","kind":"text"},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"text":"Scalar","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","kind":"symbol"}}}