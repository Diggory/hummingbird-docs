{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder\/http1(additionalChannelHandlers:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/hbhttpchannelbuilder\/http1(additionalchannelhandlers:)"]}],"metadata":{"externalID":"s:15HummingbirdCore20HBHTTPChannelBuilderV5http125additionalChannelHandlersACyAA05HTTP1G0VGSay7NIOCore09RemovableG7Handler_pGyYbXA_tFZ","title":"http1(additionalChannelHandlers:)","modules":[{"name":"HummingbirdCore"}],"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"ChildChannel"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"HBChildChannel"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"HummingbirdCore","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"http1"},{"kind":"text","text":"("},{"kind":"externalParam","text":"additionalChannelHandlers"},{"kind":"text","text":": () -> ["},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","kind":"typeIdentifier","text":"RemovableChannelHandler"},{"kind":"text","text":"]) -> "},{"preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV","kind":"typeIdentifier","text":"HBHTTPChannelBuilder"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore12HTTP1ChannelV","kind":"typeIdentifier","text":"HTTP1Channel"},{"kind":"text","text":">"}],"roleHeading":"Type Method","symbolKind":"method"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"http1"},{"kind":"text","text":"("},{"kind":"externalParam","text":"additionalChannelHandlers"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure"},{"text":" ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" () -> [","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemovableChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP"},{"text":"] = []) -> ","kind":"text"},{"text":"HBHTTPChannelBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV"},{"text":"<","kind":"text"},{"text":"HTTP1Channel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore12HTTP1ChannelV"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","title":"HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder/http1(additionalChannelHandlers:)":{"url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder\/http1(additionalchannelhandlers:)","title":"http1(additionalChannelHandlers:)","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder\/http1(additionalChannelHandlers:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"ChildChannel","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"HBChildChannel","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"http1"},{"kind":"text","text":"("},{"kind":"externalParam","text":"additionalChannelHandlers"},{"kind":"text","text":": () -> ["},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","kind":"typeIdentifier","text":"RemovableChannelHandler"},{"kind":"text","text":"]) -> "},{"preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV","text":"HBHTTPChannelBuilder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore12HTTP1ChannelV","kind":"typeIdentifier","text":"HTTP1Channel"},{"kind":"text","text":">"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1Channel":{"type":"topic","abstract":[],"kind":"symbol","title":"HTTP1Channel","navigatorTitle":[{"kind":"identifier","text":"HTTP1Channel"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/http1channel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1Channel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1Channel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder","navigatorTitle":[{"text":"HBHTTPChannelBuilder","kind":"identifier"}],"title":"HBHTTPChannelBuilder","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPChannelBuilder","kind":"identifier"}],"type":"topic","abstract":[{"text":"Build Channel Setup that takes an HTTP responder","type":"text"}],"url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder"}}}