{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody"]]},"abstract":[{"text":"Initialise ResponseBody with closure writing body contents.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"contentLength"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"? = nil, ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"write"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseBodyWriter","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"contentLength","content":[{"type":"paragraph","inlineContent":[{"text":"Optional length of body","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Closure provided with ","type":"text"},{"type":"codeVoice","code":"writer"},{"type":"text","text":" type that can be used to write to response body"}],"type":"paragraph"}],"name":"write"}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"When you have finished writing the response body you need to indicate you have"},{"text":" ","type":"text"},{"type":"text","text":"finished by calling "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)"},{"type":"text","text":". At this"},{"text":" ","type":"text"},{"text":"point you can also send trailing headers by including them as a parameter in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the finsh() call."}],"type":"paragraph"},{"syntax":null,"code":["let responseBody = ResponseBody(contentLength: contentLength) { writer in","    try await writer.write(buffer)","    try await writer.finish(nil)","}"],"type":"codeListing"}],"kind":"content"}],"metadata":{"title":"init(contentLength:_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"contentLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, ("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"ResponseBodyWriter","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"modules":[{"name":"HummingbirdCore"}],"externalID":"s:15HummingbirdCore12ResponseBodyV13contentLength_ACSiSg_yAA0cD6Writer_pzYaYbKctcfc","role":"symbol","roleHeading":"Initializer","symbolKind":"init"},"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"url":"\/documentation\/hummingbirdcore\/responsebodywriter","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}],"title":"ResponseBodyWriter","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","role":"symbol"},"logo.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"abstract":[{"type":"text","text":"Response body"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ResponseBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","role":"symbol","title":"ResponseBody","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"url":"\/documentation\/hummingbirdcore\/responsebody","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody/init(contentLength:_:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","abstract":[{"type":"text","text":"Initialise ResponseBody with closure writing body contents."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"contentLength"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?, (","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"ResponseBodyWriter","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)","title":"init(contentLength:_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter/finish(_:)":{"title":"finish(_:)","type":"topic","abstract":[{"text":"Finish writing body","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"finish"},{"text":"(","kind":"text"},{"text":"HTTPFields","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","kind":"typeIdentifier"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/responsebodywriter\/finish(_:)","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"type":"topic","role":"collection","kind":"article","title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"}}}