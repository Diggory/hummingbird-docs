{"sections":[],"abstract":[{"text":"Initialise ResponseBody with closure writing body contents.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"contentLength","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"? = nil, ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"write","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optional length of body"}]}],"name":"contentLength"},{"name":"write","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Closure provided with "},{"type":"codeVoice","code":"writer"},{"type":"text","text":" type that can be used to write to response body"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"When you have finished writing the response body you need to indicate you have","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"finished by calling "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)"},{"type":"text","text":". At this"},{"type":"text","text":" "},{"type":"text","text":"point you can also send trailing headers by including them as a parameter in"},{"type":"text","text":" "},{"type":"text","text":"the finsh() call."}],"type":"paragraph"},{"code":["let responseBody = ResponseBody(contentLength: contentLength) { writer in","    try await writer.write(buffer)","    try await writer.finish(nil)","}"],"syntax":null,"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody"]]},"metadata":{"externalID":"s:15HummingbirdCore12ResponseBodyV13contentLength_ACSiSg_yAA0cD6Writer_pzYaYbKctcfc","symbolKind":"init","modules":[{"name":"HummingbirdCore"}],"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"contentLength","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":"?, ("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"ResponseBodyWriter","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"title":"init(contentLength:_:)","role":"symbol"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody/init(contentLength:_:)":{"url":"\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)","kind":"symbol","abstract":[{"text":"Initialise ResponseBody with closure writing body contents.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"contentLength","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"?, (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","text":"ResponseBodyWriter","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(contentLength:_:)","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseBodyWriter","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"url":"\/documentation\/hummingbirdcore\/responsebodywriter","title":"ResponseBodyWriter","type":"topic"},"logo.png":{"alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter/finish(_:)":{"type":"topic","role":"symbol","abstract":[{"text":"Finish writing body","type":"text"}],"kind":"symbol","title":"finish(_:)","url":"\/documentation\/hummingbirdcore\/responsebodywriter\/finish(_:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"HTTPFields","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","type":"topic","title":"HummingbirdCore","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseBody","kind":"identifier"}],"navigatorTitle":[{"text":"ResponseBody","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/responsebody","abstract":[{"type":"text","text":"Response body"}],"title":"ResponseBody","type":"topic"}}}