{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody"]]},"metadata":{"modules":[{"name":"HummingbirdCore"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"contentLength","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":"?, (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","text":"ResponseBodyWriter","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"roleHeading":"Initializer","externalID":"s:15HummingbirdCore12ResponseBodyV13contentLength_ACSiSg_yAA0cD6Writer_pzYaYbKctcfc","title":"init(contentLength:_:)","role":"symbol","symbolKind":"init"},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"contentLength","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":"? = nil, ","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"write","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}]}]},{"parameters":[{"name":"contentLength","content":[{"inlineContent":[{"text":"Optional length of body","type":"text"}],"type":"paragraph"}]},{"name":"write","content":[{"inlineContent":[{"text":"Closure provided with ","type":"text"},{"code":"writer","type":"codeVoice"},{"text":" type that can be used to write to response body","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you have finished writing the response body you need to indicate you have"},{"type":"text","text":" "},{"text":"finished by calling ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)","type":"reference"},{"text":". At this","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"point you can also send trailing headers by including them as a parameter in"},{"text":" ","type":"text"},{"type":"text","text":"the finsh() call."}]},{"type":"codeListing","syntax":null,"code":["let responseBody = ResponseBody(contentLength: contentLength) { writer in","    try await writer.write(buffer)","    try await writer.finish(nil)","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)"]}],"sections":[],"abstract":[{"text":"Initialise ResponseBody with closure writing body contents.","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","title":"HummingbirdCore"},"logo.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"title":"ResponseBody","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseBody"}],"abstract":[{"type":"text","text":"Response body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseBody"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/responsebody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody/init(contentLength:_:)":{"type":"topic","url":"\/documentation\/hummingbirdcore\/responsebody\/init(contentlength:_:)","role":"symbol","abstract":[{"text":"Initialise ResponseBody with closure writing body contents.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"contentLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, ("},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:15HummingbirdCore18ResponseBodyWriterP","text":"ResponseBodyWriter","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"init(contentLength:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody\/init(contentLength:_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter/finish(_:)":{"title":"finish(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"kind":"text","text":"("},{"text":"HTTPFields","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"role":"symbol","type":"topic","abstract":[{"text":"Finish writing body","type":"text"}],"url":"\/documentation\/hummingbirdcore\/responsebodywriter\/finish(_:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter\/finish(_:)","required":true},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","kind":"article","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"title":"Hummingbird Documentation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"type":"topic","role":"symbol","kind":"symbol","title":"ResponseBodyWriter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","url":"\/documentation\/hummingbirdcore\/responsebodywriter","abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBodyWriter"}]}}}