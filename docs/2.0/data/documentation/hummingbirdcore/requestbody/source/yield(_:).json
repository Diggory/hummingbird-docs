{"abstract":[{"type":"text","text":"Yields the element to the inbound stream."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/yield(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"yield","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"element"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"element","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The element to yield to the inbound stream."}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"This function implements back pressure in that it will wait if the producer","type":"text"},{"type":"text","text":" "},{"text":"sequence indicates the Source should produce more ByteBuffers.","type":"text"}],"type":"paragraph"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"yield","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"symbolKind":"method","externalID":"s:15HummingbirdCore11RequestBodyV6SourceC5yieldyy7NIOCore10ByteBufferVYaKF","roleHeading":"Instance Method","modules":[{"name":"HummingbirdCore"}],"role":"symbol","title":"yield(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/requestbody\/source\/yield(_:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source/yield(_:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/yield(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/requestbody\/source\/yield(_:)","title":"yield(_:)","abstract":[{"type":"text","text":"Yields the element to the inbound stream."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"yield","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}]},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"navigatorTitle":[{"kind":"identifier","text":"RequestBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestBody"}],"url":"\/documentation\/hummingbirdcore\/requestbody","title":"RequestBody","role":"symbol","abstract":[{"text":"Request Body","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source","role":"symbol","url":"\/documentation\/hummingbirdcore\/requestbody\/source","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}],"abstract":[{"text":"A source used for driving a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","isActive":true},{"text":" stream.","type":"text"}],"title":"RequestBody.Source","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Source","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol"}}}