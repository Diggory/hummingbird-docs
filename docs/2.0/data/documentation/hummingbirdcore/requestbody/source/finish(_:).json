{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"finish"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":")"}]}]},{"kind":"parameters","parameters":[{"name":"error","content":[{"type":"paragraph","inlineContent":[{"text":"The error to throw","type":"text"}]}]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/requestbody\/source\/finish(_:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/finish(_:)"},"sections":[],"abstract":[{"text":"Finished the inbound stream.","type":"text"}],"metadata":{"externalID":"s:15HummingbirdCore11RequestBodyV6SourceC6finishyys5Error_pF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":")","kind":"text"}],"modules":[{"name":"HummingbirdCore"}],"symbolKind":"method","roleHeading":"Instance Method","title":"finish(_:)","role":"symbol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"role":"symbol","title":"RequestBody","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/requestbody","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestBody"}],"abstract":[{"text":"Request Body","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RequestBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source":{"url":"\/documentation\/hummingbirdcore\/requestbody\/source","title":"RequestBody.Source","abstract":[{"text":"A source used for driving a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","type":"reference","isActive":true},{"text":" stream.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source","navigatorTitle":[{"kind":"identifier","text":"Source"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Source"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source/finish(_:)":{"url":"\/documentation\/hummingbirdcore\/requestbody\/source\/finish(_:)","title":"finish(_:)","abstract":[{"text":"Finished the inbound stream.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/finish(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"finish"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]}}}