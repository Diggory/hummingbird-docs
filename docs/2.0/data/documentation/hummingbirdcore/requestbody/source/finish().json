{"kind":"symbol","metadata":{"externalID":"s:15HummingbirdCore11RequestBodyV6SourceC6finishyyF","symbolKind":"method","role":"symbol","modules":[{"name":"HummingbirdCore"}],"title":"finish()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"kind":"text","text":"()"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/requestbody\/source\/finish()"]}],"abstract":[{"type":"text","text":"Finished the inbound stream."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/finish()","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"finish","kind":"identifier"},{"kind":"text","text":"()"}],"languages":["swift"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source":{"url":"\/documentation\/hummingbirdcore\/requestbody\/source","abstract":[{"text":"A source used for driving a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","isActive":true},{"type":"text","text":" stream."}],"title":"RequestBody.Source","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Source","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Source"}]},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","kind":"article","title":"Hummingbird Documentation","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","role":"symbol","abstract":[{"text":"Request Body","type":"text"}],"title":"RequestBody","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestBody"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/requestbody","navigatorTitle":[{"kind":"identifier","text":"RequestBody"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/Source/finish()":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Finished the inbound stream."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/Source\/finish()","type":"topic","title":"finish()","url":"\/documentation\/hummingbirdcore\/requestbody\/source\/finish()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"finish"},{"text":"()","kind":"text"}]}}}