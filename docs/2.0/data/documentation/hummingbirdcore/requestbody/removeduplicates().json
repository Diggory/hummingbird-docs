{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/AsyncSequence-Implementations"]]},"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeDuplicates"},{"text":"() -> ","kind":"text"},{"text":"AsyncRemoveDuplicatesSequence","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncAlgorithms0A24RemoveDuplicatesSequenceV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">","kind":"text"}],"externalID":"s:Sci15AsyncAlgorithmsSQ7ElementRpzrlE16removeDuplicatesAA0a6RemoveE8SequenceVyxGyF::SYNTHESIZED::s:15HummingbirdCore11RequestBodyV","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}]},"title":"removeDuplicates()","symbolKind":"method","modules":[{"relatedModules":["_Concurrency"],"name":"HummingbirdCore"}],"extendedModule":"_Concurrency"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"AsyncSequence.removeDuplicates()"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/requestbody\/removeduplicates()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/removeDuplicates()"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"removeDuplicates","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncRemoveDuplicatesSequence","preciseIdentifier":"s:15AsyncAlgorithms0A24RemoveDuplicatesSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/AsyncSequence-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/hummingbirdcore\/requestbody\/asyncsequence-implementations","abstract":[],"title":"AsyncSequence Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/AsyncSequence-Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","type":"topic","role":"collection"},"logo.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","kind":"article","title":"Hummingbird Documentation","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody/removeDuplicates()":{"url":"\/documentation\/hummingbirdcore\/requestbody\/removeduplicates()","type":"topic","kind":"symbol","title":"removeDuplicates()","abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody\/removeDuplicates()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"removeDuplicates","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncAlgorithms0A24RemoveDuplicatesSequenceV","text":"AsyncRemoveDuplicatesSequence"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/RequestBody":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/RequestBody","role":"symbol","abstract":[{"text":"Request Body","type":"text"}],"title":"RequestBody","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestBody"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/requestbody","navigatorTitle":[{"kind":"identifier","text":"RequestBody"}]}}}