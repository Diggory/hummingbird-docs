{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelInboundHandler-Implementations"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapInboundIn"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelInboundHandlerP0C2InQa","text":"InboundIn"}],"modules":[{"name":"HummingbirdCore","relatedModules":["NIOCore"]}],"externalID":"s:7NIOCore21ChannelInboundHandlerPAAE06unwrapC2Iny0cF0QzAA6NIOAnyVF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","title":"unwrapInboundIn(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","extendedModule":"NIOCore"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"ChannelInboundHandler.unwrapInboundIn(_:)","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapInboundIn"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"InboundIn","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelInboundHandlerP0C2InQa"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/unwrapInboundIn(_:)"},"variants":[{"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/unwrapinboundin(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"logo.png":{"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/ChannelInboundHandler-Implementations":{"abstract":[],"type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelInboundHandler-Implementations","title":"ChannelInboundHandler Implementations","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelinboundhandler-implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"title":"AvailableConnectionsChannelHandler","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"type":"topic","role":"collection","kind":"article","title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/unwrapInboundIn(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"unwrapInboundIn","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelInboundHandlerP0C2InQa","text":"InboundIn"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/unwrapInboundIn(_:)","title":"unwrapInboundIn(_:)","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/unwrapinboundin(_:)","abstract":[],"role":"symbol"}}}