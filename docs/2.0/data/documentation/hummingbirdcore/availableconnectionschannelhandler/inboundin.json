{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler.InboundIn"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InboundIn"},{"kind":"text","text":" = "},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"}],"platforms":["Linux"]}]}],"metadata":{"externalID":"s:15HummingbirdCore34AvailableConnectionsChannelHandlerC9InboundIna","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"roleHeading":"Type Alias","role":"symbol","title":"AvailableConnectionsChannelHandler.InboundIn","symbolKind":"typealias","modules":[{"name":"HummingbirdCore"}]},"references":{"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"abstract":[{"text":"Channel Handler that controls whether we should accept new connections","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","title":"AvailableConnectionsChannelHandler","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","kind":"article","title":"Hummingbird Documentation","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/InboundIn":{"abstract":[],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","type":"topic","kind":"symbol","title":"AvailableConnectionsChannelHandler.InboundIn","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"InboundIn","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","type":"topic","role":"collection"}}}