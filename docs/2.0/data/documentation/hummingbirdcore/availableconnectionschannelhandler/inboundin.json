{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"}],"platforms":["Linux"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","metadata":{"symbolKind":"typealias","role":"symbol","title":"AvailableConnectionsChannelHandler.InboundIn","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"modules":[{"name":"HummingbirdCore"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"roleHeading":"Type Alias","externalID":"s:15HummingbirdCore34AvailableConnectionsChannelHandlerC9InboundIna"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ChannelInboundHandler.InboundIn"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/InboundIn":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","title":"AvailableConnectionsChannelHandler.InboundIn"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","type":"topic","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"title":"AvailableConnectionsChannelHandler","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","abstract":[{"text":"Channel Handler that controls whether we should accept new connections","type":"text"}],"navigatorTitle":[{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}]},"logo.png":{"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"logo.png"}}}