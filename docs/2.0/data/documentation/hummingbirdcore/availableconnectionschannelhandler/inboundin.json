{"abstract":[{"type":"text","text":"Inherited from "},{"code":"ChannelInboundHandler.InboundIn","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InboundIn"}],"navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"symbolKind":"typealias","modules":[{"name":"HummingbirdCore"}],"externalID":"s:15HummingbirdCore34AvailableConnectionsChannelHandlerC9InboundIna","title":"AvailableConnectionsChannelHandler.InboundIn","role":"symbol","roleHeading":"Type Alias"},"variants":[{"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"},{"text":" = ","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"sections":[],"references":{"logo.png":{"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/InboundIn":{"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/InboundIn","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/inboundin","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InboundIn"}],"abstract":[],"title":"AvailableConnectionsChannelHandler.InboundIn"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","url":"\/documentation\/hummingbirdcore","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"type":"topic","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","title":"AvailableConnectionsChannelHandler","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","role":"symbol"}}}