{"topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/unwrapInboundIn(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/wrapInboundOut(_:)"],"generated":true}],"kind":"article","sections":[],"metadata":{"roleHeading":"API Collection","title":"ChannelInboundHandler Implementations","modules":[{"name":"HummingbirdCore"}],"role":"collectionGroup"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelInboundHandler-Implementations","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/wrapInboundOut(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"wrapInboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NIOCore21ChannelInboundHandlerP0C3OutQa","kind":"typeIdentifier","text":"InboundOut"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"}],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/wrapinboundout(_:)","type":"topic","kind":"symbol","title":"wrapInboundOut(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/wrapInboundOut(_:)","role":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/unwrapInboundIn(_:)":{"kind":"symbol","type":"topic","title":"unwrapInboundIn(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapInboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"InboundIn","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelInboundHandlerP0C2InQa"}],"abstract":[],"url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/unwrapinboundin(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/unwrapInboundIn(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","title":"AvailableConnectionsChannelHandler","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AvailableConnectionsChannelHandler","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCore","role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"logo.png"}}}