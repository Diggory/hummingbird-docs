{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"externalID":"s:7NIOCore21ChannelInboundHandlerPAAE04wrapC3OutyAA6NIOAnyV0cF0QzF::SYNTHESIZED::s:15HummingbirdCore34AvailableConnectionsChannelHandlerC","roleHeading":"Instance Method","symbolKind":"method","modules":[{"relatedModules":["NIOCore"],"name":"HummingbirdCore"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrapInboundOut","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundOut","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelInboundHandlerP0C3OutQa"},{"text":") -> ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"}],"extendedModule":"NIOCore","title":"wrapInboundOut(_:)"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/wrapinboundout(_:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/wrapInboundOut(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ChannelInboundHandler.wrapInboundOut(_:)"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapInboundOut"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundOut","preciseIdentifier":"s:7NIOCore21ChannelInboundHandlerP0C3OutQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelInboundHandler-Implementations"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/wrapInboundOut(_:)":{"title":"wrapInboundOut(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapInboundOut"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundOut","preciseIdentifier":"s:7NIOCore21ChannelInboundHandlerP0C3OutQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"}],"abstract":[],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/wrapInboundOut(_:)","kind":"symbol","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/wrapinboundout(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","url":"\/documentation\/hummingbirdcore","type":"topic","title":"HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler/ChannelInboundHandler-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler\/ChannelInboundHandler-Implementations","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler\/channelinboundhandler-implementations","kind":"article","title":"ChannelInboundHandler Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/AvailableConnectionsChannelHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/AvailableConnectionsChannelHandler","abstract":[{"type":"text","text":"Channel Handler that controls whether we should accept new connections"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/availableconnectionschannelhandler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AvailableConnectionsChannelHandler"}],"title":"AvailableConnectionsChannelHandler","kind":"symbol"},"logo.png":{"type":"image","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","alt":null}}}