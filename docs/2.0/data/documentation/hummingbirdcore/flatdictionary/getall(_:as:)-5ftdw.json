{"metadata":{"role":"symbol","extendedModule":"HummingbirdCore","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getAll","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier"},{"text":".Type) -> [","kind":"text"},{"text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"modules":[{"name":"HummingbirdCore"}],"symbolKind":"method","roleHeading":"Instance Method","title":"getAll(_:as:)","externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE6getAll_2asSay10Foundation4UUIDVGSS_AImtF"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"abstract":[{"type":"text","text":"Return parameter with specified id as a certain type"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getAll(_:as:)-5ftdw","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getAll","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"s","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier","text":"UUID"},{"kind":"text","text":".Type) -> ["},{"preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier","text":"UUID"},{"kind":"text","text":"]"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"s","content":[{"inlineContent":[{"text":"parameter id","type":"text"}],"type":"paragraph"}]},{"name":"as","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"type we want returned"}]}]}],"kind":"parameters"}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:as:)-5ftdw"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/getAll(_:as:)-5ftdw":{"abstract":[{"type":"text","text":"Return parameter with specified id as a certain type"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getAll(_:as:)-5ftdw","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getAll"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier","text":"UUID"},{"kind":"text","text":".Type) -> ["},{"preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier","text":"UUID"},{"kind":"text","text":"]"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/hummingbirdcore\/flatdictionary\/getall(_:as:)-5ftdw","title":"getAll(_:as:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","title":"FlatDictionary","type":"topic"}}}