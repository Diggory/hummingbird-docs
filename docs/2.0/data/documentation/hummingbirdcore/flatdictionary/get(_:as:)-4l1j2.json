{"abstract":[{"type":"text","text":"Return parameter with specified id as a certain type"}],"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"s"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UUID","preciseIdentifier":"s:20FoundationEssentials4UUIDV"},{"text":".Type) -> ","kind":"text"},{"text":"UUID","preciseIdentifier":"s:20FoundationEssentials4UUIDV","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Parameter id"}]}],"name":"s"},{"content":[{"inlineContent":[{"text":"Type we want returned","type":"text"}],"type":"paragraph"}],"name":"as"}],"kind":"parameters"}],"metadata":{"roleHeading":"Instance Method","title":"get(_:as:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"get"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UUID","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials4UUIDV"},{"text":".Type) -> ","kind":"text"},{"text":"UUID","preciseIdentifier":"s:20FoundationEssentials4UUIDV","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE3get_2as20FoundationEssentials4UUIDVSgSS_AImtF","extendedModule":"HummingbirdCore","symbolKind":"method","modules":[{"name":"HummingbirdCore"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/get(_:as:)-4l1j2","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/get(_:as:)-4l1j2"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"url":"\/documentation\/hummingbirdcore\/flatdictionary","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FlatDictionary","kind":"identifier"}],"title":"FlatDictionary","role":"symbol","navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"abstract":[{"text":"Provides Dictionary like indexing, but uses a flat array of key","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/get(_:as:)-4l1j2":{"title":"get(_:as:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/get(_:as:)-4l1j2","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"as"},{"text":": ","kind":"text"},{"text":"UUID","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials4UUIDV"},{"kind":"text","text":".Type) -> "},{"text":"UUID","kind":"typeIdentifier","preciseIdentifier":"s:20FoundationEssentials4UUIDV"},{"text":"?","kind":"text"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary\/get(_:as:)-4l1j2","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Return parameter with specified id as a certain type"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol"},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]}}}