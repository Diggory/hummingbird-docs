{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/setCatchAll(_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/setcatchall(_:)"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"setCatchAll","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"kind":"text","text":")"}]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"inlineContent":[{"text":"Parameter value","type":"text"}],"type":"paragraph"}]}]}],"abstract":[{"type":"text","text":"Set path components caught by recursive capture"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setCatchAll"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":")"}],"externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE11setCatchAllyySsF","modules":[{"name":"HummingbirdCore"}],"extendedModule":"HummingbirdCore","symbolKind":"method","conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"setCatchAll(_:)","roleHeading":"Instance Method"},"references":{"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"text":" ","type":"text"},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"title":"FlatDictionary","navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdCore","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/setCatchAll(_:)":{"title":"setCatchAll(_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"Set path components caught by recursive capture"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setCatchAll","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/setCatchAll(_:)","role":"symbol","url":"\/documentation\/hummingbirdcore\/flatdictionary\/setcatchall(_:)"}}}