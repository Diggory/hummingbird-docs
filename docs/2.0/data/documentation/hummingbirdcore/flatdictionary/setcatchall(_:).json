{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/setCatchAll(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Set path components caught by recursive capture","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/setcatchall(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Method","title":"setCatchAll(_:)","extendedModule":"HummingbirdCore","externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE11setCatchAllyySsF","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setCatchAll","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","symbolKind":"method","modules":[{"name":"HummingbirdCore"}]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setCatchAll","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"inlineContent":[{"text":"parameter value","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/setCatchAll(_:)":{"url":"\/documentation\/hummingbirdcore\/flatdictionary\/setcatchall(_:)","title":"setCatchAll(_:)","abstract":[{"type":"text","text":"Set path components caught by recursive capture"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setCatchAll"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":")"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/setCatchAll(_:)","role":"symbol","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","abstract":[{"text":"Provides Dictionary like indexing, but uses a flat array of key","type":"text"},{"text":" ","type":"text"},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"type":"topic","title":"FlatDictionary","kind":"symbol","url":"\/documentation\/hummingbirdcore\/flatdictionary","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"type":"topic","title":"HummingbirdCore","kind":"symbol","url":"\/documentation\/hummingbirdcore","role":"collection"}}}