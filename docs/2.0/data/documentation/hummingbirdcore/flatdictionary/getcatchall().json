{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"HummingbirdCore"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE11getCatchAllSaySsGyF","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"]"}],"title":"getCatchAll()","extendedModule":"HummingbirdCore"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":"]","kind":"text"}]}]}],"sections":[],"abstract":[{"text":"Return path elements caught by recursive capture","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","type":"topic","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/getCatchAll()":{"type":"topic","title":"getCatchAll()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"role":"symbol","abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"]"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"title":"FlatDictionary","url":"\/documentation\/hummingbirdcore\/flatdictionary","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"}}}