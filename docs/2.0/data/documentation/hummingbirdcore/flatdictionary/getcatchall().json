{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"text":"]","kind":"text"}],"role":"symbol","title":"getCatchAll()","roleHeading":"Instance Method","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE11getCatchAllSaySsGyF","modules":[{"name":"HummingbirdCore"}],"extendedModule":"HummingbirdCore"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"role":"symbol","url":"\/documentation\/hummingbirdcore\/flatdictionary","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"title":"FlatDictionary","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/getCatchAll()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getCatchAll","kind":"identifier"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"url":"\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Key"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"text":"Return path elements caught by recursive capture","type":"text"}],"title":"getCatchAll()"}}}