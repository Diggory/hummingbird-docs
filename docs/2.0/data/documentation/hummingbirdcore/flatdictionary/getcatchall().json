{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getCatchAll"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["Linux"]}]}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"text":"]","kind":"text"}],"title":"getCatchAll()","symbolKind":"method","extendedModule":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}],"roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE11getCatchAllSaySsGyF"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"variants":[{"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()"},"references":{"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"url":"\/documentation\/hummingbirdcore\/flatdictionary","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FlatDictionary","kind":"identifier"}],"title":"FlatDictionary","role":"symbol","navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"abstract":[{"text":"Provides Dictionary like indexing, but uses a flat array of key","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/getCatchAll()":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()","type":"topic","role":"symbol","abstract":[{"text":"Return path elements caught by recursive capture","type":"text"}],"kind":"symbol","title":"getCatchAll()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"kind":"text","text":"() -> ["},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()"}}}