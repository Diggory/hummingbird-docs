{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()","interfaceLanguage":"swift"},"metadata":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"HummingbirdCore","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"symbolKind":"method","modules":[{"name":"HummingbirdCore"}],"title":"getCatchAll()","externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE11getCatchAllSaySsGyF","roleHeading":"Instance Method"},"kind":"symbol","abstract":[{"text":"Return path elements caught by recursive capture","type":"text"}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"]"}],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","role":"collection"},"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","url":"\/documentation\/hummingbirdcore\/flatdictionary","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"text":"value pairs, plus an array of hash keys for lookup for storage.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"title":"FlatDictionary","navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/getCatchAll()":{"title":"getCatchAll()","role":"symbol","url":"\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()","type":"topic","abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol"}}}