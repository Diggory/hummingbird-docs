{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Return path elements caught by recursive capture","type":"text"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getCatchAll"},{"text":"() -> [","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"title":"getCatchAll()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"HummingbirdCore","roleHeading":"Instance Method","symbolKind":"method","role":"symbol","externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE11getCatchAllSaySsGyF","modules":[{"name":"HummingbirdCore"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"kind":"text","text":"]"}],"languages":["swift"]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","kind":"article","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"title":"Hummingbird Documentation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"url":"\/documentation\/hummingbirdcore\/flatdictionary","kind":"symbol","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"text":" ","type":"text"},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"type":"topic","title":"FlatDictionary","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlatDictionary"}],"navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/getCatchAll()":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"getCatchAll()","abstract":[{"text":"Return path elements caught by recursive capture","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"]"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","title":"HummingbirdCore"}}}