{"kind":"symbol","sections":[],"abstract":[{"text":"Return path elements caught by recursive capture","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary"]]},"metadata":{"externalID":"s:15HummingbirdCore14FlatDictionaryV0A0SsRszSsRs_rlE11getCatchAllSaySsGyF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"text":"]","kind":"text"}],"title":"getCatchAll()","extendedModule":"HummingbirdCore","role":"symbol","conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Instance Method","modules":[{"name":"HummingbirdCore"}]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"kind":"text","text":"]"}]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()"},"references":{"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FlatDictionary"}],"navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"abstract":[{"text":"Provides Dictionary like indexing, but uses a flat array of key","type":"text"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"role":"symbol","type":"topic","title":"FlatDictionary","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary","url":"\/documentation\/hummingbirdcore\/flatdictionary"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"Hummingbird Documentation","url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","type":"topic","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/FlatDictionary/getCatchAll()":{"abstract":[{"text":"Return path elements caught by recursive capture","type":"text"}],"title":"getCatchAll()","role":"symbol","url":"\/documentation\/hummingbirdcore\/flatdictionary\/getcatchall()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/FlatDictionary\/getCatchAll()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"kind":"text","text":"]"}],"type":"topic","conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Value"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}