{"abstract":[{"text":"Specifies the type of redirect that the client should receive.","type":"text"}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/found","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/normal","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/permanent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/temporary"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/status"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/Equatable-Implementations"]}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/response\/redirecttype"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"]]},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/SH"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"extendedModule":"HummingbirdCore","externalID":"s:15HummingbirdCore8ResponseV0A0E12RedirectTypeO","title":"Response.RedirectType","modules":[{"relatedModules":["HummingbirdCore"],"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedirectType"}],"role":"symbol","roleHeading":"Enumeration","symbolKind":"enum","navigatorTitle":[{"kind":"identifier","text":"RedirectType"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedirectType","kind":"identifier"}],"languages":["swift"]}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"title":"Response","navigatorTitle":[{"text":"Response","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/response","type":"topic","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response/RedirectType/found":{"role":"symbol","title":"Response.RedirectType.found","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"found","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/found","kind":"symbol","abstract":[{"code":"302 found","type":"codeVoice"},{"text":": This response code means that the URI of requested resource has been changed","type":"text"},{"type":"text","text":" "},{"text":"temporarily. Further changes in the URI might be made in the future. Therefore,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"this same URI should be used by the client in future requests."}],"url":"\/documentation\/hummingbirdcore\/response\/redirecttype\/found","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response/RedirectType/status":{"title":"status","url":"\/documentation\/hummingbirdcore\/response\/redirecttype\/status","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/status","type":"topic","abstract":[{"type":"text","text":"Associated "},{"code":"HTTPResponse.Status","type":"codeVoice"},{"text":" for this redirect type.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"status"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes12HTTPResponseV","text":"HTTPResponse"},{"text":".","kind":"text"},{"text":"Status","preciseIdentifier":"s:9HTTPTypes12HTTPResponseV6StatusV","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response/RedirectType/temporary":{"url":"\/documentation\/hummingbirdcore\/response\/redirecttype\/temporary","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"temporary","kind":"identifier"}],"title":"Response.RedirectType.temporary","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/temporary","role":"symbol","type":"topic","kind":"symbol","abstract":[{"code":"307 Temporary","type":"codeVoice"},{"text":": The server sends this response to direct the client to get the requested","type":"text"},{"type":"text","text":" "},{"type":"text","text":"resource at another URI with the same method that was used in the prior request. This has"},{"type":"text","text":" "},{"type":"text","text":"the same semantics as the 302 Found HTTP response code, with the exception that the user"},{"type":"text","text":" "},{"type":"text","text":"agent must not change the HTTP method used: if a POST was used in the first request, a POST"},{"type":"text","text":" "},{"type":"text","text":"must be used in the second request."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response/RedirectType":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedirectType"}],"abstract":[{"type":"text","text":"Specifies the type of redirect that the client should receive."}],"url":"\/documentation\/hummingbirdcore\/response\/redirecttype","title":"Response.RedirectType","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType","navigatorTitle":[{"kind":"identifier","text":"RedirectType"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response/RedirectType/normal":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/normal","url":"\/documentation\/hummingbirdcore\/response\/redirecttype\/normal","abstract":[{"code":"303 see other","type":"codeVoice"},{"text":": The server sent this response to direct the client to get the requested","type":"text"},{"text":" ","type":"text"},{"text":"resource at another URI with a GET request.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"normal","kind":"identifier"}],"title":"Response.RedirectType.normal","role":"symbol"},"doc://com.opticalaberration.hummingbird/SQ":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response/RedirectType/permanent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/permanent","title":"Response.RedirectType.permanent","type":"topic","url":"\/documentation\/hummingbirdcore\/response\/redirecttype\/permanent","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"permanent","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"codeVoice","code":"301 moved permanently"},{"type":"text","text":": The URL of the requested resource has been changed permanently."},{"type":"text","text":" "},{"type":"text","text":"The new URL is iven in the response."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/SH":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","role":"collection","url":"\/documentation\/hummingbirdcore","type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response/RedirectType/Equatable-Implementations":{"kind":"article","title":"Equatable Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response\/RedirectType\/Equatable-Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/hummingbirdcore\/response\/redirecttype\/equatable-implementations","type":"topic"}}}