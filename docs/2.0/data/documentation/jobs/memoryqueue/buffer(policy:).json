{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/buffer(policy:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/jobs\/memoryqueue\/buffer(policy:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"policy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AsyncBufferSequencePolicy","preciseIdentifier":"s:15AsyncAlgorithms0A20BufferSequencePolicyV"},{"kind":"text","text":") -> "},{"text":"AsyncBufferSequence","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncAlgorithms0A14BufferSequenceV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"AsyncSequence.buffer(policy:)"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/AsyncSequence-Implementations"]]},"metadata":{"modules":[{"name":"Jobs","relatedModules":["_Concurrency"]}],"externalID":"s:Sci15AsyncAlgorithmss8SendableRzrlE6buffer6policyAA0A14BufferSequenceVyxGAA0afG6PolicyV_tF::SYNTHESIZED::s:4Jobs11MemoryQueueC","title":"buffer(policy:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"extendedModule":"_Concurrency","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"policy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncAlgorithms0A20BufferSequencePolicyV","text":"AsyncBufferSequencePolicy","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:15AsyncAlgorithms0A14BufferSequenceV","text":"AsyncBufferSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"sections":[],"references":{"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue/buffer(policy:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/buffer(policy:)","title":"buffer(policy:)","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"text":"(","kind":"text"},{"text":"policy","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AsyncBufferSequencePolicy","preciseIdentifier":"s:15AsyncAlgorithms0A20BufferSequencePolicyV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"AsyncBufferSequence","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncAlgorithms0A14BufferSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/jobs\/memoryqueue\/buffer(policy:)","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue":{"title":"MemoryQueue","url":"\/documentation\/jobs\/memoryqueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue","kind":"symbol","abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores job data in a circular buffer"}],"navigatorTitle":[{"text":"MemoryQueue","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemoryQueue"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue/AsyncSequence-Implementations":{"title":"AsyncSequence Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/AsyncSequence-Implementations","url":"\/documentation\/jobs\/memoryqueue\/asyncsequence-implementations","type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"type":"topic","role":"collection","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"title":"Jobs"}}}