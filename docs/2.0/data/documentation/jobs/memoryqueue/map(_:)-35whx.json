{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Transformed"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV","text":"AsyncThrowingMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":">"}]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"AsyncSequence.map(_:)"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/map(_:)-35whx"},"kind":"symbol","variants":[{"paths":["\/documentation\/jobs\/memoryqueue\/map(_:)-35whx"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/AsyncSequence-Implementations"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Transformed","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV","text":"AsyncThrowingMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","externalID":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:4Jobs11MemoryQueueC","title":"map(_:)","platforms":[{"deprecated":false,"introducedAt":"13.0","name":"iOS","beta":false,"unavailable":false},{"deprecated":false,"introducedAt":"10.15","name":"macOS","beta":false,"unavailable":false},{"deprecated":false,"introducedAt":"13.0","name":"tvOS","beta":false,"unavailable":false},{"deprecated":false,"introducedAt":"6.0","name":"watchOS","beta":false,"unavailable":false}],"modules":[{"relatedModules":["_Concurrency"],"name":"Jobs"}],"extendedModule":"_Concurrency","role":"symbol","symbolKind":"method"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue/AsyncSequence-Implementations":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/AsyncSequence-Implementations","title":"AsyncSequence Implementations","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/jobs\/memoryqueue\/asyncsequence-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue/map(_:)-35whx":{"kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/jobs\/memoryqueue\/map(_:)-35whx","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/map(_:)-35whx","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Transformed"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV","kind":"typeIdentifier","text":"AsyncThrowingMapSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Transformed"},{"kind":"text","text":">"}],"title":"map(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemoryQueue","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue","title":"MemoryQueue","abstract":[{"text":"In memory implementation of job queue driver. Stores job data in a circular buffer","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"MemoryQueue","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/jobs\/memoryqueue"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"type":"topic","url":"\/documentation\/jobs","role":"collection","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","title":"Jobs","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}]},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"type":"image"}}}