{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compacted"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Unwrapped"},{"kind":"text","text":">() -> "},{"text":"AsyncCompactedSequence","kind":"typeIdentifier","preciseIdentifier":"s:15AsyncAlgorithms0A17CompactedSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Unwrapped","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Element","preciseIdentifier":"s:Sci7ElementQa","kind":"typeIdentifier"},{"kind":"text","text":" == "},{"text":"Unwrapped","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"AsyncSequence.compacted()"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/AsyncSequence-Implementations"]]},"sections":[],"metadata":{"externalID":"s:Sci15AsyncAlgorithmsE9compactedAA0A17CompactedSequenceVyxqd__Gyqd__Sg7ElementRtzlF::SYNTHESIZED::s:4Jobs11MemoryQueueC","extendedModule":"_Concurrency","modules":[{"name":"Jobs","relatedModules":["_Concurrency"]}],"symbolKind":"method","title":"compacted()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"compacted"},{"text":"<","kind":"text"},{"text":"Unwrapped","kind":"genericParameter"},{"text":">() -> ","kind":"text"},{"text":"AsyncCompactedSequence","preciseIdentifier":"s:15AsyncAlgorithms0A17CompactedSequenceV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Unwrapped","kind":"typeIdentifier"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/jobs\/memoryqueue\/compacted()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/compacted()"},"references":{"logo.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue/AsyncSequence-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/AsyncSequence-Implementations","abstract":[],"type":"topic","role":"collectionGroup","title":"AsyncSequence Implementations","url":"\/documentation\/jobs\/memoryqueue\/asyncsequence-implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue/compacted()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/compacted()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compacted"},{"kind":"text","text":"<"},{"text":"Unwrapped","kind":"genericParameter"},{"kind":"text","text":">() -> "},{"preciseIdentifier":"s:15AsyncAlgorithms0A17CompactedSequenceV","text":"AsyncCompactedSequence","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Unwrapped","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[],"role":"symbol","url":"\/documentation\/jobs\/memoryqueue\/compacted()","title":"compacted()","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"type":"topic","role":"collection","kind":"symbol","url":"\/documentation\/jobs","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"title":"Jobs","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue","abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores job data in a circular buffer"}],"url":"\/documentation\/jobs\/memoryqueue","type":"topic","title":"MemoryQueue","navigatorTitle":[{"text":"MemoryQueue","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemoryQueue","kind":"identifier"}],"kind":"symbol","role":"symbol"}}}