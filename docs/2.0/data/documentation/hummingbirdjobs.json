{"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"]}],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"topicSections":[{"title":"Jobs","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob"]},{"title":"Queues","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"]},{"title":"Error","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBAnyCodableJob"]}],"sections":[],"hierarchy":{"paths":[[]]},"metadata":{"title":"HummingbirdJobs","roleHeading":"Framework","symbolKind":"module","role":"collection","modules":[{"name":"HummingbirdJobs"}],"externalID":"HummingbirdJobs"},"variants":[{"paths":["\/documentation\/hummingbirdjobs"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"},{"text":" that comes with the hummingbird-redis package that stores jobs in a Redis database.","type":"text"}],"type":"paragraph"},{"text":"Setting up Jobs","anchor":"Setting-up-Jobs","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory."}],"type":"paragraph"},{"syntax":"swift","code":["let jobQueue = HBMemoryJobQueue()"],"type":"codeListing"},{"text":"Creating a Job","anchor":"Creating-a-Job","level":3,"type":"heading"},{"inlineContent":[{"text":"First you must define your job. Create an object that inherits from ","type":"text"},{"code":"HBJob","type":"codeVoice"},{"text":". This protocol requires you to implement a static variable ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" and a function ","type":"text"},{"code":"func execute(on:logger)","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" variable should be unique to this job definition. It is used in the serialisation of the job. The ","type":"text"},{"code":"execute","type":"codeVoice"},{"text":" function does the work of the job and returns an ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that should be fulfilled when the job is complete. Below is an example of a job that calls a ","type":"text"},{"code":"sendEmail()","type":"codeVoice"},{"text":" function.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct SendEmailJob: HBJob {","    static let name = \"SendEmail\"","    let to: String","    let subject: String","    let message: String","    ","    \/\/\/ do the work","    func execute(logger: Logger) async throws {","        return try await sendEmail(to: self.to, subject: self.subject, message: self.message)","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"Before you can use this job you have to register it.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["SendEmailJob.register()"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Now you job is ready to create. Jobs can be queued up using the function "},{"type":"codeVoice","code":"push"},{"type":"text","text":" on "},{"type":"codeVoice","code":"HBJobQueue"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["let job = SendEmailJob(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job: job)"],"type":"codeListing"},{"text":"Processing Jobs","anchor":"Processing-Jobs","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"To process jobs you need to create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"},{"type":"text","text":". This defines the job queue it should service and how many jobs will be processed concurrently."}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","type":"reference","isActive":true},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":" from Swift Service Lifecycle so can be added to a ","type":"text"},{"type":"codeVoice","code":"ServiceGroup"}],"type":"paragraph"},{"syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueueHandler],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or it can be added to the array of jobs that "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":" manages"}],"type":"paragraph"},{"syntax":"swift","code":["let app = HBApplication(...)","app.addServices(jobQueueHandler)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you are running your job queue handler on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJob":{"abstract":[{"text":"Protocol for job description","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","kind":"symbol","navigatorTitle":[{"text":"HBJob","kind":"identifier"}],"title":"HBJob","type":"topic","url":"\/documentation\/hummingbirdjobs\/hbjob","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJob","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBQueuedJob":{"abstract":[{"text":"Queued job. Includes job, plus the id for the job","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBQueuedJob"}],"title":"HBQueuedJob","type":"topic","url":"\/documentation\/hummingbirdjobs\/hbqueuedjob","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBQueuedJob","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"role":"symbol","url":"\/documentation\/hummingbirdjobs\/jobqueueerror","navigatorTitle":[{"kind":"identifier","text":"JobQueueError"}],"title":"JobQueueError","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","abstract":[{"type":"text","text":"Job Queue Error type"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueueError"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"url":"\/documentation\/hummingbirdjobsredis","type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"title":"HummingbirdJobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","role":"collection","title":"HummingbirdJobs","url":"\/documentation\/hummingbirdjobs","type":"topic","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBAnyCodableJob":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAnyCodableJob","kind":"identifier"}],"abstract":[{"type":"text","text":"Add codable support for decoding\/encoding any HBJob"}],"navigatorTitle":[{"text":"HBAnyCodableJob","kind":"identifier"}],"kind":"symbol","title":"HBAnyCodableJob","url":"\/documentation\/hummingbirdjobs\/hbanycodablejob","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBAnyCodableJob","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueue":{"abstract":[{"type":"text","text":"Job queue protocol."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","kind":"symbol","navigatorTitle":[{"text":"HBJobQueue","kind":"identifier"}],"title":"HBJobQueue","type":"topic","url":"\/documentation\/hummingbirdjobs\/hbjobqueue","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobQueue","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueueHandler":{"abstract":[{"type":"text","text":"Object handling a single job queue"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBJobQueueHandler"}],"title":"HBJobQueueHandler","type":"topic","url":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"HBJobQueueHandler","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","title":"HBMemoryJobQueue","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","navigatorTitle":[{"kind":"identifier","text":"HBMemoryJobQueue"}],"role":"symbol","abstract":[{"text":"In memory implementation of job queue driver. Stores jobs in a circular buffer","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBMemoryJobQueue"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis/HBRedisJobQueue":{"url":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisJobQueue","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue","abstract":[{"type":"text","text":"Redis implementation of job queues"}],"navigatorTitle":[{"text":"HBRedisJobQueue","kind":"identifier"}],"title":"HBRedisJobQueue"}}}