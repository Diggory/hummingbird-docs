{"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs"},"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Jobs","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"]},{"title":"Queues","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"]},{"title":"Error","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"},{"type":"text","text":" that comes with the hummingbird-redis package that stores jobs in a Redis database."}]},{"text":"Setting up Jobs","type":"heading","level":3,"anchor":"Setting-up-Jobs"},{"type":"paragraph","inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory.","type":"text"}]},{"syntax":"swift","code":["let jobQueue = HBMemoryJobQueue()"],"type":"codeListing"},{"text":"Creating a Job","type":"heading","level":3,"anchor":"Creating-a-Job"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First you must define your job. Create an object that inherits from "},{"type":"codeVoice","code":"HBJob"},{"type":"text","text":". This protocol requires you to implement a static variable "},{"type":"codeVoice","code":"name"},{"type":"text","text":" and a function "},{"type":"codeVoice","code":"func execute(on:logger)"},{"type":"text","text":". The "},{"type":"codeVoice","code":"name"},{"type":"text","text":" variable should be unique to this job definition. It is used in the serialisation of the job. The "},{"type":"codeVoice","code":"execute"},{"type":"text","text":" function does the work of the job and returns an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that should be fulfilled when the job is complete. Below is an example of a job that calls a "},{"type":"codeVoice","code":"sendEmail()"},{"type":"text","text":" function."}]},{"syntax":"swift","code":["struct SendEmailJob: HBJob {","    static let name = \"SendEmail\"","    let to: String","    let subject: String","    let message: String","    ","    \/\/\/ do the work","    func execute(logger: Logger) async throws {","        return try await sendEmail(to: self.to, subject: self.subject, message: self.message)","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before you can use this job you have to register it."}]},{"syntax":"swift","code":["SendEmailJob.register()"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Now you job is ready to create. Jobs can be queued up using the function ","type":"text"},{"code":"push","type":"codeVoice"},{"text":" on ","type":"text"},{"code":"HBJobQueue","type":"codeVoice"},{"text":".","type":"text"}]},{"syntax":"swift","code":["let job = SendEmailJob(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job: job)"],"type":"codeListing"},{"text":"Processing Jobs","type":"heading","level":3,"anchor":"Processing-Jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To process jobs you need to create a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","type":"reference","isActive":true},{"type":"text","text":". This defines the job queue it should service and how many jobs will be processed concurrently."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","type":"reference"},{"type":"text","text":" conforms to "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" from Swift Service Lifecycle so can be added to a "},{"code":"ServiceGroup","type":"codeVoice"}]},{"syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueueHandler],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Or it can be added to the array of jobs that ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":" manages","type":"text"}]},{"syntax":"swift","code":["let app = HBApplication(...)","app.addServices(jobQueueHandler)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are running your job queue handler on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue"},{"type":"text","text":"."}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdjobs"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[[]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"]}],"metadata":{"modules":[{"name":"HummingbirdJobs"}],"role":"collection","externalID":"HummingbirdJobs","roleHeading":"Framework","title":"HummingbirdJobs","symbolKind":"module"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueue":{"type":"topic","url":"\/documentation\/hummingbirdjobs\/hbjobqueue","title":"HBJobQueue","role":"symbol","navigatorTitle":[{"text":"HBJobQueue","kind":"identifier"}],"abstract":[{"type":"text","text":"Job queue protocol."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobQueue","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","kind":"symbol","url":"\/documentation\/hummingbirdjobs","type":"topic","title":"HummingbirdJobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis/HBRedisJobQueue":{"title":"HBRedisJobQueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisJobQueue"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue","url":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRedisJobQueue"}],"abstract":[{"type":"text","text":"Redis implementation of job queues"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobIdentifier","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdjobs\/jobidentifier","abstract":[{"text":"Identifier for Job","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","type":"topic","title":"JobIdentifier"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"title":"JobQueueError","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","type":"topic","abstract":[{"type":"text","text":"Job Queue Error type"}],"url":"\/documentation\/hummingbirdjobs\/jobqueueerror","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueueError"}],"navigatorTitle":[{"kind":"identifier","text":"JobQueueError"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobInstance":{"navigatorTitle":[{"text":"HBJobInstance","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobInstance","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdjobs\/hbjobinstance","abstract":[{"text":"Holder for all data related to a job","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance","type":"topic","title":"HBJobInstance"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBQueuedJob":{"url":"\/documentation\/hummingbirdjobs\/hbqueuedjob","title":"HBQueuedJob","navigatorTitle":[{"kind":"identifier","text":"HBQueuedJob"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBQueuedJob"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Queued job. Includes job, plus the id for the job","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJob":{"url":"\/documentation\/hummingbirdjobs\/hbjob","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBJob","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HBJob","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","title":"HBJob","abstract":[{"type":"text","text":"Protocol for job description"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"navigatorTitle":[{"text":"HBMemoryJobQueue","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMemoryJobQueue","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","abstract":[{"text":"In memory implementation of job queue driver. Stores jobs in a circular buffer","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","type":"topic","title":"HBMemoryJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"role":"collection","url":"\/documentation\/hummingbirdjobsredis","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","type":"topic","title":"HummingbirdJobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueueHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","url":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","title":"HBJobQueueHandler","kind":"symbol","role":"symbol","abstract":[{"text":"Object handling a single job queue","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobQueueHandler","kind":"identifier"}],"navigatorTitle":[{"text":"HBJobQueueHandler","kind":"identifier"}]}}}