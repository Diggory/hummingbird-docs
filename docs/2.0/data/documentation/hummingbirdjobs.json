{"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"},{"type":"text","text":" that comes with the hummingbird-redis package that stores jobs in a Redis database."}],"type":"paragraph"},{"anchor":"Setting-up-Jobs","level":3,"text":"Setting up Jobs","type":"heading"},{"inlineContent":[{"type":"text","text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory."}],"type":"paragraph"},{"type":"codeListing","code":["let jobQueue = HBMemoryJobQueue()"],"syntax":"swift"},{"anchor":"Creating-a-Job","level":3,"text":"Creating a Job","type":"heading"},{"inlineContent":[{"type":"text","text":"First you must define your job. Create an object that inherits from "},{"type":"codeVoice","code":"HBJob"},{"type":"text","text":". This protocol requires you to implement a static variable "},{"type":"codeVoice","code":"name"},{"type":"text","text":" and a function "},{"type":"codeVoice","code":"func execute(on:logger)"},{"type":"text","text":". The "},{"type":"codeVoice","code":"name"},{"type":"text","text":" variable should be unique to this job definition. It is used in the serialisation of the job. The "},{"type":"codeVoice","code":"execute"},{"type":"text","text":" function does the work of the job and returns an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that should be fulfilled when the job is complete. Below is an example of a job that calls a "},{"type":"codeVoice","code":"sendEmail()"},{"type":"text","text":" function."}],"type":"paragraph"},{"type":"codeListing","code":["struct SendEmailJob: HBJob {","    static let name = \"SendEmail\"","    let to: String","    let subject: String","    let message: String","    ","    \/\/\/ do the work","    func execute(logger: Logger) async throws {","        return try await sendEmail(to: self.to, subject: self.subject, message: self.message)","    }","}"],"syntax":"swift"},{"inlineContent":[{"text":"Before you can use this job you have to register it.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["SendEmailJob.register()"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Now you job is ready to create. Jobs can be queued up using the function "},{"type":"codeVoice","code":"push"},{"type":"text","text":" on "},{"type":"codeVoice","code":"HBJobQueue"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["let job = SendEmailJob(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job: job)"],"syntax":"swift"},{"anchor":"Processing-Jobs","level":3,"text":"Processing Jobs","type":"heading"},{"inlineContent":[{"type":"text","text":"To process jobs you need to create a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","isActive":true},{"type":"text","text":". This defines the job queue it should service and how many jobs will be processed concurrently."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","type":"reference","isActive":true},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Service"},{"type":"text","text":" from Swift Service Lifecycle so can be added to a "},{"type":"codeVoice","code":"ServiceGroup"}],"type":"paragraph"},{"type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueueHandler],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Or it can be added to the array of jobs that "},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":" manages"}],"type":"paragraph"},{"type":"codeListing","code":["let app = HBApplication(...)","app.addServices(jobQueueHandler)"],"syntax":"swift"},{"inlineContent":[{"text":"If you are running your job queue handler on a separate server you will need to use a job queue driver that saves to some external storage eg ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"],"title":"Related Documentation"}],"hierarchy":{"paths":[[]]},"metadata":{"title":"HummingbirdJobs","modules":[{"name":"HummingbirdJobs"}],"symbolKind":"module","roleHeading":"Framework","externalID":"HummingbirdJobs","role":"collection"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdjobs"]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"],"title":"Jobs"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"],"title":"Queues"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"],"title":"Error"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"type":"topic","abstract":[{"type":"text","text":"Job Queue Error type"}],"url":"\/documentation\/hummingbirdjobs\/jobqueueerror","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JobQueueError"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueueError"}],"title":"JobQueueError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBQueuedJob":{"abstract":[{"text":"Queued job. Includes job, plus the id for the job","type":"text"}],"title":"HBQueuedJob","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","url":"\/documentation\/hummingbirdjobs\/hbqueuedjob","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBQueuedJob","kind":"identifier"}],"navigatorTitle":[{"text":"HBQueuedJob","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobInstance":{"title":"HBJobInstance","url":"\/documentation\/hummingbirdjobs\/hbjobinstance","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobInstance","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Holder for all data related to a job","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance","navigatorTitle":[{"text":"HBJobInstance","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueue":{"navigatorTitle":[{"kind":"identifier","text":"HBJobQueue"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobQueue","kind":"identifier"}],"title":"HBJobQueue","role":"symbol","abstract":[{"text":"Job queue protocol.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","url":"\/documentation\/hummingbirdjobs\/hbjobqueue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"title":"JobIdentifier","url":"\/documentation\/hummingbirdjobs\/jobidentifier","role":"symbol","abstract":[{"text":"Identifier for Job","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobIdentifier","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"navigatorTitle":[{"text":"HBMemoryJobQueue","kind":"identifier"}],"type":"topic","title":"HBMemoryJobQueue","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"HBMemoryJobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","abstract":[{"text":"In memory implementation of job queue driver. Stores jobs in a circular buffer","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueueHandler":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJobQueueHandler"}],"navigatorTitle":[{"kind":"identifier","text":"HBJobQueueHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","abstract":[{"type":"text","text":"Object handling a single job queue"}],"url":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","type":"topic","title":"HBJobQueueHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"kind":"symbol","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdjobsredis","title":"HummingbirdJobsRedis","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJob":{"url":"\/documentation\/hummingbirdjobs\/hbjob","kind":"symbol","navigatorTitle":[{"text":"HBJob","kind":"identifier"}],"abstract":[{"text":"Protocol for job description","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJob","kind":"identifier"}],"title":"HBJob","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis/HBRedisJobQueue":{"kind":"symbol","abstract":[{"text":"Redis implementation of job queues","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisJobQueue","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue","title":"HBRedisJobQueue","type":"topic","navigatorTitle":[{"text":"HBRedisJobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"role":"collection","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"kind":"symbol","title":"HummingbirdJobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","type":"topic","url":"\/documentation\/hummingbirdjobs"}}}