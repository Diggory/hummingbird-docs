{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"]}],"variants":[{"paths":["\/documentation\/hummingbirdjobs"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"},{"type":"text","text":" that comes with the hummingbird-redis package that stores jobs in a Redis database."}],"type":"paragraph"},{"level":3,"text":"Setting up Jobs","anchor":"Setting-up-Jobs","type":"heading"},{"inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let jobQueue = JobQueue(.memory, numWorkers: 1, logger: logger)"],"type":"codeListing"},{"level":3,"text":"Creating a Job","anchor":"Creating-a-Job","type":"heading"},{"inlineContent":[{"text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"First we define the parameters and the identifier. The parameters need to conform to ","type":"text"},{"type":"codeVoice","code":"Sendable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct SendEmailJobParameters: Codable, Sendable {","    let to: String","    let subject: String","    let body: String","}","","extension JobIdentifier<SendEmailJobParameters> {","    static let sendEmailJob: Self { \"SendEmail\" }","}"],"type":"codeListing"},{"inlineContent":[{"text":"Then we register the job with a job queue and also provide a closure that executes the job.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["jobQueue.registerJob(id: .sendEmailJob) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"],"type":"codeListing"},{"inlineContent":[{"text":"Now your job is ready to create. Jobs can be queued up using the function ","type":"text"},{"type":"codeVoice","code":"push"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"JobQueue"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(id: .sendEmailJob, .init(","    to: \"john@email.com\",","    subject: \"Test email\",","    body: \"Hello?\"","))"],"type":"codeListing"},{"level":3,"text":"Processing Jobs","anchor":"Processing-Jobs","type":"heading"},{"inlineContent":[{"type":"text","text":"When you create a "},{"type":"codeVoice","code":"JobQueue"},{"type":"text","text":" the "},{"type":"codeVoice","code":"numWorkers"},{"type":"text","text":" parameter indicates how many workers you want servicing the job queue. If you want to activate these workers you need to add the job queue to your "},{"type":"codeVoice","code":"ServiceGroup"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or it can be added to the array of jobs that "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" manages"}],"type":"paragraph"},{"syntax":"swift","code":["let app = Application(...)","app.addServices(jobQueue)"],"type":"codeListing"},{"inlineContent":[{"text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/RedisQueue"},{"text":".","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"title":"Jobs","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobDefinition","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobParameters"]},{"title":"Queues","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/QueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/MemoryQueue"]},{"title":"Error","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"]}],"metadata":{"title":"HummingbirdJobs","role":"collection","modules":[{"name":"HummingbirdJobs"}],"symbolKind":"module","roleHeading":"Framework","externalID":"HummingbirdJobs"},"kind":"symbol","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobContext":{"navigatorTitle":[{"text":"JobContext","kind":"identifier"}],"type":"topic","title":"JobContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobContext","kind":"identifier"}],"abstract":[],"role":"symbol","url":"\/documentation\/hummingbirdjobs\/jobcontext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueue":{"role":"symbol","kind":"symbol","title":"JobQueue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueue"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueue","navigatorTitle":[{"kind":"identifier","text":"JobQueue"}],"abstract":[{"text":"Job queue","type":"text"}],"url":"\/documentation\/hummingbirdjobs\/jobqueue","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","title":"JobIdentifier","abstract":[{"text":"Identifier for a Job type","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobIdentifier","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobs\/jobidentifier"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"navigatorTitle":[{"text":"JobQueueError","kind":"identifier"}],"type":"topic","title":"JobQueueError","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"JobQueueError","kind":"identifier"}],"abstract":[{"text":"Job Queue Error type","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdjobs\/jobqueueerror","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","title":"HummingbirdJobs","type":"topic","role":"collection","url":"\/documentation\/hummingbirdjobs","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobParameters":{"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobParameters","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobs\/jobparameters","title":"JobParameters","navigatorTitle":[{"text":"JobParameters","kind":"identifier"}],"abstract":[{"text":"Defines job parameters and identifier","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobParameters","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"url":"\/documentation\/hummingbirdjobsredis","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","type":"topic","role":"collection","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"title":"HummingbirdJobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueDriver":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueueDriver","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Job queue protocol.","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdjobs\/jobqueuedriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueDriver","type":"topic","title":"JobQueueDriver","navigatorTitle":[{"text":"JobQueueDriver","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis/RedisQueue":{"url":"\/documentation\/hummingbirdjobsredis\/redisqueue","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/RedisQueue","navigatorTitle":[{"text":"RedisQueue","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RedisQueue","kind":"identifier"}],"abstract":[{"text":"Redis implementation of job queue driver","type":"text"}],"title":"RedisQueue"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","url":"\/documentation\/hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/MemoryQueue":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemoryQueue","kind":"identifier"}],"abstract":[{"text":"In memory implementation of job queue driver. Stores job data in a circular buffer","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/MemoryQueue","navigatorTitle":[{"text":"MemoryQueue","kind":"identifier"}],"title":"MemoryQueue","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdjobs\/memoryqueue","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobDefinition":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobDefinition","title":"JobDefinition","abstract":[{"type":"text","text":"Job definition type"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobDefinition"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JobDefinition"}],"url":"\/documentation\/hummingbirdjobs\/jobdefinition"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/QueuedJob":{"role":"symbol","kind":"symbol","title":"QueuedJob","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"QueuedJob","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/QueuedJob","navigatorTitle":[{"text":"QueuedJob","kind":"identifier"}],"abstract":[{"text":"Queued job. Includes job data, plus the id for the job","type":"text"}],"url":"\/documentation\/hummingbirdjobs\/queuedjob","type":"topic"}}}