{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"],"title":"Related Documentation"}],"metadata":{"symbolKind":"module","modules":[{"name":"HummingbirdJobs"}],"title":"HummingbirdJobs","roleHeading":"Framework","role":"collection","externalID":"HummingbirdJobs"},"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"],"title":"Jobs"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"],"title":"Queues"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"],"title":"Error"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"},{"text":" that comes with the hummingbird-redis package that stores jobs in a Redis database.","type":"text"}],"type":"paragraph"},{"anchor":"Setting-up-Jobs","level":3,"type":"heading","text":"Setting up Jobs"},{"inlineContent":[{"type":"text","text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let jobQueue = HBMemoryJobQueue()"]},{"anchor":"Creating-a-Job","level":3,"type":"heading","text":"Creating a Job"},{"inlineContent":[{"text":"First you must define your job. Create an object that inherits from ","type":"text"},{"code":"HBJob","type":"codeVoice"},{"text":". This protocol requires you to implement a static variable ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" and a function ","type":"text"},{"code":"func execute(on:logger)","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" variable should be unique to this job definition. It is used in the serialisation of the job. The ","type":"text"},{"code":"execute","type":"codeVoice"},{"text":" function does the work of the job and returns an ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that should be fulfilled when the job is complete. Below is an example of a job that calls a ","type":"text"},{"code":"sendEmail()","type":"codeVoice"},{"text":" function.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct SendEmailJob: HBJob {","    static let name = \"SendEmail\"","    let to: String","    let subject: String","    let message: String","    ","    \/\/\/ do the work","    func execute(logger: Logger) async throws {","        return try await sendEmail(to: self.to, subject: self.subject, message: self.message)","    }","}"]},{"inlineContent":[{"text":"Before you can use this job you have to register it.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["SendEmailJob.register()"]},{"inlineContent":[{"type":"text","text":"Now you job is ready to create. Jobs can be queued up using the function "},{"code":"push","type":"codeVoice"},{"type":"text","text":" on "},{"code":"HBJobQueue","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let job = SendEmailJob(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job: job)"]},{"anchor":"Processing-Jobs","level":3,"type":"heading","text":"Processing Jobs"},{"inlineContent":[{"type":"text","text":"To process jobs you need to create a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","type":"reference","isActive":true},{"type":"text","text":". This defines the job queue it should service and how many jobs will be processed concurrently."}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":" from Swift Service Lifecycle so can be added to a ","type":"text"},{"type":"codeVoice","code":"ServiceGroup"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueueHandler],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]},{"inlineContent":[{"type":"text","text":"Or it can be added to the array of jobs that "},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":" manages"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let app = HBApplication(...)","app.addServices(jobQueueHandler)"]},{"inlineContent":[{"type":"text","text":"If you are running your job queue handler on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue"},{"type":"text","text":"."}],"type":"paragraph"}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdjobs"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"type":"topic","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"url":"\/documentation\/hummingbirdjobsredis","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","title":"HummingbirdJobsRedis","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueue":{"role":"symbol","abstract":[{"text":"Job queue protocol.","type":"text"}],"title":"HBJobQueue","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","navigatorTitle":[{"text":"HBJobQueue","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBJobQueue","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobs\/hbjobqueue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueueHandler":{"navigatorTitle":[{"text":"HBJobQueueHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","kind":"symbol","url":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","abstract":[{"type":"text","text":"Object handling a single job queue"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJobQueueHandler"}],"title":"HBJobQueueHandler","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBQueuedJob":{"title":"HBQueuedJob","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdjobs\/hbqueuedjob","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBQueuedJob"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBQueuedJob"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","abstract":[{"text":"Queued job. Includes job, plus the id for the job","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"type":"topic","url":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobIdentifier","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Identifier for Job"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores jobs in a circular buffer"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","navigatorTitle":[{"text":"HBMemoryJobQueue","kind":"identifier"}],"title":"HBMemoryJobQueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMemoryJobQueue","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"navigatorTitle":[{"text":"JobQueueError","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobs\/jobqueueerror","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","abstract":[{"type":"text","text":"Job Queue Error type"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueueError"}],"title":"JobQueueError"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis/HBRedisJobQueue":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisJobQueue","kind":"identifier"}],"abstract":[{"text":"Redis implementation of job queues","type":"text"}],"url":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue","role":"symbol","navigatorTitle":[{"text":"HBRedisJobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue","title":"HBRedisJobQueue","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","url":"\/documentation\/hummingbirdjobs","title":"HummingbirdJobs","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJob":{"abstract":[{"type":"text","text":"Protocol for job description"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","url":"\/documentation\/hummingbirdjobs\/hbjob","navigatorTitle":[{"text":"HBJob","kind":"identifier"}],"title":"HBJob","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJob","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobInstance":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdjobs\/hbjobinstance","kind":"symbol","abstract":[{"text":"Holder for all data related to a job","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobInstance","kind":"identifier"}],"navigatorTitle":[{"text":"HBJobInstance","kind":"identifier"}],"title":"HBJobInstance","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"}}}