{"metadata":{"externalID":"HummingbirdJobs","role":"collection","roleHeading":"Framework","symbolKind":"module","modules":[{"name":"HummingbirdJobs"}],"title":"HummingbirdJobs"},"variants":[{"paths":["\/documentation\/hummingbirdjobs"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"],"title":"Related Documentation"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","type":"reference"},{"text":" that comes with the hummingbird-redis package that stores jobs in a Redis database.","type":"text"}]},{"type":"heading","level":3,"text":"Setting up Jobs","anchor":"Setting-up-Jobs"},{"type":"paragraph","inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let jobQueue = HBMemoryJobQueue()"]},{"type":"heading","level":3,"text":"Creating a Job","anchor":"Creating-a-Job"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First you must define your job. Create an object that inherits from "},{"type":"codeVoice","code":"HBJob"},{"type":"text","text":". This protocol requires you to implement a static variable "},{"type":"codeVoice","code":"name"},{"type":"text","text":" and a function "},{"type":"codeVoice","code":"func execute(on:logger)"},{"type":"text","text":". The "},{"type":"codeVoice","code":"name"},{"type":"text","text":" variable should be unique to this job definition. It is used in the serialisation of the job. The "},{"code":"execute","type":"codeVoice"},{"type":"text","text":" function does the work of the job and returns an "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that should be fulfilled when the job is complete. Below is an example of a job that calls a "},{"code":"sendEmail()","type":"codeVoice"},{"type":"text","text":" function."}]},{"type":"codeListing","syntax":"swift","code":["struct SendEmailJob: HBJob {","    static let name = \"SendEmail\"","    let to: String","    let subject: String","    let message: String","    ","    \/\/\/ do the work","    func execute(logger: Logger) async throws {","        return try await sendEmail(to: self.to, subject: self.subject, message: self.message)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before you can use this job you have to register it."}]},{"type":"codeListing","syntax":"swift","code":["SendEmailJob.register()"]},{"type":"paragraph","inlineContent":[{"text":"Now you job is ready to create. Jobs can be queued up using the function ","type":"text"},{"code":"push","type":"codeVoice"},{"text":" on ","type":"text"},{"code":"HBJobQueue","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let job = SendEmailJob(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job: job)"]},{"type":"heading","level":3,"text":"Processing Jobs","anchor":"Processing-Jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To process jobs you need to create a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","isActive":true},{"type":"text","text":". This defines the job queue it should service and how many jobs will be processed concurrently."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Service"},{"type":"text","text":" from Swift Service Lifecycle so can be added to a "},{"type":"codeVoice","code":"ServiceGroup"}]},{"type":"codeListing","syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueueHandler],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]},{"type":"paragraph","inlineContent":[{"text":"Or it can be added to the array of jobs that ","type":"text"},{"type":"codeVoice","code":"HBApplication"},{"text":" manages","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let app = HBApplication(...)","app.addServices(jobQueueHandler)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are running your job queue handler on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue"},{"type":"text","text":"."}]}]}],"kind":"symbol","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"],"title":"Jobs"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"],"title":"Queues"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"],"title":"Error"}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMemoryJobQueue"}],"title":"HBMemoryJobQueue","kind":"symbol","abstract":[{"text":"In memory implementation of job queue driver. Stores jobs in a circular buffer","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMemoryJobQueue"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"navigatorTitle":[{"text":"JobQueueError","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobs\/jobqueueerror","role":"symbol","title":"JobQueueError","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobQueueError"}],"type":"topic","abstract":[{"type":"text","text":"Job Queue Error type"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","title":"HummingbirdJobsRedis","kind":"symbol","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdjobsredis","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"title":"HummingbirdJobs","kind":"symbol","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","url":"\/documentation\/hummingbirdjobs"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"url":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier","abstract":[{"text":"Identifier for Job","type":"text"}],"navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobIdentifier","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBQueuedJob":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBQueuedJob","kind":"identifier"}],"abstract":[{"type":"text","text":"Queued job. Includes job, plus the id for the job"}],"navigatorTitle":[{"text":"HBQueuedJob","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobs\/hbqueuedjob","title":"HBQueuedJob"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJob":{"navigatorTitle":[{"kind":"identifier","text":"HBJob"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","title":"HBJob","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJob"}],"url":"\/documentation\/hummingbirdjobs\/hbjob","role":"symbol","abstract":[{"type":"text","text":"Protocol for job description"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis/HBRedisJobQueue":{"url":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisJobQueue","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Redis implementation of job queues","type":"text"}],"navigatorTitle":[{"text":"HBRedisJobQueue","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue","title":"HBRedisJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobInstance":{"url":"\/documentation\/hummingbirdjobs\/hbjobinstance","type":"topic","abstract":[{"type":"text","text":"Holder for all data related to a job"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance","role":"symbol","title":"HBJobInstance","navigatorTitle":[{"kind":"identifier","text":"HBJobInstance"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBJobInstance","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueueHandler":{"url":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJobQueueHandler"}],"kind":"symbol","abstract":[{"type":"text","text":"Object handling a single job queue"}],"navigatorTitle":[{"kind":"identifier","text":"HBJobQueueHandler"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","title":"HBJobQueueHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueue":{"navigatorTitle":[{"text":"HBJobQueue","kind":"identifier"}],"title":"HBJobQueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","abstract":[{"type":"text","text":"Job queue protocol."}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobQueue","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobs\/hbjobqueue"}}}