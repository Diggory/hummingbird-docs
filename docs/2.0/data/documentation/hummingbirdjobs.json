{"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdjobs"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"module","roleHeading":"Framework","role":"collection","externalID":"HummingbirdJobs","modules":[{"name":"HummingbirdJobs"}],"title":"HummingbirdJobs"},"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"],"title":"Jobs"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"],"title":"Queues"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"],"title":"Error"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation "},{"type":"codeVoice","code":"\/HummingbirdJobsRedis"},{"type":"text","text":" that comes with the hummingbird-redis package that stores jobs in a Redis database."}],"type":"paragraph"},{"text":"Setting up Jobs","anchor":"Setting-up-Jobs","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory."}],"type":"paragraph"},{"syntax":"swift","code":["let jobQueue = HBMemoryJobQueue()"],"type":"codeListing"},{"text":"Creating a Job","anchor":"Creating-a-Job","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"First you must define your job. Create an object that inherits from "},{"type":"codeVoice","code":"HBJob"},{"type":"text","text":". This protocol requires you to implement a static variable "},{"type":"codeVoice","code":"name"},{"type":"text","text":" and a function "},{"type":"codeVoice","code":"func execute(on:logger)"},{"type":"text","text":". The "},{"type":"codeVoice","code":"name"},{"type":"text","text":" variable should be unique to this job definition. It is used in the serialisation of the job. The "},{"type":"codeVoice","code":"execute"},{"text":" function does the work of the job and returns an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" that should be fulfilled when the job is complete. Below is an example of a job that calls a ","type":"text"},{"type":"codeVoice","code":"sendEmail()"},{"text":" function.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct SendEmailJob: HBJob {","    static let name = \"SendEmail\"","    let to: String","    let subject: String","    let message: String","    ","    \/\/\/ do the work","    func execute(logger: Logger) async throws {","        return try await sendEmail(to: self.to, subject: self.subject, message: self.message)","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"Before you can use this job you have to register it.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["SendEmailJob.register()"],"type":"codeListing"},{"inlineContent":[{"text":"Now you job is ready to create. Jobs can be queued up using the function ","type":"text"},{"code":"push","type":"codeVoice"},{"text":" on ","type":"text"},{"code":"HBJobQueue","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let job = SendEmailJob(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job: job)"],"type":"codeListing"},{"text":"Processing Jobs","anchor":"Processing-Jobs","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"To process jobs you need to create a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","isActive":true},{"type":"text","text":". This defines the job queue it should service and how many jobs will be processed concurrently."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","isActive":true,"type":"reference"},{"type":"text","text":" conforms to "},{"code":"Service","type":"codeVoice"},{"type":"text","text":" from Swift Service Lifecycle so can be added to a "},{"code":"ServiceGroup","type":"codeVoice"}],"type":"paragraph"},{"syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueueHandler],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing"},{"inlineContent":[{"text":"Or it can be added to the array of jobs that ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":" manages","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let app = HBApplication(...)","app.addServices(jobQueueHandler)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you are running your job queue handler on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"type":"codeVoice","code":"HummingbirdJobsRedis\/HBRedisJobQueue"},{"type":"text","text":"."}],"type":"paragraph"}]}],"sections":[],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"role":"symbol","title":"HBMemoryJobQueue","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMemoryJobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","kind":"symbol","navigatorTitle":[{"text":"HBMemoryJobQueue","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores jobs in a circular buffer"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJob":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJob"}],"type":"topic","kind":"symbol","title":"HBJob","url":"\/documentation\/hummingbirdjobs\/hbjob","abstract":[{"type":"text","text":"Protocol for job description"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBJob"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueueHandler":{"role":"symbol","title":"HBJobQueueHandler","url":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobQueueHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","kind":"symbol","navigatorTitle":[{"text":"HBJobQueueHandler","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Object handling a single job queue"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"role":"collection","title":"HummingbirdJobs","url":"\/documentation\/hummingbirdjobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JobQueueError"}],"abstract":[{"text":"Job Queue Error type","type":"text"}],"role":"symbol","title":"JobQueueError","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","url":"\/documentation\/hummingbirdjobs\/jobqueueerror","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueueError"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobInstance":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance","navigatorTitle":[{"text":"HBJobInstance","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobInstance","kind":"identifier"}],"abstract":[{"text":"Holder for all data related to a job","type":"text"}],"url":"\/documentation\/hummingbirdjobs\/hbjobinstance","title":"HBJobInstance"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBQueuedJob":{"role":"symbol","title":"HBQueuedJob","url":"\/documentation\/hummingbirdjobs\/hbqueuedjob","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBQueuedJob","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","kind":"symbol","navigatorTitle":[{"text":"HBQueuedJob","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Queued job. Includes job, plus the id for the job"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueue":{"role":"symbol","title":"HBJobQueue","url":"\/documentation\/hummingbirdjobs\/hbjobqueue","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","kind":"symbol","navigatorTitle":[{"text":"HBJobQueue","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Job queue protocol."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JobIdentifier"}],"abstract":[{"text":"Identifier for Job","type":"text"}],"role":"symbol","title":"JobIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","url":"\/documentation\/hummingbirdjobs\/jobidentifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobIdentifier"}],"type":"topic"}}}