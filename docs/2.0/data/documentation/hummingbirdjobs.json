{"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"},{"text":" that comes with the hummingbird-redis package that stores jobs in a Redis database.","type":"text"}]},{"level":3,"text":"Setting up Jobs","type":"heading","anchor":"Setting-up-Jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory."}]},{"code":["let jobQueue = HBMemoryJobQueue()"],"type":"codeListing","syntax":"swift"},{"level":3,"text":"Creating a Job","type":"heading","anchor":"Creating-a-Job"},{"type":"paragraph","inlineContent":[{"type":"text","text":"First you must define your job. Create an object that inherits from "},{"type":"codeVoice","code":"HBJob"},{"type":"text","text":". This protocol requires you to implement a static variable "},{"type":"codeVoice","code":"name"},{"type":"text","text":" and a function "},{"type":"codeVoice","code":"func execute(on:logger)"},{"type":"text","text":". The "},{"type":"codeVoice","code":"name"},{"type":"text","text":" variable should be unique to this job definition. It is used in the serialisation of the job. The "},{"type":"codeVoice","code":"execute"},{"type":"text","text":" function does the work of the job and returns an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that should be fulfilled when the job is complete. Below is an example of a job that calls a "},{"type":"codeVoice","code":"sendEmail()"},{"type":"text","text":" function."}]},{"code":["struct SendEmailJob: HBJob {","    static let name = \"SendEmail\"","    let to: String","    let subject: String","    let message: String","    ","    \/\/\/ do the work","    func execute(logger: Logger) async throws {","        return try await sendEmail(to: self.to, subject: self.subject, message: self.message)","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before you can use this job you have to register it."}]},{"code":["SendEmailJob.register()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Now you job is ready to create. Jobs can be queued up using the function ","type":"text"},{"type":"codeVoice","code":"push"},{"text":" on ","type":"text"},{"type":"codeVoice","code":"HBJobQueue"},{"text":".","type":"text"}]},{"code":["let job = SendEmailJob(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job: job)"],"type":"codeListing","syntax":"swift"},{"level":3,"text":"Processing Jobs","type":"heading","anchor":"Processing-Jobs"},{"type":"paragraph","inlineContent":[{"text":"To process jobs you need to create a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","isActive":true,"type":"reference"},{"text":". This defines the job queue it should service and how many jobs will be processed concurrently.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","type":"reference","isActive":true},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":" from Swift Service Lifecycle so can be added to a ","type":"text"},{"type":"codeVoice","code":"ServiceGroup"}]},{"code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueueHandler],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or it can be added to the array of jobs that "},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":" manages"}]},{"code":["let app = HBApplication(...)","app.addServices(jobQueueHandler)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are running your job queue handler on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue","type":"reference","isActive":true},{"type":"text","text":"."}]}]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"]}],"topicSections":[{"title":"Jobs","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"]},{"title":"Queues","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"]},{"title":"Error","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"]}],"variants":[{"paths":["\/documentation\/hummingbirdjobs"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"HummingbirdJobs","symbolKind":"module","modules":[{"name":"HummingbirdJobs"}],"externalID":"HummingbirdJobs","role":"collection","roleHeading":"Framework"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBQueuedJob":{"role":"symbol","type":"topic","title":"HBQueuedJob","url":"\/documentation\/hummingbirdjobs\/hbqueuedjob","kind":"symbol","abstract":[{"type":"text","text":"Queued job. Includes job, plus the id for the job"}],"navigatorTitle":[{"text":"HBQueuedJob","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBQueuedJob","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis/HBRedisJobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue","title":"HBRedisJobQueue","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Redis implementation of job queues","type":"text"}],"url":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisJobQueue","kind":"identifier"}],"navigatorTitle":[{"text":"HBRedisJobQueue","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","url":"\/documentation\/hummingbirdjobs","title":"HummingbirdJobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMemoryJobQueue"}],"title":"HBMemoryJobQueue","navigatorTitle":[{"kind":"identifier","text":"HBMemoryJobQueue"}],"abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores jobs in a circular buffer"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueue":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","url":"\/documentation\/hummingbirdjobs\/hbjobqueue","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJobQueue"}],"title":"HBJobQueue","navigatorTitle":[{"kind":"identifier","text":"HBJobQueue"}],"abstract":[{"type":"text","text":"Job queue protocol."}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJob":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","url":"\/documentation\/hummingbirdjobs\/hbjob","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJob"}],"title":"HBJob","navigatorTitle":[{"kind":"identifier","text":"HBJob"}],"abstract":[{"type":"text","text":"Protocol for job description"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}],"title":"HummingbirdJobsRedis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","type":"topic","url":"\/documentation\/hummingbirdjobsredis","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"type":"topic","abstract":[{"type":"text","text":"Identifier for Job"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JobIdentifier"}],"url":"\/documentation\/hummingbirdjobs\/jobidentifier","title":"JobIdentifier"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobInstance":{"abstract":[{"text":"Holder for all data related to a job","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBJobInstance"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance","url":"\/documentation\/hummingbirdjobs\/hbjobinstance","title":"HBJobInstance","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJobInstance"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueueHandler":{"navigatorTitle":[{"kind":"identifier","text":"HBJobQueueHandler"}],"type":"topic","abstract":[{"type":"text","text":"Object handling a single job queue"}],"role":"symbol","title":"HBJobQueueHandler","url":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJobQueueHandler"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"abstract":[{"type":"text","text":"Job Queue Error type"}],"title":"JobQueueError","navigatorTitle":[{"text":"JobQueueError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","type":"topic","url":"\/documentation\/hummingbirdjobs\/jobqueueerror","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"JobQueueError","kind":"identifier"}],"role":"symbol","kind":"symbol"}}}