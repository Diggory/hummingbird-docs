{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[[]]},"kind":"symbol","metadata":{"role":"collection","symbolKind":"module","externalID":"HummingbirdJobs","roleHeading":"Framework","modules":[{"name":"HummingbirdJobs"}],"title":"HummingbirdJobs"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs"},"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"},{"type":"text","text":" that comes with the hummingbird-redis package that stores jobs in a Redis database."}]},{"type":"heading","anchor":"Setting-up-Jobs","level":3,"text":"Setting up Jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory."}]},{"type":"codeListing","syntax":"swift","code":["let jobQueue = HBMemoryJobQueue()"]},{"type":"heading","anchor":"Creating-a-Job","level":3,"text":"Creating a Job"},{"type":"paragraph","inlineContent":[{"text":"First you must define your job. Create an object that inherits from ","type":"text"},{"code":"HBJob","type":"codeVoice"},{"text":". This protocol requires you to implement a static variable ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" and a function ","type":"text"},{"code":"func execute(on:logger)","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" variable should be unique to this job definition. It is used in the serialisation of the job. The ","type":"text"},{"code":"execute","type":"codeVoice"},{"text":" function does the work of the job and returns an ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that should be fulfilled when the job is complete. Below is an example of a job that calls a ","type":"text"},{"code":"sendEmail()","type":"codeVoice"},{"text":" function.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct SendEmailJob: HBJob {","    static let name = \"SendEmail\"","    let to: String","    let subject: String","    let message: String","    ","    \/\/\/ do the work","    func execute(logger: Logger) async throws {","        return try await sendEmail(to: self.to, subject: self.subject, message: self.message)","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Before you can use this job you have to register it.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["SendEmailJob.register()"]},{"type":"paragraph","inlineContent":[{"text":"Now you job is ready to create. Jobs can be queued up using the function ","type":"text"},{"code":"push","type":"codeVoice"},{"text":" on ","type":"text"},{"code":"HBJobQueue","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let job = SendEmailJob(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job: job)"]},{"type":"heading","anchor":"Processing-Jobs","level":3,"text":"Processing Jobs"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To process jobs you need to create a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","isActive":true},{"type":"text","text":". This defines the job queue it should service and how many jobs will be processed concurrently."}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","type":"reference"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Service"},{"text":" from Swift Service Lifecycle so can be added to a ","type":"text"},{"type":"codeVoice","code":"ServiceGroup"}]},{"type":"codeListing","syntax":"swift","code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueueHandler],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or it can be added to the array of jobs that "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":" manages"}]},{"type":"codeListing","syntax":"swift","code":["let app = HBApplication(...)","app.addServices(jobQueueHandler)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are running your job queue handler on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue","isActive":true},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbirdjobs"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"],"title":"Related Documentation"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"],"title":"Jobs"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"],"title":"Queues"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"],"title":"Error"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"abstract":[{"text":"Identifier for Job","type":"text"}],"title":"JobIdentifier","navigatorTitle":[{"kind":"identifier","text":"JobIdentifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdjobs\/jobidentifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBQueuedJob":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBQueuedJob"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","abstract":[{"text":"Queued job. Includes job, plus the id for the job","type":"text"}],"role":"symbol","title":"HBQueuedJob","url":"\/documentation\/hummingbirdjobs\/hbqueuedjob","navigatorTitle":[{"kind":"identifier","text":"HBQueuedJob"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueueHandler":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJobQueueHandler"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","abstract":[{"text":"Object handling a single job queue","type":"text"}],"role":"symbol","title":"HBJobQueueHandler","url":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","navigatorTitle":[{"kind":"identifier","text":"HBJobQueueHandler"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"title":"HummingbirdJobsRedis","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","url":"\/documentation\/hummingbirdjobsredis","kind":"symbol","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJob":{"title":"HBJob","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBJob"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJob"}],"abstract":[{"text":"Protocol for job description","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdjobs\/hbjob","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"url":"\/documentation\/hummingbirdjobs\/jobqueueerror","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","navigatorTitle":[{"kind":"identifier","text":"JobQueueError"}],"abstract":[{"text":"Job Queue Error type","type":"text"}],"role":"symbol","title":"JobQueueError","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueueError"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobInstance":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJobInstance"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance","title":"HBJobInstance","abstract":[{"text":"Holder for all data related to a job","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBJobInstance"}],"url":"\/documentation\/hummingbirdjobs\/hbjobinstance","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"type":"topic","title":"HBMemoryJobQueue","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"HBMemoryJobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores jobs in a circular buffer"}],"url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","navigatorTitle":[{"text":"HBMemoryJobQueue","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"type":"topic","title":"HummingbirdJobs","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"url":"\/documentation\/hummingbirdjobs","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueue":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJobQueue"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","abstract":[{"text":"Job queue protocol.","type":"text"}],"role":"symbol","title":"HBJobQueue","url":"\/documentation\/hummingbirdjobs\/hbjobqueue","navigatorTitle":[{"kind":"identifier","text":"HBJobQueue"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis/HBRedisJobQueue":{"url":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue","title":"HBRedisJobQueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisJobQueue"}],"abstract":[{"type":"text","text":"Redis implementation of job queues"}],"navigatorTitle":[{"text":"HBRedisJobQueue","kind":"identifier"}],"kind":"symbol"}}}