{"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","isActive":true},{"type":"text","text":" that comes with the hummingbird-redis package that stores jobs in a Redis database."}],"type":"paragraph"},{"text":"Setting up Jobs","anchor":"Setting-up-Jobs","level":3,"type":"heading"},{"inlineContent":[{"text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory.","type":"text"}],"type":"paragraph"},{"code":["let jobQueue = HBMemoryJobQueue()"],"syntax":"swift","type":"codeListing"},{"text":"Creating a Job","anchor":"Creating-a-Job","level":3,"type":"heading"},{"inlineContent":[{"text":"First you must define your job. Create an object that inherits from ","type":"text"},{"code":"HBJob","type":"codeVoice"},{"text":". This protocol requires you to implement a static variable ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" and a function ","type":"text"},{"code":"func execute(on:logger)","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" variable should be unique to this job definition. It is used in the serialisation of the job. The ","type":"text"},{"code":"execute","type":"codeVoice"},{"text":" function does the work of the job and returns an ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that should be fulfilled when the job is complete. Below is an example of a job that calls a ","type":"text"},{"code":"sendEmail()","type":"codeVoice"},{"text":" function.","type":"text"}],"type":"paragraph"},{"code":["struct SendEmailJob: HBJob {","    static let name = \"SendEmail\"","    let to: String","    let subject: String","    let message: String","    ","    \/\/\/ do the work","    func execute(logger: Logger) async throws {","        return try await sendEmail(to: self.to, subject: self.subject, message: self.message)","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Before you can use this job you have to register it."}],"type":"paragraph"},{"code":["SendEmailJob.register()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Now you job is ready to create. Jobs can be queued up using the function "},{"type":"codeVoice","code":"push"},{"type":"text","text":" on "},{"type":"codeVoice","code":"HBJobQueue"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let job = SendEmailJob(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job: job)"],"syntax":"swift","type":"codeListing"},{"text":"Processing Jobs","anchor":"Processing-Jobs","level":3,"type":"heading"},{"inlineContent":[{"text":"To process jobs you need to create a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","type":"reference","isActive":true},{"text":". This defines the job queue it should service and how many jobs will be processed concurrently.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","type":"reference","isActive":true},{"text":" conforms to ","type":"text"},{"code":"Service","type":"codeVoice"},{"text":" from Swift Service Lifecycle so can be added to a ","type":"text"},{"code":"ServiceGroup","type":"codeVoice"}],"type":"paragraph"},{"code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueueHandler],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Or it can be added to the array of jobs that ","type":"text"},{"type":"codeVoice","code":"HBApplication"},{"text":" manages","type":"text"}],"type":"paragraph"},{"code":["let app = HBApplication(...)","app.addServices(jobQueueHandler)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you are running your job queue handler on a separate server you will need to use a job queue driver that saves to some external storage eg ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue"},{"text":".","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"],"title":"Jobs"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"],"title":"Queues"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"],"title":"Error"}],"metadata":{"symbolKind":"module","role":"collection","modules":[{"name":"HummingbirdJobs"}],"externalID":"HummingbirdJobs","roleHeading":"Framework","title":"HummingbirdJobs"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"],"title":"Related Documentation"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdjobs"]}],"hierarchy":{"paths":[[]]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs"},"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis/HBRedisJobQueue":{"abstract":[{"text":"Redis implementation of job queues","type":"text"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBRedisJobQueue","kind":"identifier"}],"type":"topic","title":"HBRedisJobQueue","url":"\/documentation\/hummingbirdjobsredis\/hbredisjobqueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisJobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/HBRedisJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueueError","kind":"identifier"}],"type":"topic","abstract":[{"text":"Job Queue Error type","type":"text"}],"kind":"symbol","title":"JobQueueError","url":"\/documentation\/hummingbirdjobs\/jobqueueerror","navigatorTitle":[{"text":"JobQueueError","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"abstract":[{"text":"In memory implementation of job queue driver. Stores jobs in a circular buffer","type":"text"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMemoryJobQueue"}],"type":"topic","title":"HBMemoryJobQueue","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMemoryJobQueue"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJob":{"abstract":[{"text":"Protocol for job description","type":"text"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBJob"}],"type":"topic","title":"HBJob","url":"\/documentation\/hummingbirdjobs\/hbjob","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBJob"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","title":"Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueue":{"url":"\/documentation\/hummingbirdjobs\/hbjobqueue","navigatorTitle":[{"text":"HBJobQueue","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobQueue","kind":"identifier"}],"title":"HBJobQueue","type":"topic","abstract":[{"text":"Job queue protocol.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"role":"collection","title":"HummingbirdJobsRedis","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"url":"\/documentation\/hummingbirdjobsredis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobInstance":{"abstract":[{"text":"Holder for all data related to a job","type":"text"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBJobInstance","kind":"identifier"}],"type":"topic","title":"HBJobInstance","url":"\/documentation\/hummingbirdjobs\/hbjobinstance","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobInstance","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","type":"topic","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"kind":"symbol","title":"HummingbirdJobs","url":"\/documentation\/hummingbirdjobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBQueuedJob":{"abstract":[{"type":"text","text":"Queued job. Includes job, plus the id for the job"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBQueuedJob"}],"type":"topic","title":"HBQueuedJob","url":"\/documentation\/hummingbirdjobs\/hbqueuedjob","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBQueuedJob"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueueHandler":{"navigatorTitle":[{"kind":"identifier","text":"HBJobQueueHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBJobQueueHandler"}],"type":"topic","title":"HBJobQueueHandler","url":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","abstract":[{"text":"Object handling a single job queue","type":"text"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"abstract":[{"type":"text","text":"Identifier for Job"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JobIdentifier"}],"type":"topic","title":"JobIdentifier","url":"\/documentation\/hummingbirdjobs\/jobidentifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier"}}}