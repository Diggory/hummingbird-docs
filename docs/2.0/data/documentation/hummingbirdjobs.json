{"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","interfaceLanguage":"swift"},"metadata":{"title":"HummingbirdJobs","roleHeading":"Framework","symbolKind":"module","externalID":"HummingbirdJobs","modules":[{"name":"HummingbirdJobs"}],"role":"collection"},"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation ","type":"text"},{"code":"\/HummingbirdJobsRedis","type":"codeVoice"},{"text":" that comes with the hummingbird-redis package that stores jobs in a Redis database.","type":"text"}],"type":"paragraph"},{"level":3,"anchor":"Setting-up-Jobs","text":"Setting up Jobs","type":"heading"},{"inlineContent":[{"type":"text","text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory."}],"type":"paragraph"},{"code":["let jobQueue = HBMemoryJobQueue()"],"syntax":"swift","type":"codeListing"},{"level":3,"anchor":"Creating-a-Job","text":"Creating a Job","type":"heading"},{"inlineContent":[{"text":"First you must define your job. Create an object that inherits from ","type":"text"},{"code":"HBJob","type":"codeVoice"},{"text":". This protocol requires you to implement a static variable ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" and a function ","type":"text"},{"code":"func execute(on:logger)","type":"codeVoice"},{"text":". The ","type":"text"},{"code":"name","type":"codeVoice"},{"text":" variable should be unique to this job definition. It is used in the serialisation of the job. The ","type":"text"},{"code":"execute","type":"codeVoice"},{"type":"text","text":" function does the work of the job and returns an "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that should be fulfilled when the job is complete. Below is an example of a job that calls a "},{"code":"sendEmail()","type":"codeVoice"},{"type":"text","text":" function."}],"type":"paragraph"},{"code":["struct SendEmailJob: HBJob {","    static let name = \"SendEmail\"","    let to: String","    let subject: String","    let message: String","    ","    \/\/\/ do the work","    func execute(logger: Logger) async throws {","        return try await sendEmail(to: self.to, subject: self.subject, message: self.message)","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Before you can use this job you have to register it."}],"type":"paragraph"},{"code":["SendEmailJob.register()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Now you job is ready to create. Jobs can be queued up using the function "},{"type":"codeVoice","code":"push"},{"type":"text","text":" on "},{"type":"codeVoice","code":"HBJobQueue"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let job = SendEmailJob(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(job: job)"],"syntax":"swift","type":"codeListing"},{"level":3,"anchor":"Processing-Jobs","text":"Processing Jobs","type":"heading"},{"inlineContent":[{"text":"To process jobs you need to create a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","isActive":true,"type":"reference"},{"text":". This defines the job queue it should service and how many jobs will be processed concurrently.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","isActive":true,"type":"reference"},{"text":" conforms to ","type":"text"},{"code":"Service","type":"codeVoice"},{"text":" from Swift Service Lifecycle so can be added to a ","type":"text"},{"code":"ServiceGroup","type":"codeVoice"}],"type":"paragraph"},{"code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueueHandler],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or it can be added to the array of jobs that "},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":" manages"}],"type":"paragraph"},{"code":["let app = HBApplication(...)","app.addServices(jobQueueHandler)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you are running your job queue handler on a separate server you will need to use a job queue driver that saves to some external storage eg "},{"code":"HummingbirdJobsRedis\/HBRedisJobQueue","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"topicSections":[{"title":"Jobs","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance"]},{"title":"Queues","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler"]},{"title":"Error","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"variants":[{"paths":["\/documentation\/hummingbirdjobs"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJob":{"navigatorTitle":[{"text":"HBJob","kind":"identifier"}],"title":"HBJob","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJob","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJob","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobs\/hbjob","abstract":[{"type":"text","text":"Protocol for job description"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueue":{"abstract":[{"type":"text","text":"Job queue protocol."}],"url":"\/documentation\/hummingbirdjobs\/hbjobqueue","navigatorTitle":[{"text":"HBJobQueue","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobQueue","kind":"identifier"}],"role":"symbol","title":"HBJobQueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueue","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobInstance":{"kind":"symbol","title":"HBJobInstance","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobInstance","url":"\/documentation\/hummingbirdjobs\/hbjobinstance","abstract":[{"text":"Holder for all data related to a job","type":"text"}],"navigatorTitle":[{"text":"HBJobInstance","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobInstance","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdjobs","title":"HummingbirdJobs","role":"collection","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","kind":"symbol","url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBQueuedJob":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBQueuedJob","kind":"identifier"}],"navigatorTitle":[{"text":"HBQueuedJob","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobs\/hbqueuedjob","abstract":[{"type":"text","text":"Queued job. Includes job, plus the id for the job"}],"type":"topic","title":"HBQueuedJob","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBQueuedJob","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"type":"topic","url":"\/documentation\/hummingbirdjobs\/jobqueueerror","navigatorTitle":[{"kind":"identifier","text":"JobQueueError"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueueError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","kind":"symbol","abstract":[{"type":"text","text":"Job Queue Error type"}],"role":"symbol","title":"JobQueueError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBJobQueueHandler":{"abstract":[{"type":"text","text":"Object handling a single job queue"}],"url":"\/documentation\/hummingbirdjobs\/hbjobqueuehandler","navigatorTitle":[{"text":"HBJobQueueHandler","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBJobQueueHandler","kind":"identifier"}],"role":"symbol","title":"HBJobQueueHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBJobQueueHandler","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMemoryJobQueue","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","navigatorTitle":[{"text":"HBMemoryJobQueue","kind":"identifier"}],"title":"HBMemoryJobQueue","role":"symbol","abstract":[{"text":"In memory implementation of job queue driver. Stores jobs in a circular buffer","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobIdentifier","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdjobs\/jobidentifier","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"title":"JobIdentifier","role":"symbol","abstract":[{"text":"Identifier for Job","type":"text"}]}}}