{"metadata":{"modules":[{"name":"HummingbirdJobs"}],"symbolKind":"module","roleHeading":"Framework","role":"collection","title":"HummingbirdJobs","externalID":"HummingbirdJobs"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"]}],"kind":"symbol","hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"A Job consists of some metadata and an execute method to run the job. You can setup HummingbirdJobs to use different drivers for storing job metadata. The module comes with a driver that stores jobs in local memory and uses your current server to process the jobs, but there is also an implementation ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","type":"reference","isActive":true},{"text":" that comes with the hummingbird-redis package that stores jobs in a Redis database.","type":"text"}],"type":"paragraph"},{"level":3,"anchor":"Setting-up-Jobs","text":"Setting up Jobs","type":"heading"},{"inlineContent":[{"type":"text","text":"Before you can start adding or processing jobs you need to setup a Jobs queue to push jobs onto. Below we create a job queue stored in local memory."}],"type":"paragraph"},{"code":["let jobQueue = JobQueue(.memory, numWorkers: 1, logger: logger)"],"syntax":"swift","type":"codeListing"},{"level":3,"anchor":"Creating-a-Job","text":"Creating a Job","type":"heading"},{"inlineContent":[{"text":"First you must define your job. A job consists of three things, an identifier, the parameters required to run the job and a function that executes the job.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"First we define the parameters and the identifier. The parameters need to conform to "},{"code":"Sendable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["struct SendEmailJobParameters: Codable, Sendable {","    let to: String","    let subject: String","    let body: String","}","","extension JobIdentifier<SendEmailJobParameters> {","    static let sendEmailJob: Self { \"SendEmail\" }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Then we register the job with a job queue and also provide a closure that executes the job."}],"type":"paragraph"},{"code":["jobQueue.registerJob(id: .sendEmailJob) { parameters, context in","    try await myEmailService.sendEmail(to: parameters.to, subject: parameters.subject, body: parameters.body)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Now your job is ready to create. Jobs can be queued up using the function "},{"type":"codeVoice","code":"push"},{"type":"text","text":" on "},{"type":"codeVoice","code":"JobQueue"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let job = SendEmailJobParameters(","    to: \"joe@email.com\",","    subject: \"Testing Jobs\",","    message: \"...\"",")","jobQueue.push(id: .sendEmailJob, .init(","    to: \"john@email.com\",","    subject: \"Test email\",","    body: \"Hello?\"","))"],"syntax":"swift","type":"codeListing"},{"anchor":"Processing-Jobs","level":3,"type":"heading","text":"Processing Jobs"},{"inlineContent":[{"type":"text","text":"When you create a "},{"type":"codeVoice","code":"JobQueue"},{"type":"text","text":" the "},{"type":"codeVoice","code":"numWorkers"},{"type":"text","text":" parameter indicates how many workers you want servicing the job queue. If you want to activate these workers you need to add the job queue to your "},{"type":"codeVoice","code":"ServiceGroup"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let serviceGroup = ServiceGroup(","    services: [server, jobQueue],","    configuration: .init(gracefulShutdownSignals: [.sigterm, .sigint]),","    logger: logger",")","try await serviceGroup.run()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Or it can be added to the array of jobs that ","type":"text"},{"code":"Application","type":"codeVoice"},{"text":" manages","type":"text"}],"type":"paragraph"},{"code":["let app = Application(...)","app.addServices(jobQueue)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"If you want to process jobs on a separate server you will need to use a job queue driver that saves to some external storage eg ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/RedisQueue","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdjobs"]}],"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"topicSections":[{"title":"Jobs","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobDefinition","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobParameters"]},{"title":"Queues","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/QueuedJob","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/MemoryQueue"]},{"title":"Error","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobParameters":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobParameters","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"JobParameters","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines job parameters and identifier"}],"title":"JobParameters","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdjobs\/jobparameters","navigatorTitle":[{"text":"JobParameters","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobDefinition":{"title":"JobDefinition","type":"topic","url":"\/documentation\/hummingbirdjobs\/jobdefinition","navigatorTitle":[{"kind":"identifier","text":"JobDefinition"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobDefinition","abstract":[{"type":"text","text":"Job definition type"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobDefinition"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","url":"\/documentation\/hummingbirdjobsredis","title":"HummingbirdJobsRedis","kind":"symbol","abstract":[{"type":"text","text":"Redis implementation for Hummingbird jobs framework"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/MemoryQueue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/MemoryQueue","abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores job data in a circular buffer"}],"role":"symbol","navigatorTitle":[{"text":"MemoryQueue","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemoryQueue","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdjobs\/memoryqueue","title":"MemoryQueue","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueue":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdjobs\/jobqueue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueue","kind":"symbol","title":"JobQueue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueue"}],"abstract":[{"type":"text","text":"Job queue"}],"navigatorTitle":[{"kind":"identifier","text":"JobQueue"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection","title":"Hummingbird","kind":"symbol","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis/RedisQueue":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis\/RedisQueue","url":"\/documentation\/hummingbirdjobsredis\/redisqueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisQueue","kind":"identifier"}],"title":"RedisQueue","kind":"symbol","abstract":[{"type":"text","text":"Redis implementation of job queue driver"}],"navigatorTitle":[{"text":"RedisQueue","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"role":"collection","kind":"symbol","url":"\/documentation\/hummingbirdjobs","title":"HummingbirdJobs","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueError":{"url":"\/documentation\/hummingbirdjobs\/jobqueueerror","navigatorTitle":[{"kind":"identifier","text":"JobQueueError"}],"type":"topic","abstract":[{"type":"text","text":"Job Queue Error type"}],"kind":"symbol","title":"JobQueueError","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueError","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JobQueueError"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobIdentifier":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobIdentifier","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobIdentifier","kind":"symbol","title":"JobIdentifier","type":"topic","abstract":[{"type":"text","text":"Identifier for a Job type"}],"role":"symbol","navigatorTitle":[{"text":"JobIdentifier","kind":"identifier"}],"url":"\/documentation\/hummingbirdjobs\/jobidentifier"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobQueueDriver":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JobQueueDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobQueueDriver","kind":"symbol","title":"JobQueueDriver","type":"topic","abstract":[{"type":"text","text":"Job queue protocol."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JobQueueDriver"}],"url":"\/documentation\/hummingbirdjobs\/jobqueuedriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/QueuedJob":{"title":"QueuedJob","type":"topic","url":"\/documentation\/hummingbirdjobs\/queuedjob","navigatorTitle":[{"kind":"identifier","text":"QueuedJob"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/QueuedJob","abstract":[{"type":"text","text":"Queued job. Includes job data, plus the id for the job"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueuedJob"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/JobContext":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdjobs\/jobcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/JobContext","kind":"symbol","title":"JobContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobContext","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"JobContext","kind":"identifier"}]}}}