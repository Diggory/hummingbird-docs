{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/base64","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/custom(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/deferredToData"],"title":"Enumeration Cases"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","metadata":{"roleHeading":"Enumeration","title":"JSONDecoder.DataDecodingStrategy","externalID":"s:10Foundation11JSONDecoderC20DataDecodingStrategyO","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"symbolKind":"enum","navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"role":"symbol","modules":[{"name":"HummingbirdFoundation"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataDecodingStrategy","kind":"identifier"}]}],"kind":"declarations"}],"abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum/deferredToData":{"role":"symbol","kind":"symbol","type":"topic","title":"JSONDecoder.DataDecodingStrategy.deferredToData","abstract":[{"text":"Defer to ","type":"text"},{"code":"Data","type":"codeVoice"},{"type":"text","text":" for decoding."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/deferredToData","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deferredToData"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/deferredtodata"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum/custom(_:)":{"role":"symbol","title":"JSONDecoder.DataDecodingStrategy.custom(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/custom(_:)","type":"topic","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Decode the "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" as a custom value decoded by the given closure."}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/custom(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"type":"topic","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","role":"collection","title":"HummingbirdFoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum","title":"JSONDecoder.DataDecodingStrategy","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for decoding "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" values."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"type":"topic","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","role":"symbol","title":"JSONDecoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum/base64":{"type":"topic","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"base64","kind":"identifier"}],"title":"JSONDecoder.DataDecodingStrategy.base64","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/base64","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/base64","role":"symbol","abstract":[{"text":"Decode the ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" from a Base64-encoded string. This is the default strategy.","type":"text"}]}}}