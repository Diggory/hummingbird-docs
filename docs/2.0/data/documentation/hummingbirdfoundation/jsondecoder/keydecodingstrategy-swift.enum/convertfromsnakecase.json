{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"]}],"abstract":[{"text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type.","type":"text"}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}],"externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","symbolKind":"case","modules":[{"name":"HummingbirdFoundation"}],"roleHeading":"Case"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"The conversion to upper case uses "},{"code":"Locale.system","type":"codeVoice"},{"type":"text","text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Converting from snake case to camel case:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Capitalizes the word starting after each "},{"code":"_","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Removes all ","type":"text"},{"type":"codeVoice","code":"_"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Preserves starting and ending "},{"code":"_","type":"codeVoice"},{"type":"text","text":" (as these are often used to indicate private variables or other metadata)."},{"type":"text","text":" "},{"type":"text","text":"For example, "},{"code":"one_two_three","type":"codeVoice"},{"type":"text","text":" becomes "},{"code":"oneTwoThree","type":"codeVoice"},{"type":"text","text":". "},{"code":"_one_two_three_","type":"codeVoice"},{"type":"text","text":" becomes "},{"code":"_oneTwoThree_","type":"codeVoice"},{"type":"text","text":"."}]}]}],"type":"orderedList"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" character.","type":"text"}]}],"type":"aside","name":"Note"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","title":"HummingbirdFoundation","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdfoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"role":"symbol","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","title":"JSONDecoder","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsondecoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/KeyDecodingStrategy-swift.enum":{"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyDecodingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"KeyDecodingStrategy"}],"kind":"symbol","abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum","type":"topic","title":"JSONDecoder.KeyDecodingStrategy","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertFromSnakeCase"}],"kind":"symbol","abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","type":"topic"}}}