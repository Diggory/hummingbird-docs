{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"data","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The type of the value to decode."}],"type":"paragraph"}],"name":"type"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The data to decode from."}]}],"name":"data"}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A value of the requested type.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"DecodingError.dataCorrupted"},{"type":"text","text":" if values requested from the payload are corrupted, or if the given data is not valid JSON."}]}]},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if any value throws an error during decoding."}]}]}],"kind":"content"}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/decode(_:from:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Decodes a top-level value of the given type from the given JSON representation.","type":"text"}],"metadata":{"roleHeading":"Instance Method","title":"decode(_:from:)","modules":[{"name":"HummingbirdFoundation"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"text":".Type, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"symbolKind":"method","externalID":"s:10Foundation11JSONDecoderC6decode_4fromxxm_AA4DataVtKSeRzlF"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/decode(_:from:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/decode(_:from:)","title":"decode(_:from:)","type":"topic","abstract":[{"text":"Decodes a top-level value of the given type from the given JSON representation.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decode"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"url":"\/documentation\/hummingbirdfoundation\/jsondecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"kind":"symbol","role":"symbol","title":"JSONDecoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","url":"\/documentation\/hummingbirdfoundation","role":"collection","type":"topic","title":"HummingbirdFoundation"}}}