{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"languages":["swift"],"platforms":["Linux"]}]}],"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"},"kind":"symbol","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"name":"HummingbirdFoundation"}],"symbolKind":"enum","navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"roleHeading":"Enumeration","externalID":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","title":"JSONDecoder.NonConformingFloatDecodingStrategy","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"role":"symbol"},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/throw":{"abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/throw","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/throw","title":"JSONDecoder.NonConformingFloatDecodingStrategy.throw","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder","role":"symbol","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","title":"JSONDecoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum/convertFromString(positiveInfinity:negativeInfinity:nan:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum\/convertFromString(positiveInfinity:negativeInfinity:nan:)","abstract":[{"type":"text","text":"Decode the values from the given representation strings."}],"kind":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromString","kind":"identifier"},{"text":"(","kind":"text"},{"text":"positiveInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"negativeInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"nan","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"JSONDecoder.NonConformingFloatDecodingStrategy.convertFromString(positiveInfinity:negativeInfinity:nan:)","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum\/convertfromstring(positiveinfinity:negativeinfinity:nan:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","title":"JSONDecoder.NonConformingFloatDecodingStrategy","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"type":"topic","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}],"url":"\/documentation\/hummingbirdfoundation","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","title":"HummingbirdFoundation","kind":"symbol"}}}