{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"HummingbirdFoundation"}],"symbolKind":"case","title":"JSONEncoder.KeyEncodingStrategy.convertToSnakeCase","role":"symbol","roleHeading":"Case","externalID":"s:10Foundation11JSONEncoderC19KeyEncodingStrategyO18convertToSnakeCaseyA2EmF","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertToSnakeCase"}]},"abstract":[{"text":"Convert from “camelCaseKeys” to “snake_case_keys” before writing a key to JSON payload.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum\/convertToSnakeCase","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertToSnakeCase","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Capital characters are determined by testing membership in "},{"type":"codeVoice","code":"CharacterSet.uppercaseLetters"},{"type":"text","text":" and "},{"type":"codeVoice","code":"CharacterSet.lowercaseLetters"},{"type":"text","text":" (Unicode General Categories Lu and Lt)."},{"type":"text","text":" "},{"type":"text","text":"The conversion to lower case uses "},{"type":"codeVoice","code":"Locale.system"},{"type":"text","text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences."}],"type":"paragraph"},{"inlineContent":[{"text":"Converting from camel case to snake case:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Splits words at the boundary of lower-case to upper-case"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Inserts ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" between words","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Lowercases the entire string","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Preserves starting and ending "},{"type":"codeVoice","code":"_"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"For example, "},{"type":"codeVoice","code":"oneTwoThree"},{"type":"text","text":" becomes "},{"type":"codeVoice","code":"one_two_three"},{"type":"text","text":". "},{"type":"codeVoice","code":"_oneTwoThree_"},{"type":"text","text":" becomes "},{"type":"codeVoice","code":"_one_two_three_"},{"type":"text","text":"."}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a key encoding strategy has a nominal performance cost, as each string key has to be converted."}]}],"type":"aside","name":"Note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/converttosnakecase"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/KeyEncodingStrategy-swift.enum/convertToSnakeCase":{"abstract":[{"text":"Convert from “camelCaseKeys” to “snake_case_keys” before writing a key to JSON payload.","type":"text"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/converttosnakecase","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum\/convertToSnakeCase","title":"JSONEncoder.KeyEncodingStrategy.convertToSnakeCase","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertToSnakeCase"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}],"role":"collection","title":"HummingbirdFoundation","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdfoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}],"role":"symbol","title":"JSONEncoder","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/KeyEncodingStrategy-swift.enum":{"title":"JSONEncoder.KeyEncodingStrategy","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum","kind":"symbol","navigatorTitle":[{"text":"KeyEncodingStrategy","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyEncodingStrategy","kind":"identifier"}],"abstract":[{"text":"The strategy to use for automatically changing the value of keys before encoding.","type":"text"}],"type":"topic"}}}