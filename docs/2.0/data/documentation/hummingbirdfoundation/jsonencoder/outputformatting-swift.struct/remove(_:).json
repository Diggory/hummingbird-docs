{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/remove(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/remove(_:)"]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"OptionSet.remove(_:)","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"externalID":"s:s9OptionSetPs7ElementQzRszrlE6removeyxSgxF::SYNTHESIZED::s:10Foundation11JSONEncoderC16OutputFormattingV","title":"remove(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Self.Element"},{"text":".","type":"text"}]},"extendedModule":"Swift","modules":[{"relatedModules":["Swift"],"name":"HummingbirdFoundation"}],"symbolKind":"method"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remove","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"member","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/remove(_:)":{"abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/remove(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/remove(_:)","title":"remove(_:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"url":"\/documentation\/hummingbirdfoundation","role":"collection","kind":"symbol","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}],"title":"HummingbirdFoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/OptionSet-Implementations":{"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations","title":"OptionSet Implementations","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct":{"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct","title":"JSONEncoder.OutputFormatting","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"abstract":[{"text":"The formatting of the output JSON data.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","title":"JSONEncoder","kind":"symbol","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"text":" facilitates the encoding of ","type":"text"},{"type":"codeVoice","code":"Encodable"},{"text":" values into JSON.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}]}}}