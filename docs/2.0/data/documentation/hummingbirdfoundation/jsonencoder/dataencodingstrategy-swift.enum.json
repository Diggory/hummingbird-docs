{"metadata":{"externalID":"s:10Foundation11JSONEncoderC20DataEncodingStrategyO","symbolKind":"enum","roleHeading":"Enumeration","title":"JSONEncoder.DataEncodingStrategy","navigatorTitle":[{"text":"DataEncodingStrategy","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DataEncodingStrategy","kind":"identifier"}],"modules":[{"name":"HummingbirdFoundation"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum"]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/DataEncodingStrategy-swift.enum\/base64","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/DataEncodingStrategy-swift.enum\/deferredToData"],"title":"Enumeration Cases"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataEncodingStrategy","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/DataEncodingStrategy-swift.enum"},"abstract":[{"text":"The strategy to use for encoding ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" values.","type":"text"}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/DataEncodingStrategy-swift.enum/deferredToData":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/DataEncodingStrategy-swift.enum\/deferredToData","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deferredToData"}],"abstract":[{"type":"text","text":"Defer to "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" for choosing an encoding."}],"type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum\/deferredtodata","title":"JSONEncoder.DataEncodingStrategy.deferredToData","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/DataEncodingStrategy-swift.enum/base64":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/DataEncodingStrategy-swift.enum\/base64","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum\/base64","kind":"symbol","abstract":[{"text":"Encoded the ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" as a Base64-encoded string. This is the default strategy.","type":"text"}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"base64","kind":"identifier"}],"title":"JSONEncoder.DataEncodingStrategy.base64","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"title":"JSONEncoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"kind":"symbol","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsonencoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/DataEncodingStrategy-swift.enum":{"navigatorTitle":[{"text":"DataEncodingStrategy","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/DataEncodingStrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataEncodingStrategy","kind":"identifier"}],"abstract":[{"type":"text","text":"The strategy to use for encoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum","title":"JSONEncoder.DataEncodingStrategy","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","title":"HummingbirdFoundation","kind":"symbol","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdfoundation","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/DataEncodingStrategy-swift.enum/custom(_:)":{"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/dataencodingstrategy-swift.enum\/custom(_:)","title":"JSONEncoder.DataEncodingStrategy.custom(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/DataEncodingStrategy-swift.enum\/custom(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"custom"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Encode the ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" as a custom value encoded by the given closure.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol"}}}