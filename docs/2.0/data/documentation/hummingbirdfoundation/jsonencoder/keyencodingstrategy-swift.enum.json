{"abstract":[{"text":"The strategy to use for automatically changing the value of keys before encoding.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum\/convertToSnakeCase","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum\/custom(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum\/useDefaultKeys"],"title":"Enumeration Cases"}],"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"HummingbirdFoundation"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyEncodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"KeyEncodingStrategy","kind":"identifier"}],"title":"JSONEncoder.KeyEncodingStrategy","symbolKind":"enum","roleHeading":"Enumeration","externalID":"s:10Foundation11JSONEncoderC19KeyEncodingStrategyO"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyEncodingStrategy"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/KeyEncodingStrategy-swift.enum":{"abstract":[{"text":"The strategy to use for automatically changing the value of keys before encoding.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum","title":"JSONEncoder.KeyEncodingStrategy","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyEncodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"KeyEncodingStrategy","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/KeyEncodingStrategy-swift.enum/convertToSnakeCase":{"kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/converttosnakecase","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertToSnakeCase","kind":"identifier"}],"type":"topic","title":"JSONEncoder.KeyEncodingStrategy.convertToSnakeCase","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum\/convertToSnakeCase","abstract":[{"type":"text","text":"Convert from “camelCaseKeys” to “snake_case_keys” before writing a key to JSON payload."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","url":"\/documentation\/hummingbirdfoundation","role":"collection","type":"topic","title":"HummingbirdFoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"type":"text","text":" facilitates the encoding of "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":" values into JSON."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","url":"\/documentation\/hummingbirdfoundation\/jsonencoder","role":"symbol","type":"topic","title":"JSONEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}],"navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/KeyEncodingStrategy-swift.enum/useDefaultKeys":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum\/useDefaultKeys","abstract":[{"text":"Use the keys specified by each type. This is the default strategy.","type":"text"}],"title":"JSONEncoder.KeyEncodingStrategy.useDefaultKeys","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/usedefaultkeys","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"useDefaultKeys"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/KeyEncodingStrategy-swift.enum/custom(_:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/KeyEncodingStrategy-swift.enum\/custom(_:)","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/keyencodingstrategy-swift.enum\/custom(_:)","abstract":[{"text":"Provide a custom conversion to the key in the encoded JSON from the keys specified by the encoded types.","type":"text"},{"type":"text","text":" "},{"text":"The full path to the current encoding position is provided for context (in case you need to locate this key within the payload). The returned key is used in place of the last component in the coding path before encoding.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If the result of the conversion is a duplicate key, then only one value will be present in the result."}],"kind":"symbol","type":"topic","title":"JSONEncoder.KeyEncodingStrategy.custom(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"text":"(([","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"preciseIdentifier":"s:s9CodingKeyP","text":"CodingKey","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}