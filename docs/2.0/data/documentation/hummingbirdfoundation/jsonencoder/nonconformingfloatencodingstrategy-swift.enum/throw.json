{"abstract":[{"text":"Throw upon encountering non-conforming values. This is the default strategy.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}],"symbolKind":"case","title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","role":"symbol","roleHeading":"Case","externalID":"s:10Foundation11JSONEncoderC34NonConformingFloatEncodingStrategyO5throwyA2EmF","modules":[{"name":"HummingbirdFoundation"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","role":"symbol","title":"JSONEncoder.NonConformingFloatEncodingStrategy","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/throw":{"title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw","abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","title":"HummingbirdFoundation","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdfoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"title":"JSONEncoder","role":"symbol","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}]}}}