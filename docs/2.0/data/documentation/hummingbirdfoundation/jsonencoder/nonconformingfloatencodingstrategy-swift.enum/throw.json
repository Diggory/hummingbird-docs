{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"`throw`","kind":"identifier"}]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"]]},"abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"case","role":"symbol","roleHeading":"Case","modules":[{"name":"HummingbirdFoundation"}],"title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","externalID":"s:10Foundation11JSONEncoderC34NonConformingFloatEncodingStrategyO5throwyA2EmF","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}]},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","title":"JSONEncoder.NonConformingFloatEncodingStrategy","abstract":[{"text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"navigatorTitle":[{"text":"NonConformingFloatEncodingStrategy","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"type":"topic","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","role":"collection","title":"HummingbirdFoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/throw":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw","title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","abstract":[{"type":"text","text":"Throw upon encountering non-conforming values. This is the default strategy."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}],"title":"JSONEncoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","url":"\/documentation\/hummingbirdfoundation\/jsonencoder","role":"symbol","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"type":"topic"}}}