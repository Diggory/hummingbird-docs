{"abstract":[{"text":"Throw upon encountering non-conforming values. This is the default strategy.","type":"text"}],"metadata":{"modules":[{"name":"HummingbirdFoundation"}],"roleHeading":"Case","symbolKind":"case","externalID":"s:10Foundation11JSONEncoderC34NonConformingFloatEncodingStrategyO5throwyA2EmF","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`throw`","kind":"identifier"}],"title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}],"role":"collection","title":"HummingbirdFoundation","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdfoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}],"role":"symbol","title":"JSONEncoder","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"type":"topic","kind":"symbol","title":"JSONEncoder.NonConformingFloatEncodingStrategy","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/throw":{"title":"JSONEncoder.NonConformingFloatEncodingStrategy.throw","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"`throw`"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/throw","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/throw","abstract":[{"text":"Throw upon encountering non-conforming values. This is the default strategy.","type":"text"}]}}}