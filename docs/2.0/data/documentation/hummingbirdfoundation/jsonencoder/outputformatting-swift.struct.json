{"abstract":[{"text":"The formatting of the output JSON data.","type":"text"}],"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes"],"title":"Type Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"],"generated":true,"title":"Default Implementations"}],"kind":"symbol","metadata":{"modules":[{"name":"HummingbirdFoundation"}],"title":"JSONEncoder.OutputFormatting","externalID":"s:10Foundation11JSONEncoderC16OutputFormattingV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputFormatting"}],"role":"symbol","roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"OutputFormatting"}]},"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"url":"\/documentation\/hummingbirdfoundation\/jsonencoder","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into JSON."}],"title":"JSONEncoder","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/prettyPrinted":{"kind":"symbol","title":"prettyPrinted","role":"symbol","abstract":[{"text":"Produce human-readable JSON with indented output.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"prettyPrinted","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutputFormatting","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/prettyprinted","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/rawValue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue","role":"symbol","title":"rawValue","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/rawvalue","type":"topic","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"abstract":[],"title":"SetAlgebra Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","role":"collectionGroup","kind":"article"},"doc://com.opticalaberration.hummingbird/SY":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"url":"\/documentation\/hummingbirdfoundation","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"title":"HummingbirdFoundation","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/init(rawValue:)":{"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)","title":"init(rawValue:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(rawvalue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","title":"Swift.OptionSet","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/OptionSet-Implementations":{"abstract":[],"title":"OptionSet Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations","role":"collectionGroup","kind":"article"},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/Equatable-Implementations":{"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/equatable-implementations","abstract":[],"title":"Equatable Implementations","type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct":{"type":"topic","abstract":[{"text":"The formatting of the output JSON data.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct","title":"JSONEncoder.OutputFormatting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/withoutEscapingSlashes":{"abstract":[{"text":"By default slashes get escaped (”\/” → “\/”, “http:\/\/apple.com\/” → “http:\/\/apple.com\/”)","type":"text"},{"text":" ","type":"text"},{"text":"for security reasons, allowing outputted JSON to be safely embedded within HTML\/XML.","type":"text"},{"text":" ","type":"text"},{"text":"In contexts where this escaping is unnecessary, the JSON is known to not be embedded,","type":"text"},{"text":" ","type":"text"},{"text":"or is intended only for display, this option avoids this escaping.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes","title":"withoutEscapingSlashes","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/withoutescapingslashes","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"withoutEscapingSlashes"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier","text":"JSONEncoder"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","kind":"typeIdentifier","text":"OutputFormatting"}]},"doc://com.opticalaberration.hummingbird/SQ":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/sortedKeys":{"abstract":[{"text":"Produce JSON with dictionary keys sorted in lexicographic order.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","title":"sortedKeys","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/sortedkeys","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sortedKeys","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutputFormatting","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP","title":"Swift.SetAlgebra","type":"unresolvable"}}}