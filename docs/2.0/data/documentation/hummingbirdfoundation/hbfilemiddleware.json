{"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdfoundation\/hbfilemiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileMiddleware"},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFileMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBFileMiddleware"}],"title":"HBFileMiddleware","symbolKind":"struct","modules":[{"name":"HummingbirdFoundation"}],"role":"symbol","roleHeading":"Structure","externalID":"s:21HummingbirdFoundation16HBFileMiddlewareV"},"abstract":[{"text":"Middleware for serving static files.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFileMiddleware"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Context"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"HBBaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If router returns a 404 ie a route was not found then this middleware will treat the request"},{"type":"text","text":" "},{"type":"text","text":"path as a filename relative to a defined rootFolder (this defaults to “public”). It checks to see if"},{"type":"text","text":" "},{"type":"text","text":"a file exists there and if so the file contents are passed back in the response."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The file middleware supports both HEAD and GET methods and supports parsing of"},{"type":"text","text":" "},{"type":"text","text":"“if-modified-since”, “if-none-match”, “if-range” and ’range” headers. It will output “content-length”,"},{"type":"text","text":" "},{"type":"text","text":"“modified-date”, “eTag”, “content-type”, “cache-control” and “content-range” headers where"},{"type":"text","text":" "},{"type":"text","text":"they are relevant."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileMiddleware\/init(_:cacheControl:searchForIndexHtml:threadPool:logger:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileMiddleware\/handle(_:context:next:)"]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"title":"HummingbirdFoundation","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdfoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBFileMiddleware/handle(_:context:next:)":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:21HummingbirdFoundation16HBFileMiddlewareV7Contextxmfp","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:21HummingbirdFoundation16HBFileMiddlewareV7Contextxmfp","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileMiddleware\/handle(_:context:next:)","abstract":[],"title":"handle(_:context:next:)","url":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware\/handle(_:context:next:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","title":"HBMiddlewareProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBFileMiddleware/init(_:cacheControl:searchForIndexHtml:threadPool:logger:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileMiddleware\/init(_:cacheControl:searchForIndexHtml:threadPool:logger:)","url":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware\/init(_:cachecontrol:searchforindexhtml:threadpool:logger:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"cacheControl","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBCacheControl","preciseIdentifier":"s:11Hummingbird14HBCacheControlV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"searchForIndexHtml","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"threadPool","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOThreadPool","preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:cacheControl:searchForIndexHtml:threadPool:logger:)","kind":"symbol","abstract":[{"text":"Create HBFileMiddleware","type":"text"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"type":"text","text":"a request. Provides context for request processing"}],"title":"HBBaseRequestContext","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/hbbaserequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","title":"MiddlewareProtocol","kind":"symbol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBFileMiddleware":{"url":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBFileMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileMiddleware","role":"symbol","abstract":[{"type":"text","text":"Middleware for serving static files."}],"kind":"symbol","title":"HBFileMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBFileMiddleware"}]}}}