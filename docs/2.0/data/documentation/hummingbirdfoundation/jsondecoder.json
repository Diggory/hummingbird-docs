{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder"},"kind":"symbol","sections":[],"abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"metadata":{"symbolKind":"class","role":"symbol","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"modules":[{"name":"HummingbirdFoundation"}],"externalID":"s:10Foundation11JSONDecoderC","title":"JSONDecoder"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Conforms To"}],"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/keyDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/userInfo"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/decode(_:from:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"],"title":"Enumerations"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/HBRequestDecoder-Implementations"],"title":"Default Implementations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/KeyDecodingStrategy-swift.enum":{"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum","navigatorTitle":[{"kind":"identifier","text":"KeyDecodingStrategy"}],"type":"topic","title":"JSONDecoder.KeyDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KeyDecodingStrategy"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/userInfo":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/userInfo","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/userinfo","abstract":[{"text":"Contextual user-provided information for use during decoding.","type":"text"}],"type":"topic","role":"symbol","title":"userInfo","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"userInfo"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:s17CodingUserInfoKeyV","kind":"typeIdentifier","text":"CodingUserInfoKey"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"]"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/decode(_:from:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"title":"decode(_:from:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/decode(_:from:)","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:)","type":"topic","abstract":[{"type":"text","text":"Decodes a top-level value of the given type from the given JSON representation."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum":{"title":"JSONDecoder.DataDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use for decoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"title":"JSONDecoder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/keyDecodingStrategy-swift.property":{"title":"keyDecodingStrategy","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/keyDecodingStrategy-swift.property","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO","text":"KeyDecodingStrategy","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The strategy to use for decoding keys. Defaults to "},{"code":".useDefaultKeys","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/dataDecodingStrategy-swift.property":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dataDecodingStrategy-swift.property","kind":"symbol","abstract":[{"type":"text","text":"The strategy to use in decoding binary data. Defaults to "},{"type":"codeVoice","code":".base64"},{"type":"text","text":"."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dataDecodingStrategy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier","text":"JSONDecoder"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10Foundation11JSONDecoderC20DataDecodingStrategyO","kind":"typeIdentifier","text":"DataDecodingStrategy"}],"title":"dataDecodingStrategy","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/HBRequestDecoder-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/HBRequestDecoder-Implementations","kind":"article","abstract":[],"role":"collectionGroup","type":"topic","title":"HBRequestDecoder Implementations","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/hbrequestdecoder-implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestDecoder":{"title":"HBRequestDecoder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestDecoder"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbrequestdecoder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecoder","abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecoder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"role":"symbol","title":"JSONDecoder.NonConformingFloatDecodingStrategy","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatDecodingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/init()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/init()","title":"init()","kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/init()","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"type":"text","text":"Initializes "},{"type":"codeVoice","code":"self"},{"type":"text","text":" with default strategies."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DateDecodingStrategy-swift.enum":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DateDecodingStrategy-swift.enum","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" values.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}],"title":"JSONDecoder.DateDecodingStrategy","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateDecodingStrategy"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/dateDecodingStrategy-swift.property":{"title":"dateDecodingStrategy","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dateDecodingStrategy-swift.property","type":"topic","abstract":[{"text":"The strategy to use in decoding dates. Defaults to ","type":"text"},{"code":".deferredToDate","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dateDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"DateDecodingStrategy","preciseIdentifier":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.property","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonConformingFloatDecodingStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","text":"NonConformingFloatDecodingStrategy"}],"role":"symbol","title":"nonConformingFloatDecodingStrategy","abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"code":".throw","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"type":"topic","title":"HummingbirdFoundation","url":"\/documentation\/hummingbirdfoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","role":"collection","kind":"symbol"}}}