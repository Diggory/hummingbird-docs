{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONDecoder"}],"platforms":["Linux"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation"]]},"metadata":{"role":"symbol","symbolKind":"class","externalID":"s:10Foundation11JSONDecoderC","modules":[{"name":"HummingbirdFoundation"}],"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"title":"JSONDecoder","roleHeading":"Class"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder"]}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dataDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dateDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/keyDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/userInfo"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/decode(_:from:)"]},{"title":"Enumerations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DateDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/HBRequestDecoder-Implementations"]}],"kind":"symbol","sections":[],"abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"references":{"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/userInfo":{"title":"userInfo","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"userInfo","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:s17CodingUserInfoKeyV","text":"CodingUserInfoKey","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/userInfo","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/userinfo","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Contextual user-provided information for use during decoding."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/KeyDecodingStrategy-swift.enum":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyDecodingStrategy","kind":"identifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum","title":"JSONDecoder.KeyDecodingStrategy","abstract":[{"text":"The strategy to use for automatically changing the value of keys before decoding.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum","navigatorTitle":[{"text":"KeyDecodingStrategy","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/NonConformingFloatDecodingStrategy-swift.enum":{"title":"JSONDecoder.NonConformingFloatDecodingStrategy","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/NonConformingFloatDecodingStrategy-swift.enum","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.enum","navigatorTitle":[{"text":"NonConformingFloatDecodingStrategy","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/dataDecodingStrategy-swift.property":{"title":"dataDecodingStrategy","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dataDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC20DataDecodingStrategyO","text":"DataDecodingStrategy","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dataDecodingStrategy-swift.property","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.property","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The strategy to use in decoding binary data. Defaults to "},{"type":"codeVoice","code":".base64"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/init()":{"title":"init()","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/init()","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/init()","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Initializes "},{"type":"codeVoice","code":"self"},{"type":"text","text":" with default strategies."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/nonConformingFloatDecodingStrategy-swift.property":{"title":"nonConformingFloatDecodingStrategy","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nonConformingFloatDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC34NonConformingFloatDecodingStrategyO","text":"NonConformingFloatDecodingStrategy","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/nonConformingFloatDecodingStrategy-swift.property","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/nonconformingfloatdecodingstrategy-swift.property","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The strategy to use in decoding non-conforming numbers. Defaults to "},{"type":"codeVoice","code":".throw"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestDecoder":{"type":"topic","abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","url":"\/documentation\/hummingbird\/hbrequestdecoder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestDecoder"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecoder"}],"kind":"symbol","title":"HBRequestDecoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/keyDecodingStrategy-swift.property":{"title":"keyDecodingStrategy","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"keyDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO","text":"KeyDecodingStrategy","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/keyDecodingStrategy-swift.property","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.property","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The strategy to use for decoding keys. Defaults to "},{"type":"codeVoice","code":".useDefaultKeys"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","url":"\/documentation\/hummingbirdfoundation","role":"collection","type":"topic","title":"HummingbirdFoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum":{"title":"JSONDecoder.DataDecodingStrategy","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataDecodingStrategy","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum","navigatorTitle":[{"text":"DataDecodingStrategy","kind":"identifier"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The strategy to use for decoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/dateDecodingStrategy-swift.property":{"title":"dateDecodingStrategy","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dateDecodingStrategy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC20DateDecodingStrategyO","text":"DateDecodingStrategy","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/dateDecodingStrategy-swift.property","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.property","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The strategy to use in decoding dates. Defaults to "},{"type":"codeVoice","code":".deferredToDate"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/HBRequestDecoder-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/HBRequestDecoder-Implementations","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/hbrequestdecoder-implementations","kind":"article","abstract":[],"type":"topic","title":"HBRequestDecoder Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/decode(_:from:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/decode(_:from:)","title":"decode(_:from:)","type":"topic","abstract":[{"text":"Decodes a top-level value of the given type from the given JSON representation.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decode"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/decode(_:from:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"url":"\/documentation\/hummingbirdfoundation\/jsondecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"text":" facilitates the decoding of JSON into semantic ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"text":" types.","type":"text"}],"kind":"symbol","role":"symbol","title":"JSONDecoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DateDecodingStrategy-swift.enum":{"abstract":[{"type":"text","text":"The strategy to use for decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" values."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DateDecodingStrategy-swift.enum","title":"JSONDecoder.DateDecodingStrategy","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datedecodingstrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateDecodingStrategy"}],"navigatorTitle":[{"kind":"identifier","text":"DateDecodingStrategy"}]}}}