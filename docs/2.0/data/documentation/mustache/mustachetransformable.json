{"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"generated":true,"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The syntax for applying transforms is ","type":"text"},{"type":"codeVoice","code":"{{transform(variable)}}"},{"type":"text","text":". Transforms can be applied to both"},{"type":"text","text":" "},{"text":"variables, sections and inverted sections.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A simple example would be ensuring a string is lowercase."}]},{"syntax":null,"type":"codeListing","code":["{{lowercased(myString)}}"]},{"inlineContent":[{"type":"text","text":"If applying a transform to a sequence then the closing element of the sequence should include the"},{"type":"text","text":" "},{"type":"text","text":"transform name eg"}],"type":"paragraph"},{"code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"],"syntax":null,"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustachetransformable"]}],"abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Mustache"}],"role":"symbol","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"symbolKind":"protocol","title":"MustacheTransformable","roleHeading":"Protocol","externalID":"s:8Mustache0A13TransformableP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"seeAlsoSections":[{"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"anchor":"Rendering","generated":true}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"type":"topic","role":"collection","kind":"article","title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","url":"\/documentation\/mustache\/mustachelambda","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}],"abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"title":"MustacheLambda","kind":"symbol","type":"topic","navigatorTitle":[{"text":"MustacheLambda","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Mustache template engine."}],"type":"topic","url":"\/documentation\/mustache","kind":"symbol","title":"Mustache","role":"collection"},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"url":"\/documentation\/mustache\/mustacheparent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"title":"MustacheParent","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"type":"text","text":" "},{"text":"of using Mirror","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"title":"MustacheTransformable","type":"topic","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"url":"\/documentation\/mustache\/mustachetransformable","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"url":"\/documentation\/mustache\/mustachecustomrenderable","role":"symbol","title":"MustacheCustomRenderable","abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MustacheCustomRenderable","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","kind":"symbol","navigatorTitle":[{"text":"MustacheCustomRenderable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable/transform(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"transform","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"abstract":[],"title":"transform(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/mustache\/mustachetransformable\/transform(_:)","required":true}}}