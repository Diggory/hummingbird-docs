{"kind":"symbol","sections":[],"seeAlsoSections":[{"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"languages":["swift"]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"The syntax for applying transforms is "},{"code":"{{transform(variable)}}","type":"codeVoice"},{"type":"text","text":". Transforms can be applied to both"},{"type":"text","text":" "},{"type":"text","text":"variables, sections and inverted sections."}],"type":"paragraph"},{"inlineContent":[{"text":"A simple example would be ensuring a string is lowercase.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["{{lowercased(myString)}}"],"type":"codeListing"},{"inlineContent":[{"text":"If applying a transform to a sequence then the closing element of the sequence should include the","type":"text"},{"text":" ","type":"text"},{"text":"transform name eg","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"],"type":"codeListing"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable"},"metadata":{"modules":[{"name":"Mustache"}],"externalID":"s:8Mustache0A13TransformableP","title":"MustacheTransformable","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"role":"symbol","symbolKind":"protocol","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustachetransformable"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)"]}],"abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","role":"collection","type":"topic","url":"\/documentation\/mustache","title":"Mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"kind":"symbol","title":"MustacheLambda","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}],"url":"\/documentation\/mustache\/mustachelambda","navigatorTitle":[{"text":"MustacheLambda","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}],"title":"MustacheTransformable","kind":"symbol","role":"symbol","url":"\/documentation\/mustache\/mustachetransformable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"code":"String(describing)","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","title":"MustacheCustomRenderable","type":"topic","role":"symbol","url":"\/documentation\/mustache\/mustachecustomrenderable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheCustomRenderable"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","title":"MustacheParent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"role":"symbol","url":"\/documentation\/mustache\/mustacheparent","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable/transform(_:)":{"title":"transform(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/mustache\/mustachetransformable\/transform(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)","abstract":[],"required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transform"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"type":"topic"}}}