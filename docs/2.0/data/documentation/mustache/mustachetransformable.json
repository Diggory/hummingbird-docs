{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"anchor":"Rendering","title":"Rendering","generated":true}],"variants":[{"paths":["\/documentation\/mustache\/mustachetransformable"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable"},"metadata":{"role":"symbol","title":"MustacheTransformable","modules":[{"name":"Mustache"}],"externalID":"s:8Mustache0A13TransformableP","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"roleHeading":"Protocol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)"],"anchor":"Instance-Methods"}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"text":" ","type":"text"},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The syntax for applying transforms is ","type":"text"},{"type":"codeVoice","code":"{{transform(variable)}}"},{"type":"text","text":". Transforms can be applied to both"},{"type":"text","text":" "},{"text":"variables, sections and inverted sections.","type":"text"}]},{"inlineContent":[{"type":"text","text":"A simple example would be ensuring a string is lowercase."}],"type":"paragraph"},{"syntax":null,"code":["{{lowercased(myString)}}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If applying a transform to a sequence then the closing element of the sequence should include the"},{"type":"text","text":" "},{"text":"transform name eg","type":"text"}]},{"code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"],"syntax":null,"type":"codeListing"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable/transform(_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"transform","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"role":"symbol","required":true,"kind":"symbol","url":"\/documentation\/mustache\/mustachetransformable\/transform(_:)","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)","title":"transform(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MustacheCustomRenderable","kind":"identifier"}],"title":"MustacheCustomRenderable","navigatorTitle":[{"text":"MustacheCustomRenderable","kind":"identifier"}],"type":"topic","url":"\/documentation\/mustache\/mustachecustomrenderable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","kind":"symbol","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"code":"String(describing)","type":"codeVoice"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MustacheTransformable","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/mustache\/mustachetransformable","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"title":"MustacheTransformable"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"type":"topic","role":"collection","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache"},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"role":"symbol","url":"\/documentation\/mustache\/mustacheparent","title":"MustacheParent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"text":"of using Mirror","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"role":"symbol","url":"\/documentation\/mustache\/mustachelambda","title":"MustacheLambda","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}]}}}