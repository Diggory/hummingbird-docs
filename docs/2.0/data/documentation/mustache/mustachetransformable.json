{"abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable"},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"externalID":"s:8Mustache0A13TransformableP","title":"MustacheTransformable","roleHeading":"Protocol","modules":[{"name":"Mustache"}],"role":"symbol","symbolKind":"protocol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}]}]},{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"The syntax for applying transforms is ","type":"text"},{"code":"{{transform(variable)}}","type":"codeVoice"},{"text":". Transforms can be applied to both","type":"text"},{"text":" ","type":"text"},{"text":"variables, sections and inverted sections.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"A simple example would be ensuring a string is lowercase.","type":"text"}],"type":"paragraph"},{"code":["{{lowercased(myString)}}"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If applying a transform to a sequence then the closing element of the sequence should include the"},{"type":"text","text":" "},{"type":"text","text":"transform name eg"}],"type":"paragraph"},{"code":["{{#reversed(sequence)}}{{.}}{{\\reversed(sequence)}}"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustachetransformable"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"kind":"symbol","role":"symbol","type":"topic","title":"MustacheParent","url":"\/documentation\/mustache\/mustacheparent","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","url":"\/documentation\/mustache"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable/transform(_:)":{"type":"topic","title":"transform(_:)","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable\/transform(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transform"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"url":"\/documentation\/mustache\/mustachetransformable\/transform(_:)","kind":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"type":"topic","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}],"title":"MustacheLambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","url":"\/documentation\/mustache\/mustachelambda","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","url":"\/documentation\/mustache\/mustachecustomrenderable","title":"MustacheCustomRenderable","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"code":"String(describing)","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheCustomRenderable"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"MustacheCustomRenderable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"kind":"symbol","role":"symbol","type":"topic","title":"MustacheTransformable","url":"\/documentation\/mustache\/mustachetransformable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}],"abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}]}}}