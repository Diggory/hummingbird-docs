{"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"seeAlsoSections":[{"generated":true,"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustachelambda"]}],"metadata":{"navigatorTitle":[{"text":"MustacheLambda","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"Mustache"}],"symbolKind":"struct","externalID":"s:8Mustache0A6LambdaV","role":"symbol","title":"MustacheLambda","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See http:\/\/mustache.github.io\/mustache.5.html for more details on"},{"type":"text","text":" "},{"type":"text","text":"mustache lambdas. Lambdas work slightly differently in HummingbirdMustache though"},{"type":"text","text":" "},{"type":"text","text":"as they are passed a template representing the contained text and not the raw text"},{"text":" ","type":"text"},{"text":"e.g","type":"text"}]},{"syntax":null,"code":["struct Object {","    let name: String","    let wrapped: MustacheLambda","}","let willy = Object(name: \"Willy\", wrapped: .init({ object, template in","    return \"<b>\\(template.render(object))<\/b>\"","}))","let mustache = \"{{#wrapped}}{{name}} is awesome.{{\/wrapped}}\"","let template = try MustacheTemplate(string: mustache)","let output = template.render(willy)","print(output) \/\/ <b>Willy is awesome<\/b>"],"type":"codeListing"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda\/init(_:)-20tuc","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda\/init(_:)-4ksrf"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda\/Callback"]}],"references":{"logo.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"identifier":"logo.png","type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"type":"topic","role":"collection","kind":"symbol","title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheCustomRenderable"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","title":"MustacheCustomRenderable","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"type":"text","text":" "},{"code":"String(describing)","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"kind":"symbol","url":"\/documentation\/mustache\/mustachecustomrenderable"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda/init(_:)-4ksrf":{"kind":"symbol","title":"init(_:)","abstract":[{"text":"Initialize ","type":"text"},{"code":"MustacheLambda","type":"codeVoice"}],"url":"\/documentation\/mustache\/mustachelambda\/init(_:)-4ksrf","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Callback","preciseIdentifier":"s:8Mustache0A6LambdaV8Callbacka","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda\/init(_:)-4ksrf","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","title":"MustacheParent","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"kind":"symbol","url":"\/documentation\/mustache\/mustacheparent"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"type":"topic","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}],"title":"MustacheLambda","url":"\/documentation\/mustache\/mustachelambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"type":"topic","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"title":"MustacheTransformable","url":"\/documentation\/mustache\/mustachetransformable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda/init(_:)-20tuc":{"role":"symbol","type":"topic","abstract":[{"text":"Initialize ","type":"text"},{"code":"MustacheLambda","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda\/init(_:)-20tuc","url":"\/documentation\/mustache\/mustachelambda\/init(_:)-20tuc","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?)","kind":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda/Callback":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"lambda callback"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda\/Callback","url":"\/documentation\/mustache\/mustachelambda\/callback","title":"MustacheLambda.Callback","navigatorTitle":[{"text":"Callback","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Callback","kind":"identifier"}],"kind":"symbol"}}}