{"variants":[{"paths":["\/documentation\/mustache\/mustachecustomrenderable"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"topicSections":[{"anchor":"Instance-Properties","title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable\/isNull","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable\/renderText"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MustacheCustomRenderable","kind":"identifier"}]}]}],"sections":[],"abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"anchor":"Rendering","generated":true}],"metadata":{"title":"MustacheCustomRenderable","role":"symbol","modules":[{"name":"Mustache"}],"roleHeading":"Protocol","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"externalID":"s:8Mustache0A16CustomRenderableP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheCustomRenderable","kind":"identifier"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"title":"Mustache","kind":"symbol","url":"\/documentation\/mustache","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"url":"\/documentation\/mustache\/mustachecustomrenderable","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheCustomRenderable","kind":"identifier"}],"title":"MustacheCustomRenderable","navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"url":"\/documentation\/index","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","kind":"article","title":"Hummingbird Documentation","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"title":"MustacheParent","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheParent"}],"url":"\/documentation\/mustache\/mustacheparent","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable/renderText":{"title":"renderText","required":true,"abstract":[{"type":"text","text":"Custom rendered version of object"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable\/renderText","role":"symbol","type":"topic","url":"\/documentation\/mustache\/mustachecustomrenderable\/rendertext","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"renderText","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}]},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"url":"\/documentation\/mustache\/mustachetransformable","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MustacheTransformable","kind":"identifier"}],"title":"MustacheTransformable","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable/isNull":{"title":"isNull","required":true,"abstract":[{"type":"text","text":"Whether the object is a null object. Used when scoping sections"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable\/isNull","role":"symbol","type":"topic","url":"\/documentation\/mustache\/mustachecustomrenderable\/isnull","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isNull","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","role":"symbol","type":"topic","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"title":"MustacheLambda","url":"\/documentation\/mustache\/mustachelambda"}}}