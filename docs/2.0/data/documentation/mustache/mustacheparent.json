{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustacheparent"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"topicSections":[{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"seeAlsoSections":[{"generated":true,"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"anchor":"Rendering"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheParent"}]}],"kind":"declarations"}],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"externalID":"s:8Mustache0A6ParentP","title":"MustacheParent","role":"symbol","modules":[{"name":"Mustache"}],"navigatorTitle":[{"text":"MustacheParent","kind":"identifier"}],"roleHeading":"Protocol","symbolKind":"protocol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent/child(named:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)","type":"topic","title":"child(named:)","abstract":[],"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"child"},{"kind":"text","text":"("},{"text":"named","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/mustache\/mustacheparent\/child(named:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"title":"MustacheLambda","navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"type":"topic","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheLambda"}],"url":"\/documentation\/mustache\/mustachelambda","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","title":"Mustache","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"title":"MustacheCustomRenderable","navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"type":"topic","abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheCustomRenderable"}],"url":"\/documentation\/mustache\/mustachecustomrenderable","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"kind":"symbol","abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"url":"\/documentation\/mustache\/mustacheparent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MustacheParent","kind":"identifier"}],"navigatorTitle":[{"text":"MustacheParent","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","role":"symbol","type":"topic","title":"MustacheParent"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"kind":"symbol","url":"\/documentation\/mustache\/mustachetransformable","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"text":" ","type":"text"},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"role":"symbol","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","type":"topic","title":"MustacheTransformable"},"logo.png":{"alt":null,"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]}}}