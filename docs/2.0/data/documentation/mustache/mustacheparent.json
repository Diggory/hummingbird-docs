{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"}],"seeAlsoSections":[{"anchor":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"title":"Rendering","generated":true}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"modules":[{"name":"Mustache"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"externalID":"s:8Mustache0A6ParentP","title":"MustacheParent","symbolKind":"protocol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustacheparent"]}],"abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of using Mirror"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent"},"kind":"symbol","topicSections":[{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)"],"title":"Instance Methods"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent/child(named:)":{"required":true,"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)","kind":"symbol","title":"child(named:)","url":"\/documentation\/mustache\/mustacheparent\/child(named:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"child"},{"text":"(","kind":"text"},{"text":"named","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"url":"\/documentation\/mustache\/mustachetransformable","title":"MustacheTransformable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/mustache","title":"Mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"url":"\/documentation\/mustache\/mustachelambda","kind":"symbol","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"title":"MustacheLambda","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"url":"\/documentation\/mustache\/mustacheparent","title":"MustacheParent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MustacheCustomRenderable","kind":"identifier"}],"abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String(describing)"},{"text":".","type":"text"}],"url":"\/documentation\/mustache\/mustachecustomrenderable","title":"MustacheCustomRenderable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"MustacheCustomRenderable","kind":"identifier"}],"type":"topic"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]}}}