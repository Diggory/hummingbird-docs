{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent"},"sections":[],"metadata":{"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"externalID":"s:8Mustache0A6ParentP","roleHeading":"Protocol","role":"symbol","title":"MustacheParent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"modules":[{"name":"Mustache"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustacheparent"]}],"abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of using Mirror"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}]}]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"title":"Rendering"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)"],"title":"Instance Methods"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","title":"MustacheParent","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"type":"topic","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"role":"symbol","url":"\/documentation\/mustache\/mustacheparent","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent/child(named:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"child","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"named"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"title":"child(named:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)","type":"topic","abstract":[],"kind":"symbol","required":true,"url":"\/documentation\/mustache\/mustacheparent\/child(named:)"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"title":"MustacheTransformable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}],"type":"topic","url":"\/documentation\/mustache\/mustachetransformable","abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","title":"MustacheLambda","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheLambda"}],"type":"topic","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"role":"symbol","url":"\/documentation\/mustache\/mustachelambda","navigatorTitle":[{"text":"MustacheLambda","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Mustache template engine."}],"role":"collection","url":"\/documentation\/mustache"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"type":"topic","title":"MustacheCustomRenderable","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String(describing)"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheCustomRenderable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","url":"\/documentation\/mustache\/mustachecustomrenderable","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheCustomRenderable"}],"role":"symbol"}}}