{"abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"title":"Rendering"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)"],"title":"Instance Methods"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustacheparent"]}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"role":"symbol","modules":[{"name":"Mustache"}],"title":"MustacheParent","roleHeading":"Protocol","externalID":"s:8Mustache0A6ParentP","symbolKind":"protocol"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"type":"topic","url":"\/documentation\/mustache\/mustacheparent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"title":"MustacheParent","kind":"symbol","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"kind":"symbol","navigatorTitle":[{"text":"MustacheCustomRenderable","kind":"identifier"}],"role":"symbol","url":"\/documentation\/mustache\/mustachecustomrenderable","title":"MustacheCustomRenderable","type":"topic","abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheCustomRenderable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"type":"topic","abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"kind":"symbol","title":"MustacheLambda","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","url":"\/documentation\/mustache\/mustachelambda","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"title":"Mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent/child(named:)":{"role":"symbol","type":"topic","url":"\/documentation\/mustache\/mustacheparent\/child(named:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"child"},{"kind":"text","text":"("},{"kind":"externalParam","text":"named"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"title":"child(named:)","kind":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"kind":"symbol","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"role":"symbol","url":"\/documentation\/mustache\/mustachetransformable","title":"MustacheTransformable","type":"topic","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}]}}}