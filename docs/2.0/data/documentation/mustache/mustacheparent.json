{"abstract":[{"text":"Protocol for object that has a custom method for accessing their children, instead","type":"text"},{"text":" ","type":"text"},{"text":"of using Mirror","type":"text"}],"metadata":{"role":"symbol","title":"MustacheParent","roleHeading":"Protocol","symbolKind":"protocol","navigatorTitle":[{"text":"MustacheParent","kind":"identifier"}],"modules":[{"name":"Mustache"}],"externalID":"s:8Mustache0A6ParentP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}]},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"generated":true,"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"]}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/mustache\/mustacheparent"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent/child(named:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"child","kind":"identifier"},{"text":"(","kind":"text"},{"text":"named","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)","role":"symbol","url":"\/documentation\/mustache\/mustacheparent\/child(named:)","type":"topic","kind":"symbol","required":true,"abstract":[],"title":"child(named:)"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","title":"MustacheTransformable","abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}],"url":"\/documentation\/mustache\/mustachetransformable","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"kind":"symbol","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String(describing)"},{"text":".","type":"text"}],"title":"MustacheCustomRenderable","url":"\/documentation\/mustache\/mustachecustomrenderable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheCustomRenderable","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"MustacheCustomRenderable","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"role":"symbol","url":"\/documentation\/mustache\/mustachelambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheLambda","kind":"identifier"}],"type":"topic","title":"MustacheLambda","kind":"symbol","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"navigatorTitle":[{"text":"MustacheLambda","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","title":"MustacheParent","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"MustacheParent","kind":"identifier"}],"url":"\/documentation\/mustache\/mustacheparent","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"abstract":[{"text":"Mustache template engine.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","url":"\/documentation\/mustache","kind":"symbol","role":"collection","type":"topic"}}}