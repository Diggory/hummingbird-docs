{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"metadata":{"symbolKind":"protocol","externalID":"s:8Mustache0A6ParentP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"navigatorTitle":[{"text":"MustacheParent","kind":"identifier"}],"role":"symbol","title":"MustacheParent","modules":[{"name":"Mustache"}],"roleHeading":"Protocol"},"sections":[],"abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheParent","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)"]}],"seeAlsoSections":[{"title":"Rendering","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/mustache\/mustacheparent"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"navigatorTitle":[{"kind":"identifier","text":"MustacheLambda"}],"role":"symbol","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"url":"\/documentation\/mustache\/mustachelambda","kind":"symbol","title":"MustacheLambda","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"navigatorTitle":[{"kind":"identifier","text":"MustacheTransformable"}],"role":"symbol","abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"text":"of Mustache. They allow you to process objects before they are rendered.","type":"text"}],"url":"\/documentation\/mustache\/mustachetransformable","kind":"symbol","title":"MustacheTransformable","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheTransformable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","role":"collection","url":"\/documentation\/mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","type":"topic","title":"Mustache","abstract":[{"type":"text","text":"Mustache template engine."}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"role":"symbol","url":"\/documentation\/mustache\/mustacheparent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"type":"topic","title":"MustacheParent","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"type":"topic","url":"\/documentation\/mustache\/mustachecustomrenderable","kind":"symbol","navigatorTitle":[{"text":"MustacheCustomRenderable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheCustomRenderable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","title":"MustacheCustomRenderable","abstract":[{"text":"Allow object to override standard hummingbird type rendering which uses","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent/child(named:)":{"kind":"symbol","title":"child(named:)","type":"topic","required":true,"url":"\/documentation\/mustache\/mustacheparent\/child(named:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"child","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"named"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)","abstract":[]}}}