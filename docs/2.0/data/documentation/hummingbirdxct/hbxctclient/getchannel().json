{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getChannel","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"}],"externalID":"s:14HummingbirdXCT11HBXCTClientV10getChannel7NIOCore0E0_pyYaKF","modules":[{"name":"HummingbirdXCT"}],"role":"symbol","title":"getChannel()","roleHeading":"Instance Method","symbolKind":"method"},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdxct\/hbxctclient\/getchannel()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getChannel","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"}],"platforms":["Linux"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient\/getChannel()"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTClient"}],"url":"\/documentation\/hummingbirdxct\/hbxctclient","abstract":[{"type":"text","text":"Bare bones HTTP client that connects to one Server."}],"title":"HBXCTClient","navigatorTitle":[{"kind":"identifier","text":"HBXCTClient"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient/getChannel()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient\/getChannel()","abstract":[],"type":"topic","url":"\/documentation\/hummingbirdxct\/hbxctclient\/getchannel()","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"getChannel","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"}],"title":"getChannel()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","kind":"symbol","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"url":"\/documentation\/hummingbirdxct","title":"HummingbirdXCT","type":"topic","role":"collection"}}}