{"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Protocol for client used by HBXCT"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]]},"variants":[{"paths":["\/documentation\/hummingbirdxct\/hbxctclientprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Protocol","symbolKind":"protocol","externalID":"s:14HummingbirdXCT19HBXCTClientProtocolP","title":"HBXCTClientProtocol","role":"symbol","modules":[{"name":"HummingbirdXCT"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"HBXCTClientProtocol","kind":"identifier"}]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol\/XCTExecute(uri:method:headers:body:testCallback:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol\/execute(uri:method:headers:body:)"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTClientProtocol"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"TODO: Could this be made Sendable? Currently HBXCTRouter.Client is not Sendable"},{"type":"text","text":" "},{"type":"text","text":"Because "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" is not Sendable, Maybe in the future it could be and we"},{"type":"text","text":" "},{"type":"text","text":"can revisit this"}]}],"kind":"content"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol/execute(uri:method:headers:body:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"uri"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT13HBXCTResponseV","text":"HBXCTResponse"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol\/execute(uri:method:headers:body:)","role":"symbol","url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol\/execute(uri:method:headers:body:)","kind":"symbol","abstract":[{"type":"text","text":"Execute URL request and provide response"}],"title":"execute(uri:method:headers:body:)","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol":{"title":"HBXCTClientProtocol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCTClientProtocol"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTClientProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol","abstract":[{"type":"text","text":"Protocol for client used by HBXCT"}],"url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"role":"collection","url":"\/documentation\/hummingbirdxct","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","title":"HummingbirdXCT"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol/XCTExecute(uri:method:headers:body:testCallback:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTExecute","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"uri"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","text":"HTTPRequest"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"testCallback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT13HBXCTResponseV","text":"HBXCTResponse"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolPAAE10XCTExecute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__AA13HBXCTResponseVYaKctYaKlF6ReturnL_qd__mfp","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolPAAE10XCTExecute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__AA13HBXCTResponseVYaKctYaKlF6ReturnL_qd__mfp","text":"Return"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol\/XCTExecute(uri:method:headers:body:testCallback:)","role":"symbol","url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol\/xctexecute(uri:method:headers:body:testcallback:)","kind":"symbol","abstract":[{"text":"Send request and call test callback on the response returned","type":"text"}],"title":"XCTExecute(uri:method:headers:body:testCallback:)"}}}