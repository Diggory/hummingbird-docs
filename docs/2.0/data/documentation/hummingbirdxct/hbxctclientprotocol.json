{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]]},"abstract":[{"text":"Protocol for client used by HBXCT","type":"text"}],"metadata":{"symbolKind":"protocol","title":"HBXCTClientProtocol","navigatorTitle":[{"text":"HBXCTClientProtocol","kind":"identifier"}],"modules":[{"name":"HummingbirdXCT"}],"roleHeading":"Protocol","role":"symbol","externalID":"s:14HummingbirdXCT19HBXCTClientProtocolP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"identifier"}]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol\/XCTExecute(uri:method:headers:body:testCallback:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol\/execute(uri:method:headers:body:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"identifier"}],"platforms":["Linux"]}]},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"TODO: Could this be made Sendable? Currently HBXCTRouter.Client is not Sendable","type":"text"},{"text":" ","type":"text"},{"text":"Because ","type":"text"},{"type":"codeVoice","code":"HBResponder"},{"text":" is not Sendable, Maybe in the future it could be and we","type":"text"},{"text":" ","type":"text"},{"text":"can revisit this","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdxct\/hbxctclientprotocol"]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol":{"role":"symbol","abstract":[{"text":"Protocol for client used by HBXCT","type":"text"}],"url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol","navigatorTitle":[{"text":"HBXCTClientProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"identifier"}],"title":"HBXCTClientProtocol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"role":"collection","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"url":"\/documentation\/hummingbirdxct","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","title":"HummingbirdXCT","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol/XCTExecute(uri:method:headers:body:testCallback:)":{"role":"symbol","abstract":[{"text":"Send request and call test callback on the response returned","type":"text"}],"url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol\/xctexecute(uri:method:headers:body:testcallback:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol\/XCTExecute(uri:method:headers:body:testCallback:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTExecute","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPFields","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?, ","kind":"text"},{"text":"testCallback","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBXCTResponse","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT13HBXCTResponseV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolPAAE10XCTExecute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__AA13HBXCTResponseVYaKctYaKlF6ReturnL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolPAAE10XCTExecute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__AA13HBXCTResponseVYaKctYaKlF6ReturnL_qd__mfp"}],"title":"XCTExecute(uri:method:headers:body:testCallback:)","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol/execute(uri:method:headers:body:)":{"role":"symbol","abstract":[{"text":"Execute URL request and provide response","type":"text"}],"url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol\/execute(uri:method:headers:body:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol\/execute(uri:method:headers:body:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(","kind":"text"},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPFields","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBXCTResponse","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT13HBXCTResponseV"}],"title":"execute(uri:method:headers:body:)","type":"topic","required":true,"kind":"symbol"}}}