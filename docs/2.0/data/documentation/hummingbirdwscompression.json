{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient"]}],"variants":[{"paths":["\/documentation\/hummingbirdwscompression"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCompression"},"kind":"symbol","topicSections":[{"title":"Compression extension","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"This library provides an implementation of the WebSocket compression extension ","type":"text"},{"code":"permessage-deflate","type":"codeVoice"},{"text":" as detailed in ","type":"text"},{"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","isActive":true,"type":"reference"},{"text":". You add the extension in the configuration for either your WebSocket upgrade or WebSocket client.","type":"text"}]},{"syntax":"swift","code":["let app = Application(","    router: Router(),","    server: .http1WebSocketUpgrade(","        configuration: .init(extensions: [.perMessageDeflate(minFrameSizeToCompress: 16)])","    ) { _, _, _ in","        return .upgrade([:]) { inbound, _, _ in","            var iterator = inbound.messages(maxSize: .max).makeAsyncIterator()","            let firstMessage = try await iterator.next()","            XCTAssertEqual(firstMessage, .text(\"Hello, testing compressed data\"))","        }","    }",")"],"type":"codeListing"}]}],"abstract":[{"text":"Compression support for WebSockets","type":"text"}],"sections":[],"hierarchy":{"paths":[[]]},"metadata":{"modules":[{"name":"HummingbirdWSCompression"}],"title":"HummingbirdWSCompression","externalID":"HummingbirdWSCompression","roleHeading":"Framework","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","symbolKind":"module"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSClient":{"kind":"symbol","role":"collection","title":"HummingbirdWSClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdwsclient","abstract":[{"type":"text","text":"Adds support for connecting to WebSocket."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSCompression":{"url":"\/documentation\/hummingbirdwscompression","role":"collection","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Compression support for WebSockets","type":"text"}],"title":"HummingbirdWSCompression","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCompression"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"kind":"symbol","role":"collection","title":"HummingbirdWebSocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdwebsocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSCore/WebSocketExtensionFactory/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"perMessageDeflate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxWindow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"text":"noContextTakeover","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDecompressedFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"minFrameSizeToCompress"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdWSCore25WebSocketExtensionFactoryV","text":"WebSocketExtensionFactory"}],"type":"topic","abstract":[{"text":"permessage-deflate websocket extension","type":"text"}],"url":"\/documentation\/hummingbirdwscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","title":"perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSCore/WebSocketExtensionFactory/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"perMessageDeflate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clientMaxWindow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"clientNoContextTakeover"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"serverMaxWindow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"serverNoContextTakeover"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"compressionLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"memoryLevel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"maxDecompressedFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"minFrameSizeToCompress"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdWSCore25WebSocketExtensionFactoryV","text":"WebSocketExtensionFactory","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","url":"\/documentation\/hummingbirdwscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","type":"topic","role":"symbol","title":"perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","abstract":[{"text":"permessage-deflate websocket extension","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"identifier":"logo.png","type":"image","alt":null},"https://datatracker.ietf.org/doc/html/rfc7692.html":{"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","type":"link","title":"RFC 7692","titleInlineContent":[{"type":"text","text":"RFC 7692"}]}}}