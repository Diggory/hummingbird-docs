{"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/HTTPChannelHandler-Implementations"},"sections":[],"metadata":{"title":"HTTPChannelHandler Implementations","modules":[{"name":"HummingbirdTLS"}],"role":"collectionGroup","roleHeading":"API Collection"},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder"],"generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)"],"generated":true}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","url":"\/documentation\/hummingbirdtls\/tlschannel","abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"title":"TLSChannel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/handleHTTP(asyncChannel:logger:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleHTTP"},{"kind":"text","text":"("},{"kind":"externalParam","text":"asyncChannel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15NIOAsyncChannelV","text":"NIOAsyncChannel"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"HTTPRequestPart","preciseIdentifier":"s:12NIOHTTPTypes15HTTPRequestPartO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"HTTPResponsePart","preciseIdentifier":"s:12NIOHTTPTypes16HTTPResponsePartO"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"kind":"symbol","abstract":[],"title":"handleHTTP(asyncChannel:logger:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)","url":"\/documentation\/hummingbirdtls\/tlschannel\/handlehttp(asyncchannel:logger:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"role":"collection","abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","url":"\/documentation\/hummingbirdtls","kind":"symbol","type":"topic","title":"HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/responder":{"abstract":[],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"responder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HTTPChannelHandler","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Responder","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP9Respondera","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder","title":"responder","url":"\/documentation\/hummingbirdtls\/tlschannel\/responder","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"BaseChannel"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"HTTPChannelHandler"},{"text":".","type":"text"}]}}}}