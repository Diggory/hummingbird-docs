{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]]},"topicSections":[{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder"]},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)"]}],"metadata":{"modules":[{"name":"HummingbirdTLS"}],"title":"HTTPChannelHandler Implementations","roleHeading":"API Collection","role":"collectionGroup"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/HTTPChannelHandler-Implementations","interfaceLanguage":"swift"},"sections":[],"kind":"article","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"type":"topic","abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}],"title":"TLSChannel","url":"\/documentation\/hummingbirdtls\/tlschannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/handleHTTP(asyncChannel:logger:)":{"type":"topic","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handleHTTP"},{"kind":"text","text":"("},{"kind":"externalParam","text":"asyncChannel"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore15NIOAsyncChannelV","kind":"typeIdentifier","text":"NIOAsyncChannel"},{"kind":"text","text":"<"},{"text":"HTTPRequestPart","kind":"typeIdentifier","preciseIdentifier":"s:12NIOHTTPTypes15HTTPRequestPartO"},{"text":", ","kind":"text"},{"text":"HTTPResponsePart","kind":"typeIdentifier","preciseIdentifier":"s:12NIOHTTPTypes16HTTPResponsePartO"},{"text":">, ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"handleHTTP(asyncChannel:logger:)","url":"\/documentation\/hummingbirdtls\/tlschannel\/handlehttp(asyncchannel:logger:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"url":"\/documentation\/hummingbirdtls","role":"collection","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","title":"HummingbirdTLS","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/responder":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"}],"url":"\/documentation\/hummingbirdtls\/tlschannel\/responder","title":"responder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder","abstract":[],"conformance":{"constraints":[{"code":"BaseChannel","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"HTTPChannelHandler","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol"}}}