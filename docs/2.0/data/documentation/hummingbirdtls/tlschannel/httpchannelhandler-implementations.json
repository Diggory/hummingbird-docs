{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/HTTPChannelHandler-Implementations","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"HummingbirdTLS"}],"title":"HTTPChannelHandler Implementations","roleHeading":"API Collection","role":"collectionGroup"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","sections":[],"topicSections":[{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder"]},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"title":"TLSChannel","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}],"navigatorTitle":[{"text":"TLSChannel","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"url":"\/documentation\/hummingbirdtls\/tlschannel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/handleHTTP(asyncChannel:logger:)":{"title":"handleHTTP(asyncChannel:logger:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handleHTTP","kind":"identifier"},{"text":"(","kind":"text"},{"text":"asyncChannel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAsyncChannel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15NIOAsyncChannelV"},{"text":"<","kind":"text"},{"text":"HTTPRequestPart","preciseIdentifier":"s:12NIOHTTPTypes15HTTPRequestPartO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"HTTPResponsePart","preciseIdentifier":"s:12NIOHTTPTypes16HTTPResponsePartO","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"abstract":[],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)","url":"\/documentation\/hummingbirdtls\/tlschannel\/handlehttp(asyncchannel:logger:)"},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/responder":{"url":"\/documentation\/hummingbirdtls\/tlschannel\/responder","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP","kind":"typeIdentifier","text":"HTTPChannelHandler"},{"kind":"text","text":"."},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP9Respondera","kind":"typeIdentifier","text":"Responder"}],"type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"BaseChannel"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"HTTPChannelHandler"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","title":"responder","role":"symbol"}}}