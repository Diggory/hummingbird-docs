{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/HTTPChannelHandler-Implementations"},"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]]},"kind":"article","metadata":{"modules":[{"name":"HummingbirdTLS"}],"roleHeading":"API Collection","role":"collectionGroup","title":"HTTPChannelHandler Implementations"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}],"url":"\/documentation\/hummingbirdtls","kind":"symbol","title":"HummingbirdTLS","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/handleHTTP(asyncChannel:logger:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handleHTTP","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"asyncChannel"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15NIOAsyncChannelV","text":"NIOAsyncChannel","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12NIOHTTPTypes15HTTPRequestPartO","text":"HTTPRequestPart","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"HTTPResponsePart","preciseIdentifier":"s:12NIOHTTPTypes16HTTPResponsePartO"},{"text":">, ","kind":"text"},{"text":"logger","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"abstract":[],"url":"\/documentation\/hummingbirdtls\/tlschannel\/handlehttp(asyncchannel:logger:)","kind":"symbol","title":"handleHTTP(asyncChannel:logger:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","url":"\/documentation\/hummingbirdtls\/tlschannel","abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"title":"TLSChannel","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/responder":{"type":"topic","abstract":[],"title":"responder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder","role":"symbol","url":"\/documentation\/hummingbirdtls\/tlschannel\/responder","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"responder","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"HTTPChannelHandler","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP"},{"text":".","kind":"text"},{"text":"Responder","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP9Respondera"}],"conformance":{"constraints":[{"type":"codeVoice","code":"BaseChannel"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"HTTPChannelHandler"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]}}}