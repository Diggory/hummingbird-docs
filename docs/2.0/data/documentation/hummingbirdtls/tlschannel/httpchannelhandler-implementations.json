{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder"],"title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)"],"title":"Instance Methods","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]]},"sections":[],"metadata":{"modules":[{"name":"HummingbirdTLS"}],"roleHeading":"API Collection","title":"HTTPChannelHandler Implementations","role":"collectionGroup"},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/HTTPChannelHandler-Implementations"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"type":"topic","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}],"images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdTLS","url":"\/documentation\/hummingbirdtls","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"navigatorTitle":[{"text":"TLSChannel","kind":"identifier"}],"title":"TLSChannel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSChannel","kind":"identifier"}],"abstract":[{"text":"Sets up child channel to use TLS before accessing base channel setup","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdtls\/tlschannel","role":"symbol"},"logo.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/handleHTTP(asyncChannel:logger:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleHTTP"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"asyncChannel"},{"text":": ","kind":"text"},{"text":"NIOAsyncChannel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15NIOAsyncChannelV"},{"text":"<","kind":"text"},{"text":"HTTPRequestPart","kind":"typeIdentifier","preciseIdentifier":"s:12NIOHTTPTypes15HTTPRequestPartO"},{"text":", ","kind":"text"},{"text":"HTTPResponsePart","kind":"typeIdentifier","preciseIdentifier":"s:12NIOHTTPTypes16HTTPResponsePartO"},{"text":">, ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"abstract":[],"title":"handleHTTP(asyncChannel:logger:)","url":"\/documentation\/hummingbirdtls\/tlschannel\/handlehttp(asyncchannel:logger:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/responder":{"title":"responder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"text":"HTTPChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP"},{"text":".","kind":"text"},{"text":"Responder","preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP9Respondera","kind":"typeIdentifier"}],"abstract":[],"url":"\/documentation\/hummingbirdtls\/tlschannel\/responder","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"BaseChannel"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"HTTPChannelHandler"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic"}}}