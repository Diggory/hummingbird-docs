{"metadata":{"title":"HTTPChannelHandler Implementations","roleHeading":"API Collection","modules":[{"name":"HummingbirdTLS"}],"role":"collectionGroup"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/HTTPChannelHandler-Implementations","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","topicSections":[{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder"]},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel":{"url":"\/documentation\/hummingbirdtls\/tlschannel","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel","title":"TLSChannel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSChannel"}],"abstract":[{"type":"text","text":"Sets up child channel to use TLS before accessing base channel setup"}],"navigatorTitle":[{"kind":"identifier","text":"TLSChannel"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/handleHTTP(asyncChannel:logger:)":{"url":"\/documentation\/hummingbirdtls\/tlschannel\/handlehttp(asyncchannel:logger:)","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/handleHTTP(asyncChannel:logger:)","title":"handleHTTP(asyncChannel:logger:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleHTTP","kind":"identifier"},{"text":"(","kind":"text"},{"text":"asyncChannel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAsyncChannel","preciseIdentifier":"s:7NIOCore15NIOAsyncChannelV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:12NIOHTTPTypes15HTTPRequestPartO","text":"HTTPRequestPart","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:12NIOHTTPTypes16HTTPResponsePartO","text":"HTTPResponsePart","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"title":"HummingbirdTLS","abstract":[{"text":"Add TLS support to Hummingbird server.","type":"text"}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","url":"\/documentation\/hummingbirdtls","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS/TLSChannel/responder":{"url":"\/documentation\/hummingbirdtls\/tlschannel\/responder","title":"responder","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP","text":"HTTPChannelHandler","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP9Respondera","text":"Responder","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS\/TLSChannel\/responder","abstract":[],"kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"BaseChannel"},{"type":"text","text":" conforms to "},{"code":"HTTPChannelHandler","type":"codeVoice"},{"text":".","type":"text"}]}},"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"type":"image"}}}