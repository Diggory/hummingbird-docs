{"metadata":{"title":"HummingbirdCompression","externalID":"HummingbirdCompression","role":"collection","symbolKind":"module","modules":[{"name":"HummingbirdCompression"}],"images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Framework"},"seeAlsoSections":[{"anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Request decompression","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware"],"anchor":"Request-decompression"},{"anchor":"Response-compression","title":"Response compression","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Usage","type":"heading","text":"Usage"},{"code":["let router = Router()","router.middlewares.add(RequestDecompressionMiddleware())","router.middlewares.add(ResponseCompressionMiddleware(minimumResponseSizeToCompress: 512))"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Adding request decompression middleware means when a request comes in with header ","type":"text"},{"code":"content-encoding","type":"codeVoice"},{"type":"text","text":" set to "},{"code":"gzip","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"deflate"},{"type":"text","text":" the server will attempt to decompress the request body. Adding response compression means when a request comes in with header "},{"code":"accept-encoding","type":"codeVoice"},{"text":" set to ","type":"text"},{"code":"gzip","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"deflate"},{"type":"text","text":" the server will compression the response body."}]}],"kind":"content"}],"sections":[],"abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdcompression"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[[]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","abstract":[{"type":"text","text":"Middleware for compressing response bodies"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"title":"ResponseCompressionMiddleware","url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCompressionMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"abstract":[{"type":"text","text":"Middleware for decompressing request bodies"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","title":"RequestDecompressionMiddleware","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestDecompressionMiddleware"}],"url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","navigatorTitle":[{"text":"RequestDecompressionMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","url":"\/documentation\/hummingbird","type":"topic","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol"},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","title":"HummingbirdCompression","url":"\/documentation\/hummingbirdcompression","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}]}}}