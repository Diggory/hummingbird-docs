{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Framework","title":"HummingbirdCompression","symbolKind":"module","externalID":"HummingbirdCompression","role":"collection","modules":[{"name":"HummingbirdCompression"}]},"sections":[],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Request decompression","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware"]},{"title":"Response compression","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware"]}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Usage","text":"Usage"},{"type":"codeListing","code":["let router = Router()","router.middlewares.add(RequestDecompressionMiddleware())","router.middlewares.add(ResponseCompressionMiddleware(minimumResponseSizeToCompress: 512))"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Adding request decompression middleware means when a request comes in with header ","type":"text"},{"code":"content-encoding","type":"codeVoice"},{"text":" set to ","type":"text"},{"code":"gzip","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"deflate","type":"codeVoice"},{"text":" the server will attempt to decompress the request body. Adding response compression means when a request comes in with header ","type":"text"},{"code":"accept-encoding","type":"codeVoice"},{"text":" set to ","type":"text"},{"type":"codeVoice","code":"gzip"},{"type":"text","text":" or "},{"type":"codeVoice","code":"deflate"},{"type":"text","text":" the server will compression the response body."}]}],"kind":"content"}],"kind":"symbol","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcompression"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"type":"topic","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","url":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"type":"topic","abstract":[{"type":"text","text":"Middleware for compressing response bodies"}],"role":"symbol","url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"title":"ResponseCompressionMiddleware","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"type":"topic","navigatorTitle":[{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"abstract":[{"text":"Middleware for decompressing request bodies","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","title":"RequestDecompressionMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}