{"variants":[{"paths":["\/documentation\/hummingbirdcompression"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"topicSections":[{"title":"Request decompression","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware"],"title":"Response compression"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Usage","anchor":"Usage"},{"type":"codeListing","syntax":"swift","code":["let router = Router()","router.middlewares.add(RequestDecompressionMiddleware())","router.middlewares.add(ResponseCompressionMiddleware(minimumResponseSizeToCompress: 512))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding request decompression middleware means when a request comes in with header "},{"type":"codeVoice","code":"content-encoding"},{"text":" set to ","type":"text"},{"type":"codeVoice","code":"gzip"},{"type":"text","text":" or "},{"type":"codeVoice","code":"deflate"},{"type":"text","text":" the server will attempt to decompress the request body. Adding response compression means when a request comes in with header "},{"type":"codeVoice","code":"accept-encoding"},{"type":"text","text":" set to "},{"type":"codeVoice","code":"gzip"},{"type":"text","text":" or "},{"type":"codeVoice","code":"deflate"},{"type":"text","text":" the server will compression the response body."}]}]}],"metadata":{"symbolKind":"module","externalID":"HummingbirdCompression","roleHeading":"Framework","modules":[{"name":"HummingbirdCompression"}],"role":"collection","title":"HummingbirdCompression","images":[{"type":"icon","identifier":"logo.png"}]},"kind":"symbol","hierarchy":{"paths":[[]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"type":"topic","url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","navigatorTitle":[{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"title":"ResponseCompressionMiddleware","abstract":[{"text":"Middleware for compressing response bodies","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/RequestDecompressionMiddleware":{"url":"\/documentation\/hummingbirdcompression\/requestdecompressionmiddleware","navigatorTitle":[{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"type":"topic","role":"symbol","title":"RequestDecompressionMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/RequestDecompressionMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestDecompressionMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware for decompressing request bodies"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"type":"topic","abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"kind":"symbol","role":"collection","title":"HummingbirdCompression","url":"\/documentation\/hummingbirdcompression","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"},"logo.png":{"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"alt":null,"identifier":"logo.png","type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird","role":"collection","title":"Hummingbird","kind":"symbol"}}}