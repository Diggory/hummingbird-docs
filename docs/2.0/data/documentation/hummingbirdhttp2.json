{"variants":[{"paths":["\/documentation\/hummingbirdhttp2"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel"]}],"metadata":{"title":"HummingbirdHTTP2","role":"collection","symbolKind":"module","modules":[{"name":"HummingbirdHTTP2"}],"externalID":"HummingbirdHTTP2","roleHeading":"Framework"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"sections":[],"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single type "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","isActive":true},{"type":"text","text":". If you want a server to support HTTP2 then build a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","isActive":true},{"type":"text","text":" with your HTTP responder callback and a "},{"type":"codeVoice","code":"TLSConfiguration"},{"type":"text","text":" struct from "},{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","isActive":true},{"type":"text","text":" as parameters."}],"type":"paragraph"},{"code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create HTTP2 Channel","let http2Channel = HTTP2Channel(tlsConfiguration: tlsConfiguration) { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello v2.0\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","let server = HBServer(","    childChannelSetup: http2Channel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"type":"topic","title":"HummingbirdHTTP2","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"kind":"symbol","url":"\/documentation\/hummingbirdhttp2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"title":"HummingbirdTLS","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdtls","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2/HTTP2Channel":{"navigatorTitle":[{"text":"HTTP2Channel","kind":"identifier"}],"title":"HTTP2Channel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","role":"symbol","url":"\/documentation\/hummingbirdhttp2\/http2channel","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2Channel","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Child channel for processing HTTP1 with the option of upgrading to HTTP2"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol"},"https://github.com/apple/swift-nio-ssl":{"type":"link","titleInlineContent":[{"text":"NIOSSL","type":"text"}],"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","url":"https:\/\/github.com\/apple\/swift-nio-ssl","title":"NIOSSL"}}}