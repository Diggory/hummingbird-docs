{"kind":"symbol","metadata":{"title":"HummingbirdHTTP2","symbolKind":"module","modules":[{"name":"HummingbirdHTTP2"}],"roleHeading":"Framework","role":"collection","externalID":"HummingbirdHTTP2"},"variants":[{"paths":["\/documentation\/hummingbirdhttp2"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single type "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel"},{"type":"text","text":". If you want a server to support HTTP2 then build a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel"},{"type":"text","text":" with your HTTP responder callback and a "},{"type":"codeVoice","code":"TLSConfiguration"},{"type":"text","text":" struct from "},{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","isActive":true},{"type":"text","text":" as parameters."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create HTTP2 Channel","let http2Channel = HTTP2Channel(tlsConfiguration: tlsConfiguration) { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello v2.0\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","let server = HBServer(","    childChannelSetup: http2Channel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]}]}],"sections":[],"references":{"https://github.com/apple/swift-nio-ssl":{"title":"NIOSSL","url":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"link","titleInlineContent":[{"type":"text","text":"NIOSSL"}],"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"url":"\/documentation\/hummingbirdtls","title":"HummingbirdTLS","role":"collection","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","title":"HummingbirdCore","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"url":"\/documentation\/hummingbirdhttp2","title":"HummingbirdHTTP2","role":"collection","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2/HTTP2Channel":{"abstract":[{"type":"text","text":"Child channel for processing HTTP1 with the option of upgrading to HTTP2"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTP2Channel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","url":"\/documentation\/hummingbirdhttp2\/http2channel","title":"HTTP2Channel","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2Channel"}]}}}