{"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single type "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","isActive":true},{"type":"text","text":". If you want a server to support HTTP2 then build a "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","isActive":true},{"type":"text","text":" with your HTTP responder callback and a "},{"code":"TLSConfiguration","type":"codeVoice"},{"type":"text","text":" struct from "},{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","isActive":true},{"type":"text","text":" as parameters."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create HTTP2 Channel","let http2Channel = HTTP2Channel(tlsConfiguration: tlsConfiguration) { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello v2.0\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","let server = HBServer(","    childChannelSetup: http2Channel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"],"title":"Related Documentation"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel"],"title":"Structures"}],"abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"metadata":{"modules":[{"name":"HummingbirdHTTP2"}],"symbolKind":"module","externalID":"HummingbirdHTTP2","role":"collection","title":"HummingbirdHTTP2","roleHeading":"Framework"},"kind":"symbol","hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/hummingbirdhttp2"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","url":"\/documentation\/hummingbirdhttp2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"type":"topic","kind":"symbol","title":"HummingbirdHTTP2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"role":"collection","title":"HummingbirdTLS","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","type":"topic","kind":"symbol","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"url":"\/documentation\/hummingbirdtls"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"},"https://github.com/apple/swift-nio-ssl":{"url":"https:\/\/github.com\/apple\/swift-nio-ssl","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","title":"NIOSSL","type":"link","titleInlineContent":[{"text":"NIOSSL","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2/HTTP2Channel":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2Channel","kind":"identifier"}],"url":"\/documentation\/hummingbirdhttp2\/http2channel","title":"HTTP2Channel","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","kind":"symbol","navigatorTitle":[{"text":"HTTP2Channel","kind":"identifier"}],"abstract":[{"text":"Child channel for processing HTTP1 with the option of upgrading to HTTP2","type":"text"}],"type":"topic"}}}