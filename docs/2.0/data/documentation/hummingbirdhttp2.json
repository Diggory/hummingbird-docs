{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single type "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","isActive":true,"type":"reference"},{"type":"text","text":". If you want a server to support HTTP2 then build a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","isActive":true,"type":"reference"},{"type":"text","text":" with your HTTP responder callback and a "},{"code":"TLSConfiguration","type":"codeVoice"},{"type":"text","text":" struct from "},{"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","isActive":true,"type":"reference"},{"type":"text","text":" as parameters."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create HTTP2 Channel","let http2Channel = HTTP2Channel(tlsConfiguration: tlsConfiguration) { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello v2.0\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","let server = HBServer(","    childChannelSetup: http2Channel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"HummingbirdHTTP2","title":"HummingbirdHTTP2","modules":[{"name":"HummingbirdHTTP2"}],"role":"collection","symbolKind":"module"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdhttp2"]}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel"]}],"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"references":{"https://github.com/apple/swift-nio-ssl":{"title":"NIOSSL","identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","url":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"link","titleInlineContent":[{"text":"NIOSSL","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","title":"HummingbirdHTTP2","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2/HTTP2Channel":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2Channel"}],"navigatorTitle":[{"kind":"identifier","text":"HTTP2Channel"}],"type":"topic","title":"HTTP2Channel","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","kind":"symbol","abstract":[{"type":"text","text":"Child channel for processing HTTP1 with the option of upgrading to HTTP2"}],"url":"\/documentation\/hummingbirdhttp2\/http2channel"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"kind":"symbol","title":"HummingbirdTLS","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","url":"\/documentation\/hummingbirdtls","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","kind":"symbol"}}}