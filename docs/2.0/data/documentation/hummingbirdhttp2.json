{"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel"]}],"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"metadata":{"title":"HummingbirdHTTP2","role":"collection","roleHeading":"Framework","symbolKind":"module","externalID":"HummingbirdHTTP2","modules":[{"name":"HummingbirdHTTP2"}]},"primaryContentSections":[{"content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"HummingbirdTLS adds a single type "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel"},{"type":"text","text":". If you want a server to support HTTP2 then build a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel"},{"type":"text","text":" with your HTTP responder callback and a "},{"type":"codeVoice","code":"TLSConfiguration"},{"type":"text","text":" struct from "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl"},{"type":"text","text":" as parameters."}],"type":"paragraph"},{"code":["\/\/ Load certificates and private key to construct server TLS configuration","let certificateChain = try NIOSSLCertificate.fromPEMFile(arguments.certificateChain)","let privateKey = try NIOSSLPrivateKey(file: arguments.privateKey, format: .pem)","let tlsConfiguration = TLSConfiguration.makeServerConfiguration(","    certificateChain: certificateChain.map { .certificate($0) },","    privateKey: .privateKey(privateKey)",")","\/\/ Create HTTP2 Channel","let http2Channel = HTTP2Channel(tlsConfiguration: tlsConfiguration) { _, context in","    let responseBody = channel.allocator.buffer(string: \"Hello v2.0\")","    return HBResponse(status: .ok, body: .init(byteBuffer: responseBody))","}","let server = HBServer(","    childChannelSetup: http2Channel,","    configuration: .init(address: .hostname(port: 8080)),","    eventLoopGroup: eventLoopGroup,","    logger: Logger(label: \"HelloServer\")",")"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbirdhttp2"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"kind":"symbol","abstract":[{"text":"Add HTTP2 support to Hummingbird server","type":"text"}],"title":"HummingbirdHTTP2","url":"\/documentation\/hummingbirdhttp2","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2/HTTP2Channel":{"abstract":[{"text":"Child channel for processing HTTP1 with the option of upgrading to HTTP2","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2Channel"}],"title":"HTTP2Channel","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTP2Channel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2\/HTTP2Channel","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdhttp2\/http2channel"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"title":"HummingbirdTLS","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","url":"\/documentation\/hummingbirdtls","kind":"symbol","role":"collection","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"https://github.com/apple/swift-nio-ssl":{"identifier":"https:\/\/github.com\/apple\/swift-nio-ssl","type":"link","title":"NIOSSL","titleInlineContent":[{"type":"text","text":"NIOSSL"}],"url":"https:\/\/github.com\/apple\/swift-nio-ssl"}}}