{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PostgresPersistDriver","kind":"identifier"}]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Postgres driver uses the database migration service "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresMigrations","type":"reference","isActive":true},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"create its database table. Before the server is running you should run the migrations"},{"type":"text","text":" "},{"type":"text","text":"to build your table."}]},{"type":"codeListing","code":["let migrations = PostgresMigrations()","let persist = PostgresPersistDriver(client: postgresClient, migrations: migrations)","var app = Application(...)","app.runBeforeServerStart {","    try await migrations.apply(client: postgresClient, logger: logger, dryRun: applyMigrations)","}"],"syntax":null}]}],"metadata":{"navigatorTitle":[{"text":"PostgresPersistDriver","kind":"identifier"}],"modules":[{"name":"HummingbirdPostgres"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PostgresPersistDriver","kind":"identifier"}],"title":"PostgresPersistDriver","symbolKind":"class","roleHeading":"Class","externalID":"s:19HummingbirdPostgres0B13PersistDriverC"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver"},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdpostgres\/postgrespersistdriver"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Postgres driver for persist system for storing persistent cross request key\/value pairs"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"]]},"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/init(client:migrations:tidyUpFrequency:logger:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/create(key:value:expires:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/get(key:as:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/remove(key:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/set(key:value:expires:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/PersistDriver-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/Service-Implementations"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PostgresPersistDriver","kind":"identifier"}],"title":"PostgresPersistDriver","navigatorTitle":[{"kind":"identifier","text":"PostgresPersistDriver"}],"abstract":[{"text":"Postgres driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver"},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"title":"ServiceLifecycle.Service","identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"url":"\/documentation\/index","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver/remove(key:)":{"url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/remove(key:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"remove","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","abstract":[{"type":"text","text":"Remove key"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/remove(key:)","title":"remove(key:)","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"title":"PersistDriver","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistDriver"}],"url":"\/documentation\/hummingbird\/persistdriver","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver/create(key:value:expires:)":{"role":"symbol","title":"create(key:value:expires:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/create(key:value:expires:)","kind":"symbol","abstract":[{"text":"Create new key. This doesnâ€™t check for the existence of this key already so may fail if the key already exists","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Codable","kind":"typeIdentifier","preciseIdentifier":"s:s7Codablea"},{"text":", ","kind":"text"},{"text":"expires","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:expires:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver/init(client:migrations:tidyUpFrequency:logger:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/init(client:migrations:tidyUpFrequency:logger:)","title":"init(client:migrations:tidyUpFrequency:logger:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"client","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PostgresClient","kind":"typeIdentifier","preciseIdentifier":"s:11PostgresNIO0A6ClientC"},{"text":", ","kind":"text"},{"text":"migrations","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PostgresMigrations","kind":"typeIdentifier","preciseIdentifier":"s:19HummingbirdPostgres0B10MigrationsC"},{"text":", ","kind":"text"},{"text":"tidyUpFrequency","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Duration","kind":"typeIdentifier","preciseIdentifier":"s:s8DurationV"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"type":"topic","url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/init(client:migrations:tidyupfrequency:logger:)","abstract":[{"text":"Initialize PostgresPersistDriver","type":"text"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","title":"HummingbirdRedis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","url":"\/documentation\/hummingbirdredis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver/PersistDriver-Implementations":{"url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/persistdriver-implementations","abstract":[],"type":"topic","title":"PersistDriver Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/PersistDriver-Implementations","kind":"article","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver/Service-Implementations":{"type":"topic","url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/service-implementations","role":"collectionGroup","kind":"article","title":"Service Implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/Service-Implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"role":"collectionGroup","title":"Persistent data","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","url":"\/documentation\/hummingbird\/persistentdata","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresMigrations":{"navigatorTitle":[{"kind":"identifier","text":"PostgresMigrations"}],"type":"topic","title":"PostgresMigrations","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresMigrations","abstract":[{"type":"text","text":"Database migration support"}],"url":"\/documentation\/hummingbirdpostgres\/postgresmigrations","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PostgresMigrations"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","type":"topic","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"role":"collection","kind":"symbol","url":"\/documentation\/hummingbirdpostgres","title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver/get(key:as:)":{"url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/get(key:as:)","abstract":[{"type":"text","text":"Get value for key"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/get(key:as:)","title":"get(key:as:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Object","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Object","kind":"typeIdentifier","preciseIdentifier":"s:19HummingbirdPostgres0B13PersistDriverC3get3key2asxSgSS_xmtYaKSeRzSERzlF6ObjectL_xmfp"},{"text":".Type) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Object","kind":"typeIdentifier","preciseIdentifier":"s:19HummingbirdPostgres0B13PersistDriverC3get3key2asxSgSS_xmtYaKSeRzSERzlF6ObjectL_xmfp"},{"text":"?","kind":"text"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver/set(key:value:expires:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s7Codablea","text":"Codable","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"expires","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s8DurationV","text":"Duration","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"set(key:value:expires:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/set(key:value:expires:)","abstract":[{"type":"text","text":"Set value for key."}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:expires:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"role":"collection","title":"HummingbirdFluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"kind":"symbol","type":"topic"}}}