{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver"]]},"sections":[],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/PersistDriver-Implementations"},"metadata":{"role":"collectionGroup","modules":[{"name":"HummingbirdFluent"},{"name":"HummingbirdRedis"},{"name":"Hummingbird"},{"name":"HummingbirdPostgres"}],"title":"PersistDriver Implementations","roleHeading":"API Collection"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/create(key:value:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/set(key:value:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/shutdown()"],"generated":true,"title":"Instance Methods"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"title":"Persistent data","role":"collectionGroup","url":"\/documentation\/hummingbird\/persistentdata","type":"topic","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver/shutdown()":{"url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/shutdown()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/shutdown()","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdown"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[],"role":"symbol","title":"shutdown()"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","role":"collection","url":"\/documentation\/index","type":"topic","abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","role":"collection","url":"\/documentation\/hummingbirdredis","type":"topic","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver","title":"PostgresPersistDriver","url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PostgresPersistDriver","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Postgres driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"navigatorTitle":[{"text":"PostgresPersistDriver","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"title":"HummingbirdPostgres","role":"collection","url":"\/documentation\/hummingbirdpostgres","type":"topic","abstract":[{"type":"text","text":"Working with Postgres databases."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver/create(key:value:)":{"url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/create(key:value:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/create(key:value:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"},{"kind":"text","text":" & "},{"kind":"typeIdentifier","text":"Encodable","preciseIdentifier":"s:SE"},{"kind":"text","text":" & "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[],"role":"symbol","title":"create(key:value:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"title":"HummingbirdFluent","role":"collection","url":"\/documentation\/hummingbirdfluent","type":"topic","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres/PostgresPersistDriver/set(key:value:)":{"kind":"symbol","url":"\/documentation\/hummingbirdpostgres\/postgrespersistdriver\/set(key:value:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres\/PostgresPersistDriver\/set(key:value:)","abstract":[],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"},{"kind":"text","text":" & "},{"preciseIdentifier":"s:SE","kind":"typeIdentifier","text":"Encodable"},{"kind":"text","text":" & "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"title":"set(key:value:)"}}}