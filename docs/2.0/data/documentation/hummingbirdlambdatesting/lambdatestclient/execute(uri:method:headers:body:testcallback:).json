{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"uri"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier","text":"HTTPRequest"},{"kind":"text","text":"."},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier","text":"Method"},{"kind":"text","text":", "},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPFields","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"text":"?, ","kind":"text"},{"text":"testCallback","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Lambda","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV0B0xmfp","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP6OutputQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF6ReturnL_qd__mfp","text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF6ReturnL_qd__mfp","text":"Return","kind":"typeIdentifier"}],"externalID":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF","title":"execute(uri:method:headers:body:testCallback:)","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"HummingbirdLambdaTesting"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"text":"HTTPFields","preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","kind":"typeIdentifier"},{"text":" = [:], ","kind":"text"},{"kind":"externalParam","text":"body"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"testCallback"},{"text":": ","kind":"text"},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV0B0xmfp","text":"Lambda","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP6OutputQa","text":"Output","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Return","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF6ReturnL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Return","kind":"typeIdentifier","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF6ReturnL_qd__mfp"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Path of request"}]}],"name":"uri"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Request method"}]}],"name":"method"},{"name":"headers","content":[{"inlineContent":[{"text":"Request headers","type":"text"}],"type":"paragraph"}]},{"name":"body","content":[{"inlineContent":[{"text":"Request body","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Closure to call on response returned by test framework","type":"text"}]}],"name":"testCallback"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"Return value of test closure"}],"type":"paragraph"}]}],"abstract":[{"text":"Send request to lambda test framework and call `testCallback`` on the response returned","type":"text"}],"variants":[{"paths":["\/documentation\/hummingbirdlambdatesting\/lambdatestclient\/execute(uri:method:headers:body:testcallback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient\/execute(uri:method:headers:body:testCallback:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient"]]},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting/LambdaTestClient":{"title":"LambdaTestClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient","abstract":[{"type":"text","text":"Client used to send requests to lambda test framework"}],"navigatorTitle":[{"kind":"identifier","text":"LambdaTestClient"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaTestClient"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting/LambdaTestClient/execute(uri:method:headers:body:testCallback:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"text":">(","kind":"text"},{"text":"uri","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier","text":"HTTPRequest"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:9HTTPTypes10HTTPFieldsV","text":"HTTPFields","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"body","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"testCallback"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV0B0xmfp","text":"Lambda","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP6OutputQa","text":"Output"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Return","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF6ReturnL_qd__mfp"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Return","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV7execute3uri6method7headers4body12testCallbackqd__SS_9HTTPTypes11HTTPRequestV6MethodVAJ10HTTPFieldsV7NIOCore10ByteBufferVSgqd__6OutputQzYaKctYaKlF6ReturnL_qd__mfp"}],"url":"\/documentation\/hummingbirdlambdatesting\/lambdatestclient\/execute(uri:method:headers:body:testcallback:)","role":"symbol","title":"execute(uri:method:headers:body:testCallback:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting\/LambdaTestClient\/execute(uri:method:headers:body:testCallback:)","abstract":[{"type":"text","text":"Send request to lambda test framework and call `testCallback`` on the response returned"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambdaTesting":{"title":"HummingbirdLambdaTesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambdaTesting","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambdatesting","abstract":[],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Output":{"title":"Output","required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output","abstract":[{"type":"text","text":"Output of lambda"}],"kind":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Output"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","role":"symbol"}}}