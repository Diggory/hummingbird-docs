{"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"code":"AsyncSequence.cancelOnGracefulShutdown()","type":"codeVoice"},{"type":"text","text":"."}],"metadata":{"title":"cancelOnGracefulShutdown()","roleHeading":"Instance Method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelOnGracefulShutdown"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AsyncCancelOnGracefulShutdownSequence","preciseIdentifier":"s:16ServiceLifecycle37AsyncCancelOnGracefulShutdownSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"externalID":"s:Sci16ServiceLifecycles8SendableRzsAB7ElementRpzrlE24cancelOnGracefulShutdownAA011AsyncCancelfgH8SequenceVyxGyF::SYNTHESIZED::s:17HummingbirdWSCore22WebSocketInboundStreamC","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"symbolKind":"method","extendedModule":"_Concurrency","modules":[{"name":"HummingbirdWSCore","relatedModules":["_Concurrency"]}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketInboundStream","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketInboundStream\/AsyncSequence-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketInboundStream","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketInboundStream\/AsyncSequence-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketInboundStream\/cancelOnGracefulShutdown()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelOnGracefulShutdown"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle37AsyncCancelOnGracefulShutdownSequenceV","text":"AsyncCancelOnGracefulShutdownSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdwscore\/websocketinboundstream\/cancelongracefulshutdown()"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSCore/WebSocketInboundStream/AsyncSequence-Implementations":{"url":"\/documentation\/hummingbirdwscore\/websocketinboundstream\/asyncsequence-implementations","type":"topic","role":"collectionGroup","title":"AsyncSequence Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketInboundStream\/AsyncSequence-Implementations","abstract":[],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSClient":{"title":"HummingbirdWSClient","type":"topic","role":"collection","abstract":[{"type":"text","text":"Adds support for connecting to WebSocket."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSClient","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdwsclient"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSCore/WebSocketInboundStream":{"type":"topic","url":"\/documentation\/hummingbirdwscore\/websocketinboundstream","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketInboundStream"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketInboundStream","navigatorTitle":[{"kind":"identifier","text":"WebSocketInboundStream"}],"title":"WebSocketInboundStream","abstract":[{"text":"Inbound WebSocket data frame AsyncSequence","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"type":"topic","role":"collection","kind":"symbol","title":"HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWSCore/WebSocketInboundStream/cancelOnGracefulShutdown()":{"type":"topic","url":"\/documentation\/hummingbirdwscore\/websocketinboundstream\/cancelongracefulshutdown()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWSCore\/WebSocketInboundStream\/cancelOnGracefulShutdown()","kind":"symbol","abstract":[],"title":"cancelOnGracefulShutdown()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelOnGracefulShutdown"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle37AsyncCancelOnGracefulShutdownSequenceV","text":"AsyncCancelOnGracefulShutdownSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol"}}}