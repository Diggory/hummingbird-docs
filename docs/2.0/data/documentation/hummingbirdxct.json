{"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"Provides methods for easy setup of unit tests using XCTest framework.","type":"text"}],"type":"paragraph"},{"anchor":"Usage","text":"Usage","level":3,"type":"heading"},{"inlineContent":[{"text":"Setup your server and run requests to the routes you want to test.","type":"text"}],"type":"paragraph"},{"code":["let router = HBRouter()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = HBApplication(router: router)","try await app.test(.router) { client in","    try await client.XCTExecute(uri: \"test\", method: .GET) { response in","        XCTAssertEqual(response.status, .ok)","        let body = try XCTUnwrap(response.body)","        XCTAssertEqual(String(buffer: body), \"testing\")","    }","}"],"type":"codeListing","syntax":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)"],"title":"Test Setup"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"],"title":"Structures"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdxct"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"kind":"symbol","abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"metadata":{"role":"collection","externalID":"HummingbirdXCT","roleHeading":"Framework","title":"HummingbirdXCT","symbolKind":"module","modules":[{"name":"HummingbirdXCT"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"abstract":[{"type":"text","text":"Response structure returned by XCT testing framework"}],"role":"symbol","url":"\/documentation\/hummingbirdxct\/hbxctresponse","navigatorTitle":[{"text":"HBXCTResponse","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","title":"HBXCTResponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTResponse","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","role":"collection","type":"topic","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"kind":"symbol","title":"HummingbirdXCT","type":"topic","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"url":"\/documentation\/hummingbirdxct","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationProtocol/test(_:_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"XCTTestingSetup","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"}],"abstract":[{"text":"Test ","type":"text"},{"type":"codeVoice","code":"HBApplication"}],"url":"\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)","title":"test(_:_:)","type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol":{"abstract":[{"type":"text","text":"Protocol for client used by HummingbirdXCT"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol","navigatorTitle":[{"text":"HBXCTClientProtocol","kind":"identifier"}],"kind":"symbol","type":"topic","title":"HBXCTClientProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"type":"topic","abstract":[{"text":"Type of test framework","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"url":"\/documentation\/hummingbirdxct\/xcttestingsetup","navigatorTitle":[{"kind":"identifier","text":"XCTTestingSetup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","title":"XCTTestingSetup","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"type":"topic","abstract":[{"text":"Using the HummingbirdXCT framework to test your application","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","role":"article","title":"Testing","kind":"article","url":"\/documentation\/hummingbird\/testing"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClient","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Bare bones single connection HTTP client.","type":"text"}],"navigatorTitle":[{"text":"HBXCTClient","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdxct\/hbxctclient","title":"HBXCTClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTScheme":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"XCTScheme","kind":"identifier"}],"navigatorTitle":[{"text":"XCTScheme","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdxct\/xctscheme","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","kind":"symbol","abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}],"title":"XCTScheme"}}}