{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdxct"]}],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"Provides methods for easy setup of unit tests using XCTest framework.","type":"text"}],"type":"paragraph"},{"anchor":"Usage","level":3,"type":"heading","text":"Usage"},{"inlineContent":[{"type":"text","text":"Setup your server and run requests to the routes you want to test."}],"type":"paragraph"},{"syntax":"swift","code":["let router = HBRouter()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = HBApplication(router: router)","try await app.test(.router) { client in","    try await client.XCTExecute(uri: \"test\", method: .GET) { response in","        XCTAssertEqual(response.status, .ok)","        let body = try XCTUnwrap(response.body)","        XCTAssertEqual(String(buffer: body), \"testing\")","    }","}"],"type":"codeListing"}],"kind":"content"}],"hierarchy":{"paths":[[]]},"abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"symbolKind":"module","externalID":"HummingbirdXCT","role":"collection","title":"HummingbirdXCT","roleHeading":"Framework","modules":[{"name":"HummingbirdXCT"}]},"kind":"symbol","topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"]},{"title":"Test Setup","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"],"title":"Structures"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"url":"\/documentation\/hummingbirdxct","role":"collection","kind":"symbol","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","title":"HummingbirdXCT"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTScheme":{"navigatorTitle":[{"text":"XCTScheme","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","title":"XCTScheme","type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTScheme","kind":"identifier"}],"url":"\/documentation\/hummingbirdxct\/xctscheme","role":"symbol","abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","role":"collection","type":"topic","url":"\/documentation\/hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"role":"symbol","abstract":[{"text":"Response structure returned by XCT testing framework","type":"text"}],"url":"\/documentation\/hummingbirdxct\/hbxctresponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTResponse","kind":"identifier"}],"title":"HBXCTResponse","type":"topic","navigatorTitle":[{"text":"HBXCTResponse","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCTClientProtocol"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTClientProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol","url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol","title":"HBXCTClientProtocol","type":"topic","kind":"symbol","abstract":[{"text":"Protocol for client used by HummingbirdXCT","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"type":"topic","abstract":[{"text":"Using the HummingbirdXCT framework to test your application","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","kind":"article","role":"article","url":"\/documentation\/hummingbird\/testing","title":"Testing"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient":{"navigatorTitle":[{"text":"HBXCTClient","kind":"identifier"}],"url":"\/documentation\/hummingbirdxct\/hbxctclient","role":"symbol","title":"HBXCTClient","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClient","kind":"identifier"}],"type":"topic","abstract":[{"text":"Bare bones single connection HTTP client.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XCTTestingSetup"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","title":"XCTTestingSetup","type":"topic","kind":"symbol","abstract":[{"text":"Type of test framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationProtocol/test(_:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV","kind":"typeIdentifier","text":"XCTTestingSetup"},{"kind":"text","text":", ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP","kind":"typeIdentifier","text":"HBXCTClientProtocol"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)","url":"\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)","title":"test(_:_:)","type":"topic","kind":"symbol","abstract":[{"text":"Test ","type":"text"},{"code":"HBApplication","type":"codeVoice"}]}}}