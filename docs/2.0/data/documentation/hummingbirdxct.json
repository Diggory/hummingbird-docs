{"metadata":{"roleHeading":"Framework","externalID":"HummingbirdXCT","modules":[{"name":"HummingbirdXCT"}],"symbolKind":"module","title":"HummingbirdXCT","role":"collection"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdxct"]}],"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Provides methods for easy setup of unit tests using XCTest framework.","type":"text"}]},{"text":"Usage","type":"heading","anchor":"Usage","level":3},{"type":"paragraph","inlineContent":[{"text":"Setup your server and run requests to the routes you want to test.","type":"text"}]},{"code":["let router = HBRouter()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = HBApplication(router: router)","try await app.test(.router) { client in","    try await client.XCTExecute(uri: \"test\", method: .GET) { response in","        XCTAssertEqual(response.status, .ok)","        let body = try XCTUnwrap(response.body)","        XCTAssertEqual(String(buffer: body), \"testing\")","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"]},{"title":"Test Setup","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"url":"\/documentation\/hummingbirdxct","abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"role":"collection","kind":"symbol","title":"HummingbirdXCT","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient":{"url":"\/documentation\/hummingbirdxct\/hbxctclient","abstract":[{"type":"text","text":"Bare bones single connection HTTP client."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTClient"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCTClient"}],"title":"HBXCTClient","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationProtocol/test(_:_:)":{"role":"symbol","title":"test(_:_:)","abstract":[{"type":"text","text":"Test "},{"type":"codeVoice","code":"HBApplication"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"XCTTestingSetup","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV"},{"kind":"text","text":", ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"HBXCTClientProtocol","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"}],"kind":"symbol","url":"\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"url":"\/documentation\/hummingbirdxct\/xcttestingsetup","type":"topic","title":"XCTTestingSetup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"abstract":[{"text":"Type of test framework","type":"text"}],"navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol":{"role":"symbol","title":"HBXCTClientProtocol","abstract":[{"text":"Protocol for client used by HummingbirdXCT","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol","navigatorTitle":[{"text":"HBXCTClientProtocol","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTScheme":{"type":"topic","role":"symbol","title":"XCTScheme","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTScheme","kind":"identifier"}],"abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}],"navigatorTitle":[{"text":"XCTScheme","kind":"identifier"}],"url":"\/documentation\/hummingbirdxct\/xctscheme"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"role":"article","title":"Testing","abstract":[{"text":"Using the HummingbirdXCT framework to test your application","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","type":"topic","kind":"article","url":"\/documentation\/hummingbird\/testing"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"title":"HBXCTResponse","url":"\/documentation\/hummingbirdxct\/hbxctresponse","abstract":[{"text":"Response structure returned by XCT testing framework","type":"text"}],"navigatorTitle":[{"text":"HBXCTResponse","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTResponse","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol"}}}