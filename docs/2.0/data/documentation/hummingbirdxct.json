{"kind":"symbol","seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdxct"]}],"metadata":{"symbolKind":"module","title":"HummingbirdXCT","modules":[{"name":"HummingbirdXCT"}],"roleHeading":"Framework","role":"collection","externalID":"HummingbirdXCT"},"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)"],"title":"Test Setup"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"],"title":"Protocols"},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"]}],"abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides methods for easy setup of unit tests using XCTest framework."}]},{"type":"heading","level":3,"text":"Usage","anchor":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Setup your server and run requests to the routes you want to test."}]},{"type":"codeListing","syntax":"swift","code":["let router = HBRouter()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = HBApplication(router: router)","try await app.test(.router) { client in","    try await client.XCTExecute(uri: \"test\", method: .GET) { response in","        XCTAssertEqual(response.status, .ok)","        let body = try XCTUnwrap(response.body)","        XCTAssertEqual(String(buffer: body), \"testing\")","    }","}"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"abstract":[{"text":"Response structure returned by XCT testing framework","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBXCTResponse","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"HBXCTResponse","navigatorTitle":[{"text":"HBXCTResponse","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdxct\/hbxctresponse"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"role":"collection","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","type":"topic","title":"HummingbirdXCT","url":"\/documentation\/hummingbirdxct","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","abstract":[{"text":"Type of test framework","type":"text"}],"navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"type":"topic","title":"XCTTestingSetup","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol":{"kind":"symbol","title":"HBXCTClientProtocol","type":"topic","navigatorTitle":[{"text":"HBXCTClientProtocol","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol","abstract":[{"type":"text","text":"Protocol for client used by HummingbirdXCT"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationProtocol/test(_:_:)":{"type":"topic","abstract":[{"type":"text","text":"Test "},{"type":"codeVoice","code":"HBApplication"}],"title":"test(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV","kind":"typeIdentifier","text":"XCTTestingSetup"},{"kind":"text","text":", ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP","kind":"typeIdentifier","text":"HBXCTClientProtocol"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)","url":"\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","abstract":[{"text":"Bare bones single connection HTTP client.","type":"text"}],"navigatorTitle":[{"text":"HBXCTClient","kind":"identifier"}],"type":"topic","title":"HBXCTClient","url":"\/documentation\/hummingbirdxct\/hbxctclient","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClient","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTScheme":{"abstract":[{"type":"text","text":"HTTP Scheme to use with AsyncHTTPClient test framework"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","navigatorTitle":[{"kind":"identifier","text":"XCTScheme"}],"type":"topic","url":"\/documentation\/hummingbirdxct\/xctscheme","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTScheme"}],"title":"XCTScheme"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"kind":"article","title":"Testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","role":"article","abstract":[{"type":"text","text":"Using the HummingbirdXCT framework to test your application"}],"url":"\/documentation\/hummingbird\/testing","type":"topic"}}}