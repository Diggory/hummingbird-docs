{"sections":[],"metadata":{"title":"HummingbirdXCT","externalID":"HummingbirdXCT","symbolKind":"module","roleHeading":"Framework","modules":[{"name":"HummingbirdXCT"}],"role":"collection"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"variants":[{"paths":["\/documentation\/hummingbirdxct"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"Provides methods for easy setup of unit tests using XCTest framework."}],"type":"paragraph"},{"anchor":"Usage","type":"heading","text":"Usage","level":3},{"inlineContent":[{"type":"text","text":"Setup your server and run requests to the routes you want to test."}],"type":"paragraph"},{"type":"codeListing","code":["let router = HBRouter()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = HBApplication(router: router)","try await app.test(.router) { client in","    try await client.XCTExecute(uri: \"test\", method: .GET) { response in","        XCTAssertEqual(response.status, .ok)","        let body = try XCTUnwrap(response.body)","        XCTAssertEqual(String(buffer: body), \"testing\")","    }","}"],"syntax":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[[]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"]},{"title":"Test Setup","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","url":"\/documentation\/hummingbird\/testing","kind":"article","title":"Testing","role":"article","type":"topic","abstract":[{"type":"text","text":"Using the HummingbirdXCT framework to test your application"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient":{"url":"\/documentation\/hummingbirdxct\/hbxctclient","title":"HBXCTClient","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClient","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBXCTClient","kind":"identifier"}],"abstract":[{"text":"Bare bones single connection HTTP client.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationProtocol/test(_:_:)":{"url":"\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)","title":"test(_:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)","role":"symbol","abstract":[{"text":"Test ","type":"text"},{"code":"HBApplication","type":"codeVoice"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"XCTTestingSetup","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"role":"symbol","abstract":[{"type":"text","text":"Type of test framework"}],"url":"\/documentation\/hummingbirdxct\/xcttestingsetup","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"type":"topic","title":"XCTTestingSetup","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","navigatorTitle":[{"kind":"identifier","text":"XCTTestingSetup"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTScheme":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdxct\/xctscheme","navigatorTitle":[{"text":"XCTScheme","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTScheme","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","title":"XCTScheme","abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol":{"url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol","title":"HBXCTClientProtocol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTClientProtocol"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCTClientProtocol"}],"abstract":[{"text":"Protocol for client used by HummingbirdXCT","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"abstract":[{"type":"text","text":"Response structure returned by XCT testing framework"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTResponse"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdxct\/hbxctresponse","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","title":"HBXCTResponse","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCTResponse"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"url":"\/documentation\/hummingbirdxct","title":"HummingbirdXCT","type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"}}}