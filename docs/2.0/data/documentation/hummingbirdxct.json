{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)"],"title":"Test Setup"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"],"title":"Structures"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"},"sections":[],"abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdxct"]}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"Provides methods for easy setup of unit tests using XCTest framework.","type":"text"}],"type":"paragraph"},{"level":3,"text":"Usage","type":"heading","anchor":"Usage"},{"inlineContent":[{"type":"text","text":"Setup your server and run requests to the routes you want to test."}],"type":"paragraph"},{"syntax":"swift","code":["let router = HBRouter()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = HBApplication(router: router)","try await app.test(.router) { client in","    try await client.XCTExecute(uri: \"test\", method: .GET) { response in","        XCTAssertEqual(response.status, .ok)","        let body = try XCTUnwrap(response.body)","        XCTAssertEqual(String(buffer: body), \"testing\")","    }","}"],"type":"codeListing"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Framework","externalID":"HummingbirdXCT","symbolKind":"module","role":"collection","modules":[{"name":"HummingbirdXCT"}],"title":"HummingbirdXCT"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"url":"\/documentation\/hummingbirdxct\/xcttestingsetup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"abstract":[{"text":"Type of test framework","type":"text"}],"title":"XCTTestingSetup","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClientProtocol":{"url":"\/documentation\/hummingbirdxct\/hbxctclientprotocol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClientProtocol","abstract":[{"text":"Protocol for client used by HummingbirdXCT","type":"text"}],"navigatorTitle":[{"text":"HBXCTClientProtocol","kind":"identifier"}],"title":"HBXCTClientProtocol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTScheme":{"url":"\/documentation\/hummingbirdxct\/xctscheme","navigatorTitle":[{"text":"XCTScheme","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTScheme","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTScheme","abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}],"title":"XCTScheme","role":"symbol","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"role":"collection","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"url":"\/documentation\/hummingbirdxct","kind":"symbol","title":"HummingbirdXCT","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationProtocol/test(_:_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol\/test(_:_:)","title":"test(_:_:)","abstract":[{"text":"Test ","type":"text"},{"type":"codeVoice","code":"HBApplication"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbapplicationprotocol\/test(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"XCTTestingSetup","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupV"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT19HBXCTClientProtocolP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP0A3XCTE4testyqd__AD15XCTTestingSetupV_qd__AD011HBXCTClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"title":"Testing","url":"\/documentation\/hummingbird\/testing","type":"topic","abstract":[{"type":"text","text":"Using the HummingbirdXCT framework to test your application"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","kind":"article","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTClient":{"title":"HBXCTClient","url":"\/documentation\/hummingbirdxct\/hbxctclient","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTClient"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTClient","type":"topic","abstract":[{"type":"text","text":"Bare bones single connection HTTP client."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCTClient"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"title":"HBXCTResponse","url":"\/documentation\/hummingbirdxct\/hbxctresponse","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTResponse","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","type":"topic","abstract":[{"text":"Response structure returned by XCT testing framework","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HBXCTResponse","kind":"identifier"}]}}}