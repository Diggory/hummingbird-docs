{"abstract":[{"type":"text","text":"Compression support for WebSockets"}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"anchor":"Related-Documentation"}],"metadata":{"modules":[{"name":"WSCompression"}],"symbolKind":"module","externalID":"WSCompression","roleHeading":"Framework","role":"collection","title":"WSCompression","images":[{"type":"icon","identifier":"logo.png"}]},"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","topicSections":[{"anchor":"Compression-extension","title":"Compression extension","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)"]}],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"inlineContent":[{"type":"text","text":"This library provides an implementation of the WebSocket compression extension "},{"type":"codeVoice","code":"permessage-deflate"},{"type":"text","text":" as detailed in "},{"type":"reference","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","isActive":true},{"text":". You add the extension in the configuration for either your WebSocket upgrade or WebSocket client.","type":"text"}],"type":"paragraph"},{"code":["let app = Application(","    router: Router(),","    server: .http1WebSocketUpgrade(","        configuration: .init(extensions: [.perMessageDeflate(minFrameSizeToCompress: 16)])","    ) { _, _, _ in","        return .upgrade([:]) { inbound, _, _ in","            var iterator = inbound.messages(maxSize: .max).makeAsyncIterator()","            let firstMessage = try await iterator.next()","            XCTAssertEqual(firstMessage, .text(\"Hello, testing compressed data\"))","        }","    }",")"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/wscompression"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCompression","interfaceLanguage":"swift"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketExtensionFactory/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"perMessageDeflate","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clientMaxWindow"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"clientNoContextTakeover"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"serverMaxWindow","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"serverNoContextTakeover","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"compressionLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"memoryLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"maxDecompressedFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"minFrameSizeToCompress"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"text":"WebSocketExtensionFactory","preciseIdentifier":"s:6WSCore25WebSocketExtensionFactoryV","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","title":"perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","role":"symbol","abstract":[{"type":"text","text":"permessage-deflate websocket extension"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","kind":"symbol","url":"\/documentation\/wsclient","title":"WSClient","type":"topic","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}]},"https://datatracker.ietf.org/doc/html/rfc7692.html":{"type":"link","titleInlineContent":[{"type":"text","text":"RFC 7692"}],"title":"RFC 7692","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketExtensionFactory/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"perMessageDeflate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxWindow"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"text":"noContextTakeover","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"maxDecompressedFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"minFrameSizeToCompress"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6WSCore25WebSocketExtensionFactoryV","text":"WebSocketExtensionFactory"}],"type":"topic","abstract":[{"type":"text","text":"permessage-deflate websocket extension"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)","url":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","title":"perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)"},"logo.png":{"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"role":"collection","title":"HummingbirdWebSocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"url":"\/documentation\/hummingbirdwebsocket","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/WSCompression":{"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCompression","abstract":[{"type":"text","text":"Compression support for WebSockets"}],"kind":"symbol","type":"topic","url":"\/documentation\/wscompression","title":"WSCompression"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}