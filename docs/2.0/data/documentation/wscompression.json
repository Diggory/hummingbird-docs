{"metadata":{"images":[{"identifier":"logo.png","type":"icon"}],"title":"WSCompression","externalID":"WSCompression","roleHeading":"Framework","role":"collection","symbolKind":"module","modules":[{"name":"WSCompression"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"topicSections":[{"title":"Compression extension","anchor":"Compression-extension","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCompression","interfaceLanguage":"swift"},"hierarchy":{"paths":[[]]},"abstract":[{"text":"Compression support for WebSockets","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"This library provides an implementation of the WebSocket compression extension ","type":"text"},{"type":"codeVoice","code":"permessage-deflate"},{"type":"text","text":" as detailed in "},{"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","type":"reference","isActive":true},{"text":". You add the extension in the configuration for either your WebSocket upgrade or WebSocket client.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let app = Application(","    router: Router(),","    server: .http1WebSocketUpgrade(","        configuration: .init(extensions: [.perMessageDeflate(minFrameSizeToCompress: 16)])","    ) { _, _, _ in","        return .upgrade([:]) { inbound, _, _ in","            var iterator = inbound.messages(maxSize: .max).makeAsyncIterator()","            let firstMessage = try await iterator.next()","            XCTAssertEqual(firstMessage, .text(\"Hello, testing compressed data\"))","        }","    }",")"],"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wscompression"]}],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","title":"WSClient","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketExtensionFactory/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"kind":"symbol","title":"perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"perMessageDeflate"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"clientMaxWindow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"text":"clientNoContextTakeover","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"serverMaxWindow"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"serverNoContextTakeover","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"compressionLevel"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"memoryLevel"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"text":"maxDecompressedFrameSize","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"text":"minFrameSizeToCompress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"WebSocketExtensionFactory","kind":"typeIdentifier","preciseIdentifier":"s:6WSCore25WebSocketExtensionFactoryV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","type":"topic","abstract":[{"text":"permessage-deflate websocket extension","type":"text"}],"role":"symbol","url":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)"},"doc://com.opticalaberration.hummingbird/documentation/WSCompression":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCompression","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Compression support for WebSockets"}],"url":"\/documentation\/wscompression","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"title":"WSCompression"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"type":"topic","role":"collection","kind":"symbol","title":"HummingbirdWebSocket","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"},"https://datatracker.ietf.org/doc/html/rfc7692.html":{"titleInlineContent":[{"type":"text","text":"RFC 7692"}],"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","title":"RFC 7692","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketExtensionFactory/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"kind":"symbol","title":"perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"perMessageDeflate"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"maxWindow"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"noContextTakeover"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxDecompressedFrameSize"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"minFrameSizeToCompress"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:6WSCore25WebSocketExtensionFactoryV","kind":"typeIdentifier","text":"WebSocketExtensionFactory"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)","type":"topic","abstract":[{"type":"text","text":"permessage-deflate websocket extension"}],"role":"symbol","url":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic","role":"collection","kind":"symbol","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}