{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCompression","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[[]]},"metadata":{"title":"WSCompression","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection","modules":[{"name":"WSCompression"}],"externalID":"WSCompression","roleHeading":"Framework","symbolKind":"module"},"abstract":[{"type":"text","text":"Compression support for WebSockets"}],"topicSections":[{"title":"Compression extension","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)"],"anchor":"Compression-extension"}],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This library provides an implementation of the WebSocket compression extension ","type":"text"},{"code":"permessage-deflate","type":"codeVoice"},{"text":" as detailed in ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html"},{"type":"text","text":". You add the extension in the configuration for either your WebSocket upgrade or WebSocket client."}]},{"type":"codeListing","code":["let app = Application(","    router: Router(),","    server: .http1WebSocketUpgrade(","        configuration: .init(extensions: [.perMessageDeflate(minFrameSizeToCompress: 16)])","    ) { _, _, _ in","        return .upgrade([:]) { inbound, _, _ in","            var iterator = inbound.messages(maxSize: .max).makeAsyncIterator()","            let firstMessage = try await iterator.next()","            XCTAssertEqual(firstMessage, .text(\"Hello, testing compressed data\"))","        }","    }",")"],"syntax":"swift"}],"kind":"content"}],"sections":[],"variants":[{"paths":["\/documentation\/wscompression"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation","anchor":"Related-Documentation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","type":"topic","kind":"symbol","title":"WSClient","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"kind":"symbol","title":"HummingbirdWebSocket","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketExtensionFactory/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"url":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","title":"perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"perMessageDeflate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"clientMaxWindow"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":"?, ","kind":"text"},{"text":"clientNoContextTakeover","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"serverMaxWindow","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"serverNoContextTakeover","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"compressionLevel","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, "},{"text":"memoryLevel","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"text":"maxDecompressedFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"minFrameSizeToCompress"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"text":"WebSocketExtensionFactory","kind":"typeIdentifier","preciseIdentifier":"s:6WSCore25WebSocketExtensionFactoryV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","abstract":[{"type":"text","text":"permessage-deflate websocket extension"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","title":"Hummingbird","type":"topic","role":"collection"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/WSCompression":{"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCompression","abstract":[{"type":"text","text":"Compression support for WebSockets"}],"title":"WSCompression","kind":"symbol","url":"\/documentation\/wscompression","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketExtensionFactory/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"title":"perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)","url":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"perMessageDeflate"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"maxWindow"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"text":"noContextTakeover","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"maxDecompressedFrameSize"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"minFrameSizeToCompress","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:6WSCore25WebSocketExtensionFactoryV","text":"WebSocketExtensionFactory","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)","abstract":[{"type":"text","text":"permessage-deflate websocket extension"}],"type":"topic","kind":"symbol"},"https://datatracker.ietf.org/doc/html/rfc7692.html":{"titleInlineContent":[{"text":"RFC 7692","type":"text"}],"title":"RFC 7692","url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","type":"link","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html"}}}