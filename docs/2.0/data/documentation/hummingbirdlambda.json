{"sections":[],"hierarchy":{"paths":[[]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda"],"title":"Lambda protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext"],"title":"Request context"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler"],"title":"Structures"}],"metadata":{"title":"HummingbirdLambda","symbolKind":"module","roleHeading":"Framework","modules":[{"name":"HummingbirdLambda"}],"externalID":"HummingbirdLambda","role":"collection"},"variants":[{"paths":["\/documentation\/hummingbirdlambda"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"anchor":"Usage","level":2,"type":"heading","text":"Usage"},{"inlineContent":[{"type":"text","text":"Create struct conforming to "},{"type":"codeVoice","code":"HBLambda"},{"type":"text","text":". Setup your router in the "},{"type":"codeVoice","code":"buildResponder"},{"type":"text","text":" function: add routes, middleware etc and then return its responder."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@main","struct MyHandler: HBLambda {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = HBBasicLambdaRequestContext<Event>","","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some HBResponder<Context> {","        let router = HBRouter(context: Context.self)","        router.get(\"hello\/{name}\") { request, context in","            let name = try context.parameters.require(\"name\")","            return \"Hello \\(name)\"","        }","        return router.buildResponder()","    }","}"]},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types define your input and output objects. If you are using an "},{"type":"codeVoice","code":"APIGateway"},{"type":"text","text":" REST interface to invoke your Lambda then set these to "},{"type":"codeVoice","code":"APIGateway.Request"},{"type":"text","text":" and "},{"type":"codeVoice","code":"APIGateway.Response"},{"type":"text","text":" respectively. If you are using an "},{"type":"codeVoice","code":"APIGateway"},{"type":"text","text":" HTML interface then set these to "},{"type":"codeVoice","code":"APIGateway.V2.Request"},{"type":"text","text":" and "},{"type":"codeVoice","code":"APIGateway.V2.Response"},{"type":"text","text":". The protocols "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda","isActive":true,"type":"reference"},{"type":"text","text":" set these up for you."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you are using any other "},{"type":"codeVoice","code":"In"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"Out"},{"type":"text","text":" types you will need to implement the "},{"type":"codeVoice","code":"request(context:application:from:)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"output(from:)"},{"type":"text","text":" methods yourself."}],"type":"paragraph"}]}],"abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaRequestContext":{"url":"\/documentation\/hummingbirdlambda\/hblambdarequestcontext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambdaRequestContext","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","navigatorTitle":[{"text":"HBLambdaRequestContext","kind":"identifier"}],"title":"HBLambdaRequestContext","type":"topic","abstract":[{"text":"A Request Context that contains the Event that triggered the Lambda","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGateway","type":"text"}],"kind":"symbol","role":"symbol","title":"HBAPIGatewayLambda","url":"\/documentation\/hummingbirdlambda\/hbapigatewaylambda","type":"topic","navigatorTitle":[{"text":"HBAPIGatewayLambda","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAPIGatewayLambda","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext":{"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicLambdaRequestContext","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","navigatorTitle":[{"text":"HBBasicLambdaRequestContext","kind":"identifier"}],"title":"HBBasicLambdaRequestContext","type":"topic","abstract":[{"text":"The default Lambda request context.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayV2Lambda":{"url":"\/documentation\/hummingbirdlambda\/hbapigatewayv2lambda","type":"topic","kind":"symbol","title":"HBAPIGatewayV2Lambda","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAPIGatewayV2Lambda"}],"navigatorTitle":[{"kind":"identifier","text":"HBAPIGatewayV2Lambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGatewayV2","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"role":"symbol","abstract":[{"type":"text","text":"Specialization of LambdaHandler which runs an HBLambda"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hblambdahandler","title":"HBLambdaHandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambdaHandler","kind":"identifier"}],"navigatorTitle":[{"text":"HBLambdaHandler","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","type":"topic","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","url":"\/documentation\/hummingbirdlambda\/hblambda","title":"HBLambda","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambda","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas. Define the "},{"type":"codeVoice","code":"In"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Out"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"In"},{"type":"text","text":" to "},{"type":"codeVoice","code":"HBRequest"},{"type":"text","text":" and "},{"type":"codeVoice","code":"HBResponse"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Out"}],"navigatorTitle":[{"text":"HBLambda","kind":"identifier"}]}}}