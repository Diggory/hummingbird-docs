{"variants":[{"paths":["\/documentation\/hummingbirdlambda"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"content":[{"level":2,"text":"Usage","type":"heading","anchor":"Usage"},{"inlineContent":[{"type":"text","text":"Create struct conforming to "},{"type":"codeVoice","code":"HBLambda"},{"type":"text","text":". Setup your router in the "},{"type":"codeVoice","code":"buildResponder"},{"text":" function: add routes, middleware etc and then return its responder.","type":"text"}],"type":"paragraph"},{"code":["@main","struct MyHandler: HBLambda {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = HBBasicLambdaRequestContext<Event>","","    init(context: LambdaInitializationContext) {}","    ","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some HBResponder<Context> {","        let router = HBRouter(context: Context.self)","        router.get(\"hello\/{name}\") { request, context in","            let name = try context.parameters.require(\"name\")","            return \"Hello \\(name)\"","        }","        return router.buildResponder()","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" types define your input and output objects. If you are using an "},{"code":"APIGateway","type":"codeVoice"},{"type":"text","text":" REST interface to invoke your Lambda then set these to "},{"code":"APIGateway.Request","type":"codeVoice"},{"type":"text","text":" and "},{"code":"APIGateway.Response","type":"codeVoice"},{"type":"text","text":" respectively. If you are using an "},{"code":"APIGateway","type":"codeVoice"},{"type":"text","text":" HTML interface then set these to "},{"code":"APIGateway.V2.Request","type":"codeVoice"},{"type":"text","text":" and "},{"code":"APIGateway.V2.Response","type":"codeVoice"},{"type":"text","text":". The protocols "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda","isActive":true},{"type":"text","text":" set these up for you."}],"type":"paragraph"},{"inlineContent":[{"text":"If you are using any other ","type":"text"},{"code":"In","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" types you will need to implement the ","type":"text"},{"code":"request(context:application:from:)","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"output(from:)","type":"codeVoice"},{"text":" methods yourself.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[[]]},"metadata":{"modules":[{"name":"HummingbirdLambda"}],"symbolKind":"module","title":"HummingbirdLambda","role":"collection","externalID":"HummingbirdLambda","roleHeading":"Framework"},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"topicSections":[{"title":"Lambda protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda"]},{"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"url":"\/documentation\/hummingbirdlambda\/hblambda","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas."}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambda"}],"title":"HBLambda","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"url":"\/documentation\/hummingbirdlambda","kind":"symbol","title":"HummingbirdLambda","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayV2Lambda":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"HBAPIGatewayV2Lambda","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda","title":"HBAPIGatewayV2Lambda","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGatewayV2","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAPIGatewayV2Lambda","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapigatewayv2lambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext":{"role":"symbol","abstract":[{"text":"The default Lambda request context.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBBasicLambdaRequestContext","kind":"identifier"}],"type":"topic","title":"HBBasicLambdaRequestContext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","navigatorTitle":[{"text":"HBBasicLambdaRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaRequestContext":{"title":"HBLambdaRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambdaRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"HBLambdaRequestContext","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hblambdarequestcontext","type":"topic","role":"symbol","abstract":[{"text":"A Request Context that is initialized with the Event that triggered the Lambda","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayLambda":{"url":"\/documentation\/hummingbirdlambda\/hbapigatewaylambda","title":"HBAPIGatewayLambda","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAPIGatewayLambda"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAPIGatewayLambda"}],"abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas that use APIGateway"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}