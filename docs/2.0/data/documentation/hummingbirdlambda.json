{"metadata":{"symbolKind":"module","modules":[{"name":"HummingbirdLambda"}],"title":"HummingbirdLambda","externalID":"HummingbirdLambda","roleHeading":"Framework","role":"collection"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"hierarchy":{"paths":[[]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda"],"title":"Lambda protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext"],"title":"Request context"}],"sections":[],"abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda"}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Usage","text":"Usage"},{"inlineContent":[{"type":"text","text":"Create struct conforming to "},{"type":"codeVoice","code":"HBLambda"},{"type":"text","text":". Setup your router in the "},{"type":"codeVoice","code":"buildResponder"},{"type":"text","text":" function: add routes, middleware etc and then return its responder."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@main","struct MyHandler: HBLambda {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = HBBasicLambdaRequestContext<Event>","","    init(context: LambdaInitializationContext) {}","    ","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some HBResponder<Context> {","        let router = HBRouter(context: Context.self)","        router.get(\"hello\/{name}\") { request, context in","            let name = try context.parameters.require(\"name\")","            return \"Hello \\(name)\"","        }","        return router.buildResponder()","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Event"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" types define your input and output objects. If you are using an ","type":"text"},{"type":"codeVoice","code":"APIGateway"},{"text":" REST interface to invoke your Lambda then set these to ","type":"text"},{"type":"codeVoice","code":"APIGateway.Request"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"APIGateway.Response"},{"text":" respectively. If you are using an ","type":"text"},{"type":"codeVoice","code":"APIGateway"},{"text":" HTML interface then set these to ","type":"text"},{"type":"codeVoice","code":"APIGateway.V2.Request"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"APIGateway.V2.Response"},{"text":". The protocols ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda","isActive":true,"type":"reference"},{"text":" set these up for you.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If you are using any other ","type":"text"},{"type":"codeVoice","code":"In"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"Out"},{"text":" types you will need to implement the ","type":"text"},{"type":"codeVoice","code":"request(context:application:from:)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"output(from:)"},{"text":" methods yourself.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayLambda":{"title":"HBAPIGatewayLambda","navigatorTitle":[{"text":"HBAPIGatewayLambda","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapigatewaylambda","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAPIGatewayLambda","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGateway","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda"}],"kind":"symbol","type":"topic","title":"HummingbirdLambda","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas."}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambda","kind":"identifier"}],"title":"HBLambda","navigatorTitle":[{"text":"HBLambda","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","url":"\/documentation\/hummingbirdlambda\/hblambda"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicLambdaRequestContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","title":"HBBasicLambdaRequestContext","kind":"symbol","navigatorTitle":[{"text":"HBBasicLambdaRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext","abstract":[{"type":"text","text":"The default Lambda request context."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayV2Lambda":{"title":"HBAPIGatewayV2Lambda","navigatorTitle":[{"text":"HBAPIGatewayV2Lambda","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapigatewayv2lambda","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAPIGatewayV2Lambda","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGatewayV2","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaRequestContext":{"abstract":[{"type":"text","text":"A Request Context that is initialized with the Event that triggered the Lambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBLambdaRequestContext"}],"title":"HBLambdaRequestContext","type":"topic","url":"\/documentation\/hummingbirdlambda\/hblambdarequestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBLambdaRequestContext"}],"role":"symbol"}}}