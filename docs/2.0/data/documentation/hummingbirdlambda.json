{"primaryContentSections":[{"content":[{"text":"Usage","level":2,"anchor":"Usage","type":"heading"},{"inlineContent":[{"type":"text","text":"Create struct conforming to "},{"type":"codeVoice","code":"HBLambda"},{"type":"text","text":". Setup your router in the "},{"type":"codeVoice","code":"buildResponder"},{"type":"text","text":" function: add routes, middleware etc and then return its responder."}],"type":"paragraph"},{"syntax":"swift","code":["@main","struct MyHandler: HBLambda {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = HBBasicLambdaRequestContext<Event>","","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some HBResponder<Context> {","        let router = HBRouter(context: Context.self)","        router.get(\"hello\/{name}\") { request, context in","            let name = try context.parameters.require(\"name\")","            return \"Hello \\(name)\"","        }","        return router.buildResponder()","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Event"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" types define your input and output objects. If you are using an ","type":"text"},{"type":"codeVoice","code":"APIGateway"},{"text":" REST interface to invoke your Lambda then set these to ","type":"text"},{"type":"codeVoice","code":"APIGateway.Request"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"APIGateway.Response"},{"text":" respectively. If you are using an ","type":"text"},{"type":"codeVoice","code":"APIGateway"},{"text":" HTML interface then set these to ","type":"text"},{"type":"codeVoice","code":"APIGateway.V2.Request"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"APIGateway.V2.Response"},{"text":". The protocols ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","isActive":true},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda","isActive":true},{"text":" set these up for you.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you are using any other "},{"code":"In","type":"codeVoice"},{"type":"text","text":"\/"},{"code":"Out","type":"codeVoice"},{"type":"text","text":" types you will need to implement the "},{"code":"request(context:application:from:)","type":"codeVoice"},{"type":"text","text":" and "},{"code":"output(from:)","type":"codeVoice"},{"type":"text","text":" methods yourself."}],"type":"paragraph"}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"metadata":{"symbolKind":"module","externalID":"HummingbirdLambda","roleHeading":"Framework","role":"collection","title":"HummingbirdLambda","modules":[{"name":"HummingbirdLambda"}]},"hierarchy":{"paths":[[]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"variants":[{"paths":["\/documentation\/hummingbirdlambda"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda"],"title":"Lambda protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext"],"title":"Request context"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler"],"title":"Structures"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext":{"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBBasicLambdaRequestContext"}],"type":"topic","title":"HBBasicLambdaRequestContext","abstract":[{"type":"text","text":"The default Lambda request context."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicLambdaRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"abstract":[{"text":"Protocol for Hummingbird Lambdas. Define the ","type":"text"},{"code":"In","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" types, how you convert from ","type":"text"},{"code":"In","type":"codeVoice"},{"type":"text","text":" to "},{"code":"HBRequest","type":"codeVoice"},{"type":"text","text":" and "},{"code":"HBResponse","type":"codeVoice"},{"type":"text","text":" to "},{"code":"Out","type":"codeVoice"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","title":"HBLambda","url":"\/documentation\/hummingbirdlambda\/hblambda","navigatorTitle":[{"kind":"identifier","text":"HBLambda"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambda"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambdaRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hblambdarequestcontext","kind":"symbol","type":"topic","title":"HBLambdaRequestContext","abstract":[{"text":"A Request Context that contains the Event that triggered the Lambda","type":"text"}],"navigatorTitle":[{"text":"HBLambdaRequestContext","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"url":"\/documentation\/hummingbirdlambda\/hblambdahandler","kind":"symbol","title":"HBLambdaHandler","navigatorTitle":[{"text":"HBLambdaHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","type":"topic","role":"symbol","abstract":[{"text":"Specialization of LambdaHandler which runs an HBLambda","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambdaHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayV2Lambda":{"abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas that use APIGatewayV2"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda","title":"HBAPIGatewayV2Lambda","url":"\/documentation\/hummingbirdlambda\/hbapigatewayv2lambda","kind":"symbol","navigatorTitle":[{"text":"HBAPIGatewayV2Lambda","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAPIGatewayV2Lambda","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda"}],"role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","title":"HBAPIGatewayLambda","url":"\/documentation\/hummingbirdlambda\/hbapigatewaylambda","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGateway","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBAPIGatewayLambda","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBAPIGatewayLambda","kind":"identifier"}]}}}