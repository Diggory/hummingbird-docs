{"topicSections":[{"title":"Lambda protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda"]},{"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler"]},{"title":"Functions","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/loggerWithRequestId(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda"]}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"text":"Usage","type":"heading","level":2,"anchor":"Usage"},{"type":"paragraph","inlineContent":[{"text":"Create struct conforming to ","type":"text"},{"code":"HBLambda","type":"codeVoice"},{"text":". Setup your router in the ","type":"text"},{"code":"buildResponder","type":"codeVoice"},{"text":" function: add routes, middleware etc and then return its responder.","type":"text"}]},{"syntax":"swift","code":["@main","struct MyHandler: HBLambda {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = HBBasicLambdaRequestContext<Event>","","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some HBResponder<Context> {","        let router = HBRouter(context: Context.self)","        router.get(\"hello\/{name}\") { request, context in","            let name = try context.parameters.require(\"name\")","            return \"Hello \\(name)\"","        }","        return router.buildResponder()","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" types define your input and output objects. If you are using an "},{"code":"APIGateway","type":"codeVoice"},{"type":"text","text":" REST interface to invoke your Lambda then set these to "},{"code":"APIGateway.Request","type":"codeVoice"},{"type":"text","text":" and "},{"code":"APIGateway.Response","type":"codeVoice"},{"type":"text","text":" respectively. If you are using an "},{"code":"APIGateway","type":"codeVoice"},{"type":"text","text":" HTML interface then set these to "},{"code":"APIGateway.V2.Request","type":"codeVoice"},{"type":"text","text":" and "},{"code":"APIGateway.V2.Response","type":"codeVoice"},{"type":"text","text":". The protocols "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda","isActive":true},{"type":"text","text":" set these up for you."}]},{"type":"paragraph","inlineContent":[{"text":"If you are using any other ","type":"text"},{"code":"In","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" types you will need to implement the ","type":"text"},{"code":"request(context:application:from:)","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"output(from:)","type":"codeVoice"},{"text":" methods yourself.","type":"text"}]}]}],"abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda"}],"metadata":{"roleHeading":"Framework","role":"collection","symbolKind":"module","externalID":"HummingbirdLambda","modules":[{"name":"HummingbirdLambda"}],"title":"HummingbirdLambda"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","abstract":[{"text":"The default Lambda request context.","type":"text"}],"role":"symbol","title":"HBBasicLambdaRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBasicLambdaRequestContext"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicLambdaRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayV2Lambda":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBAPIGatewayV2Lambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda","title":"HBAPIGatewayV2Lambda","url":"\/documentation\/hummingbirdlambda\/hbapigatewayv2lambda","type":"topic","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas that use APIGatewayV2"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAPIGatewayV2Lambda"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/loggerWithRequestId(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/loggerWithRequestId(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loggerWithRequestId"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"}],"abstract":[],"title":"loggerWithRequestId(_:)","url":"\/documentation\/hummingbirdlambda\/loggerwithrequestid(_:)","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaRequestContext":{"abstract":[{"type":"text","text":"A Request Context that contains the Event that triggered the Lambda"}],"role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"HBLambdaRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hblambdarequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","title":"HBLambdaRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBLambdaRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","title":"HBLambda","url":"\/documentation\/hummingbirdlambda\/hblambda","type":"topic","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas. Define the "},{"type":"codeVoice","code":"In"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Out"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"In"},{"type":"text","text":" to "},{"type":"codeVoice","code":"HBRequest"},{"type":"text","text":" and "},{"type":"codeVoice","code":"HBResponse"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Out"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambda"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapigatewaylambda","navigatorTitle":[{"text":"HBAPIGatewayLambda","kind":"identifier"}],"kind":"symbol","title":"HBAPIGatewayLambda","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas that use APIGateway"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAPIGatewayLambda","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"navigatorTitle":[{"kind":"identifier","text":"HBLambdaHandler"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","url":"\/documentation\/hummingbirdlambda\/hblambdahandler","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambdaHandler"}],"title":"HBLambdaHandler","abstract":[{"text":"Specialization of LambdaHandler which runs an HBLambda","type":"text"}]}}}