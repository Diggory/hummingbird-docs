{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/maxUploadSize"},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/maxuploadsize"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"symbolKind":"property","extendedModule":"Hummingbird","role":"symbol","externalID":"s:11Hummingbird14RequestContextPAAE13maxUploadSizeSivp::SYNTHESIZED::s:17HummingbirdLambda05BasicB14RequestContextV","roleHeading":"Instance Property","modules":[{"name":"HummingbirdLambda","relatedModules":["Hummingbird"]}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"maxUploadSize"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/RequestContext-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RequestContext.maxUploadSize","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"type":"topic","role":"symbol","title":"BasicLambdaRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicLambdaRequestContext"}],"abstract":[{"type":"text","text":"The default Lambda request context."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/maxUploadSize":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/maxuploadsize","abstract":[],"title":"maxUploadSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"maxUploadSize","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/maxUploadSize"},"logo.png":{"alt":null,"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/RequestContext-Implementations":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/requestcontext-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/RequestContext-Implementations","title":"RequestContext Implementations","abstract":[]}}}