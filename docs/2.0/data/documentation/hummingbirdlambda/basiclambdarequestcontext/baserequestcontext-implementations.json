{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/BaseRequestContext-Implementations"},"sections":[],"topicSections":[{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/allocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/maxUploadSize","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/requestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/responseEncoder"]}],"metadata":{"role":"collectionGroup","modules":[{"name":"HummingbirdLambda"}],"title":"BaseRequestContext Implementations","roleHeading":"API Collection"},"kind":"article","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/allocator":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/allocator","title":"allocator","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/allocator","type":"topic","abstract":[],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allocator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/logger":{"title":"logger","role":"symbol","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/logger","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/logger","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/endpointPath":{"title":"endpointPath","abstract":[],"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/endpointpath","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpointPath","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/endpointPath"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"abstract":[{"text":"The default Lambda request context.","type":"text"}],"kind":"symbol","title":"BasicLambdaRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicLambdaRequestContext"}],"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"title":"HummingbirdLambda","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","role":"collection","url":"\/documentation\/hummingbirdlambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/id":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/id","title":"id","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/id","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/parameters":{"url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/parameters","role":"symbol","title":"parameters","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"parameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parameters","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10Parametersa"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/parameters","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/responseEncoder":{"title":"responseEncoder","abstract":[],"conformance":{"constraints":[{"code":"Encoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONEncoder","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/responseEncoder","role":"symbol","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/responseencoder","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/requestDecoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/requestDecoder","conformance":{"constraints":[{"code":"Decoder","type":"codeVoice"},{"type":"text","text":" is "},{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"}],"title":"requestDecoder","abstract":[],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/requestdecoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext/maxUploadSize":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext\/maxUploadSize","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"abstract":[],"kind":"symbol","role":"symbol","title":"maxUploadSize","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext\/maxuploadsize"}}}