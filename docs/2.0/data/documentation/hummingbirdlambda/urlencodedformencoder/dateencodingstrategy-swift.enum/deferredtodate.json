{"metadata":{"roleHeading":"Case","title":"URLEncodedFormEncoder.DateEncodingStrategy.deferredToDate","symbolKind":"case","externalID":"s:11Hummingbird21URLEncodedFormEncoderV20DateEncodingStrategyO010deferredToE0yA2EmF","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deferredToDate"}],"modules":[{"name":"Hummingbird"}],"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deferredToDate","kind":"identifier"}],"platforms":["Linux"]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum\/deferredToDate","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/deferredtodate"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Defer to "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" for encoding. This is the default strategy."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/URLEncodedFormEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/URLEncodedFormEncoder/DateEncodingStrategy-swift.enum":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateEncodingStrategy"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum","title":"URLEncodedFormEncoder.DateEncodingStrategy","navigatorTitle":[{"kind":"identifier","text":"DateEncodingStrategy"}],"url":"\/documentation\/hummingbirdlambda\/urlencodedformencoder\/dateencodingstrategy-swift.enum","kind":"symbol","abstract":[{"text":"The strategy to use for encoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" values.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/URLEncodedFormEncoder":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"URLEncodedFormEncoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/URLEncodedFormEncoder","title":"URLEncodedFormEncoder","url":"\/documentation\/hummingbirdlambda\/urlencodedformencoder","type":"topic","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLEncodedFormEncoder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/URLEncodedFormEncoder/DateEncodingStrategy-swift.enum/deferredToDate":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deferredToDate"}],"type":"topic","abstract":[{"type":"text","text":"Defer to "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" for encoding. This is the default strategy."}],"role":"symbol","title":"URLEncodedFormEncoder.DateEncodingStrategy.deferredToDate","url":"\/documentation\/hummingbirdlambda\/urlencodedformencoder\/dateencodingstrategy-swift.enum\/deferredtodate","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/URLEncodedFormEncoder\/DateEncodingStrategy-swift.enum\/deferredToDate"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"}}}