{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Context","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Responder"],"anchor":"Associated-Types","title":"Associated Types","generated":true},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(context:)"],"anchor":"Initializers","title":"Initializers"},{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/output(from:)-41rdr","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/request(context:from:)-2wtco","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/shutdown()-1wnul"]},{"title":"Type Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/main()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)"],"anchor":"Type-Methods","generated":true}],"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"},{"type":"inheritedBy","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"],"kind":"relationships"}],"seeAlsoSections":[{"generated":true,"anchor":"Lambda-protocols","title":"Lambda protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/lambdafunction"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Protocol","role":"symbol","title":"LambdaFunction","modules":[{"name":"HummingbirdLambda"}],"navigatorTitle":[{"kind":"identifier","text":"LambdaFunction"}],"externalID":"s:17HummingbirdLambda0B8FunctionP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"symbolKind":"protocol"},"kind":"symbol","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LambdaFunction"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Defines the "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" and "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" types, how you convert from "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"type":"text","text":" to "},{"code":"Output","type":"codeVoice"},{"type":"text","text":". Create a type conforming to this protocol and tag it"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"codeVoice","code":"@main"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["struct MyLambda: LambdaFunction {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = MyLambdaRequestContext \/\/ must conform to `LambdaRequestContext`","","    init(context: LambdaInitializationContext) {}","","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some Responder<Context> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in","            \"Hello\"","        }","        return router.buildResponder()","    }","}"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","type":"reference","isActive":true},{"type":"text","text":" and "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","isActive":true,"type":"reference"},{"text":" for specializations of this protocol.","type":"text"}]}],"name":"See Also","type":"aside"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/request(context:from:)-2wtco":{"kind":"symbol","role":"symbol","title":"request(context:from:)","type":"topic","required":true,"defaultImplementations":2,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/request(context:from:)-2wtco","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"request"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"LambdaContext","kind":"typeIdentifier","preciseIdentifier":"s:20AWSLambdaRuntimeCore13LambdaContextV"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa","kind":"typeIdentifier","text":"Event"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Convert from "},{"type":"codeVoice","code":"In"},{"text":" type to ","type":"text"},{"code":"Request","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/request(context:from:)-2wtco"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"title":"Response","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"navigatorTitle":[{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/main()":{"title":"main()","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/main()","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/main()","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"main"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","abstract":[{"type":"text","text":"Initializes and runs the Lambda function."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collection","kind":"symbol","title":"HummingbirdLambda","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"title":"Request","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/shutdown()-1wnul":{"type":"topic","role":"symbol","defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/shutdown()-1wnul","title":"shutdown()","abstract":[{"type":"text","text":"Called when Lambda is terminating. This is where you can cleanup any resources"}],"kind":"symbol","required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/shutdown()-1wnul","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shutdown"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"title":"APIGatewayLambdaFunction","role":"symbol","navigatorTitle":[{"text":"APIGatewayLambdaFunction","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","type":"topic","url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"APIGatewayLambdaFunction","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGateway","type":"text"}]},"logo.png":{"identifier":"logo.png","alt":null,"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","role":"symbol","title":"LambdaFunction","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"LambdaFunction","kind":"identifier"}],"navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/test(logLevel:_:)":{"title":"test(logLevel:_:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Event"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"LambdaTestableEvent"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)","type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/test(loglevel:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"logLevel","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Level","preciseIdentifier":"s:7Logging6LoggerV5LevelO"},{"text":", (","kind":"text"},{"text":"LambdaTestClient","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp"}],"kind":"symbol","abstract":[{"type":"text","text":"Test "},{"code":"LambdaFunction","type":"codeVoice"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Context":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Context","title":"Context","abstract":[{"type":"text","text":"Request context"}],"kind":"symbol","required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/context","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Context"},{"text":" : ","kind":"text"},{"text":"InitializableFromSource","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP"},{"text":" = ","kind":"text"},{"text":"BasicLambdaRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda05BasicB14RequestContextV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa","text":"Event"},{"kind":"text","text":">"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Event":{"kind":"symbol","role":"symbol","title":"Event","type":"topic","required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/event","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Event"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"}],"abstract":[{"text":"Event that triggers the lambda","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/output(from:)-41rdr":{"kind":"symbol","role":"symbol","title":"output(from:)","type":"topic","required":true,"defaultImplementations":2,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output(from:)-41rdr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"output"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP6OutputQa","kind":"typeIdentifier","text":"Output"}],"abstract":[{"type":"text","text":"Convert from "},{"code":"Response","type":"codeVoice"},{"type":"text","text":" to "},{"code":"Out","type":"codeVoice"},{"text":" type","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/output(from:)-41rdr"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Output":{"title":"Output","required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output","abstract":[{"type":"text","text":"Output of lambda"}],"kind":"symbol","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Output"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:SE","text":"Encodable","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","role":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/buildResponder()":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/buildResponder()","title":"buildResponder()","abstract":[],"kind":"symbol","required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/buildresponder()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Responder","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP9ResponderQa","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(context:)":{"title":"init(context:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(context:)","required":true,"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(context:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:20AWSLambdaRuntimeCore27LambdaInitializationContextV","text":"LambdaInitializationContext"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"kind":"symbol","abstract":[{"text":"Initialize application.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"navigatorTitle":[{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","title":"APIGatewayV2LambdaFunction","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas that use APIGatewayV2"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Responder":{"title":"Responder","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Responder","kind":"symbol","type":"topic","abstract":[{"text":"HTTP Responder","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Responder"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HTTPResponderP","text":"HTTPResponder","kind":"typeIdentifier"}],"role":"symbol"}}}