{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"],"title":"Lambda protocols"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Context","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Responder"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(context:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/output(from:)-41rdr","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/request(context:from:)-2wtco","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/shutdown()-1wnul"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/main()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)"],"title":"Type Methods"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Defines the "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" to "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"type":"text","text":" to "},{"type":"codeVoice","code":"Output"},{"type":"text","text":". Create a type conforming to this protocol and tag it"},{"type":"text","text":" "},{"type":"text","text":"with "},{"type":"codeVoice","code":"@main"},{"type":"text","text":"."}]},{"type":"codeListing","code":["struct MyLambda: LambdaFunction {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = MyLambdaRequestContext \/\/ must conform to `LambdaRequestContext`","","    init(context: LambdaInitializationContext) {}","","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some Responder<Context> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in","            \"Hello\"","        }","        return router.buildResponder()","    }","}"],"syntax":"swift"},{"type":"aside","name":"See Also","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","isActive":true},{"text":" and ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","isActive":true},{"text":" for specializations of this protocol.","type":"text"}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/lambdafunction"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"HummingbirdLambda"}],"navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"externalID":"s:17HummingbirdLambda0B8FunctionP","role":"symbol","title":"LambdaFunction","roleHeading":"Protocol","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"abstract":[{"text":"Protocol for Hummingbird Lambdas.","type":"text"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"title":"HummingbirdLambda","role":"collection","type":"topic","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"url":"\/documentation\/hummingbirdlambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/output(from:)-41rdr":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output(from:)-41rdr","title":"output(from:)","type":"topic","role":"symbol","required":true,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP6OutputQa","text":"Output","kind":"typeIdentifier"}],"defaultImplementations":2,"abstract":[{"type":"text","text":"Convert from "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Out"},{"type":"text","text":" type"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/output(from:)-41rdr"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/main()":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Initializes and runs the Lambda function."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/main()","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/main()","role":"symbol","kind":"symbol","title":"main()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Output":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","required":true,"kind":"symbol","title":"Output","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output","abstract":[{"text":"Output of lambda","type":"text"}]},"logo.png":{"type":"image","variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Event":{"title":"Event","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Event that triggers the lambda"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Event","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Se","kind":"typeIdentifier","text":"Decodable"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/event","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","required":true,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(context:)":{"required":true,"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:20AWSLambdaRuntimeCore27LambdaInitializationContextV","text":"LambdaInitializationContext","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Initialize application."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(context:)","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(context:)","role":"symbol","kind":"symbol","title":"init(context:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/test(logLevel:_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)","title":"test(logLevel:_:)","abstract":[{"type":"text","text":"Test "},{"code":"LambdaFunction","type":"codeVoice"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/test(loglevel:_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"logLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Level","preciseIdentifier":"s:7Logging6LoggerV5LevelO","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"LambdaTestClient","kind":"typeIdentifier","preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp"}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Event"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"LambdaTestableEvent"},{"text":".","type":"text"}]}},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/buildResponder()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Responder","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP9ResponderQa"}],"role":"symbol","type":"topic","abstract":[],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/buildResponder()","title":"buildResponder()","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/buildresponder()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"text":"Request","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","title":"Request","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","navigatorTitle":[{"kind":"identifier","text":"APIGatewayV2LambdaFunction"}],"kind":"symbol","title":"APIGatewayV2LambdaFunction","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIGatewayV2LambdaFunction"}],"url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGatewayV2","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Context":{"required":true,"type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP","text":"InitializableFromSource","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda05BasicB14RequestContextV","text":"BasicLambdaRequestContext","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa","text":"Event","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Request context"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Context","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/context","role":"symbol","kind":"symbol","title":"Context"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/request(context:from:)-2wtco":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"request","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LambdaContext","kind":"typeIdentifier","preciseIdentifier":"s:20AWSLambdaRuntimeCore13LambdaContextV"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Event","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"}],"role":"symbol","type":"topic","kind":"symbol","defaultImplementations":2,"title":"request(context:from:)","abstract":[{"type":"text","text":"Convert from "},{"type":"codeVoice","code":"In"},{"type":"text","text":" type to "},{"type":"codeVoice","code":"Request"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/request(context:from:)-2wtco","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/request(context:from:)-2wtco","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Responder":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Responder"},{"text":" : ","kind":"text"},{"text":"HTTPResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"HTTP Responder"}],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Responder","title":"Responder","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","navigatorTitle":[{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"kind":"symbol","title":"APIGatewayLambdaFunction","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGateway","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/shutdown()-1wnul":{"abstract":[{"text":"Called when Lambda is terminating. This is where you can cleanup any resources","type":"text"}],"defaultImplementations":1,"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/shutdown()-1wnul","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdown","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"required":true,"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/shutdown()-1wnul","title":"shutdown()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"title":"LambdaFunction","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"navigatorTitle":[{"text":"Response","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","url":"\/documentation\/hummingbirdcore\/response","title":"Response","type":"topic"}}}