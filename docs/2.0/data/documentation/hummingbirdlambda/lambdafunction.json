{"kind":"symbol","relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","type":"inheritsFrom"},{"title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"],"type":"inheritedBy","kind":"relationships"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Defines the "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"Output"},{"type":"text","text":". Create a type conforming to this protocol and tag it"},{"text":" ","type":"text"},{"type":"text","text":"with "},{"type":"codeVoice","code":"@main"},{"type":"text","text":"."}]},{"syntax":"swift","code":["struct MyLambda: LambdaFunction {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = MyLambdaRequestContext \/\/ must conform to `LambdaRequestContext`","","    init(context: LambdaInitializationContext) {}","","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some Responder<Context> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in","            \"Hello\"","        }","        return router.buildResponder()","    }","}"],"type":"codeListing"},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","type":"reference"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"},{"type":"text","text":" for specializations of this protocol."}],"type":"paragraph"}],"name":"See Also"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/lambdafunction"]}],"seeAlsoSections":[{"generated":true,"anchor":"Lambda-protocols","title":"Lambda protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"metadata":{"roleHeading":"Protocol","externalID":"s:17HummingbirdLambda0B8FunctionP","symbolKind":"protocol","role":"symbol","modules":[{"name":"HummingbirdLambda"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"title":"LambdaFunction","navigatorTitle":[{"kind":"identifier","text":"LambdaFunction"}]},"topicSections":[{"anchor":"Associated-Types","title":"Associated Types","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Context","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Responder"]},{"anchor":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(context:)"],"generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/output(from:)-41rdr","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/request(context:from:)-2wtco","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/shutdown()-1wnul"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"},{"generated":true,"anchor":"Type-Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/main()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)"],"title":"Type Methods"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"APIGatewayV2LambdaFunction"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","title":"APIGatewayV2LambdaFunction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"APIGatewayV2LambdaFunction"}],"url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas that use APIGatewayV2"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Output":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","title":"Output","abstract":[{"type":"text","text":"Output of lambda"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output","required":true,"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Context":{"kind":"symbol","required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/context","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"},{"kind":"text","text":" : "},{"text":"InitializableFromSource","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP"},{"kind":"text","text":" = "},{"text":"BasicLambdaRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda05BasicB14RequestContextV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Event","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","title":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Context","abstract":[{"text":"Request context","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"navigatorTitle":[{"kind":"identifier","text":"Response"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"url":"\/documentation\/hummingbirdcore\/response","kind":"symbol","title":"Response","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","title":"APIGatewayLambdaFunction","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"APIGatewayLambdaFunction"}],"url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas that use APIGateway"}]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","alt":null,"identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/shutdown()-1wnul":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"shutdown","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"defaultImplementations":1,"abstract":[{"text":"Called when Lambda is terminating. This is where you can cleanup any resources","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/shutdown()-1wnul","kind":"symbol","title":"shutdown()","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/shutdown()-1wnul","required":true,"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/buildResponder()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildResponder"},{"text":"() -> ","kind":"text"},{"text":"Responder","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP9ResponderQa"}],"role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/buildResponder()","title":"buildResponder()","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/buildresponder()","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/request","kind":"symbol","title":"Request","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/test(logLevel:_:)":{"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Event","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"LambdaTestableEvent"},{"type":"text","text":"."}]},"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/test(loglevel:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"logLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV5LevelO","text":"Level"},{"kind":"text","text":", ("},{"preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV","kind":"typeIdentifier","text":"LambdaTestClient"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp","text":"Value"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp","kind":"typeIdentifier"}],"type":"topic","role":"symbol","title":"test(logLevel:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)","abstract":[{"text":"Test ","type":"text"},{"type":"codeVoice","code":"LambdaFunction"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Responder":{"type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HTTPResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HTTPResponderP"}],"role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Responder","title":"Responder","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","abstract":[{"type":"text","text":"HTTP Responder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Event":{"kind":"symbol","required":true,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/event","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Event","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Se","text":"Decodable","kind":"typeIdentifier"}],"type":"topic","role":"symbol","title":"Event","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","abstract":[{"type":"text","text":"Event that triggers the lambda"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/output(from:)-41rdr":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"output"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP6OutputQa","text":"Output"}],"role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/output(from:)-41rdr","title":"output(from:)","kind":"symbol","defaultImplementations":2,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output(from:)-41rdr","abstract":[{"type":"text","text":"Convert from "},{"code":"Response","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"Out"},{"text":" type","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/main()":{"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/main()","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"main","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"throws"}],"type":"topic","role":"symbol","title":"main()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/main()","abstract":[{"type":"text","text":"Initializes and runs the Lambda function."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/request(context:from:)-2wtco":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"request","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"LambdaContext","preciseIdentifier":"s:20AWSLambdaRuntimeCore13LambdaContextV"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Event","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier"}],"role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/request(context:from:)-2wtco","title":"request(context:from:)","kind":"symbol","defaultImplementations":2,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/request(context:from:)-2wtco","abstract":[{"type":"text","text":"Convert from "},{"type":"codeVoice","code":"In"},{"text":" type to ","type":"text"},{"code":"Request","type":"codeVoice"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","role":"symbol","kind":"symbol","title":"LambdaFunction","type":"topic","navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}],"abstract":[{"text":"Protocol for Hummingbird Lambdas.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LambdaFunction"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","role":"collection","kind":"symbol","title":"HummingbirdLambda","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(context:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"LambdaInitializationContext","preciseIdentifier":"s:20AWSLambdaRuntimeCore27LambdaInitializationContextV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(context:)","title":"init(context:)","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(context:)","abstract":[{"type":"text","text":"Initialize application."}]}}}