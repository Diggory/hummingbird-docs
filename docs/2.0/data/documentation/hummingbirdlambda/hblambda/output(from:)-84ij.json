{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"response"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponse","kind":"typeIdentifier","text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Output","kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP6OutputQa"}],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Specialization of HBLambda.request where "},{"type":"codeVoice","code":"Out"},{"type":"text","text":" is "},{"type":"codeVoice","code":"APIGatewayV2Response"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-504pv"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-84ij"]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-84ij","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","modules":[{"name":"HummingbirdLambda"}],"extendedModule":"HummingbirdLambda","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier","text":"HBResponse"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP6OutputQa","kind":"typeIdentifier","text":"Output"}],"externalID":"s:17HummingbirdLambda8HBLambdaPAA15AWSLambdaEvents20APIGatewayV2ResponseV6OutputRtzrlE6output4fromAF0A4Core10HBResponseV_tYaKF","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"APIGatewayV2Response"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"output(from:)","roleHeading":"Instance Method"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/output(from:)-84ij":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP6OutputQa","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Specialization of HBLambda.request where "},{"type":"codeVoice","code":"Out"},{"type":"text","text":" is "},{"type":"codeVoice","code":"APIGatewayV2Response"}],"url":"\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-84ij","type":"topic","title":"output(from:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"APIGatewayV2Response","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-84ij"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","title":"HBLambda","url":"\/documentation\/hummingbirdlambda\/hblambda","type":"topic","abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas. Define the "},{"type":"codeVoice","code":"In"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Out"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"In"},{"type":"text","text":" to "},{"type":"codeVoice","code":"HBRequest"},{"type":"text","text":" and "},{"type":"codeVoice","code":"HBResponse"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Out"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambda"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponse":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponse","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponse"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponse"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"role":"symbol","title":"HBResponse","url":"\/documentation\/hummingbirdcore\/hbresponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/Output":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Output","url":"\/documentation\/hummingbirdlambda\/hblambda\/output","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Encodable","kind":"typeIdentifier","preciseIdentifier":"s:SE"}],"required":true,"title":"Output","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/output(from:)-504pv":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-504pv","url":"\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-504pv","abstract":[{"text":"Convert from ","type":"text"},{"type":"codeVoice","code":"HBResponse"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"Out"},{"text":" type","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponse","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore10HBResponseV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP6OutputQa"}],"required":true,"defaultImplementations":2,"title":"output(from:)","kind":"symbol"}}}