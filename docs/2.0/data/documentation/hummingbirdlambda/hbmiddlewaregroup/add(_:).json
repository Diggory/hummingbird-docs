{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/add(_:)"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/add(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"middleware"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird20HBMiddlewareProtocolP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","text":"HBMiddlewareProtocol"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">)"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Add middleware to group"}],"metadata":{"symbolKind":"method","externalID":"s:11Hummingbird17HBMiddlewareGroupC3addyyAA0B8Protocol_px7ContextRts_XPF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBMiddlewareProtocolP"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">)"}],"title":"add(_:)","modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Instance Method","role":"symbol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup/add(_:)":{"title":"add(_:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/add(_:)","type":"topic","abstract":[{"type":"text","text":"Add middleware to group"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11Hummingbird20HBMiddlewareProtocolP","kind":"typeIdentifier","text":"HBMiddlewareProtocol"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">)"}],"url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/add(_:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareProtocol":{"url":"\/documentation\/hummingbirdlambda\/hbmiddlewareprotocol","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"type":"topic","title":"HBMiddlewareProtocol","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup":{"url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup","kind":"symbol","title":"HBMiddlewareGroup","navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","type":"topic","role":"symbol","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]}}}