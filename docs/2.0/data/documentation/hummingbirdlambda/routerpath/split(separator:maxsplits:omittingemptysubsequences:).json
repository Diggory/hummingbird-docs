{"metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"split","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxSplits","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"omittingEmptySubsequences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"extendedModule":"Swift","symbolKind":"method","role":"symbol","title":"split(separator:maxSplits:omittingEmptySubsequences:)","roleHeading":"Instance Method","externalID":"s:SlsSQ7ElementRpzrlE5split9separator9maxSplits25omittingEmptySubsequencesSay11SubSequenceQzGAB_SiSbtF::SYNTHESIZED::s:11Hummingbird10RouterPathV","modules":[{"relatedModules":["Swift"],"name":"HummingbirdLambda"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"split","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxSplits","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":" = Int.max, ","kind":"text"},{"text":"omittingEmptySubsequences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" = true) -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/routerpath\/split(separator:maxsplits:omittingemptysubsequences:)"]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Collection.split(separator:maxSplits:omittingEmptySubsequences:)"},{"type":"text","text":"."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath\/Collection-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath\/split(separator:maxSplits:omittingEmptySubsequences:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/RouterPath/split(separator:maxSplits:omittingEmptySubsequences:)":{"url":"\/documentation\/hummingbirdlambda\/routerpath\/split(separator:maxsplits:omittingemptysubsequences:)","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath\/split(separator:maxSplits:omittingEmptySubsequences:)","type":"topic","title":"split(separator:maxSplits:omittingEmptySubsequences:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"split","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxSplits"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"omittingEmptySubsequences"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":"]"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/RouterPath/Collection-Implementations":{"title":"Collection Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/hummingbirdlambda\/routerpath\/collection-implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath\/Collection-Implementations","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/RouterPath":{"url":"\/documentation\/hummingbirdlambda\/routerpath","kind":"symbol","title":"RouterPath","navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Split router path into components"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}]}}}