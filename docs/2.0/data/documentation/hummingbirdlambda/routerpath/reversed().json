{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/routerpath\/reversed()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","externalID":"s:STsE8reversedSay7ElementQzGyF::SYNTHESIZED::s:11Hummingbird10RouterPathV","modules":[{"relatedModules":["Swift"],"name":"HummingbirdLambda"}],"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reversed"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"title":"reversed()","roleHeading":"Instance Method","role":"symbol"},"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"code":"Sequence.reversed()","type":"codeVoice"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath\/Sequence-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reversed"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath\/reversed()","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/RouterPath/reversed()":{"role":"symbol","title":"reversed()","type":"topic","kind":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reversed","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"url":"\/documentation\/hummingbirdlambda\/routerpath\/reversed()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath\/reversed()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/RouterPath/Sequence-Implementations":{"url":"\/documentation\/hummingbirdlambda\/routerpath\/sequence-implementations","kind":"article","title":"Sequence Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath\/Sequence-Implementations","type":"topic","role":"collectionGroup","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/RouterPath":{"url":"\/documentation\/hummingbirdlambda\/routerpath","kind":"symbol","title":"RouterPath","navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Split router path into components"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]}}}