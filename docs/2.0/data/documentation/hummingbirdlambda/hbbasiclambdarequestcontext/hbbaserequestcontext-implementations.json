{"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/HBBaseRequestContext-Implementations","interfaceLanguage":"swift"},"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/allocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/maxUploadSize","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/requestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/responseEncoder"],"title":"Instance Properties"}],"metadata":{"title":"HBBaseRequestContext Implementations","role":"collectionGroup","modules":[{"name":"HummingbirdLambda"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","role":"collection","title":"HummingbirdLambda","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"url":"\/documentation\/hummingbirdlambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext/parameters":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/parameters","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBParameters","preciseIdentifier":"s:11Hummingbird12HBParametersa"}],"title":"parameters","url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext\/parameters","abstract":[],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext/maxUploadSize":{"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext\/maxuploadsize","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/maxUploadSize","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic","role":"symbol","title":"maxUploadSize"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext/endpointPath":{"type":"topic","role":"symbol","title":"endpointPath","abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext\/endpointpath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/endpointPath","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpointPath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext/requestDecoder":{"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext\/requestdecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/requestDecoder","abstract":[],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC","kind":"typeIdentifier"}],"title":"requestDecoder","conformance":{"constraints":[{"code":"Decoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext/id":{"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext\/id","abstract":[],"title":"id","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/id","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"HBBasicLambdaRequestContext","kind":"identifier"}],"title":"HBBasicLambdaRequestContext","abstract":[{"text":"The default Lambda request context.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicLambdaRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext/logger":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"}],"abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext\/logger","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/logger","type":"topic","title":"logger","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext/responseEncoder":{"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext\/responseencoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/responseEncoder","abstract":[],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"responseEncoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"JSONEncoder","preciseIdentifier":"s:10Foundation11JSONEncoderC","kind":"typeIdentifier"}],"title":"responseEncoder","conformance":{"constraints":[{"code":"Encoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONEncoder","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext/allocator":{"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext\/allocator","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allocator"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"}],"title":"allocator","abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext\/allocator"}}}