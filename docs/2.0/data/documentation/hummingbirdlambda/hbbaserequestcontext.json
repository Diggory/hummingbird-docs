{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"}],"languages":["swift"],"platforms":["Linux"]}]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"role":"symbol","title":"HBBaseRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"symbolKind":"protocol","modules":[{"name":"HummingbirdLambda"}],"roleHeading":"Protocol","externalID":"s:11Hummingbird20HBBaseRequestContextP"},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/Decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/Encoder"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/allocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/coreContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/id","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/maxUploadSize-5c8td","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/requestDecoder-t6zc","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/responseEncoder-3aosk"]}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbbaserequestcontext"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom"},{"kind":"relationships","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterRequestContext"],"type":"inheritedBy"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext"],"type":"conformingTypes"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"]]},"seeAlsoSections":[{"title":"Request context","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRemoteAddressRequestContext"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/parameters":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/parameters","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/parameters","abstract":[{"type":"text","text":"Parameters extracted from URI"}],"type":"topic","title":"parameters","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parameters"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird12HBParametersa","kind":"typeIdentifier","text":"HBParameters"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext":{"url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext","kind":"symbol","title":"HBBaseRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","type":"topic","role":"symbol","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRouterRequestContext"}],"abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `HBRouterBuilder``"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext","type":"topic","url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBBasicRouterRequestContext"}],"title":"HBBasicRouterRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContextProtocol":{"navigatorTitle":[{"kind":"identifier","text":"HBAuthRequestContextProtocol"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthRequestContextProtocol"}],"title":"HBAuthRequestContextProtocol","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontextprotocol","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContextProtocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/requestDecoder-t6zc":{"url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/requestdecoder-t6zc","kind":"symbol","title":"requestDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/requestDecoder-t6zc","type":"topic","defaultImplementations":2,"role":"symbol","required":true,"abstract":[{"text":"Request decoder","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Decoder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestContext":{"abstract":[{"type":"text","text":"Protocol for a request context that can be created from a NIO Channel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestContext","title":"HBRequestContext","url":"\/documentation\/hummingbirdlambda\/hbrequestcontext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRemoteAddressRequestContext":{"navigatorTitle":[{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRemoteAddressRequestContext","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"kind":"symbol","title":"HBRemoteAddressRequestContext","url":"\/documentation\/hummingbirdlambda\/hbremoteaddressrequestcontext","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/Encoder":{"abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/Encoder","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Encoder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBResponseEncoder","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"NullEncoder","preciseIdentifier":"s:11Hummingbird11NullEncoderV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/encoder","kind":"symbol","required":true,"title":"Encoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/coreContext":{"title":"coreContext","kind":"symbol","required":true,"type":"topic","abstract":[{"type":"text","text":"Core context"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/coreContext","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/corecontext","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"coreContext"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird20HBCoreRequestContextV","kind":"typeIdentifier","text":"HBCoreRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/Decoder":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Decoder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBRequestDecoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP"},{"text":" = ","kind":"text"},{"text":"NullDecoder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11NullDecoderV"}],"required":true,"type":"topic","title":"Decoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/Decoder","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/decoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/allocator":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allocator"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/allocator","type":"topic","title":"allocator","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/allocator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/id":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/id","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/id","title":"id","type":"topic","abstract":[{"text":"Request ID, extracted from Logger","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCoreRequestContext":{"type":"topic","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"navigatorTitle":[{"text":"HBCoreRequestContext","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCoreRequestContext","kind":"identifier"}],"title":"HBCoreRequestContext","url":"\/documentation\/hummingbirdlambda\/hbcorerequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCoreRequestContext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicRequestContext":{"navigatorTitle":[{"text":"HBBasicRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRequestContext"}],"title":"HBBasicRequestContext","url":"\/documentation\/hummingbirdlambda\/hbbasicrequestcontext","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/responseEncoder-3aosk":{"title":"responseEncoder","role":"symbol","kind":"symbol","defaultImplementations":2,"url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/responseencoder-3aosk","required":true,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/responseEncoder-3aosk","abstract":[{"type":"text","text":"Response encoder"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responseEncoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Encoder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/logger":{"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/logger","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/logger","title":"logger","kind":"symbol","abstract":[{"type":"text","text":"Logger to use with Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicLambdaRequestContext":{"url":"\/documentation\/hummingbirdlambda\/hbbasiclambdarequestcontext","navigatorTitle":[{"kind":"identifier","text":"HBBasicLambdaRequestContext"}],"type":"topic","title":"HBBasicLambdaRequestContext","abstract":[{"type":"text","text":"The default Lambda request context."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicLambdaRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicLambdaRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","role":"collection","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","url":"\/documentation\/index","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambdaRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hblambdarequestcontext","kind":"symbol","type":"topic","title":"HBLambdaRequestContext","abstract":[{"text":"A Request Context that contains the Event that triggered the Lambda","type":"text"}],"navigatorTitle":[{"text":"HBLambdaRequestContext","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/maxUploadSize-5c8td":{"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/maxuploadsize-5c8td","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/maxUploadSize-5c8td","required":true,"title":"maxUploadSize","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"defaultImplementations":2,"abstract":[{"type":"text","text":"Maximum upload size allowed for routes that don’t stream the request payload. This"},{"text":" ","type":"text"},{"text":"limits how much memory would be used for one request","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBRouterRequestContext":{"url":"\/documentation\/hummingbirdrouter\/hbrouterrequestcontext","kind":"symbol","title":"HBRouterRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBRouterRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterRequestContext","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Protocol that all request contexts used with HBRouterBuilder should conform to."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthRequestContext":{"abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthRequestContext","title":"HBAuthRequestContext","url":"\/documentation\/hummingbirdauth\/hbauthrequestcontext","navigatorTitle":[{"text":"HBAuthRequestContext","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBAuthRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/endpointPath":{"url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/endpointpath","type":"topic","title":"endpointPath","abstract":[{"type":"text","text":"Endpoint path"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/endpointPath","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endpointPath","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}}}