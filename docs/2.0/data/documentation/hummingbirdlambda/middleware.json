{"metadata":{"role":"symbol","title":"Middleware","roleHeading":"Type Alias","modules":[{"name":"Hummingbird"}],"symbolKind":"typealias","externalID":"s:11Hummingbird10Middlewarea","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"navigatorTitle":[{"text":"Middleware","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware"],"generated":true,"title":"Middleware"}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/Middleware","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/middleware"]}],"abstract":[{"type":"text","text":"Middleware Handler with generic input, context and output types"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> = (","kind":"text"},{"text":"Input","preciseIdentifier":"s:11Hummingbird10Middlewarea5Inputxmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird10Middlewarea7Contextq0_mfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"next","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Input","preciseIdentifier":"s:11Hummingbird10Middlewarea5Inputxmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird10Middlewarea7Contextq0_mfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","preciseIdentifier":"s:11Hummingbird10Middlewarea6Outputq_mfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","preciseIdentifier":"s:11Hummingbird10Middlewarea6Outputq_mfp","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/Middleware":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/Middleware","role":"symbol","url":"\/documentation\/hummingbirdlambda\/middleware","abstract":[{"type":"text","text":"Middleware Handler with generic input, context and output types"}],"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"title":"Middleware","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLogRequestsMiddleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLogRequestsMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"role":"symbol","title":"HBLogRequestsMiddleware","url":"\/documentation\/hummingbirdlambda\/hblogrequestsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/MiddlewareProtocol":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"role":"symbol","title":"MiddlewareProtocol","url":"\/documentation\/hummingbirdlambda\/middlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCORSMiddleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBCORSMiddleware"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"role":"symbol","title":"HBCORSMiddleware","url":"\/documentation\/hummingbirdlambda\/hbcorsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBTracingMiddleware":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbtracingmiddleware","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}],"title":"HBTracingMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBTracingMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"role":"symbol","title":"HBMiddlewareGroup","url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMetricsMiddleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMetricsMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMetricsMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}],"abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"role":"symbol","title":"HBMetricsMiddleware","url":"\/documentation\/hummingbirdlambda\/hbmetricsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBFileMiddleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFileMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBFileMiddleware"}],"abstract":[{"type":"text","text":"Middleware for serving static files."}],"role":"symbol","title":"HBFileMiddleware","url":"\/documentation\/hummingbirdlambda\/hbfilemiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareProtocol":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareProtocol"}],"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"role":"symbol","title":"HBMiddlewareProtocol","url":"\/documentation\/hummingbirdlambda\/hbmiddlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"}}}