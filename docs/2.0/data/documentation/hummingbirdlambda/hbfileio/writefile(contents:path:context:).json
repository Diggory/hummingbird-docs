{"abstract":[{"text":"Write contents of request body to file","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileIO\/writeFile(contents:path:context:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"contents"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore13HBRequestBodyO","kind":"typeIdentifier","text":"HBRequestBody"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier","text":"HBBaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","role":"symbol","title":"writeFile(contents:path:context:)","symbolKind":"method","externalID":"s:11Hummingbird8HBFileIOV9writeFile8contents4path7contexty0A4Core13HBRequestBodyO_SSxtYaKAA20HBBaseRequestContextRzlF"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileIO"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbfileio\/writefile(contents:path:context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"contents","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","text":"HBRequestBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore13HBRequestBodyO"},{"text":", ","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","text":"HBBaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"contents","content":[{"inlineContent":[{"type":"text","text":"Request body to write."}],"type":"paragraph"}]},{"name":"path","content":[{"inlineContent":[{"text":"Path to write to","type":"text"}],"type":"paragraph"}]},{"name":"logger","content":[{"inlineContent":[{"type":"text","text":"Logger"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This can be used to save arbitrary ByteBuffers by passing in ","type":"text"},{"type":"codeVoice","code":".byteBuffer(ByteBuffer)"},{"text":" as contents","type":"text"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBFileIO/writeFile(contents:path:context:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"contents"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore13HBRequestBodyO","kind":"typeIdentifier","text":"HBRequestBody"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier","text":"HBBaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileIO\/writeFile(contents:path:context:)","url":"\/documentation\/hummingbirdlambda\/hbfileio\/writefile(contents:path:context:)","kind":"symbol","title":"writeFile(contents:path:context:)","abstract":[{"type":"text","text":"Write contents of request body to file"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBody":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBody","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBody"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestBody"}],"abstract":[],"role":"symbol","title":"HBRequestBody","url":"\/documentation\/hummingbirdcore\/hbrequestbody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext":{"title":"HBBaseRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBFileIO":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBFileIO"}],"title":"HBFileIO","url":"\/documentation\/hummingbirdlambda\/hbfileio","abstract":[{"text":"Manages File reading and writing.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBFileIO"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileIO","kind":"symbol"}}}