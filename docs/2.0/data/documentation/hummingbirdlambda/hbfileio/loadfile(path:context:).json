{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbfileio\/loadfile(path:context:)"]}],"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","kind":"typeIdentifier","text":"HBBaseRequestContext","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","kind":"typeIdentifier","text":"HBResponseBody","preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyV"}]}],"kind":"declarations"},{"parameters":[{"name":"path","content":[{"type":"paragraph","inlineContent":[{"text":"System file path","type":"text"}]}]},{"name":"context","content":[{"inlineContent":[{"text":"Context this request is being called in","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"Response body"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Depending on the file size this will return either a response body containing a ByteBuffer or a stream that will provide the","type":"text"},{"text":" ","type":"text"},{"text":"file in chunks.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"role":"symbol","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponseBody","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyV"}],"title":"loadFile(path:context:)","externalID":"s:11Hummingbird8HBFileIOV8loadFile4path7context0A4Core14HBResponseBodyVSS_xtYaKAA20HBBaseRequestContextRzlF"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileIO\/loadFile(path:context:)"},"kind":"symbol","abstract":[{"text":"Load file and return response body","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileIO"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext":{"title":"HBBaseRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBFileIO":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBFileIO"}],"title":"HBFileIO","url":"\/documentation\/hummingbirdlambda\/hbfileio","abstract":[{"text":"Manages File reading and writing.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBFileIO"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileIO","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBody":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBody","title":"HBResponseBody","navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBResponseBody"}],"role":"symbol","abstract":[{"text":"Response body","type":"text"}],"url":"\/documentation\/hummingbirdcore\/hbresponsebody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBFileIO/loadFile(path:context:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP","kind":"typeIdentifier","text":"HBBaseRequestContext"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore14HBResponseBodyV","kind":"typeIdentifier","text":"HBResponseBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileIO\/loadFile(path:context:)","type":"topic","kind":"symbol","abstract":[{"text":"Load file and return response body","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbfileio\/loadfile(path:context:)","title":"loadFile(path:context:)"}}}