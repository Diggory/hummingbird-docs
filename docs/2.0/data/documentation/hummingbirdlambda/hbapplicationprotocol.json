{"metadata":{"modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird21HBApplicationProtocolP","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBApplicationProtocol"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplicationProtocol","kind":"identifier"}],"title":"HBApplicationProtocol","symbolKind":"protocol","roleHeading":"Protocol"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/EventLoopGroupProvider"],"title":"Application","generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplicationProtocol","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Service","kind":"typeIdentifier","preciseIdentifier":"s:16ServiceLifecycle0A0P"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"Overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"code":"HBApplicationProtocol","type":"codeVoice"},{"text":" is a protocol used to define your application. It provides the glue between your router and HTTP server.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Implementing a ","type":"text"},{"code":"HBApplicationProtocol","type":"codeVoice"},{"text":" requires two member variables: ","type":"text"},{"code":"responder","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"server","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["struct MyApp: HBApplicationProtocol {","    \/\/\/ The responder will return an `HBResponse` given an `HBRequest` and a context","    var responder: some HBResponder<HBBasicRequestContext> {","        let router = HBRouter(context: Context.self)","        router.get(\"hello\") { _,_ in \"Hello\" }","        return router.buildResponder()","    }","    \/\/\/ Defines your server type. This is the default value so in","    \/\/\/ effect is unnecessary","    var server: HBHTTPChannelBuilder<some HBChildChannel> { .http1() }","}","let app = MyApp()","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you donâ€™t want to create your own type, Hummingbird provides ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","type":"reference"},{"text":" a concrete implementation of ","type":"text"},{"type":"codeVoice","code":"HBApplicationProtocol"},{"text":".","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/ChildChannel","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/Responder-swift.associatedtype"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/configuration-9zgf2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/eventLoopGroup-2765w","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/logger-7nhk6","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/processesRunBeforeServerStart-3nv5a","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/responder-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/server-2pvsc","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/services-77oyf"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/onServerRunning(_:)-5q8bt","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/runService(gracefulShutdownSignals:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/Context"],"title":"Type Aliases"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"kind":"symbol","relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From"},{"type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"],"title":"Conforming Types"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplicationprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/services-77oyf":{"abstract":[{"text":"services attached to the application.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"services"},{"kind":"text","text":": ["},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"preciseIdentifier":"s:16ServiceLifecycle0A0P","kind":"typeIdentifier","text":"Service"},{"kind":"text","text":"]"}],"defaultImplementations":2,"role":"symbol","kind":"symbol","title":"services","type":"topic","required":true,"url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/services-77oyf","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/services-77oyf"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/logger-7nhk6":{"url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/logger-7nhk6","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"role":"symbol","abstract":[{"type":"text","text":"Logger"}],"required":true,"type":"topic","kind":"symbol","defaultImplementations":2,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/logger-7nhk6","title":"logger"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/run()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/run()","title":"run()","url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/run()","abstract":[{"type":"text","text":"Construct application and run it"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/Responder-swift.associatedtype":{"required":true,"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/Responder-swift.associatedtype","title":"Responder","type":"topic","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"}],"abstract":[{"text":"Responder that generates a response from a requests and context","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/responder-swift.associatedtype","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplicationProtocol"}],"abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"title":"HBApplicationProtocol","navigatorTitle":[{"kind":"identifier","text":"HBApplicationProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol","url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol","kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationConfiguration":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplicationConfiguration"}],"abstract":[{"type":"text","text":"Application configuration"}],"title":"HBApplicationConfiguration","navigatorTitle":[{"kind":"identifier","text":"HBApplicationConfiguration"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationConfiguration","url":"\/documentation\/hummingbirdlambda\/hbapplicationconfiguration","kind":"symbol","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/onServerRunning(_:)-5q8bt":{"title":"onServerRunning(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/onServerRunning(_:)-5q8bt","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onServerRunning","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"}],"type":"topic","abstract":[{"type":"text","text":"This is called once the server is running and we have an active Channel"}],"kind":"symbol","required":true,"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/onserverrunning(_:)-5q8bt","defaultImplementations":2},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/server-2pvsc":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/server-2pvsc","title":"server","url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/server-2pvsc","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"server"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV","kind":"typeIdentifier","text":"HBHTTPChannelBuilder"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP12ChildChannelQa","kind":"typeIdentifier","text":"ChildChannel"},{"kind":"text","text":">"}],"required":true,"defaultImplementations":2,"type":"topic","abstract":[{"type":"text","text":"Server channel setup"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/runService(gracefulShutdownSignals:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/runService(gracefulShutdownSignals:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runService","kind":"identifier"},{"text":"(","kind":"text"},{"text":"gracefulShutdownSignals","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:11UnixSignals0A6SignalV","text":"UnixSignal","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"runService(gracefulShutdownSignals:)","abstract":[{"type":"text","text":"Helper function that runs application inside a ServiceGroup which will gracefully"},{"type":"text","text":" "},{"type":"text","text":"shutdown on signals SIGINT, SIGTERM"}],"url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/runservice(gracefulshutdownsignals:)","type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/ChildChannel":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/ChildChannel","title":"ChildChannel","url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/childchannel","kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildChannel"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:15HummingbirdCore18HTTPChannelHandlerP","kind":"typeIdentifier","text":"HTTPChannelHandler"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:15HummingbirdCore12HTTP1ChannelV","kind":"typeIdentifier","text":"HTTP1Channel"}],"required":true,"type":"topic","abstract":[{"type":"text","text":"Child Channel setup. This defaults to support HTTP1"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBApplication","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","title":"HBApplication","navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication","kind":"symbol","abstract":[{"text":"Application type bringing together all the components of Hummingbird","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/EventLoopGroupProvider":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/EventLoopGroupProvider","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroupProvider"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopGroupProvider"}],"abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"role":"symbol","title":"EventLoopGroupProvider","url":"\/documentation\/hummingbirdlambda\/eventloopgroupprovider"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/Context":{"title":"HBApplicationProtocol.Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/Context","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Context passed with HBRequest to responder"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Context","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/context"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/eventLoopGroup-2765w":{"title":"eventLoopGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/eventLoopGroup-2765w","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoopGroup","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"event loop group used by application"}],"kind":"symbol","required":true,"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/eventloopgroup-2765w","defaultImplementations":2},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/configuration-9zgf2":{"url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/configuration-9zgf2","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/configuration-9zgf2","abstract":[{"text":"Application configuration","type":"text"}],"required":true,"title":"configuration","type":"topic","defaultImplementations":2,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configuration","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird26HBApplicationConfigurationV","text":"HBApplicationConfiguration","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/16ServiceLifecycle0A0P":{"title":"ServiceLifecycle.Service","identifier":"doc:\/\/com.opticalaberration.hummingbird\/16ServiceLifecycle0A0P","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/processesRunBeforeServerStart-3nv5a":{"defaultImplementations":2,"title":"processesRunBeforeServerStart","abstract":[{"text":"Array of processes run before we kick off the server. These tend to be processes that need","type":"text"},{"text":" ","type":"text"},{"text":"other services running but need to be run before the server is setup","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/processesrunbeforeserverstart-3nv5a","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/processesRunBeforeServerStart-3nv5a","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"processesRunBeforeServerStart","kind":"identifier"},{"text":": [() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":"]","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplicationProtocol/responder-swift.property":{"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplicationprotocol\/responder-swift.property","abstract":[{"text":"Build the responder","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplicationProtocol\/responder-swift.property","title":"responder","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"responder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBApplicationProtocolP9ResponderQa","text":"Responder"}],"required":true}}}