{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/lambdarequestcontext"]}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]},{"title":"Conforming Types","kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"text":"A Request Context that is initialized with the Event that triggered the Lambda","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Event","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18BaseRequestContextP","text":"BaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All Hummingbird Lambdas require that your request context conforms to"},{"type":"text","text":" "},{"type":"text","text":"LambdaRequestContext"},{"type":"codeVoice","code":". By default ``LambdaFunction`` will use ``BasicLambdaRequestContext`` for a request context. To get ``LambdaFunction`` to use a custom context you need to set the "},{"type":"text","text":"Context` associatedtype."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext"},"seeAlsoSections":[{"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext"],"generated":true}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext\/Event"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext\/init(_:lambdaContext:)"],"title":"Initializers"}],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaRequestContext"}],"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContext"}],"externalID":"s:17HummingbirdLambda0B14RequestContextP","role":"symbol","modules":[{"name":"HummingbirdLambda"}],"title":"LambdaRequestContext","symbolKind":"protocol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaRequestContext"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LambdaRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext","abstract":[{"text":"A Request Context that is initialized with the Event that triggered the Lambda","type":"text"}],"title":"LambdaRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"BaseRequestContext"}],"title":"BaseRequestContext","url":"\/documentation\/hummingbird\/baserequestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BaseRequestContext"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext/init(_:lambdaContext:)":{"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext\/init(_:lambdacontext:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext\/init(_:lambdaContext:)","title":"init(_:lambdaContext:)","required":true,"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Event","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B14RequestContextP5EventQa"},{"text":", ","kind":"text"},{"text":"lambdaContext","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LambdaContext","kind":"typeIdentifier","preciseIdentifier":"s:20AWSLambdaRuntimeCore13LambdaContextV"},{"text":")","kind":"text"}],"abstract":[],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"kind":"symbol","title":"BasicLambdaRequestContext","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","abstract":[{"type":"text","text":"The default Lambda request context."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"BasicLambdaRequestContext"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicLambdaRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext/Event":{"kind":"symbol","required":true,"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The type of event that can trigger the Lambda"}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext\/Event","title":"Event","url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext\/event"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"type":"topic","title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","role":"collection"}}}