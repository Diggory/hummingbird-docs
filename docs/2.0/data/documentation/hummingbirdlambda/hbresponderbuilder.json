{"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterBuilder"],"title":"Conforming Types","type":"conformingTypes","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponderBuilder"}]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponderBuilder"}],"externalID":"s:11Hummingbird18HBResponderBuilderP","navigatorTitle":[{"kind":"identifier","text":"HBResponderBuilder"}],"roleHeading":"Protocol","title":"HBResponderBuilder","symbolKind":"protocol","modules":[{"name":"HummingbirdLambda"}],"role":"symbol"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponderBuilder","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbresponderbuilder"]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponderBuilder\/Responder"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponderBuilder\/buildResponder()"],"title":"Instance Methods"}],"abstract":[{"type":"text","text":"A type that has a single method to build a responder"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponderBuilder/Responder":{"url":"\/documentation\/hummingbirdlambda\/hbresponderbuilder\/responder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponderBuilder\/Responder","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Responder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP"}],"abstract":[],"title":"Responder","type":"topic","required":true,"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponderBuilder":{"url":"\/documentation\/hummingbirdlambda\/hbresponderbuilder","navigatorTitle":[{"kind":"identifier","text":"HBResponderBuilder"}],"type":"topic","title":"HBResponderBuilder","abstract":[{"type":"text","text":"A type that has a single method to build a responder"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponderBuilder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponderBuilder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBRouterBuilder":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterBuilder","abstract":[{"type":"text","text":"Router built using a result builder"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"url":"\/documentation\/hummingbirdrouter\/hbrouterbuilder","title":"HBRouterBuilder","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Context","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"HBRouterRequestContext","type":"codeVoice"},{"type":"text","text":", "},{"code":"Context","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Handler.Context","type":"codeVoice"},{"type":"text","text":", "},{"code":"Handler","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"MiddlewareProtocol","type":"codeVoice"},{"type":"text","text":", "},{"code":"Handler.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"HBRequest","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Handler.Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"HBResponse","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponderBuilder/buildResponder()":{"url":"\/documentation\/hummingbirdlambda\/hbresponderbuilder\/buildresponder()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponderBuilder\/buildResponder()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildResponder"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Responder"}],"abstract":[{"type":"text","text":"build a responder"}],"title":"buildResponder()","type":"topic","required":true,"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouter":{"url":"\/documentation\/hummingbirdlambda\/hbrouter","kind":"symbol","title":"HBRouter","navigatorTitle":[{"text":"HBRouter","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","type":"topic","role":"symbol","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouter","kind":"identifier"}]}}}