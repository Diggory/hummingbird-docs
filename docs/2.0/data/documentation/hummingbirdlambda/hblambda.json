{"sections":[],"metadata":{"externalID":"s:17HummingbirdLambda8HBLambdaP","navigatorTitle":[{"kind":"identifier","text":"HBLambda"}],"symbolKind":"protocol","modules":[{"name":"HummingbirdLambda"}],"title":"HBLambda","role":"symbol","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBLambda"}]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Context","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Event","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Output","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Responder"]},{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/init(context:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/configuration"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-504pv","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/request(context:from:)-2pjm8","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/shutdown()-vk11"]},{"title":"Type Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/main()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambda"}]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Defines the "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" types, how you convert from "},{"code":"Event","type":"codeVoice"},{"type":"text","text":" to "},{"code":"HBRequest","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"HBResponse","type":"codeVoice"},{"type":"text","text":" to "},{"code":"Output","type":"codeVoice"},{"type":"text","text":". Create a type conforming to this protocol and tag it"},{"type":"text","text":" "},{"type":"text","text":"with "},{"code":"@main","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct MyLambda: HBLambda {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = MyLambdaRequestContext \/\/ must conform to `HBLambdaRequestContext`","","    init(context: LambdaInitializationContext) {}","","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some HBResponder<Context> {","        let router = HBRouter(context: Context.self)","        router.get(\"hello\") { _,_ in","            \"Hello\"","        }","        return router.buildResponder()","    }","}"]},{"name":"See Also","type":"aside","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda"},{"text":" for specializations of this protocol.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda"},"abstract":[{"text":"Protocol for Hummingbird Lambdas.","type":"text"}],"relationshipsSections":[{"kind":"relationships","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda"],"type":"inheritedBy"}],"seeAlsoSections":[{"title":"Lambda protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hblambda"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"type":"topic","title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","kind":"symbol","role":"collection","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/buildResponder()":{"required":true,"title":"buildResponder()","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/buildResponder()","abstract":[],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Responder","preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP9ResponderQa","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hblambda\/buildresponder()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/Context":{"type":"topic","abstract":[{"type":"text","text":"Request context"}],"kind":"symbol","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBLambdaRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda22HBLambdaRequestContextP"},{"text":" = ","kind":"text"},{"text":"HBBasicLambdaRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda07HBBasicB14RequestContextV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Event","kind":"typeIdentifier"},{"text":">","kind":"text"}],"required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Context","url":"\/documentation\/hummingbirdlambda\/hblambda\/context","title":"Context"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/request(context:from:)-2pjm8":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/request(context:from:)-2pjm8","abstract":[{"text":"Convert from ","type":"text"},{"type":"codeVoice","code":"In"},{"text":" type to ","type":"text"},{"code":"HBRequest","type":"codeVoice"}],"kind":"symbol","role":"symbol","title":"request(context:from:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"request","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LambdaContext","preciseIdentifier":"s:20AWSLambdaRuntimeCore13LambdaContextV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP5EventQa","text":"Event"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"}],"defaultImplementations":2,"url":"\/documentation\/hummingbirdlambda\/hblambda\/request(context:from:)-2pjm8"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayV2Lambda":{"kind":"symbol","navigatorTitle":[{"text":"HBAPIGatewayV2Lambda","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayV2Lambda","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGatewayV2","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAPIGatewayV2Lambda","kind":"identifier"}],"title":"HBAPIGatewayV2Lambda","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapigatewayv2lambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambda","kind":"identifier"}],"type":"topic","title":"HBLambda","navigatorTitle":[{"text":"HBLambda","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hblambda","kind":"symbol","role":"symbol","abstract":[{"text":"Protocol for Hummingbird Lambdas.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAPIGatewayLambda":{"title":"HBAPIGatewayLambda","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBAPIGatewayLambda","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"HBAPIGatewayLambda","kind":"identifier"}],"abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGateway","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAPIGatewayLambda","url":"\/documentation\/hummingbirdlambda\/hbapigatewaylambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/init(context:)":{"type":"topic","title":"init(context:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"LambdaInitializationContext","kind":"typeIdentifier","preciseIdentifier":"s:20AWSLambdaRuntimeCore27LambdaInitializationContextV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/init(context:)","abstract":[{"text":"Initialize application.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hblambda\/init(context:)","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/Responder":{"required":true,"title":"Responder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Responder","abstract":[{"text":"HTTP Responder","type":"text"}],"kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Responder","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hblambda\/responder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/shutdown()-vk11":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/shutdown()-vk11","kind":"symbol","abstract":[{"type":"text","text":"Called when Lambda is terminating. This is where you can cleanup any resources"}],"title":"shutdown()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdown"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","defaultImplementations":1,"url":"\/documentation\/hummingbirdlambda\/hblambda\/shutdown()-vk11","required":true,"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/Event":{"title":"Event","url":"\/documentation\/hummingbirdlambda\/hblambda\/event","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Event","kind":"symbol","required":true,"abstract":[{"type":"text","text":"Event that triggers the lambda"}],"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Se","text":"Decodable"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/Output":{"url":"\/documentation\/hummingbirdlambda\/hblambda\/output","title":"Output","abstract":[{"text":"Output of lambda","type":"text"}],"type":"topic","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/Output","kind":"symbol","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/output(from:)-504pv":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:15HummingbirdCore10HBResponseV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda8HBLambdaP6OutputQa","text":"Output"}],"required":true,"url":"\/documentation\/hummingbirdlambda\/hblambda\/output(from:)-504pv","role":"symbol","title":"output(from:)","defaultImplementations":2,"kind":"symbol","abstract":[{"type":"text","text":"Convert from "},{"code":"HBResponse","type":"codeVoice"},{"type":"text","text":" to "},{"code":"Out","type":"codeVoice"},{"type":"text","text":" type"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/output(from:)-504pv"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/main()":{"type":"topic","title":"main()","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/main()","abstract":[{"text":"Initializes and runs the Lambda function.","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hblambda\/main()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda/configuration":{"type":"topic","title":"configuration","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configuration","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBApplicationConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird26HBApplicationConfigurationV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda\/configuration","abstract":[{"text":"default configuration","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hblambda\/configuration"}}}