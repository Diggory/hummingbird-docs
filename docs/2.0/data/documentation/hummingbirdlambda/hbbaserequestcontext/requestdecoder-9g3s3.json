{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP7DecoderQa","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/Decoder","text":"Decoder"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Request decoder"}],"metadata":{"symbolKind":"property","externalID":"s:11Hummingbird20HBBaseRequestContextPAA10Foundation11JSONDecoderC7DecoderRtzrlE07requestG0AFvp","modules":[{"name":"Hummingbird"}],"role":"symbol","title":"requestDecoder","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Decoder","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"JSONDecoder","type":"codeVoice"},{"text":".","type":"text"}]},"extendedModule":"Hummingbird","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requestDecoder","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP7DecoderQa","text":"Decoder"}]},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/requestdecoder-9g3s3"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/requestDecoder-9g3s3","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/requestDecoder-t6zc"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/requestDecoder-t6zc"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/requestDecoder-t6zc"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/requestDecoder-t6zc":{"type":"topic","title":"requestDecoder","abstract":[{"type":"text","text":"Request decoder"}],"defaultImplementations":2,"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/requestDecoder-t6zc","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/requestdecoder-t6zc","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP7DecoderQa"}],"kind":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/Decoder":{"type":"topic","title":"Decoder","abstract":[],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/Decoder","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/decoder","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Decoder"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"HBRequestDecoder","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"JSONDecoder","preciseIdentifier":"s:10Foundation11JSONDecoderC"}],"kind":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext/requestDecoder-9g3s3":{"type":"topic","title":"requestDecoder","abstract":[{"type":"text","text":"Request decoder"}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Decoder"},{"type":"text","text":" is "},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext\/requestDecoder-9g3s3","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext\/requestdecoder-9g3s3","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestDecoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP7DecoderQa"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","url":"\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext":{"title":"HBBaseRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","kind":"article","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"role":"collectionGroup","title":"Request Contexts","url":"\/documentation\/hummingbird\/requestcontexts"}}}