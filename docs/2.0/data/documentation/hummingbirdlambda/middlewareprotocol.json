{"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"inheritsFrom","title":"Inherits From"},{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator"],"type":"inheritedBy","title":"Inherited By"},{"kind":"relationships","title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Handle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup"]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol\/Context","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol\/Input","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol\/Output"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol\/handle(_:context:next:)"],"title":"Instance Methods"}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/middlewareprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","seeAlsoSections":[{"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware"],"generated":true}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"HummingbirdLambda"}],"symbolKind":"protocol","title":"MiddlewareProtocol","role":"symbol","roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"externalID":"s:11Hummingbird18MiddlewareProtocolP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareProtocol"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":"> : ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"languages":["swift"]}]}],"abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCORSMiddleware":{"title":"HBCORSMiddleware","role":"symbol","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbcorsmiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/MiddlewareProtocol/Context":{"url":"\/documentation\/hummingbirdlambda\/middlewareprotocol\/context","kind":"symbol","title":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol\/Context","type":"topic","role":"symbol","required":true,"abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/MiddlewareProtocol/Output":{"url":"\/documentation\/hummingbirdlambda\/middlewareprotocol\/output","required":true,"type":"topic","title":"Output","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol\/Output","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBFileMiddleware":{"url":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware","kind":"symbol","title":"HBFileMiddleware","navigatorTitle":[{"text":"HBFileMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileMiddleware","type":"topic","role":"symbol","abstract":[{"text":"Middleware for serving static files.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFileMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMetricsMiddleware":{"url":"\/documentation\/hummingbirdlambda\/hbmetricsmiddleware","navigatorTitle":[{"text":"HBMetricsMiddleware","kind":"identifier"}],"type":"topic","title":"HBMetricsMiddleware","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMetricsMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMetricsMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSessionAuthenticator":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"HBSessionAuthenticator","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","abstract":[{"text":"Session authenticator","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator","kind":"symbol","title":"HBSessionAuthenticator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSessionAuthenticator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/Route":{"url":"\/documentation\/hummingbirdrouter\/route","kind":"symbol","title":"Route","navigatorTitle":[{"text":"Route","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Route","type":"topic","role":"symbol","abstract":[{"text":"Route definition","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Route","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/Middleware":{"url":"\/documentation\/hummingbirdlambda\/middleware","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"type":"topic","title":"Middleware","abstract":[{"text":"Middleware Handler with generic input, context and output types","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/Middleware","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator":{"title":"HBAuthenticator","role":"symbol","navigatorTitle":[{"text":"HBAuthenticator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthenticator","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","abstract":[{"type":"text","text":"Protocol for a middleware that checks if a request is authenticated."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/MiddlewareProtocol/handle(_:context:next:)":{"url":"\/documentation\/hummingbirdlambda\/middlewareprotocol\/handle(_:context:next:)","kind":"symbol","title":"handle(_:context:next:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol\/handle(_:context:next:)","type":"topic","role":"symbol","required":true,"abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBTracingMiddleware":{"title":"HBTracingMiddleware","role":"symbol","navigatorTitle":[{"text":"HBTracingMiddleware","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbtracingmiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBTracingMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup":{"url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup","kind":"symbol","title":"HBMiddlewareGroup","navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","type":"topic","role":"symbol","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBRouterBuilder":{"title":"HBRouterBuilder","role":"symbol","navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdrouter\/hbrouterbuilder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBRouterBuilder","abstract":[{"text":"Router built using a result builder","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLogRequestsMiddleware":{"url":"\/documentation\/hummingbirdlambda\/hblogrequestsmiddleware","navigatorTitle":[{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"type":"topic","title":"HBLogRequestsMiddleware","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLogRequestsMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBLogRequestsMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/MiddlewareProtocol":{"title":"MiddlewareProtocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/middlewareprotocol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/MiddlewareProtocol/Input":{"url":"\/documentation\/hummingbirdlambda\/middlewareprotocol\/input","kind":"symbol","title":"Input","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol\/Input","type":"topic","role":"symbol","required":true,"abstract":[],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup":{"url":"\/documentation\/hummingbirdrouter\/routegroup","navigatorTitle":[{"text":"RouteGroup","kind":"identifier"}],"type":"topic","title":"RouteGroup","abstract":[{"text":"Router middleware that applies a middleware chain to URIs with a specified prefix","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"title":"IsAuthenticatedMiddleware","role":"symbol","navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","abstract":[{"type":"text","text":"Middleware returning 404 for unauthenticated requests"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/Handle":{"url":"\/documentation\/hummingbirdrouter\/handle","kind":"symbol","title":"Handle","navigatorTitle":[{"text":"Handle","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/Handle","type":"topic","role":"symbol","abstract":[{"text":"Route Handler Middleware.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Handle","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareProtocol":{"url":"\/documentation\/hummingbirdlambda\/hbmiddlewareprotocol","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"type":"topic","title":"HBMiddlewareProtocol","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}]}}}