{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/server"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Server channel setup","type":"text"}],"metadata":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"server","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV","text":"HBHTTPChannelBuilder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ChildChannel","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","modules":[{"name":"HummingbirdLambda"}],"externalID":"s:11Hummingbird13HBApplicationV6server0A4Core20HBHTTPChannelBuilderVyq_Gvp","roleHeading":"Instance Property","title":"server","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"server"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV","kind":"typeIdentifier","text":"HBHTTPChannelBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ChildChannel"},{"kind":"text","text":">"}],"platforms":["Linux"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/server":{"title":"server","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","url":"\/documentation\/hummingbirdlambda\/hbapplication\/server","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"server","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBHTTPChannelBuilder","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore20HBHTTPChannelBuilderV"},{"text":"<","kind":"text"},{"text":"ChildChannel","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Server channel setup","type":"text"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"url":"\/documentation\/hummingbirdlambda\/hbapplication","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"type":"topic","title":"HBApplication","abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPChannelBuilder":{"abstract":[{"type":"text","text":"Build Channel Setup that takes an HTTP responder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPChannelBuilder","title":"HBHTTPChannelBuilder","url":"\/documentation\/hummingbirdcore\/hbhttpchannelbuilder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPChannelBuilder"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPChannelBuilder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}]}}}