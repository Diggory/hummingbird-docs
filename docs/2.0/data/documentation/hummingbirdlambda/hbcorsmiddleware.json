{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware"],"title":"Middleware"}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/handle(_:context:next:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/AllowOrigin"],"title":"Enumerations"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"HBBaseRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"If request has “origin” header then generate CORS headers. If method is OPTIONS"},{"type":"text","text":" "},{"type":"text","text":"then return an empty body with all the standard CORS headers otherwise send"},{"type":"text","text":" "},{"type":"text","text":"request onto the next handler and when you receive the response add a"},{"type":"text","text":" "},{"type":"text","text":"“access-control-allow-origin” header"}],"type":"paragraph"}]}],"metadata":{"modules":[{"name":"Hummingbird"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}],"title":"HBCORSMiddleware","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"symbolKind":"struct","role":"symbol","externalID":"s:11Hummingbird16HBCORSMiddlewareV","roleHeading":"Structure"},"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbcorsmiddleware"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBFileMiddleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBFileMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFileMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBFileMiddleware"}],"abstract":[{"type":"text","text":"Middleware for serving static files."}],"role":"symbol","title":"HBFileMiddleware","url":"\/documentation\/hummingbirdlambda\/hbfilemiddleware"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/MiddlewareProtocol":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/MiddlewareProtocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"role":"symbol","title":"MiddlewareProtocol","url":"\/documentation\/hummingbirdlambda\/middlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCORSMiddleware/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allowOrigin"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV11AllowOriginO","text":"AllowOrigin"},{"kind":"text","text":", "},{"kind":"externalParam","text":"allowHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV","text":"HTTPField"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes9HTTPFieldV4NameV","text":"Name"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"allowMethods"},{"kind":"text","text":": ["},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":"], ","kind":"text"},{"text":"allowCredentials","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"exposedHeaders","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]?, ","kind":"text"},{"text":"maxAge","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":"?)","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbcorsmiddleware\/init(alloworigin:allowheaders:allowmethods:allowcredentials:exposedheaders:maxage:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","title":"init(allowOrigin:allowHeaders:allowMethods:allowCredentials:exposedHeaders:maxAge:)","abstract":[{"type":"text","text":"Initialize CORS middleware"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/Middleware":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/Middleware","role":"symbol","url":"\/documentation\/hummingbirdlambda\/middleware","abstract":[{"type":"text","text":"Middleware Handler with generic input, context and output types"}],"navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"title":"Middleware","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareProtocol":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareProtocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareProtocol"}],"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"role":"symbol","title":"HBMiddlewareProtocol","url":"\/documentation\/hummingbirdlambda\/hbmiddlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLogRequestsMiddleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLogRequestsMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"role":"symbol","title":"HBLogRequestsMiddleware","url":"\/documentation\/hummingbirdlambda\/hblogrequestsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCORSMiddleware/handle(_:context:next:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV7Contextxmfp","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest"},{"kind":"text","text":", "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HBCORSMiddlewareV7Contextxmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore10HBResponseV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore10HBResponseV"}],"url":"\/documentation\/hummingbirdlambda\/hbcorsmiddleware\/handle(_:context:next:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/handle(_:context:next:)","title":"handle(_:context:next:)","abstract":[{"type":"text","text":"apply CORS middleware"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMetricsMiddleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMetricsMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMetricsMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}],"abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"role":"symbol","title":"HBMetricsMiddleware","url":"\/documentation\/hummingbirdlambda\/hbmetricsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext":{"title":"HBBaseRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"role":"symbol","title":"HBMiddlewareGroup","url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCORSMiddleware/AllowOrigin":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware\/AllowOrigin","abstract":[{"type":"text","text":"Defines what origins are allowed"}],"title":"HBCORSMiddleware.AllowOrigin","navigatorTitle":[{"text":"AllowOrigin","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbcorsmiddleware\/alloworigin","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AllowOrigin","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCORSMiddleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCORSMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBCORSMiddleware"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"role":"symbol","title":"HBCORSMiddleware","url":"\/documentation\/hummingbirdlambda\/hbcorsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBTracingMiddleware":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbtracingmiddleware","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}],"title":"HBTracingMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBTracingMiddleware"}]}}}