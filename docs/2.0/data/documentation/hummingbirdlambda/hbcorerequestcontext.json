{"metadata":{"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCoreRequestContext"}],"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"HBCoreRequestContext"}],"role":"symbol","externalID":"s:11Hummingbird20HBCoreRequestContextV","title":"HBCoreRequestContext","modules":[{"name":"Hummingbird"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCoreRequestContext","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCoreRequestContext\/init(allocator:logger:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCoreRequestContext\/endpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCoreRequestContext\/parameters"]}],"abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCoreRequestContext","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"seeAlsoSections":[{"title":"Request context","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRemoteAddressRequestContext"]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbcorerequestcontext"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRemoteAddressRequestContext":{"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"title":"HBRemoteAddressRequestContext","url":"\/documentation\/hummingbirdlambda\/hbremoteaddressrequestcontext","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRemoteAddressRequestContext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCoreRequestContext":{"abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBCoreRequestContext"}],"url":"\/documentation\/hummingbirdlambda\/hbcorerequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCoreRequestContext","title":"HBCoreRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCoreRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCoreRequestContext/endpointPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCoreRequestContext\/endpointPath","role":"symbol","abstract":[{"type":"text","text":"Endpoint path"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"endpointPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12EndpointPathV","text":"EndpointPath"}],"url":"\/documentation\/hummingbirdlambda\/hbcorerequestcontext\/endpointpath","kind":"symbol","title":"endpointPath","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCoreRequestContext/init(allocator:logger:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCoreRequestContext\/init(allocator:logger:)","role":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbirdlambda\/hbcorerequestcontext\/init(allocator:logger:)","kind":"symbol","title":"init(allocator:logger:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCoreRequestContext/parameters":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCoreRequestContext\/parameters","url":"\/documentation\/hummingbirdlambda\/hbcorerequestcontext\/parameters","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parameters"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird12HBParametersa","kind":"typeIdentifier","text":"HBParameters"}],"kind":"symbol","abstract":[{"text":"Parameters extracted from URI","type":"text"}],"title":"parameters","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBasicRequestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicRequestContext","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBBasicRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbbasicrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBasicRequestContext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"title":"HBBasicRequestContext","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestContext":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestContext","abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"HBRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrequestcontext","role":"symbol","title":"HBRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBBaseRequestContext":{"title":"HBBaseRequestContext","navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBBaseRequestContext","url":"\/documentation\/hummingbirdlambda\/hbbaserequestcontext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"role":"symbol","type":"topic","kind":"symbol"}}}