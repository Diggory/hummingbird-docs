{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEditedResponse\/setCookie(_:)","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Generator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"HBResponseGenerator"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setCookie","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HBCookie","preciseIdentifier":"s:11Hummingbird8HBCookieV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird16HBEditedResponseV9setCookieyyAA8HBCookieVF","extendedModule":"Hummingbird","title":"setCookie(_:)"},"abstract":[{"type":"text","text":"Set cookie on reponse patch"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbeditedresponse\/setcookie(_:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setCookie","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"cookie","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCookie","text":"HBCookie","preciseIdentifier":"s:11Hummingbird8HBCookieV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Can be accessed via "},{"type":"codeVoice","code":"request.response.setCookie(myCookie)"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEditedResponse"]]},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBEditedResponse/setCookie(_:)":{"title":"setCookie(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEditedResponse\/setCookie(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbeditedresponse\/setcookie(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setCookie"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11Hummingbird8HBCookieV","kind":"typeIdentifier","text":"HBCookie"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Set cookie on reponse patch"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Generator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"HBResponseGenerator"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCookie":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCookie","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCookie"}],"navigatorTitle":[{"kind":"identifier","text":"HBCookie"}],"abstract":[{"type":"text","text":"Structure holding a single cookie"}],"role":"symbol","title":"HBCookie","url":"\/documentation\/hummingbirdlambda\/hbcookie"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBEditedResponse":{"title":"HBEditedResponse","navigatorTitle":[{"kind":"identifier","text":"HBEditedResponse"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEditedResponse","role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbeditedresponse","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBEditedResponse"}]}}}