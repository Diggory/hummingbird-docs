{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter\/on(_:method:options:use:)-2bpfn","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Add path for "},{"type":"codeVoice","code":"HBRouteHandler"},{"type":"text","text":" that returns a value conforming to "},{"type":"codeVoice","code":"HBResponseGenerator"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbrouter\/on(_:method:options:use:)-2bpfn"]}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Handler","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE2on_6method7options3usexSS_9HTTPTypes11HTTPRequestV6MethodVAA0bJ7OptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0M0L_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"Hummingbird","externalID":"s:11Hummingbird15HBRouterMethodsPAAE2on_6method7options3usexSS_9HTTPTypes11HTTPRequestV6MethodVAA0bJ7OptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF::SYNTHESIZED::s:11Hummingbird8HBRouterC","role":"symbol","title":"on(_:method:options:use:)","modules":[{"name":"Hummingbird"}],"symbolKind":"method","roleHeading":"Instance Method"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Handler","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"path","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions"},{"text":" = [], ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handlerType","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Handler","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE2on_6method7options3usexSS_9HTTPTypes11HTTPRequestV6MethodVAA0bJ7OptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0M0L_qd__mfp"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Handler","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"HBRouteHandler","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14HBRouteHandlerP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"HBResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Handler","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]}],"kind":"declarations"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter\/HBRouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter\/HBRouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter\/HBRouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter\/HBRouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter\/HBRouterMethods-Implementations"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouteHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbroutehandler","navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"kind":"symbol","title":"HBRouteHandler","abstract":[{"type":"text","text":"Object for handling requests."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponseGenerator":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","title":"HBResponseGenerator","url":"\/documentation\/hummingbirdlambda\/hbresponsegenerator","type":"topic","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseGenerator"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","kind":"article","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"role":"collectionGroup","title":"Router","url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouter":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouter"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouter"}],"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"role":"symbol","title":"HBRouter","url":"\/documentation\/hummingbirdlambda\/hbrouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","title":"HBRouterMethodOptions","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","type":"topic","abstract":[{"type":"text","text":"Options available to routes"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouter/HBRouterMethods-Implementations":{"type":"topic","role":"collectionGroup","url":"\/documentation\/hummingbirdlambda\/hbrouter\/hbroutermethods-implementations","kind":"article","title":"HBRouterMethods Implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter\/HBRouterMethods-Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouter/on(_:method:options:use:)-2bpfn":{"role":"symbol","title":"on(_:method:options:use:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter\/on(_:method:options:use:)-2bpfn","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Handler","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Method","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Handler","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE2on_6method7options3usexSS_9HTTPTypes11HTTPRequestV6MethodVAA0bJ7OptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0M0L_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Add path for "},{"type":"codeVoice","code":"HBRouteHandler"},{"type":"text","text":" that returns a value conforming to "},{"code":"HBResponseGenerator","type":"codeVoice"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbrouter\/on(_:method:options:use:)-2bpfn"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","url":"\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","kind":"article","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"role":"collectionGroup","title":"Request Contexts","url":"\/documentation\/hummingbird\/requestcontexts"}}}