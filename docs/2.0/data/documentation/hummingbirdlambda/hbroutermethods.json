{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath"],"title":"Router","generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"HBRouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/Context"],"title":"Associated Types"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/delete(_:options:use:)-6jbt0","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/delete(_:options:use:)-8620c","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/get(_:options:use:)-3e2pe","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/get(_:options:use:)-8ajnt","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/head(_:options:use:)-3hjgz","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/head(_:options:use:)-55k71","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-5ck4h","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/patch(_:options:use:)-3srzb","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/patch(_:options:use:)-6qiiv","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/post(_:options:use:)-262iy","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/post(_:options:use:)-7n4q0","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/put(_:options:use:)-7wfkp","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/put(_:options:use:)-8koj5"],"title":"Instance Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}]}],"kind":"declarations"}],"relationshipsSections":[{"type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup"],"title":"Conforming Types"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbroutermethods"]}],"metadata":{"title":"HBRouterMethods","symbolKind":"protocol","modules":[{"name":"Hummingbird"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"externalID":"s:11Hummingbird15HBRouterMethodsP","roleHeading":"Protocol","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}]},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCallbackResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbcallbackresponder","navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"kind":"symbol","title":"HBCallbackResponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","title":"HBRouterMethods","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethods","kind":"symbol","abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"HBRouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/EndpointPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/EndpointPath","type":"topic","url":"\/documentation\/hummingbirdlambda\/endpointpath","navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}],"kind":"symbol","title":"EndpointPath","abstract":[{"type":"text","text":"Endpoint path storage"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EndpointPath"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/Context":{"type":"topic","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBBaseRequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird20HBBaseRequestContextP"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/context","required":true,"title":"Context","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/Context"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/patch(_:options:use:)-6qiiv":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/patch(_:options:use:)-6qiiv","role":"symbol","title":"patch(_:options:use:)","kind":"symbol","abstract":[{"text":"PATCH path for closure returning type conforming to HBResponseGenerator","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/patch(_:options:use:)-6qiiv","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"patch","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Handler","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Handler","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE5patch_7options3usexSS_AA0B13MethodOptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0J0L_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/put(_:options:use:)-7wfkp":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/put(_:options:use:)-7wfkp","abstract":[{"type":"text","text":"PUT path for async closure returning type conforming to ResponseEncodable"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"put","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"put(_:options:use:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/put(_:options:use:)-7wfkp","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","title":"HBRouterMethodOptions","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","type":"topic","abstract":[{"type":"text","text":"Options available to routes"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","kind":"article","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"role":"collectionGroup","title":"Router","url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/delete(_:options:use:)-8620c":{"title":"delete(_:options:use:)","abstract":[{"text":"DELETE path for async closure returning type conforming to ResponseEncodable","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/delete(_:options:use:)-8620c","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/delete(_:options:use:)-8620c","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"delete","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":", "},{"preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/put(_:options:use:)-8koj5":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/put(_:options:use:)-8koj5","kind":"symbol","title":"put(_:options:use:)","url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/put(_:options:use:)-8koj5","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"put"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE3put_7options3usexSS_AA0B13MethodOptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0J0L_qd__mfp","kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"PUT path for closure returning type conforming to HBResponseGenerator"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/group(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/group(_:)","abstract":[{"text":"add group","type":"text"}],"title":"group(_:)","required":true,"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/group(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"HBRouterGroup","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/get(_:options:use:)-8ajnt":{"title":"get(_:options:use:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"get","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","text":"HBResponseGenerator","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/get(_:options:use:)-8ajnt","abstract":[{"type":"text","text":"GET path for async closure returning type conforming to ResponseEncodable"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/get(_:options:use:)-8ajnt","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/head(_:options:use:)-3hjgz":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/head(_:options:use:)-3hjgz","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/head(_:options:use:)-3hjgz","type":"topic","role":"symbol","title":"head(_:options:use:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"head"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","text":"HBResponseGenerator"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"HEAD path for async closure returning type conforming to ResponseEncodable","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbresponder","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"kind":"symbol","title":"HBResponder","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/head(_:options:use:)-55k71":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/head(_:options:use:)-55k71","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"head"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE4head_7options3usexSS_AA0B13MethodOptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0J0L_qd__mfp","kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"head(_:options:use:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/head(_:options:use:)-55k71","abstract":[{"type":"text","text":"HEAD path for closure returning type conforming to HBResponseGenerator"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/patch(_:options:use:)-3srzb":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/patch(_:options:use:)-3srzb","type":"topic","title":"patch(_:options:use:)","role":"symbol","abstract":[{"type":"text","text":"PATCH path for async closure returning type conforming to ResponseEncodable"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/patch(_:options:use:)-3srzb","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"patch","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Context","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponderBuilder":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponderBuilder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponderBuilder","title":"HBResponderBuilder","url":"\/documentation\/hummingbirdlambda\/hbresponderbuilder","type":"topic","abstract":[{"type":"text","text":"A type that has a single method to build a responder"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponderBuilder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/post(_:options:use:)-262iy":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/post(_:options:use:)-262iy","kind":"symbol","abstract":[{"text":"POST path for async closure returning type conforming to ResponseEncodable","type":"text"}],"type":"topic","title":"post(_:options:use:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/post(_:options:use:)-262iy","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"post"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"HBRequest","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"HBResponseGenerator","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouteHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbroutehandler","navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"kind":"symbol","title":"HBRouteHandler","abstract":[{"type":"text","text":"Object for handling requests."}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterResponder":{"kind":"symbol","navigatorTitle":[{"text":"HBRouterResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterResponder","title":"HBRouterResponder","url":"\/documentation\/hummingbirdlambda\/hbrouterresponder","type":"topic","abstract":[{"type":"text","text":"Directs requests to handlers based on the request uri and method."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterResponder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","title":"HBRouterGroup","navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"url":"\/documentation\/hummingbirdlambda\/hbroutergroup","kind":"symbol","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/post(_:options:use:)-7n4q0":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"post"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE4post_7options3usexSS_AA0B13MethodOptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0J0L_qd__mfp","text":"Handler","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/post(_:options:use:)-7n4q0","abstract":[{"text":"POST path for closure returning type conforming to HBResponseGenerator","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/post(_:options:use:)-7n4q0","role":"symbol","title":"post(_:options:use:)","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/delete(_:options:use:)-6jbt0":{"role":"symbol","abstract":[{"text":"DELETE path for closure returning type conforming to HBResponseGenerator","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"delete","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Handler","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Handler","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE6delete_7options3usexSS_AA0B13MethodOptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0J0L_qd__mfp","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"delete(_:options:use:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/delete(_:options:use:)-6jbt0","url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/delete(_:options:use:)-6jbt0"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/get(_:options:use:)-3e2pe":{"abstract":[{"type":"text","text":"GET path for closure returning type conforming to HBResponseGenerator"}],"role":"symbol","type":"topic","title":"get(_:options:use:)","url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/get(_:options:use:)-3e2pe","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE3get_7options3usexSS_AA0B13MethodOptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_6OutputQyd__Rsd_0_r0_lF0J0L_qd__mfp","text":"Handler"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/get(_:options:use:)-3e2pe"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouter":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouter","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouter"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouter"}],"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"role":"symbol","title":"HBRouter","url":"\/documentation\/hummingbirdlambda\/hbrouter"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","url":"\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible, modern server framework written in Swift."}],"title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/RouterPath":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/RouterPath","title":"RouterPath","navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"url":"\/documentation\/hummingbirdlambda\/routerpath","kind":"symbol","abstract":[{"text":"Split router path into components","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/on(_:method:options:use:)-5ck4h":{"required":true,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV"},{"text":".","kind":"text"},{"text":"Method","kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore9HBRequestV"},{"text":", ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP7ContextQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP2on_6method7options3usexSS_9HTTPTypes11HTTPRequestV6MethodVAA0bJ7OptionsVqd__0A4Core9HBRequestV_7ContextQztYaYbKctAA19HBResponseGeneratorRd__lF6OutputL_qd__mfp"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"defaultImplementations":2,"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/on(_:method:options:use:)-5ck4h","title":"on(_:method:options:use:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-5ck4h","type":"topic","abstract":[{"text":"Add path for async closure","type":"text"}]}}}