{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","hierarchy":{"paths":[[]]},"metadata":{"title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"},"sections":[],"abstract":[{"text":"Lightweight, flexible, modern server framework written in Swift.","type":"text"}],"topicSections":[{"anchor":"Getting-Started","title":"Getting Started","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords"],"anchor":"Guides","title":"Guides"}],"seeAlsoSections":[{"anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"],"title":"Related Documentation"}],"primaryContentSections":[{"content":[{"type":"heading","text":"Hummingbird","anchor":"Hummingbird","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Hummingbird is a lightweight and flexible web application framework. It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2."}]},{"code":["import Hummingbird","","\/\/ create router and add a single GET \/hello route","let router = Router()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","\/\/ create application using router","let app = Application(","    router: router,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","\/\/ run hummingbird application","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"text":"Extending Hummingbird","level":3,"type":"heading","anchor":"Extending-Hummingbird"},{"type":"paragraph","inlineContent":[{"text":"Hummingbird is designed to require the least number of dependencies possible, but this means many features are unavailable to the core libraries. Additional features are provided through extensions. The Hummingbird repository comes with additional modules","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"},{"text":": TLS support.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","type":"reference"},{"text":": Support for HTTP2 upgrades.","type":"text"}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},{"type":"text","text":": helper functions to aid testing Hummingbird projects."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddleware":{"kind":"article","url":"\/documentation\/hummingbird\/authenticatormiddleware","role":"collectionGroup","title":"Authenticator Middleware","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddleware","abstract":[{"type":"text","text":"Request authentication middleware"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"url":"\/tutorials\/todos","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","type":"topic","role":"overview","kind":"overview","title":"Build a Todos application.","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"role":"collection","title":"HummingbirdWebSocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"url":"\/documentation\/hummingbirdwebsocket","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","title":"HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server.","type":"text"}],"url":"\/documentation\/hummingbirdhttp2","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"type":"topic","kind":"article","role":"article","url":"\/documentation\/hummingbird\/migratingtov2","title":"Migrating to Hummingbird v2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"role":"collectionGroup","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/errorhandling","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"title":"Error Handling","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Hummingbird uses "},{"type":"codeVoice","code":"Codable"},{"text":" to decode requests and encode responses.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/encodinganddecoding","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","title":"Encoding and Decoding","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"role":"collection","title":"Mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"url":"\/documentation\/mustache","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GettingStarted":{"type":"topic","kind":"article","role":"article","url":"\/documentation\/hummingbird\/gettingstarted","title":"Getting Started with Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Create a new project on GitHub or an app locally from a starter template."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"role":"collectionGroup","title":"Persistent data","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"url":"\/documentation\/hummingbird\/persistentdata","type":"topic","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/OneTimePasswords":{"role":"article","kind":"article","abstract":[{"text":"A one time password (OTP) valid for only one login session.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords","title":"One Time Passwords","type":"topic","url":"\/documentation\/hummingbird\/onetimepasswords"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/jobsguide","title":"Jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}],"type":"topic","url":"\/documentation\/hummingbird\/servicelifecycle","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","title":"Service Lifecycle","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"title":"HummingbirdAuth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"url":"\/documentation\/hummingbirdauth","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/routerguide","title":"Router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","title":"HummingbirdRedis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"url":"\/documentation\/hummingbirdredis","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collection","kind":"symbol","title":"HummingbirdLambda","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","title":"HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"title":"HummingbirdTesting","role":"collection","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"url":"\/documentation\/hummingbirdtesting","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"type":"topic","url":"\/documentation\/hummingbird\/testing","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","title":"Testing","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"title":"Jobs","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/jobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdtls","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}],"title":"HummingbirdTLS","type":"topic","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Sessions":{"role":"collectionGroup","title":"Sessions","abstract":[{"text":"Session based authentication","type":"text"}],"url":"\/documentation\/hummingbird\/sessions","type":"topic","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"title":"HummingbirdFluent","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"url":"\/documentation\/hummingbirdfluent","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/middlewareguide","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","title":"Middleware","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}]},"logo.png":{"identifier":"logo.png","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]}}}