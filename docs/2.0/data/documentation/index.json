{"kind":"article","sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","interfaceLanguage":"swift"},"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"topicSections":[{"anchor":"Getting-Started","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"title":"Getting Started"},{"anchor":"Hummingbird-Server","title":"Hummingbird Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2"]},{"title":"Authentication","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords"],"anchor":"Authentication"},{"anchor":"WebSockets","title":"WebSockets","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketClientGuide"]},{"title":"Database Integration","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigrationsGuide","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/MongoKitten"],"anchor":"Database-Integration"},{"title":"Offloading work","anchor":"Offloading-work","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheFeatures"],"title":"Mustache","anchor":"Mustache"},{"title":"Reference Documentation","anchor":"Reference-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Hummingbird","anchor":"Hummingbird"},{"inlineContent":[{"type":"text","text":"Hummingbird is a lightweight and flexible web application framework. It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2."}],"type":"paragraph"},{"code":["import Hummingbird","\/\/ create router and add a single GET \/hello route","let router = Router()","    .get(\"hello\") { request, _ -> String in","        return \"Hello\"","    }","\/\/ create application using router","let app = Application(router: router)","\/\/ run hummingbird application","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Below is a list of guides and tutorials to help you get started with building your own Hummingbird based web application.","type":"text"}],"type":"paragraph"}]}],"metadata":{"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"title":"Hummingbird Documentation"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GettingStarted":{"url":"\/documentation\/hummingbird\/gettingstarted","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","title":"Getting Started with Hummingbird","abstract":[{"text":"Create a new project on GitHub or an app locally from a starter template.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddlewareGuide":{"role":"article","title":"Authenticator Middleware","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddlewareGuide","url":"\/documentation\/hummingbird\/authenticatormiddlewareguide","abstract":[{"text":"Request authentication middleware","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"kind":"article","role":"article","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","title":"Service Lifecycle","type":"topic","url":"\/documentation\/hummingbird\/servicelifecycle","abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"url":"\/documentation\/mustache","role":"collection","abstract":[{"type":"text","text":"Mustache template engine."}],"type":"topic","title":"Mustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheSyntax":{"role":"article","title":"Mustache Syntax","url":"\/documentation\/hummingbird\/mustachesyntax","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","kind":"article","abstract":[{"text":"Overview of Mustache Syntax","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"title":"Jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","kind":"symbol","type":"topic","url":"\/documentation\/jobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"images":[{"identifier":"logo.png","type":"icon"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","type":"topic","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"title":"HummingbirdPostgres","type":"topic","url":"\/documentation\/hummingbirdpostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Working with Postgres databases."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"url":"\/documentation\/hummingbird\/middlewareguide","role":"article","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"type":"topic","title":"Middleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","kind":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdauth","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheFeatures":{"url":"\/documentation\/hummingbird\/mustachefeatures","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","title":"Mustache Features","abstract":[{"text":"An overview of the features of swift-mustache.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheFeatures","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"kind":"article","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","title":"Testing","type":"topic","url":"\/documentation\/hummingbird\/testing","abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"url":"\/documentation\/hummingbirdcompression","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"kind":"symbol","title":"HummingbirdCompression","images":[{"type":"icon","identifier":"logo.png"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketServerUpgrade":{"role":"article","title":"WebSocket Server Upgrade","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","url":"\/documentation\/hummingbird\/websocketserverupgrade","abstract":[{"text":"Support for upgrading HTTP1 connections to WebSocket.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"url":"\/documentation\/hummingbird\/persistentdata","role":"article","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"type":"topic","title":"Persistent data","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","kind":"article","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"url":"\/documentation\/hummingbird\/errorhandling","role":"article","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"title":"Error Handling","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","kind":"article","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","role":"collection","abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"title":"HummingbirdLambda","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"title":"Store Data with Fluent","kind":"overview","url":"\/tutorials\/fluent","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","role":"overview","abstract":[{"text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies.","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/MongoKitten":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/MongoKitten","title":"Store Data with MongoKitten","role":"overview","url":"\/tutorials\/mongokitten","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with MongoKitten to create and share your kittens."}],"kind":"overview"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"Hummingbird","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"url":"\/documentation\/hummingbird\/jobsguide","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","title":"Jobs","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"url":"\/documentation\/hummingbird\/migratingtov2","role":"article","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"type":"topic","title":"Migrating to Hummingbird v2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","kind":"article","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","title":"HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/OneTimePasswords":{"role":"article","title":"One Time Passwords","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords","url":"\/documentation\/hummingbird\/onetimepasswords","abstract":[{"text":"A one time password (OTP) valid for only one login session.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketClientGuide":{"url":"\/documentation\/hummingbird\/websocketclientguide","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","title":"WebSocket Client","abstract":[{"text":"Connecting to WebSocket servers.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketClientGuide","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"url":"\/documentation\/hummingbird\/loggingmetricsandtracing","role":"article","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"type":"topic","title":"Logging, Metrics and Tracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","kind":"article","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterBuilderGuide":{"kind":"article","role":"article","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","title":"Result Builder Router","type":"topic","url":"\/documentation\/hummingbird\/routerbuilderguide","abstract":[{"type":"text","text":"Building your router using a result builder."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"url":"\/documentation\/hummingbirdfluent","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","title":"HummingbirdFluent","type":"topic","kind":"symbol","abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Sessions":{"url":"\/documentation\/hummingbird\/sessions","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","title":"Sessions","abstract":[{"text":"Session based authentication","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"kind":"article","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","title":"Router","type":"topic","url":"\/documentation\/hummingbird\/routerguide","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"kind":"article","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","title":"Request Contexts","type":"topic","url":"\/documentation\/hummingbird\/requestcontexts","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigrationsGuide":{"role":"article","title":"Database Migrations","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigrationsGuide","url":"\/documentation\/hummingbird\/migrationsguide","abstract":[{"text":"Managing database structure changes.","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"type":"topic","url":"\/tutorials\/todos","kind":"overview","role":"overview","title":"Build a Todos application."},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","title":"WSClient","url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"kind":"article","role":"article","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","title":"Encoding and Decoding","type":"topic","url":"\/documentation\/hummingbird\/encodinganddecoding","abstract":[{"type":"text","text":"Hummingbird uses "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to decode requests and encode responses."}]}}}