{"metadata":{"title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection"},"topicSections":[{"title":"Getting Started","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"anchor":"Getting-Started"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2"],"anchor":"Hummingbird-Server","title":"Hummingbird Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords"],"anchor":"Authentication","title":"Authentication"},{"anchor":"WebSockets","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketClientGuide"],"title":"WebSockets"},{"anchor":"Database-Integration","title":"Database Integration","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigrationsGuide","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/MongoKitten"]},{"title":"Offloading work","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"],"anchor":"Offloading-work"},{"title":"Mustache","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheFeatures"],"anchor":"Mustache"},{"anchor":"Reference-Documentation","title":"Reference Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"kind":"article","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Hummingbird","text":"Hummingbird","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Hummingbird is a lightweight and flexible web application framework. It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2."}]},{"type":"codeListing","code":["import Hummingbird","\/\/ create router and add a single GET \/hello route","let router = Router()","    .get(\"hello\") { request, _ -> String in","        return \"Hello\"","    }","\/\/ create application using router","let app = Application(router: router)","\/\/ run hummingbird application","try await app.runService()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Below is a list of guides and tutorials to help you get started with building your own Hummingbird based web application.","type":"text"}]}]}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","interfaceLanguage":"swift"},"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheFeatures":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheFeatures","role":"article","abstract":[{"type":"text","text":"An overview of the features of swift-mustache."}],"title":"Mustache Features","url":"\/documentation\/hummingbird\/mustachefeatures","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"type":"topic","role":"overview","url":"\/tutorials\/todos","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"title":"Build a Todos application.","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","kind":"overview"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"title":"Persistent data","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/persistentdata","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","abstract":[{"type":"text","text":"How to persist data between requests to your server."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddlewareGuide":{"type":"topic","role":"article","url":"\/documentation\/hummingbird\/authenticatormiddlewareguide","abstract":[{"type":"text","text":"Request authentication middleware"}],"title":"Authenticator Middleware","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddlewareGuide","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"title":"Logging, Metrics and Tracing","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}]},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"type":"topic","role":"overview","url":"\/tutorials\/fluent","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies."}],"title":"Store Data with Fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","kind":"overview"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"title":"Jobs","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/jobsguide","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}]},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"topic","kind":"symbol","title":"HummingbirdRedis","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"title":"Migrating to Hummingbird v2","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/migratingtov2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","abstract":[{"text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigrationsGuide":{"type":"topic","role":"article","url":"\/documentation\/hummingbird\/migrationsguide","abstract":[{"text":"Managing database structure changes.","type":"text"}],"title":"Database Migrations","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigrationsGuide","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheSyntax":{"title":"Mustache Syntax","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/mustachesyntax","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","abstract":[{"type":"text","text":"Overview of Mustache Syntax"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Working with Postgres databases.","type":"text"}],"title":"HummingbirdPostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","kind":"symbol","url":"\/documentation\/hummingbirdpostgres","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","role":"article","url":"\/documentation\/hummingbird\/requestcontexts","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"title":"Request Contexts","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"title":"HummingbirdFluent","kind":"symbol","url":"\/documentation\/hummingbirdfluent","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterBuilderGuide":{"title":"Result Builder Router","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/routerbuilderguide","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","abstract":[{"text":"Building your router using a result builder.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"type":"topic","role":"article","url":"\/documentation\/hummingbird\/encodinganddecoding","abstract":[{"type":"text","text":"Hummingbird uses "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to decode requests and encode responses."}],"title":"Encoding and Decoding","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"title":"Router","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/routerguide","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"url":"\/documentation\/hummingbirdauth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","type":"topic","kind":"symbol","title":"HummingbirdAuth","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"title":"HummingbirdCompression","kind":"symbol","url":"\/documentation\/hummingbirdcompression","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"type":"topic","role":"article","url":"\/documentation\/hummingbird\/servicelifecycle","abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}],"title":"Service Lifecycle","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"url":"\/documentation\/jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","type":"topic","kind":"symbol","title":"Jobs","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/OneTimePasswords":{"title":"One Time Passwords","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/onetimepasswords","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords","abstract":[{"type":"text","text":"A one time password (OTP) valid for only one login session."}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"title":"Mustache","kind":"symbol","url":"\/documentation\/mustache","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GettingStarted":{"type":"topic","role":"article","url":"\/documentation\/hummingbird\/gettingstarted","abstract":[{"type":"text","text":"Create a new project on GitHub or an app locally from a starter template."}],"title":"Getting Started with Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"url":"\/documentation\/hummingbirdlambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","type":"topic","kind":"symbol","title":"HummingbirdLambda","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/tutorials/MongoKitten":{"title":"Store Data with MongoKitten","type":"topic","kind":"overview","role":"overview","url":"\/tutorials\/mongokitten","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/MongoKitten","abstract":[{"text":"A tutorial that shows you how to set up Hummingbird 2 with MongoKitten to create and share your kittens.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"title":"HummingbirdCore","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Sessions":{"type":"topic","role":"article","url":"\/documentation\/hummingbird\/sessions","abstract":[{"text":"Session based authentication","type":"text"}],"title":"Sessions","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"title":"Middleware","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/middlewareguide","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketServerUpgrade":{"type":"topic","role":"article","url":"\/documentation\/hummingbird\/websocketserverupgrade","abstract":[{"type":"text","text":"Support for upgrading HTTP1 connections to WebSocket."}],"title":"WebSocket Server Upgrade","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"title":"Testing","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketClientGuide":{"type":"topic","role":"article","url":"\/documentation\/hummingbird\/websocketclientguide","abstract":[{"type":"text","text":"Connecting to WebSocket servers."}],"title":"WebSocket Client","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketClientGuide","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"kind":"symbol","title":"HummingbirdWebSocket","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","type":"topic","kind":"symbol","title":"WSClient","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"title":"Error Handling","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"article","role":"article","url":"\/documentation\/hummingbird\/errorhandling","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","abstract":[{"type":"text","text":"How to build errors for the server to return."}]}}}