{"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"primaryContentSections":[{"content":[{"level":2,"anchor":"Hummingbird","text":"Hummingbird","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Hummingbird is a lightweight and flexible web application framework. It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2."}]},{"syntax":"swift","type":"codeListing","code":["import Hummingbird","\/\/ create router and add a single GET \/hello route","let router = Router()","    .get(\"hello\") { request, _ -> String in","        return \"Hello\"","    }","\/\/ create application using router","let app = Application(router: router)","\/\/ run hummingbird application","try await app.runService()"]},{"inlineContent":[{"type":"text","text":"Below is a list of guides and tutorials to help you get started with building your own Hummingbird based web application."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"anchor":"Getting-Started","title":"Getting Started"},{"title":"Hummingbird Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2"],"anchor":"Hummingbird-Server"},{"anchor":"Authentication","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords"],"title":"Authentication"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketClientGuide"],"title":"WebSockets","anchor":"WebSockets"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigrationsGuide","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/MongoKitten"],"anchor":"Database-Integration","title":"Database Integration"},{"anchor":"Offloading-work","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"],"title":"Offloading work"},{"anchor":"Mustache","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheFeatures"],"title":"Mustache"},{"anchor":"Reference-Documentation","title":"Reference Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","sections":[],"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"title":"Hummingbird Documentation","role":"collection"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketServerUpgrade":{"title":"WebSocket Server Upgrade","abstract":[{"type":"text","text":"Support for upgrading HTTP1 connections to WebSocket."}],"url":"\/documentation\/hummingbird\/websocketserverupgrade","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"title":"Migrating to Hummingbird v2","kind":"article","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","type":"topic","role":"article","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/migratingtov2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"title":"HummingbirdLambda","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheFeatures":{"title":"Mustache Features","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/mustachefeatures","kind":"article","abstract":[{"text":"An overview of the features of swift-mustache.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheFeatures","type":"topic","role":"article"},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"title":"Store Data with Fluent","url":"\/tutorials\/fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","kind":"overview","type":"topic","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies."}],"role":"overview"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working.","type":"text"}],"url":"\/documentation\/hummingbird\/loggingmetricsandtracing","kind":"article","role":"article","title":"Logging, Metrics and Tracing"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"url":"\/documentation\/hummingbirdfluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","abstract":[{"type":"text","text":"Integration with Vaporâ€™s Fluent ORM framework."}],"kind":"symbol","role":"collection","title":"HummingbirdFluent","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheSyntax":{"role":"article","title":"Mustache Syntax","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","kind":"article","abstract":[{"type":"text","text":"Overview of Mustache Syntax"}],"url":"\/documentation\/hummingbird\/mustachesyntax","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"url":"\/documentation\/hummingbirdcompression","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","kind":"symbol","role":"collection","title":"HummingbirdCompression","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/OneTimePasswords":{"url":"\/documentation\/hummingbird\/onetimepasswords","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"text":"A one time password (OTP) valid for only one login session.","type":"text"}],"title":"One Time Passwords","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"url":"\/documentation\/jobs","type":"topic","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","role":"collection","title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"url":"\/documentation\/hummingbird\/testing","kind":"article","role":"article","title":"Testing"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"url":"\/tutorials\/todos","role":"overview","type":"topic","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"title":"Build a Todos application.","kind":"overview","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"title":"Middleware","kind":"article","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","type":"topic","role":"article","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/middlewareguide"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"url":"\/documentation\/wsclient","kind":"symbol","abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"title":"WSClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterBuilderGuide":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Building your router using a result builder."}],"url":"\/documentation\/hummingbird\/routerbuilderguide","kind":"article","role":"article","title":"Result Builder Router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","type":"topic","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","role":"collection","title":"HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"url":"\/documentation\/hummingbird\/persistentdata","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"title":"Persistent data","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddlewareGuide":{"url":"\/documentation\/hummingbird\/authenticatormiddlewareguide","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"text":"Request authentication middleware","type":"text"}],"title":"Authenticator Middleware","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddlewareGuide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketClientGuide":{"url":"\/documentation\/hummingbird\/websocketclientguide","title":"WebSocket Client","role":"article","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketClientGuide","abstract":[{"text":"Connecting to WebSocket servers.","type":"text"}],"type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontexts","kind":"article","role":"article","title":"Request Contexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"title":"Jobs","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/jobsguide","kind":"article","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","type":"topic","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"title":"Error Handling","kind":"article","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","type":"topic","role":"article","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/errorhandling"},"doc://com.opticalaberration.hummingbird/tutorials/MongoKitten":{"url":"\/tutorials\/mongokitten","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/MongoKitten","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with MongoKitten to create and share your kittens."}],"kind":"overview","role":"overview","title":"Store Data with MongoKitten","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"url":"\/documentation\/hummingbirdpostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","abstract":[{"type":"text","text":"Working with Postgres databases."}],"kind":"symbol","role":"collection","title":"HummingbirdPostgres","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Sessions":{"abstract":[{"type":"text","text":"Session based authentication"}],"type":"topic","role":"article","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"title":"Sessions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","url":"\/documentation\/hummingbird\/sessions"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigrationsGuide":{"title":"Database Migrations","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbird\/migrationsguide","kind":"article","abstract":[{"type":"text","text":"Managing database structure changes."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigrationsGuide","type":"topic","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GettingStarted":{"abstract":[{"type":"text","text":"Create a new project on GitHub or an app locally from a starter template."}],"type":"topic","role":"article","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"title":"Getting Started with Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","url":"\/documentation\/hummingbird\/gettingstarted"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"url":"\/documentation\/hummingbirdauth","type":"topic","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","role":"collection","title":"HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","kind":"symbol","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"title":"Service Lifecycle","kind":"article","abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","type":"topic","role":"article","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/servicelifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"url":"\/documentation\/hummingbirdwebsocket","kind":"symbol","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"title":"HummingbirdWebSocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","type":"topic","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","images":[{"type":"icon","identifier":"logo.png"}],"title":"Encoding and Decoding","kind":"article","role":"article","type":"topic","abstract":[{"text":"Hummingbird uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to decode requests and encode responses."}],"url":"\/documentation\/hummingbird\/encodinganddecoding"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"url":"\/documentation\/hummingbird\/routerguide","kind":"article","role":"article","title":"Router"}}}