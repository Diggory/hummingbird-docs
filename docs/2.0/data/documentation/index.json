{"topicSections":[{"anchor":"Getting-Started","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"title":"Getting Started"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2"],"title":"Hummingbird Server","anchor":"Hummingbird-Server"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords"],"title":"Authentication","anchor":"Authentication"},{"anchor":"WebSockets","title":"WebSockets","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketClientGuide"]},{"title":"Database Integration","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigrationsGuide","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/MongoKitten"],"anchor":"Database-Integration"},{"title":"Offloading work","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"],"anchor":"Offloading-work"},{"title":"Mustache","anchor":"Mustache","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheFeatures"]},{"anchor":"Reference-Documentation","title":"Reference Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","interfaceLanguage":"swift"},"hierarchy":{"paths":[[]]},"sections":[],"metadata":{"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"title":"Hummingbird Documentation"},"abstract":[{"type":"text","text":"Documentation for Hummingbird the lightweight, flexible, modern server framework."}],"primaryContentSections":[{"kind":"content","content":[{"text":"Hummingbird","level":2,"anchor":"Hummingbird","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Hummingbird is a lightweight and flexible web application framework. It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import Hummingbird","\/\/ create router and add a single GET \/hello route","let router = Router()","    .get(\"hello\") { request, _ -> String in","        return \"Hello\"","    }","\/\/ create application using router","let app = Application(router: router)","\/\/ run hummingbird application","try await app.runService()"]},{"inlineContent":[{"type":"text","text":"Below is a list of guides and tutorials to help you get started with building your own Hummingbird based web application."}],"type":"paragraph"}]}],"kind":"article","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Sessions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Sessions","title":"Sessions","url":"\/documentation\/hummingbird\/sessions","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Session based authentication","type":"text"}],"role":"article","kind":"article"},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"kind":"overview","title":"Store Data with Fluent","url":"\/tutorials\/fluent","type":"topic","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies."}],"role":"overview","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"kind":"article","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontexts","images":[{"identifier":"logo.png","type":"icon"}],"title":"Request Contexts","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"kind":"article","title":"Middleware","url":"\/documentation\/hummingbird\/middlewareguide","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"type":"topic","role":"collection","kind":"symbol","title":"HummingbirdWebSocket","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdwebsocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/wsclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","title":"WSClient","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic","role":"collection","kind":"symbol","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","role":"collection","kind":"symbol","url":"\/documentation\/hummingbirdredis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","role":"article","kind":"article","url":"\/documentation\/hummingbird\/routerguide","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"title":"Router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"kind":"article","title":"Logging, Metrics and Tracing","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketClientGuide":{"kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/websocketclientguide","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketClientGuide","role":"article","title":"WebSocket Client","abstract":[{"type":"text","text":"Connecting to WebSocket servers."}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"title":"Build a Todos application.","url":"\/tutorials\/todos","kind":"overview","role":"overview","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","role":"article","kind":"article","url":"\/documentation\/hummingbird\/encodinganddecoding","abstract":[{"type":"text","text":"Hummingbird uses "},{"type":"codeVoice","code":"Codable"},{"text":" to decode requests and encode responses.","type":"text"}],"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"title":"Encoding and Decoding"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/WebSocketServerUpgrade":{"kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/WebSocketServerUpgrade","title":"WebSocket Server Upgrade","role":"article","url":"\/documentation\/hummingbird\/websocketserverupgrade","abstract":[{"text":"Support for upgrading HTTP1 connections to WebSocket.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","role":"collection","kind":"symbol","abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"url":"\/documentation\/hummingbirdfluent","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdFluent"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Mustache template engine."}],"type":"topic","url":"\/documentation\/mustache","kind":"symbol","title":"Mustache","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","role":"collection","kind":"symbol","url":"\/documentation\/hummingbirdlambda","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"type":"topic","role":"collection","kind":"symbol","title":"Jobs","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"kind":"article","title":"Migrating to Hummingbird v2","url":"\/documentation\/hummingbird\/migratingtov2","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2","type":"text"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2"},"doc://com.opticalaberration.hummingbird/tutorials/MongoKitten":{"kind":"overview","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with MongoKitten to create and share your kittens."}],"url":"\/tutorials\/mongokitten","title":"Store Data with MongoKitten","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/MongoKitten","role":"overview"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterBuilderGuide":{"kind":"article","title":"Result Builder Router","url":"\/documentation\/hummingbird\/routerbuilderguide","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Building your router using a result builder.","type":"text"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterBuilderGuide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","role":"article","kind":"article","url":"\/documentation\/hummingbird\/servicelifecycle","abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"title":"Service Lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","role":"collection"},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","role":"article","kind":"article","url":"\/documentation\/hummingbird\/persistentdata","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"title":"Persistent data"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcompression","kind":"symbol","title":"HummingbirdCompression","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GettingStarted":{"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","role":"article","abstract":[{"text":"Create a new project on GitHub or an app locally from a starter template.","type":"text"}],"title":"Getting Started with Hummingbird","url":"\/documentation\/hummingbird\/gettingstarted","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheFeatures":{"url":"\/documentation\/hummingbird\/mustachefeatures","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"An overview of the features of swift-mustache.","type":"text"}],"kind":"article","title":"Mustache Features","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheFeatures","role":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"kind":"article","title":"Testing","url":"\/documentation\/hummingbird\/testing","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/AuthenticatorMiddlewareGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/AuthenticatorMiddlewareGuide","title":"Authenticator Middleware","url":"\/documentation\/hummingbird\/authenticatormiddlewareguide","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Request authentication middleware"}],"role":"article","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"kind":"symbol","title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MustacheSyntax":{"title":"Mustache Syntax","abstract":[{"type":"text","text":"Overview of Mustache Syntax"}],"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MustacheSyntax","role":"article","kind":"article","url":"\/documentation\/hummingbird\/mustachesyntax"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigrationsGuide":{"title":"Database Migrations","role":"article","url":"\/documentation\/hummingbird\/migrationsguide","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigrationsGuide","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","abstract":[{"text":"Managing database structure changes.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/OneTimePasswords":{"kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/OneTimePasswords","url":"\/documentation\/hummingbird\/onetimepasswords","role":"article","abstract":[{"text":"A one time password (OTP) valid for only one login session.","type":"text"}],"title":"One Time Passwords","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"kind":"article","title":"Error Handling","url":"\/documentation\/hummingbird\/errorhandling","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","role":"article","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"title":"Jobs","url":"\/documentation\/hummingbird\/jobsguide","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"abstract":[{"text":"Working with Postgres databases.","type":"text"}],"type":"topic","role":"collection","kind":"symbol","title":"HummingbirdPostgres","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdpostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"}}}