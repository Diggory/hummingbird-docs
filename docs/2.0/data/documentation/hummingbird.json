{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","interfaceLanguage":"swift"},"kind":"symbol","seeAlsoSections":[{"title":"Related Documentation","anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"]},{"title":"Reference Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient"],"anchor":"Reference-Documentation","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird"]}],"topicSections":[{"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"anchor":"Application"},{"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"anchor":"Router"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"],"title":"Request\/Response","anchor":"RequestResponse"},{"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"],"anchor":"Request-context"},{"title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"],"anchor":"EncodingDecoding"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError"],"anchor":"Errors","title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"anchor":"Middleware","title":"Middleware"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem"],"title":"File management\/middleware","anchor":"File-managementmiddleware"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError"],"title":"Storage","anchor":"Storage"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"],"title":"Miscellaneous","anchor":"Miscellaneous"}],"sections":[],"metadata":{"role":"collection","modules":[{"name":"Hummingbird"}],"externalID":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"symbolKind":"module","title":"Hummingbird","roleHeading":"Framework"},"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2."}]},{"type":"codeListing","code":["import Hummingbird","","\/\/ create router and add a single GET \/hello route","let router = Router()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","\/\/ create application using router","let app = Application(","    router: router,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","\/\/ run hummingbird application","try await app.runService()"],"syntax":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"url":"\/documentation\/hummingbird\/responsecodable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCodable"}],"navigatorTitle":[{"text":"ResponseCodable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}],"title":"ResponseCodable","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"url":"\/documentation\/hummingbird\/eventloopgroupprovider","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"EventLoopGroupProvider","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"title":"EventLoopGroupProvider","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"url":"\/documentation\/hummingbird\/application","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Application","kind":"identifier"}],"navigatorTitle":[{"text":"Application","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"title":"Application","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"type":"topic","role":"symbol","kind":"symbol","title":"ResponseBodyWriter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","url":"\/documentation\/hummingbirdcore\/responsebodywriter","abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBodyWriter"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"url":"\/documentation\/hummingbird\/routecollection","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"RouteCollection","kind":"identifier"}],"navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"type":"topic","abstract":[{"text":"Collection of routes","type":"text"}],"title":"RouteCollection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"navigatorTitle":[{"text":"CoreRequestContextStorage","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","type":"topic","url":"\/documentation\/hummingbird\/corerequestcontextstorage","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CoreRequestContextStorage"}],"title":"CoreRequestContextStorage","role":"symbol","kind":"symbol"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponseError":{"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HTTPResponseError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError","url":"\/documentation\/hummingbird\/httpresponseerror","navigatorTitle":[{"text":"HTTPResponseError","kind":"identifier"}],"kind":"symbol","title":"HTTPResponseError","abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"url":"\/documentation\/hummingbird\/middlewaregroup","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MiddlewareGroup","kind":"identifier"}],"navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"title":"MiddlewareGroup","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","title":"InitializableFromSource","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"url":"\/documentation\/hummingbird\/initializablefromsource","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"url":"\/documentation\/hummingbirdpostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","abstract":[{"type":"text","text":"Working with Postgres databases."}],"kind":"symbol","role":"collection","title":"HummingbirdPostgres","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"title":"ApplicationProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/applicationprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"role":"symbol","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LocalFileSystem":{"url":"\/documentation\/hummingbird\/localfilesystem","kind":"symbol","abstract":[{"text":"Local file system file provider used by FileMiddleware. All file accesses are relative to a root folder","type":"text"}],"type":"topic","title":"LocalFileSystem","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"LocalFileSystem","kind":"identifier"}],"navigatorTitle":[{"text":"LocalFileSystem","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","title":"ChildRequestContext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChildRequestContext"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChildRequestContext"}],"url":"\/documentation\/hummingbird\/childrequestcontext","abstract":[{"text":"A RequestContext that can be initialized from another RequestContext.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}],"kind":"symbol","title":"MetricsMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"role":"symbol","url":"\/documentation\/hummingbird\/metricsmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MetricsMiddleware"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"url":"\/documentation\/hummingbird\/filemiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"FileMiddleware"}],"type":"topic","abstract":[{"type":"text","text":"Middleware for serving static files."}],"title":"FileMiddleware","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"url":"\/documentation\/hummingbirdcore\/response","type":"topic","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"title":"Response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"title":"RequestDecoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecoder"}],"abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"RequestDecoder","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/requestdecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"url":"\/documentation\/hummingbird\/callbackresponder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CallbackResponder","kind":"identifier"}],"navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"type":"topic","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"title":"CallbackResponder","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"title":"HummingbirdLambda","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"title":"RemoteAddressRequestContext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemoteAddressRequestContext","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RemoteAddressRequestContext"}],"url":"\/documentation\/hummingbird\/remoteaddressrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"type":"topic","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","abstract":[{"type":"text","text":"Middleware stack result builder"}],"title":"MiddlewareFixedTypeBuilder","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"url":"\/documentation\/hummingbirdwebsocket","kind":"symbol","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"title":"HummingbirdWebSocket","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","type":"topic","role":"collection","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","kind":"article","abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"title":"Hummingbird Documentation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"url":"\/documentation\/wsclient","kind":"symbol","abstract":[{"text":"Support for connecting to WebSocket server.","type":"text"}],"title":"WSClient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","type":"topic","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPError":{"title":"HTTPError","abstract":[{"text":"Default HTTP error. Provides an HTTP status and a message","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPError"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"HTTPError","kind":"identifier"}],"url":"\/documentation\/hummingbird\/httperror"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"url":"\/documentation\/hummingbird\/persistdriver","type":"topic","abstract":[{"text":"Protocol for driver supporting persistent Key\/Value pairs across requests","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistDriver"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PersistDriver"}],"title":"PersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","url":"\/documentation\/hummingbird\/basicrequestcontext","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"kind":"symbol","title":"BasicRequestContext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Parameters":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","title":"Parameters","navigatorTitle":[{"kind":"identifier","text":"Parameters"}],"url":"\/documentation\/hummingbird\/parameters","abstract":[{"text":"Parameters is a special case of FlatDictionary where both the key","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and value types are Substrings. It is used for parameters extracted"},{"type":"text","text":" "},{"type":"text","text":"from URIs"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parameters"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPResponder"}],"title":"HTTPResponder","navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"url":"\/documentation\/hummingbird\/httpresponder","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider":{"type":"topic","url":"\/documentation\/hummingbird\/fileprovider","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FileProvider"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","kind":"symbol","title":"FileProvider","abstract":[{"type":"text","text":"Protocol for file provider type used by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","isActive":true}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FileProvider","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PersistError","kind":"identifier"}],"title":"PersistError","url":"\/documentation\/hummingbird\/persisterror","role":"symbol","navigatorTitle":[{"text":"PersistError","kind":"identifier"}],"abstract":[{"text":"Errors return by persist framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CacheControl":{"url":"\/documentation\/hummingbird\/cachecontrol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CacheControl"}],"navigatorTitle":[{"text":"CacheControl","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Associates cache control values with filename"}],"title":"CacheControl","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookie":{"type":"topic","url":"\/documentation\/hummingbird\/cookie","navigatorTitle":[{"text":"Cookie","kind":"identifier"}],"abstract":[{"text":"Structure holding a single cookie","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","title":"Cookie","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cookie","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"url":"\/documentation\/hummingbirdtesting","type":"topic","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","role":"collection","title":"HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","type":"topic","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","role":"collection","title":"HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"type":"topic","url":"\/documentation\/hummingbird\/urlencodedformencoder","navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","kind":"symbol","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"title":"URLEncodedFormEncoder","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookies":{"abstract":[{"type":"text","text":"Structure holding an array of cookies"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Cookies","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies","role":"symbol","title":"Cookies","url":"\/documentation\/hummingbird\/cookies","navigatorTitle":[{"kind":"identifier","text":"Cookies"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"url":"\/documentation\/hummingbird\/endpointpath","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"EndpointPath","kind":"identifier"}],"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Endpoint path storage"}],"title":"EndpointPath","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"url":"\/documentation\/hummingbird\/applicationconfiguration","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ApplicationConfiguration"}],"navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}],"type":"topic","abstract":[{"text":"Application configuration","type":"text"}],"title":"ApplicationConfiguration","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"type":"topic","url":"\/documentation\/hummingbird\/memorypersistdriver","navigatorTitle":[{"kind":"identifier","text":"MemoryPersistDriver"}],"abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","title":"MemoryPersistDriver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemoryPersistDriver","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"url":"\/documentation\/hummingbird\/routerpath","abstract":[{"type":"text","text":"Split router path into components"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","role":"symbol","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"title":"RouterPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"title":"MiddlewareProtocol","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"url":"\/documentation\/hummingbird\/urlencodedformdecoder","abstract":[{"type":"text","text":"The wrapper struct for decoding URL encoded form data to Codable classes"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLEncodedFormDecoder"}],"navigatorTitle":[{"kind":"identifier","text":"URLEncodedFormDecoder"}],"title":"URLEncodedFormDecoder","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType":{"url":"\/documentation\/hummingbird\/mediatype","kind":"symbol","abstract":[{"type":"text","text":"Define media type of file"}],"type":"topic","title":"MediaType","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MediaType"}],"navigatorTitle":[{"text":"MediaType","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Request","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Request"}],"title":"Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"kind":"symbol","title":"LogRequestsMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"role":"symbol","url":"\/documentation\/hummingbird\/logrequestsmiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"LogRequestsMiddleware","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"url":"\/documentation\/hummingbird\/fileio","kind":"symbol","abstract":[{"type":"text","text":"Manages File reading and writing."}],"title":"FileIO","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FileIO","kind":"identifier"}],"navigatorTitle":[{"text":"FileIO","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"url":"\/documentation\/hummingbird\/routeroptions","abstract":[{"type":"text","text":"Router Options"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterOptions","kind":"identifier"}],"navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"title":"RouterOptions","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"title":"ResponseEncoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseEncoder"}],"abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseEncoder"}],"type":"topic","url":"\/documentation\/hummingbird\/responseencoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"url":"\/documentation\/hummingbird\/tracingmiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"type":"topic","abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"title":"TracingMiddleware","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","title":"RequestContext","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"type":"text","text":" "},{"type":"text","text":"that is associated with a "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"url":"\/documentation\/hummingbird\/routermethods","kind":"symbol","abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"title":"RouterMethods","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"url":"\/documentation\/hummingbirdcompression","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","kind":"symbol","role":"collection","title":"HummingbirdCompression","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"url":"\/documentation\/hummingbird\/routergroup","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterGroup"}],"navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"type":"topic","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"type":"text","text":" "},{"text":"suffix to the endpoint path","type":"text"}],"title":"RouterGroup","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPResponderBuilder"}],"title":"HTTPResponderBuilder","navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}],"abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"url":"\/documentation\/hummingbird\/httpresponderbuilder","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"url":"\/documentation\/hummingbird\/routerresponder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterResponder"}],"navigatorTitle":[{"text":"RouterResponder","kind":"identifier"}],"type":"topic","abstract":[],"title":"RouterResponder","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"url":"\/documentation\/hummingbird\/requestcontextsource","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RequestContextSource","kind":"identifier"}],"navigatorTitle":[{"text":"RequestContextSource","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Protocol for source of request contexts"}],"title":"RequestContextSource","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"url":"\/documentation\/jobs","type":"topic","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","role":"collection","title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","kind":"symbol","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"url":"\/documentation\/hummingbirdcore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"url":"\/documentation\/hummingbird\/environment","type":"topic","abstract":[{"text":"Access environment variables","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Environment"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Environment"}],"title":"Environment"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"type":"topic","url":"\/documentation\/hummingbird\/routermiddleware","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"abstract":[{"text":"Version of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},{"text":" whose Input is ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference","isActive":true},{"type":"text","text":" and output is "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","kind":"symbol","title":"RouterMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMiddleware"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"url":"\/documentation\/hummingbird\/requestid","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestID","kind":"identifier"}],"navigatorTitle":[{"text":"RequestID","kind":"identifier"}],"type":"topic","abstract":[{"text":"Generate Unique ID for each request","type":"text"}],"title":"RequestID","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApplicationRequestContextSource"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationRequestContextSource","kind":"identifier"}],"title":"ApplicationRequestContextSource","abstract":[{"type":"text","text":"RequestContext source for contexts created by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/applicationrequestcontextsource","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EditedResponse":{"url":"\/documentation\/hummingbird\/editedresponse","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EditedResponse","kind":"identifier"}],"navigatorTitle":[{"text":"EditedResponse","kind":"identifier"}],"title":"EditedResponse","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"url":"\/documentation\/hummingbird\/corsmiddleware","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CORSMiddleware"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","role":"symbol","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"title":"CORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"navigatorTitle":[{"kind":"identifier","text":"Router"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"url":"\/documentation\/hummingbird\/router","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Router","kind":"identifier"}],"title":"Router","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"url":"\/documentation\/hummingbirdrouter","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"title":"HummingbirdRouter","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"url":"\/documentation\/hummingbirdauth","type":"topic","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","role":"collection","title":"HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"url":"\/documentation\/hummingbird\/responseencodable","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseEncodable","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseEncodable"}],"type":"topic","abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the response using the encoder stored in "},{"code":"Application.encoder","type":"codeVoice"},{"type":"text","text":"."}],"title":"ResponseEncodable","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"url":"\/documentation\/hummingbirdfluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","abstract":[{"type":"text","text":"Integration with Vapor’s Fluent ORM framework."}],"kind":"symbol","role":"collection","title":"HummingbirdFluent","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddlewareFileAttributes":{"title":"FileMiddlewareFileAttributes","abstract":[{"type":"text","text":"Protocol for all the file attributes required by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","isActive":true}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileMiddlewareFileAttributes","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FileMiddlewareFileAttributes"}],"url":"\/documentation\/hummingbird\/filemiddlewarefileattributes"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"url":"\/documentation\/hummingbird\/responsegenerator","kind":"symbol","abstract":[{"text":"Object that can generate a ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"title":"ResponseGenerator","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseGenerator"}]}}}