{"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2."}],"type":"paragraph"},{"code":["import Hummingbird","","\/\/ create router and add a single GET \/hello route","let router = Router()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","\/\/ create application using router","let app = Application(","    responder: router.buildResponder(),","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","\/\/ run hummingbird application","try await app.runService()"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"]},{"title":"Tutorials","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"]},{"title":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"]},{"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"]},{"title":"Request\/Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"]},{"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"]},{"title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"]},{"title":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError"]},{"title":"File management","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/DateCache"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"]}],"variants":[{"paths":["\/documentation\/hummingbird"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Hummingbird"}],"externalID":"Hummingbird","roleHeading":"Framework","symbolKind":"module","title":"Hummingbird","role":"collection"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"title":"ResponseEncoder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncoder","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ResponseEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"type":"topic","url":"\/documentation\/hummingbird\/responseencoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}],"url":"\/documentation\/hummingbird\/testing","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","role":"article","kind":"article","title":"Testing"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","type":"topic","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"role":"collection","kind":"symbol","url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","url":"\/documentation\/hummingbirdcore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","role":"collection","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"title":"PersistDriver","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistDriver"}],"url":"\/documentation\/hummingbird\/persistdriver","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"title":"RouterMethods","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"url":"\/documentation\/hummingbird\/routermethods","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","abstract":[{"type":"text","text":"Conform to "},{"code":"RouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"role":"symbol","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"title":"CORSMiddleware","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError","type":"topic","abstract":[{"text":"Errors return by persist framework","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistError","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"PersistError","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/persisterror","title":"PersistError"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","title":"RouterPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"Split router path into components","type":"text"}],"url":"\/documentation\/hummingbird\/routerpath","role":"symbol","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileProvider","kind":"identifier"}],"navigatorTitle":[{"text":"FileProvider","kind":"identifier"}],"title":"FileProvider","abstract":[{"text":"Protocol for file provider type used by ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","isActive":true}],"url":"\/documentation\/hummingbird\/fileprovider","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType":{"title":"MediaType","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MediaType","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"MediaType","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","abstract":[{"type":"text","text":"Define media type of file"}],"type":"topic","url":"\/documentation\/hummingbird\/mediatype"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"title":"Environment","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","navigatorTitle":[{"kind":"identifier","text":"Environment"}],"role":"symbol","abstract":[{"type":"text","text":"Access environment variables"}],"kind":"symbol","url":"\/documentation\/hummingbird\/environment","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteHandler":{"url":"\/documentation\/hummingbird\/routehandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouteHandler"}],"abstract":[{"text":"Object for handling requests.","type":"text"}],"role":"symbol","title":"RouteHandler","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteHandler","navigatorTitle":[{"kind":"identifier","text":"RouteHandler"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","role":"overview","kind":"overview","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"title":"Build a Todos application.","url":"\/tutorials\/todos","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"title":"TracingMiddleware","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","url":"\/documentation\/hummingbird\/tracingmiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/DateCache":{"kind":"symbol","title":"DateCache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/DateCache","url":"\/documentation\/hummingbird\/datecache","role":"symbol","abstract":[{"text":"Current date formatted cache service","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateCache"}],"navigatorTitle":[{"kind":"identifier","text":"DateCache"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddlewareFileAttributes":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileMiddlewareFileAttributes","kind":"identifier"}],"navigatorTitle":[{"text":"FileMiddlewareFileAttributes","kind":"identifier"}],"title":"FileMiddlewareFileAttributes","abstract":[{"text":"Protocol for all the file attributes required by ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","isActive":true}],"url":"\/documentation\/hummingbird\/filemiddlewarefileattributes","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"topic","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"kind":"symbol","url":"\/documentation\/hummingbird\/httpresponderbuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"role":"symbol","title":"HTTPResponderBuilder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponderBuilder"}],"abstract":[{"type":"text","text":"A type that has a single method to build a HTTPResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","type":"topic","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"role":"collectionGroup","kind":"article","url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Response":{"navigatorTitle":[{"text":"Response","kind":"identifier"}],"role":"symbol","title":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","url":"\/documentation\/hummingbird\/response","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContext":{"title":"CoreRequestContext","type":"topic","url":"\/documentation\/hummingbird\/corerequestcontext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"CoreRequestContext"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LocalFileSystem":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LocalFileSystem","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LocalFileSystem"}],"title":"LocalFileSystem","type":"topic","url":"\/documentation\/hummingbird\/localfilesystem","abstract":[{"type":"text","text":"Local file system file provider used by FileMiddleware. All file accesses are relative to a root folder"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookie":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cookie"}],"abstract":[{"type":"text","text":"Structure holding a single cookie"}],"title":"Cookie","url":"\/documentation\/hummingbird\/cookie","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cookie"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"title":"Middleware","url":"\/documentation\/hummingbird\/middlewareguide","role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"role":"symbol","title":"RouterMiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","url":"\/documentation\/hummingbird\/routermiddleware","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Version of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","isActive":true},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","isActive":true},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"title":"Migrating to Hummingbird v2","type":"topic","url":"\/documentation\/hummingbird\/migratingtov2","kind":"article","role":"article","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"url":"\/documentation\/hummingbird\/middlewaregroup","role":"symbol","type":"topic","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"title":"MiddlewareGroup","navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"url":"\/documentation\/hummingbird\/errorhandling","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","role":"collectionGroup","kind":"article","title":"Error Handling"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"kind":"symbol","navigatorTitle":[{"text":"RouterResponder","kind":"identifier"}],"type":"topic","title":"RouterResponder","abstract":[{"type":"text","text":"Directs requests to handlers based on the request uri and method."}],"url":"\/documentation\/hummingbird\/routerresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterResponder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"title":"MemoryPersistDriver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemoryPersistDriver"}],"type":"topic","url":"\/documentation\/hummingbird\/memorypersistdriver","abstract":[{"type":"text","text":"In memory driver for persist system for storing persistent cross request key\/value pairs"}],"navigatorTitle":[{"kind":"identifier","text":"MemoryPersistDriver"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","role":"collectionGroup","url":"\/documentation\/hummingbird\/routerguide","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"kind":"article","type":"topic","title":"Router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"title":"URLEncodedFormEncoder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"type":"topic","url":"\/documentation\/hummingbird\/urlencodedformencoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"abstract":[{"type":"text","text":"Hummingbird uses "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" to decode requests and encode responses."}],"url":"\/documentation\/hummingbird\/encodinganddecoding","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","role":"collectionGroup","kind":"article","title":"Encoding and Decoding"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EditedResponse":{"navigatorTitle":[{"text":"EditedResponse","kind":"identifier"}],"type":"topic","title":"EditedResponse","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","abstract":[],"url":"\/documentation\/hummingbird\/editedresponse","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EditedResponse","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"title":"ResponseGenerator","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","abstract":[{"text":"Object that can generate a ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/responsegenerator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","title":"HummingbirdJobs","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"url":"\/documentation\/hummingbirdjobs","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"kind":"symbol","type":"topic","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","title":"HummingbirdTesting","url":"\/documentation\/hummingbirdtesting"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"URLEncodedFormDecoder","kind":"identifier"}],"title":"URLEncodedFormDecoder","abstract":[{"type":"text","text":"The wrapper struct for decoding URL encoded form data to Codable classes"}],"url":"\/documentation\/hummingbird\/urlencodedformdecoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"type":"topic","url":"\/documentation\/hummingbird\/request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"role":"symbol","title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Parameters":{"title":"Parameters","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameters"}],"url":"\/documentation\/hummingbird\/parameters","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parameters"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","abstract":[{"type":"text","text":"Parameters is a special case of FlatDictionary where both the key"},{"type":"text","text":" "},{"type":"text","text":"and value types are Substrings. It is used for parameters extracted"},{"type":"text","text":" "},{"type":"text","text":"from URIs"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"title":"ResponseCodable","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCodable","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ResponseCodable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}],"type":"topic","url":"\/documentation\/hummingbird\/responsecodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestID","kind":"identifier"}],"navigatorTitle":[{"text":"RequestID","kind":"identifier"}],"title":"RequestID","type":"topic","url":"\/documentation\/hummingbird\/requestid","abstract":[{"text":"Generate Unique ID for each request","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","title":"HummingbirdRedis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","url":"\/documentation\/hummingbirdredis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","type":"topic","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"role":"collection","kind":"symbol","url":"\/documentation\/hummingbirdpostgres","title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","type":"topic","abstract":[{"text":"Mustache template engine.","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","url":"\/documentation\/mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationConfiguration","kind":"identifier"}],"type":"topic","abstract":[{"text":"Application configuration","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","title":"ApplicationConfiguration","url":"\/documentation\/hummingbird\/applicationconfiguration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","title":"Jobs","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"url":"\/documentation\/hummingbird\/jobsguide","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","title":"MetricsMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsMiddleware"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"url":"\/documentation\/hummingbird\/metricsmiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"title":"BasicRequestContext","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","url":"\/documentation\/hummingbird\/basicrequestcontext","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"title":"RequestDecoder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestDecoder","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"RequestDecoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","abstract":[{"type":"text","text":"protocol for decoder deserializing from a Request body"}],"type":"topic","url":"\/documentation\/hummingbird\/requestdecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONDecoder":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONDecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"title":"JSONDecoder","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" types."}],"url":"\/documentation\/hummingbird\/jsondecoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"title":"Service Lifecycle","type":"topic","url":"\/documentation\/hummingbird\/servicelifecycle","kind":"article","role":"article","abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"type":"topic","url":"\/documentation\/hummingbird\/routergroup","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"role":"symbol","title":"RouterGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ApplicationProtocol"}],"type":"topic","abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","title":"ApplicationProtocol","url":"\/documentation\/hummingbird\/applicationprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"navigatorTitle":[{"kind":"identifier","text":"FileIO"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileIO"}],"url":"\/documentation\/hummingbird\/fileio","abstract":[{"type":"text","text":"Manages File reading and writing."}],"type":"topic","kind":"symbol","role":"symbol","title":"FileIO","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"type":"topic","url":"\/documentation\/hummingbirdauth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"kind":"symbol","role":"collection","title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"title":"ResponseEncodable","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncodable","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ResponseEncodable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","abstract":[{"type":"text","text":"Protocol for encodable object that can generate a response. The router will encode"},{"type":"text","text":" "},{"type":"text","text":"the response using the encoder stored in "},{"type":"codeVoice","code":"Application.encoder"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/hummingbird\/responseencodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"role":"collection","title":"HummingbirdRouter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","url":"\/documentation\/hummingbirdrouter","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"role":"collection","title":"HummingbirdFluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for a request context that can be created from a NIO Channel"}],"title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JSONEncoder":{"title":"JSONEncoder","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONEncoder","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"JSONEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JSONEncoder","abstract":[{"type":"codeVoice","code":"JSONEncoder"},{"type":"text","text":" facilitates the encoding of "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" values into JSON."}],"type":"topic","url":"\/documentation\/hummingbird\/jsonencoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"url":"\/documentation\/hummingbird\/eventloopgroupprovider","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"kind":"symbol","role":"symbol","title":"EventLoopGroupProvider"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"navigatorTitle":[{"kind":"identifier","text":"RouterOptions"}],"role":"symbol","title":"RouterOptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","url":"\/documentation\/hummingbird\/routeroptions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterOptions"}],"abstract":[{"text":"Router Options","type":"text"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","title":"HTTPResponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/httpresponder","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookies":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies","kind":"symbol","title":"Cookies","navigatorTitle":[{"kind":"identifier","text":"Cookies"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cookies"}],"url":"\/documentation\/hummingbird\/cookies","role":"symbol","abstract":[{"type":"text","text":"Structure holding an array of cookies"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","role":"collectionGroup","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"kind":"article","type":"topic","title":"Logging, Metrics and Tracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"role":"collectionGroup","title":"Persistent data","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","url":"\/documentation\/hummingbird\/persistentdata","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"kind":"article","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBodyWriter":{"navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"type":"topic","title":"ResponseBodyWriter","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter","abstract":[],"url":"\/documentation\/hummingbird\/responsebodywriter","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"title":"RemoteAddressRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemoteAddressRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"RemoteAddressRequestContext"}],"role":"symbol","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","type":"topic","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BaseRequestContext"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BaseRequestContext"}],"kind":"symbol","url":"\/documentation\/hummingbird\/baserequestcontext","title":"BaseRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","type":"topic","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Application","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Application","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/application","title":"Application"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CacheControl":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CacheControl"}],"type":"topic","abstract":[{"text":"Associates cache control values with filename","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CacheControl"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","title":"CacheControl","url":"\/documentation\/hummingbird\/cachecontrol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"kind":"symbol","url":"\/documentation\/hummingbird\/endpointpath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}],"role":"symbol","title":"EndpointPath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EndpointPath"}],"abstract":[{"type":"text","text":"Endpoint path storage"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","title":"LogRequestsMiddleware","url":"\/documentation\/hummingbird\/logrequestsmiddleware","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"kind":"symbol","title":"Router","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"type":"text","text":" that will follow these rules."}],"navigatorTitle":[{"text":"Router","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","url":"\/documentation\/hummingbird\/router","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/callbackresponder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CallbackResponder","kind":"identifier"}],"kind":"symbol","title":"CallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"type":"topic","url":"\/documentation\/hummingbird\/filemiddleware","navigatorTitle":[{"kind":"identifier","text":"FileMiddleware"}],"abstract":[{"type":"text","text":"Middleware for serving static files."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileMiddleware"}],"role":"symbol","title":"FileMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware"}}}