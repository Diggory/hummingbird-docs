{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"title":"Application"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"],"title":"Router"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEditedResponse"],"title":"Request\/Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"],"title":"Request context"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/NullDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/NullEncoder"],"title":"Encoding\/Decoding"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware"],"title":"Middleware"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistError"],"title":"Storage"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO"],"title":"File management"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBDateCache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GracefulShutdownWaiter"],"title":"Miscellaneous"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder"],"title":"Structures"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/loggerWithRequestId(_:)"],"title":"Functions"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird"]}],"metadata":{"title":"Hummingbird","role":"collection","roleHeading":"Framework","externalID":"Hummingbird","symbolKind":"module","modules":[{"name":"Hummingbird"}]},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"],"title":"Related Documentation"}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, support for adding channel handlers to extend the HTTP server and providing custom encoding\/decoding of Codable objects.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The interface is fairly standard. Anyone who has had experience of Vapor, Express.js etc will recognise most of the APIs. Simple setup is as follows","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import Hummingbird","","let router = HBRouter()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","let app = HBApplication(","    responder: router.buildResponder(),","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try await app.runService()"]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"kind":"symbol","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","type":"topic","kind":"article","url":"\/documentation\/hummingbird\/testing","role":"article","abstract":[{"type":"text","text":"Using the HummingbirdXCT framework to test your application"}],"title":"Testing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationConfiguration":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationConfiguration","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplicationConfiguration","kind":"identifier"}],"role":"symbol","title":"HBApplicationConfiguration","navigatorTitle":[{"text":"HBApplicationConfiguration","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbapplicationconfiguration","kind":"symbol","abstract":[{"type":"text","text":"Application configuration"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"navigatorTitle":[{"text":"HBMiddlewareGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmiddlewaregroup","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareGroup","kind":"identifier"}],"kind":"symbol","title":"HBMiddlewareGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"title":"Router","url":"\/documentation\/hummingbird\/router","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBPersistError":{"kind":"symbol","abstract":[{"type":"text","text":"Errors return by persist framework"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBPersistError","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistError","role":"symbol","navigatorTitle":[{"text":"HBPersistError","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbpersisterror","title":"HBPersistError"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBParameters":{"navigatorTitle":[{"text":"HBParameters","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParameters","kind":"symbol","type":"topic","title":"HBParameters","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParameters","kind":"identifier"}],"abstract":[{"type":"text","text":"HBParameters is a special case of FlatDictionary where both the key"},{"type":"text","text":" "},{"type":"text","text":"and value types are Substrings. It is used for parameters extracted"},{"type":"text","text":" "},{"type":"text","text":"from URIs"}],"url":"\/documentation\/hummingbird\/hbparameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter":{"type":"topic","navigatorTitle":[{"text":"HBRouter","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"title":"HBRouter","url":"\/documentation\/hummingbird\/hbrouter","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouter","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"title":"HBRequestContext","navigatorTitle":[{"text":"HBRequestContext","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","abstract":[{"text":"Protocol for a request context that can be created from a NIO Channel","type":"text"}],"url":"\/documentation\/hummingbird\/hbrequestcontext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"kind":"symbol","role":"symbol","title":"HBMiddlewareProtocol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBEditedResponse":{"navigatorTitle":[{"text":"HBEditedResponse","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEditedResponse","kind":"symbol","type":"topic","title":"HBEditedResponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBEditedResponse","kind":"identifier"}],"abstract":[],"url":"\/documentation\/hummingbird\/hbeditedresponse"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseEncoder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBResponseEncoder"}],"abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"role":"symbol","navigatorTitle":[{"text":"HBResponseEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncoder","kind":"symbol","title":"HBResponseEncoder","type":"topic","url":"\/documentation\/hummingbird\/hbresponseencoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder":{"url":"\/documentation\/hummingbird\/hbrouterresponder","abstract":[{"type":"text","text":"Directs requests to handlers based on the request uri and method."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterResponder"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterResponder"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder","title":"HBRouterResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"type":"topic","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"title":"HBCallbackResponder","url":"\/documentation\/hummingbird\/hbcallbackresponder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBTracingMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"kind":"symbol","role":"symbol","title":"HBTracingMiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","url":"\/documentation\/hummingbird\/hbtracingmiddleware","navigatorTitle":[{"text":"HBTracingMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"navigatorTitle":[{"text":"HBMetricsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmetricsmiddleware","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMetricsMiddleware","kind":"identifier"}],"kind":"symbol","title":"HBMetricsMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","kind":"symbol","type":"topic","title":"HummingbirdXCT","abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"url":"\/documentation\/hummingbirdxct"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponseBodyWriter":{"navigatorTitle":[{"text":"HBResponseBodyWriter","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponseBodyWriter","kind":"symbol","type":"topic","title":"HBResponseBodyWriter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBodyWriter","kind":"identifier"}],"abstract":[],"url":"\/documentation\/hummingbirdcore\/hbresponsebodywriter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBPersistDriver":{"abstract":[{"text":"Protocol for driver supporting persistent Key\/Value pairs across requests","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBPersistDriver"}],"url":"\/documentation\/hummingbird\/hbpersistdriver","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBPersistDriver"}],"kind":"symbol","title":"HBPersistDriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriver","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMemoryPersistDriver":{"abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBMemoryPersistDriver"}],"url":"\/documentation\/hummingbird\/hbmemorypersistdriver","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMemoryPersistDriver"}],"kind":"symbol","title":"HBMemoryPersistDriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMediaType":{"navigatorTitle":[{"text":"HBMediaType","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType","kind":"symbol","type":"topic","title":"HBMediaType","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMediaType","kind":"identifier"}],"abstract":[{"type":"text","text":"Define media type of file"}],"url":"\/documentation\/hummingbird\/hbmediatype"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"title":"RouterPath","abstract":[{"type":"text","text":"Split router path into components"}],"navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerpath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"title":"Request Context","url":"\/documentation\/hummingbird\/requestcontext","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/loggerWithRequestId(_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loggerWithRequestId"},{"kind":"text","text":"("},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/loggerWithRequestId(_:)","abstract":[],"kind":"symbol","title":"loggerWithRequestId(_:)","url":"\/documentation\/hummingbird\/loggerwithrequestid(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","kind":"article","type":"topic","title":"Persistent data","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"url":"\/documentation\/hummingbird\/persistentdata"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBResponse":{"navigatorTitle":[{"text":"HBResponse","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBResponse","kind":"symbol","type":"topic","title":"HBResponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponse","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"url":"\/documentation\/hummingbirdcore\/hbresponse"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"kind":"symbol","role":"symbol","title":"HBLogRequestsMiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","url":"\/documentation\/hummingbird\/hblogrequestsmiddleware","navigatorTitle":[{"text":"HBLogRequestsMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/NullDecoder":{"title":"NullDecoder","type":"topic","abstract":[{"text":"Default decoder. there is no default decoder path so this generates an error","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"NullDecoder"}],"url":"\/documentation\/hummingbird\/nulldecoder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NullDecoder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/NullDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","type":"topic","kind":"article","url":"\/documentation\/hummingbird\/encodinganddecoding","role":"collectionGroup","abstract":[{"type":"text","text":"Hummingbird uses "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" to decode requests and encode responses."}],"title":"Encoding and Decoding"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"type":"topic","role":"collection","title":"HummingbirdJobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","kind":"symbol","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"url":"\/documentation\/hummingbirdjobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequest":{"navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequest","kind":"symbol","type":"topic","title":"HBRequest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"url":"\/documentation\/hummingbirdcore\/hbrequest"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBDateCache":{"title":"HBDateCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBDateCache","kind":"identifier"}],"abstract":[{"text":"Current date formatted cache service","type":"text"}],"url":"\/documentation\/hummingbird\/hbdatecache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBDateCache","type":"topic","kind":"symbol","navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSetCodableMiddleware":{"abstract":[],"navigatorTitle":[{"text":"HBSetCodableMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbsetcodablemiddleware","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSetCodableMiddleware","kind":"identifier"}],"kind":"symbol","title":"HBSetCodableMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseGenerator":{"kind":"symbol","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","role":"symbol","navigatorTitle":[{"text":"HBResponseGenerator","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbresponsegenerator","title":"HBResponseGenerator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","abstract":[{"type":"text","text":"Mustache template engine."}],"title":"HummingbirdMustache","url":"\/documentation\/hummingbirdmustache","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"title":"HBRouteHandler","abstract":[{"type":"text","text":"Object for handling requests."}],"navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutehandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"kind":"symbol","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRequestContext"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBBasicRequestContext"}],"url":"\/documentation\/hummingbird\/hbbasicrequestcontext","title":"HBBasicRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"kind":"symbol","abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCoreRequestContext","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","role":"symbol","navigatorTitle":[{"text":"HBCoreRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbcorerequestcontext","title":"HBCoreRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"abstract":[{"type":"text","text":"How to build errors for the server to return."}],"url":"\/documentation\/hummingbird\/errorhandling","type":"topic","kind":"article","title":"Error Handling","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"kind":"article","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","role":"collectionGroup","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplication":{"navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"url":"\/documentation\/hummingbird\/hbapplication","kind":"symbol","title":"HBApplication","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBApplication","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"type":"topic","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"title":"HBResponder","url":"\/documentation\/hummingbird\/hbresponder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GracefulShutdownWaiter":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"GracefulShutdownWaiter"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/gracefulshutdownwaiter","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GracefulShutdownWaiter","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GracefulShutdownWaiter"}],"title":"GracefulShutdownWaiter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware protocol with generic input, context and output types"}],"kind":"symbol","role":"symbol","title":"MiddlewareProtocol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"type":"topic","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"title":"HBRouterGroup","url":"\/documentation\/hummingbird\/hbroutergroup","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"title":"EventLoopGroupProvider","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroupProvider"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroupProvider"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","abstract":[{"text":"Where should the application get its EventLoopGroup from","type":"text"}],"url":"\/documentation\/hummingbird\/eventloopgroupprovider","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/NullEncoder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NullEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/NullEncoder","role":"symbol","title":"NullEncoder","abstract":[{"type":"text","text":"Default encoder. Outputs request with the swift string description of object"}],"url":"\/documentation\/hummingbird\/nullencoder","kind":"symbol","navigatorTitle":[{"text":"NullEncoder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"title":"HBRouterMethods","abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbroutermethods","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","type":"topic","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBEnvironment":{"title":"HBEnvironment","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBEnvironment"}],"abstract":[{"type":"text","text":"Access environment variables"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEnvironment","url":"\/documentation\/hummingbird\/hbenvironment","kind":"symbol","navigatorTitle":[{"text":"HBEnvironment","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseCodable":{"title":"HBResponseCodable","type":"topic","abstract":[{"text":"Protocol for codable object that can generate a response","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponseCodable"}],"url":"\/documentation\/hummingbird\/hbresponsecodable","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseCodable"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseCodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","title":"HBRemoteAddressRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRemoteAddressRequestContext"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"navigatorTitle":[{"kind":"identifier","text":"HBRemoteAddressRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","kind":"symbol","type":"topic","title":"HummingbirdFoundation","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"url":"\/documentation\/hummingbirdfoundation"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestDecoder":{"abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestDecoder"}],"url":"\/documentation\/hummingbird\/hbrequestdecoder","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecoder"}],"kind":"symbol","title":"HBRequestDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseEncodable":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseEncodable"}],"abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"text":"the response using the encoder stored in ","type":"text"},{"code":"HBApplication.encoder","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponseEncodable"}],"title":"HBResponseEncodable","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncodable","url":"\/documentation\/hummingbird\/hbresponseencodable","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"type":"topic","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","abstract":[{"text":"Options available to routes","type":"text"}],"title":"HBRouterMethodOptions","url":"\/documentation\/hummingbird\/hbroutermethodoptions","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"type":"topic","navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","abstract":[{"text":"Endpoint path storage","type":"text"}],"title":"EndpointPath","url":"\/documentation\/hummingbird\/endpointpath","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"type":"topic","navigatorTitle":[{"text":"HBBaseRequestContext","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"title":"HBBaseRequestContext","url":"\/documentation\/hummingbird\/hbbaserequestcontext","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBaseRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"kind":"symbol","role":"symbol","title":"HBCORSMiddleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","url":"\/documentation\/hummingbird\/hbcorsmiddleware","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileIO":{"abstract":[{"text":"Manages File reading and writing.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBFileIO"}],"url":"\/documentation\/hummingbird\/hbfileio","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFileIO"}],"kind":"symbol","title":"HBFileIO","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCacheControl":{"navigatorTitle":[{"text":"HBCacheControl","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCacheControl","kind":"symbol","type":"topic","title":"HBCacheControl","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCacheControl","kind":"identifier"}],"abstract":[{"type":"text","text":"Associates cache control values with filename"}],"url":"\/documentation\/hummingbird\/hbcachecontrol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware Handler with generic input, context and output types"}],"kind":"symbol","role":"symbol","title":"Middleware","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","url":"\/documentation\/hummingbird\/middleware","navigatorTitle":[{"text":"Middleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","type":"topic","title":"HummingbirdRedis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"url":"\/documentation\/hummingbirdredis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationProtocol":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol","title":"HBApplicationProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplicationProtocol","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbapplicationprotocol","abstract":[],"navigatorTitle":[{"text":"HBApplicationProtocol","kind":"identifier"}]}}}