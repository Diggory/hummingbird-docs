{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter"],"title":"Related Documentation"}],"metadata":{"role":"collection","symbolKind":"module","title":"Hummingbird","modules":[{"name":"Hummingbird"}],"externalID":"Hummingbird","roleHeading":"Framework"},"kind":"symbol","hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, support for adding channel handlers to extend the HTTP server and providing custom encoding\/decoding of Codable objects."}],"type":"paragraph"},{"inlineContent":[{"text":"The interface is fairly standard. Anyone who has had experience of Vapor, Express.js etc will recognise most of the APIs. Simple setup is as follows","type":"text"}],"type":"paragraph"},{"code":["import Hummingbird","","let router = HBRouter()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","let app = HBApplication(","    responder: router.buildResponder(),","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try await app.runService()"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"title":"Tutorials"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"title":"Application"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"],"title":"Router"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEditedResponse"],"title":"Request\/Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext"],"title":"Request context"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/NullDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/NullEncoder"],"title":"Encoding\/Decoding"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware"],"title":"Middleware"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistError"],"title":"Storage"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO"],"title":"File management"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBDateCache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GracefulShutdownWaiter"],"title":"Miscellaneous"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder"],"title":"Structures"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/loggerWithRequestId(_:)"],"title":"Functions"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBSetCodableMiddleware":{"url":"\/documentation\/hummingbird\/hbsetcodablemiddleware","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSetCodableMiddleware"}],"role":"symbol","navigatorTitle":[{"text":"HBSetCodableMiddleware","kind":"identifier"}],"type":"topic","title":"HBSetCodableMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBSetCodableMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"type":"topic","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"kind":"article","url":"\/documentation\/hummingbird\/errorhandling","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","role":"collectionGroup","title":"Error Handling"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GracefulShutdownWaiter":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GracefulShutdownWaiter","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GracefulShutdownWaiter","abstract":[],"type":"topic","role":"symbol","title":"GracefulShutdownWaiter","navigatorTitle":[{"text":"GracefulShutdownWaiter","kind":"identifier"}],"url":"\/documentation\/hummingbird\/gracefulshutdownwaiter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBDateCache":{"url":"\/documentation\/hummingbird\/hbdatecache","role":"symbol","title":"HBDateCache","navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}],"type":"topic","abstract":[{"text":"Current date formatted cache service","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBDateCache","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBDateCache","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"type":"topic","abstract":[{"text":"Options available to routes","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"url":"\/documentation\/hummingbird\/hbroutermethodoptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","role":"symbol","title":"HBRouterMethodOptions"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCORSMiddleware":{"url":"\/documentation\/hummingbird\/hbcorsmiddleware","title":"HBCORSMiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBCORSMiddleware"}],"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCORSMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCORSMiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBodyWriter":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBodyWriter","kind":"identifier"}],"title":"HBResponseBodyWriter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyWriter","url":"\/documentation\/hummingbird\/hbresponsebodywriter","role":"symbol","abstract":[],"navigatorTitle":[{"text":"HBResponseBodyWriter","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","title":"HBRouteHandler","type":"topic","abstract":[{"text":"Object for handling requests.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"url":"\/documentation\/hummingbird\/hbroutehandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","abstract":[{"text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working.","type":"text"}],"kind":"article","type":"topic","title":"Logging, Metrics and Tracing","role":"collectionGroup","url":"\/documentation\/hummingbird\/loggingmetricsandtracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationProtocol":{"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationProtocol","title":"HBApplicationProtocol","navigatorTitle":[{"text":"HBApplicationProtocol","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/hbapplicationprotocol","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplicationProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplicationConfiguration":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplicationConfiguration","title":"HBApplicationConfiguration","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBApplicationConfiguration"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplicationConfiguration"}],"url":"\/documentation\/hummingbird\/hbapplicationconfiguration","abstract":[{"type":"text","text":"Application configuration"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"title":"HBRouterGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","url":"\/documentation\/hummingbird\/hbroutergroup","role":"symbol","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","type":"topic","title":"Build a Todos application.","role":"overview","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"url":"\/tutorials\/todos","kind":"overview"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"type":"topic","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdxct","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","role":"collection","title":"HummingbirdXCT"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/NullDecoder":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NullDecoder","kind":"identifier"}],"title":"NullDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/NullDecoder","url":"\/documentation\/hummingbird\/nulldecoder","role":"symbol","abstract":[{"text":"Default decoder. there is no default decoder path so this generates an error","type":"text"}],"navigatorTitle":[{"text":"NullDecoder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/NullEncoder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NullEncoder","kind":"identifier"}],"title":"NullEncoder","abstract":[{"text":"Default encoder. Outputs request with the swift string description of object","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/nullencoder","role":"symbol","navigatorTitle":[{"text":"NullEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/NullEncoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouter":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouter"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouter","navigatorTitle":[{"kind":"identifier","text":"HBRouter"}],"url":"\/documentation\/hummingbird\/hbrouter","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"HBResponder"},{"text":" that will follow these rules.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBRouter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRemoteAddressRequestContext":{"abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRemoteAddressRequestContext","role":"symbol","url":"\/documentation\/hummingbird\/hbremoteaddressrequestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"title":"HBRemoteAddressRequestContext","navigatorTitle":[{"text":"HBRemoteAddressRequestContext","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBaseRequestContext":{"type":"topic","title":"HBBaseRequestContext","url":"\/documentation\/hummingbird\/hbbaserequestcontext","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBaseRequestContext","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBaseRequestContext"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBBaseRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponse":{"role":"symbol","title":"HBResponse","url":"\/documentation\/hummingbird\/hbresponse","kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponse"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponse"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","role":"collection","title":"HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponderBuilder":{"url":"\/documentation\/hummingbird\/hbresponderbuilder","title":"HBResponderBuilder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponderBuilder","kind":"identifier"}],"abstract":[{"text":"A type that has a single method to build a responder","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBResponderBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponderBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","type":"topic","title":"HBRouterMethods","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"abstract":[{"text":"Conform to ","type":"text"},{"type":"codeVoice","code":"HBRouterMethods"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"url":"\/documentation\/hummingbird\/hbroutermethods","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMetricsMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMetricsMiddleware","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HBMetricsMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMetricsMiddleware","kind":"identifier"}],"type":"topic","title":"HBMetricsMiddleware","role":"symbol","url":"\/documentation\/hummingbird\/hbmetricsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdredis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"type":"topic","url":"\/documentation\/hummingbird\/testing","role":"article","abstract":[{"type":"text","text":"Using the HummingbirdXCT framework to test your application"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","kind":"article","title":"Testing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBParameters":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBParameters","title":"HBParameters","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParameters"}],"abstract":[{"type":"text","text":"HBParameters is a special case of FlatDictionary where both the key"},{"type":"text","text":" "},{"type":"text","text":"and value types are Substrings. It is used for parameters extracted"},{"type":"text","text":" "},{"type":"text","text":"from URIs"}],"type":"topic","url":"\/documentation\/hummingbird\/hbparameters","navigatorTitle":[{"text":"HBParameters","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","type":"topic","title":"HBResponder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}],"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"url":"\/documentation\/hummingbird\/hbresponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"type":"topic","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","role":"collection","title":"HummingbirdFoundation"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMediaType":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbmediatype","abstract":[{"type":"text","text":"Define media type of file"}],"navigatorTitle":[{"kind":"identifier","text":"HBMediaType"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMediaType","title":"HBMediaType","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMediaType"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"kind":"symbol","title":"HummingbirdAuth","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","url":"\/documentation\/hummingbirdauth","role":"collection","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareProtocol","type":"topic","title":"HBMiddlewareProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddlewareProtocol","kind":"identifier"}],"abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"navigatorTitle":[{"text":"HBMiddlewareProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbmiddlewareprotocol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMemoryPersistDriver":{"type":"topic","abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMemoryPersistDriver"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMemoryPersistDriver"}],"url":"\/documentation\/hummingbird\/hbmemorypersistdriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMemoryPersistDriver","role":"symbol","title":"HBMemoryPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCacheControl":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCacheControl","type":"topic","title":"HBCacheControl","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCacheControl"}],"abstract":[{"text":"Associates cache control values with filename","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBCacheControl"}],"url":"\/documentation\/hummingbird\/hbcachecontrol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"type":"topic","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"kind":"article","url":"\/documentation\/hummingbird\/persistentdata","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","role":"collectionGroup","title":"Persistent data"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterResponder":{"abstract":[{"text":"Directs requests to handlers based on the request uri and method.","type":"text"}],"title":"HBRouterResponder","url":"\/documentation\/hummingbird\/hbrouterresponder","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBRouterResponder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterPath"}],"title":"RouterPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","url":"\/documentation\/hummingbird\/routerpath","role":"symbol","abstract":[{"type":"text","text":"Split router path into components"}],"navigatorTitle":[{"kind":"identifier","text":"RouterPath"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestDecoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecoder","type":"topic","title":"HBRequestDecoder","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecoder","kind":"identifier"}],"abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"navigatorTitle":[{"text":"HBRequestDecoder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbrequestdecoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"type":"topic","abstract":[{"type":"text","text":"Mustache template engine."}],"kind":"symbol","url":"\/documentation\/hummingbirdmustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","role":"collection","title":"HummingbirdMustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"title":"HBRequest","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbrequest","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","title":"HBCallbackResponder","type":"topic","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBCallbackResponder"}],"url":"\/documentation\/hummingbird\/hbcallbackresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"type":"topic","url":"\/documentation\/hummingbird\/migratingtov2","role":"article","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","kind":"article","title":"Migrating to Hummingbird v2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseCodable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseCodable","type":"topic","title":"HBResponseCodable","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseCodable","kind":"identifier"}],"abstract":[{"text":"Protocol for codable object that can generate a response","type":"text"}],"navigatorTitle":[{"text":"HBResponseCodable","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbresponsecodable","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestContext","type":"topic","title":"HBRequestContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for a request context that can be created from a NIO Channel"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"url":"\/documentation\/hummingbird\/hbrequestcontext","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"url":"\/documentation\/hummingbird\/hbmiddlewaregroup","title":"HBMiddlewareGroup","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseEncoder":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseEncoder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbresponseencoder","title":"HBResponseEncoder","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncoder","kind":"symbol","navigatorTitle":[{"text":"HBResponseEncoder","kind":"identifier"}],"abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBLogRequestsMiddleware":{"url":"\/documentation\/hummingbird\/hblogrequestsmiddleware","title":"HBLogRequestsMiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBLogRequestsMiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBEnvironment":{"type":"topic","abstract":[{"text":"Access environment variables","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBEnvironment"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBEnvironment"}],"url":"\/documentation\/hummingbird\/hbenvironment","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEnvironment","role":"symbol","title":"HBEnvironment"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","title":"EndpointPath","type":"topic","abstract":[{"type":"text","text":"Endpoint path storage"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EndpointPath"}],"url":"\/documentation\/hummingbird\/endpointpath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBPersistDriver":{"type":"topic","abstract":[{"text":"Protocol for driver supporting persistent Key\/Value pairs across requests","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBPersistDriver"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBPersistDriver"}],"url":"\/documentation\/hummingbird\/hbpersistdriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistDriver","role":"symbol","title":"HBPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCoreRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCoreRequestContext","title":"HBCoreRequestContext","kind":"symbol","navigatorTitle":[{"text":"HBCoreRequestContext","kind":"identifier"}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCoreRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbcorerequestcontext","abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBPersistError":{"type":"topic","title":"HBPersistError","url":"\/documentation\/hummingbird\/hbpersisterror","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBPersistError","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBPersistError"}],"abstract":[{"type":"text","text":"Errors return by persist framework"}],"navigatorTitle":[{"kind":"identifier","text":"HBPersistError"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","title":"MiddlewareProtocol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareProtocol"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"type":"topic","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"kind":"symbol","url":"\/documentation\/hummingbirdrouter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","role":"collection","title":"HummingbirdRouter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBTracingMiddleware":{"url":"\/documentation\/hummingbird\/hbtracingmiddleware","title":"HBTracingMiddleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}],"abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBTracingMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBTracingMiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplication":{"url":"\/documentation\/hummingbird\/hbapplication","title":"HBApplication","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Middleware":{"url":"\/documentation\/hummingbird\/middleware","title":"Middleware","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Middleware"}],"abstract":[{"type":"text","text":"Middleware Handler with generic input, context and output types"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Middleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Middleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","url":"\/documentation\/hummingbird\/requestcontexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"type":"topic","role":"collectionGroup","kind":"article","title":"Request Contexts"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","type":"topic","title":"HummingbirdJobs","role":"collection","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"url":"\/documentation\/hummingbirdjobs","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"EventLoopGroupProvider","kind":"identifier"}],"url":"\/documentation\/hummingbird\/eventloopgroupprovider","title":"EventLoopGroupProvider","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","kind":"symbol","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"abstract":[{"text":"Where should the application get its EventLoopGroup from","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBFileIO":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBFileIO","abstract":[{"text":"Manages File reading and writing.","type":"text"}],"navigatorTitle":[{"text":"HBFileIO","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFileIO","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbfileio","title":"HBFileIO"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/loggerWithRequestId(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loggerWithRequestId"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/loggerWithRequestId(_:)","url":"\/documentation\/hummingbird\/loggerwithrequestid(_:)","type":"topic","title":"loggerWithRequestId(_:)","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBEditedResponse":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBEditedResponse","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBEditedResponse","abstract":[],"type":"topic","role":"symbol","title":"HBEditedResponse","navigatorTitle":[{"text":"HBEditedResponse","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbeditedresponse"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","url":"\/documentation\/hummingbird\/router","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"type":"topic","role":"collectionGroup","kind":"article","title":"Router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"title":"Encoding and Decoding","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","role":"collectionGroup","url":"\/documentation\/hummingbird\/encodinganddecoding","type":"topic","kind":"article","abstract":[{"type":"text","text":"Hummingbird uses "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to decode requests and encode responses."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseEncodable":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseEncodable","kind":"identifier"}],"title":"HBResponseEncodable","abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"text":"the response using the encoder stored in ","type":"text"},{"code":"HBApplication.encoder","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/hbresponseencodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBResponseEncodable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseEncodable","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseGenerator":{"title":"HBResponseGenerator","navigatorTitle":[{"text":"HBResponseGenerator","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbresponsegenerator","role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","abstract":[{"type":"text","text":"Object that can generate a "},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBasicRequestContext":{"url":"\/documentation\/hummingbird\/hbbasicrequestcontext","navigatorTitle":[{"text":"HBBasicRequestContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicRequestContext","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBasicRequestContext","title":"HBBasicRequestContext","role":"symbol"}}}