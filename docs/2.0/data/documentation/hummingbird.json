{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"sections":[],"kind":"symbol","seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"]}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird"]}],"metadata":{"role":"collection","symbolKind":"module","externalID":"Hummingbird","roleHeading":"Framework","modules":[{"name":"Hummingbird"}],"title":"Hummingbird"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted"],"title":"Getting Started"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"title":"Tutorials"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"title":"Application"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"title":"Router"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"],"title":"Request\/Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage"],"title":"Request context"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"],"title":"Encoding\/Decoding"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"title":"Middleware"},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError"]},{"title":"File management\/middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem"]},{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/DateCache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"]}],"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2."}]},{"type":"codeListing","code":["import Hummingbird","","\/\/ create router and add a single GET \/hello route","let router = Router()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","\/\/ create application using router","let app = Application(","    router: router,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","\/\/ run hummingbird application","try await app.runService()"],"syntax":"swift"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","kind":"article","role":"collectionGroup","title":"Persistent data","type":"topic","url":"\/documentation\/hummingbird\/persistentdata"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"type":"topic","title":"MemoryPersistDriver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MemoryPersistDriver"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MemoryPersistDriver"}],"url":"\/documentation\/hummingbird\/memorypersistdriver","abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"abstract":[{"type":"text","text":"Hummingbird uses "},{"type":"codeVoice","code":"Codable"},{"text":" to decode requests and encode responses.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","kind":"article","role":"collectionGroup","title":"Encoding and Decoding","type":"topic","url":"\/documentation\/hummingbird\/encodinganddecoding"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"type":"topic","title":"RouterMethods","abstract":[{"type":"text","text":"Conform to "},{"code":"RouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","url":"\/documentation\/hummingbird\/routermethods","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","kind":"symbol","role":"collection","title":"HummingbirdRouter","type":"topic","url":"\/documentation\/hummingbirdrouter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterResponder"}],"navigatorTitle":[{"text":"RouterResponder","kind":"identifier"}],"type":"topic","kind":"symbol","title":"RouterResponder","url":"\/documentation\/hummingbird\/routerresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","abstract":[{"text":"Collection of routes","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"type":"topic","kind":"symbol","title":"RouteCollection","url":"\/documentation\/hummingbird\/routecollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/routeroptions","abstract":[{"type":"text","text":"Router Options"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}],"type":"topic","title":"RouterOptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CallbackResponder","kind":"identifier"}],"navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"type":"topic","kind":"symbol","title":"CallbackResponder","url":"\/documentation\/hummingbird\/callbackresponder"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"kind":"overview","type":"topic","role":"overview","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","title":"Build a Todos application.","url":"\/tutorials\/todos"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","abstract":[{"type":"text","text":"Middleware for serving static files."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FileMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"FileMiddleware","kind":"identifier"}],"type":"topic","kind":"symbol","title":"FileMiddleware","url":"\/documentation\/hummingbird\/filemiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","kind":"symbol","role":"symbol","title":"HTTPResponder","navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"type":"topic","url":"\/documentation\/hummingbird\/httpresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"type":"topic","title":"EventLoopGroupProvider","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EventLoopGroupProvider"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroupProvider"}],"url":"\/documentation\/hummingbird\/eventloopgroupprovider","abstract":[{"text":"Where should the application get its EventLoopGroup from","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdcore","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/responseencodable","abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"text":"the response using the encoder stored in ","type":"text"},{"type":"codeVoice","code":"Application.encoder"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseEncodable"}],"type":"topic","title":"ResponseEncodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","navigatorTitle":[{"kind":"identifier","text":"ResponseEncodable"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","kind":"article","role":"collectionGroup","title":"Jobs","type":"topic","url":"\/documentation\/hummingbird\/jobsguide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EditedResponse":{"type":"topic","title":"EditedResponse","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EditedResponse","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EditedResponse"}],"url":"\/documentation\/hummingbird\/editedresponse","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CacheControl":{"navigatorTitle":[{"text":"CacheControl","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/cachecontrol","abstract":[{"text":"Associates cache control values with filename","type":"text"}],"kind":"symbol","title":"CacheControl","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CacheControl"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/DateCache":{"abstract":[{"text":"Current date formatted cache service","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/DateCache","navigatorTitle":[{"kind":"identifier","text":"DateCache"}],"type":"topic","role":"symbol","title":"DateCache","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateCache"}],"url":"\/documentation\/hummingbird\/datecache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"abstract":[{"type":"text","text":"Endpoint path storage"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","navigatorTitle":[{"kind":"identifier","text":"EndpointPath"}],"type":"topic","role":"symbol","title":"EndpointPath","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EndpointPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/endpointpath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Response":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Response"}],"title":"Response","role":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"url":"\/documentation\/hummingbird\/response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookie":{"type":"topic","title":"Cookie","abstract":[{"type":"text","text":"Structure holding a single cookie"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cookie"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","url":"\/documentation\/hummingbird\/cookie","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cookie"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/responsecodable","abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCodable","kind":"identifier"}],"type":"topic","title":"ResponseCodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","navigatorTitle":[{"text":"ResponseCodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"role":"collection","type":"topic","kind":"symbol","title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","title":"HummingbirdPostgres","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Working with Postgres databases."}],"role":"collection","url":"\/documentation\/hummingbirdpostgres"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdtesting","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"type":"topic","title":"HummingbirdTesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","kind":"symbol","title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"type":"topic","role":"symbol","title":"InitializableFromSource","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"InitializableFromSource","kind":"identifier"}],"url":"\/documentation\/hummingbird\/initializablefromsource"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"RequestDecoder","kind":"identifier"}],"type":"topic","kind":"symbol","title":"RequestDecoder","url":"\/documentation\/hummingbird\/requestdecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"title":"ApplicationConfiguration","kind":"symbol","navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/applicationconfiguration","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ApplicationConfiguration","kind":"identifier"}],"abstract":[{"text":"Application configuration","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"text":" that will follow these rules.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Router"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","title":"Router","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Router"}],"url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"title":"HummingbirdRedis","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdredis","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Mustache template engine."}],"role":"collection","url":"\/documentation\/mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"abstract":[{"type":"text","text":"Version of "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"reference","isActive":true},{"text":" whose Input is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","isActive":true},{"text":" and output is ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","type":"reference","isActive":true},{"text":".","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"type":"topic","role":"symbol","title":"RouterMiddleware","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routermiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"type":"topic","title":"CORSMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/corsmiddleware","abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"type":"topic","title":"CoreRequestContextStorage","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreRequestContextStorage"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","url":"\/documentation\/hummingbird\/corerequestcontextstorage","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CoreRequestContextStorage"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"type":"topic","title":"PersistDriver","abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","url":"\/documentation\/hummingbird\/persistdriver","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PersistDriver"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"navigatorTitle":[{"text":"Request","kind":"identifier"}],"type":"topic","kind":"symbol","title":"Request","url":"\/documentation\/hummingbird\/request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Parameters":{"navigatorTitle":[{"kind":"identifier","text":"Parameters"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","kind":"symbol","type":"topic","abstract":[{"text":"Parameters is a special case of FlatDictionary where both the key","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and value types are Substrings. It is used for parameters extracted"},{"type":"text","text":" "},{"type":"text","text":"from URIs"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameters"}],"url":"\/documentation\/hummingbird\/parameters","title":"Parameters","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","type":"topic","kind":"symbol","title":"HummingbirdFluent","role":"collection","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"url":"\/documentation\/hummingbirdfluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"type":"topic","role":"symbol","title":"MiddlewareGroup","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewaregroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBodyWriter":{"title":"ResponseBodyWriter","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"role":"symbol","url":"\/documentation\/hummingbird\/responsebodywriter","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseBodyWriter"}],"abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"type":"topic","title":"ApplicationProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ApplicationProtocol","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/applicationprotocol","abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"role":"collection","url":"\/documentation\/hummingbirdcompression","abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"kind":"symbol","title":"HummingbirdCompression","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"abstract":[{"text":"Generate Unique ID for each request","type":"text"}],"navigatorTitle":[{"text":"RequestID","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestID","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","title":"RequestID","url":"\/documentation\/hummingbird\/requestid"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/requestcontextsource","abstract":[{"text":"Protocol for source of request contexts","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContextSource","kind":"identifier"}],"type":"topic","title":"RequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","navigatorTitle":[{"text":"RequestContextSource","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookies":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies","title":"Cookies","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cookies"}],"type":"topic","abstract":[{"type":"text","text":"Structure holding an array of cookies"}],"role":"symbol","url":"\/documentation\/hummingbird\/cookies","navigatorTitle":[{"kind":"identifier","text":"Cookies"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"abstract":[{"type":"text","text":"How to build errors for the server to return."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","kind":"article","role":"collectionGroup","title":"Error Handling","type":"topic","url":"\/documentation\/hummingbird\/errorhandling"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError":{"type":"topic","title":"PersistError","abstract":[{"type":"text","text":"Errors return by persist framework"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError","url":"\/documentation\/hummingbird\/persisterror","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PersistError"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"role":"symbol","url":"\/documentation\/hummingbird\/routergroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"kind":"symbol","title":"RouterGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"abstract":[{"text":"The wrapper struct for encoding Codable classes to URL encoded form data","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"URLEncodedFormEncoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","title":"URLEncodedFormEncoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"URLEncodedFormEncoder"}],"url":"\/documentation\/hummingbird\/urlencodedformencoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"title":"HummingbirdWebSocket","role":"collection","type":"topic","url":"\/documentation\/hummingbirdwebsocket","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","kind":"article","role":"collectionGroup","title":"Router","type":"topic","url":"\/documentation\/hummingbird\/routerguide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","kind":"article","role":"collectionGroup","title":"Logging, Metrics and Tracing","type":"topic","url":"\/documentation\/hummingbird\/loggingmetricsandtracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","kind":"article","role":"collectionGroup","title":"Request Contexts","type":"topic","url":"\/documentation\/hummingbird\/requestcontexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"type":"topic","title":"ResponseEncoder","abstract":[{"text":"protocol for encoders generating a Response","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseEncoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","url":"\/documentation\/hummingbird\/responseencoder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseEncoder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"navigatorTitle":[{"kind":"identifier","text":"RemoteAddressRequestContext"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemoteAddressRequestContext"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","title":"RemoteAddressRequestContext","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/httpresponderbuilder","abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"type":"topic","title":"HTTPResponderBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","kind":"article","role":"article","title":"Service Lifecycle","type":"topic","url":"\/documentation\/hummingbird\/servicelifecycle"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","title":"Migrating to Hummingbird v2","kind":"article","type":"topic","abstract":[{"text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2","type":"text"}],"role":"article","url":"\/documentation\/hummingbird\/migratingtov2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"type":"topic","title":"ApplicationRequestContextSource","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationRequestContextSource"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApplicationRequestContextSource"}],"url":"\/documentation\/hummingbird\/applicationrequestcontextsource","abstract":[{"type":"text","text":"RequestContext source for contexts created by "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","title":"MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponseError":{"kind":"symbol","url":"\/documentation\/hummingbird\/httpresponseerror","abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPResponseError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError","role":"symbol","title":"HTTPResponseError","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponseError"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","title":"MediaType","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MediaType"}],"type":"topic","abstract":[{"type":"text","text":"Define media type of file"}],"role":"symbol","url":"\/documentation\/hummingbird\/mediatype","navigatorTitle":[{"text":"MediaType","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","abstract":[{"text":"Manages File reading and writing.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileIO","kind":"identifier"}],"navigatorTitle":[{"text":"FileIO","kind":"identifier"}],"type":"topic","kind":"symbol","title":"FileIO","url":"\/documentation\/hummingbird\/fileio"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LocalFileSystem":{"type":"topic","title":"LocalFileSystem","abstract":[{"type":"text","text":"Local file system file provider used by FileMiddleware. All file accesses are relative to a root folder"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocalFileSystem"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem","url":"\/documentation\/hummingbird\/localfilesystem","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LocalFileSystem"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","title":"LogRequestsMiddleware","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogRequestsMiddleware"}],"type":"topic","abstract":[{"text":"Middleware outputting to log for every call to server","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbird\/logrequestsmiddleware","navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/routerpath","abstract":[{"text":"Split router path into components","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"type":"topic","title":"RouterPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"kind":"symbol","url":"\/documentation\/hummingbird\/tracingmiddleware","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","role":"symbol","title":"TracingMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","title":"URLEncodedFormDecoder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormDecoder","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The wrapper struct for decoding URL encoded form data to Codable classes"}],"role":"symbol","url":"\/documentation\/hummingbird\/urlencodedformdecoder","navigatorTitle":[{"text":"URLEncodedFormDecoder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GettingStarted":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","abstract":[{"type":"text","text":"Create a new project on GitHub or an app locally from a starter template."}],"role":"article","type":"topic","kind":"article","title":"Getting Started with Hummingbird","url":"\/documentation\/hummingbird\/gettingstarted"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"type":"text","text":" "},{"text":"a request. Provides context for request processing","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","kind":"symbol","role":"symbol","title":"RequestContext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"type":"topic","url":"\/documentation\/hummingbird\/requestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"abstract":[{"text":"Access environment variables","type":"text"}],"navigatorTitle":[{"text":"Environment","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","title":"Environment","url":"\/documentation\/hummingbird\/environment"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"type":"topic","title":"ResponseGenerator","abstract":[{"type":"text","text":"Object that can generate a "},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseGenerator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","url":"\/documentation\/hummingbird\/responsegenerator","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseGenerator"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPError":{"type":"topic","title":"HTTPError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPError"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPError"}],"url":"\/documentation\/hummingbird\/httperror","abstract":[{"text":"Default HTTP error. Provides an HTTP status and a message","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddlewareFileAttributes":{"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/filemiddlewarefileattributes","abstract":[{"type":"text","text":"Protocol for all the file attributes required by "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","type":"reference","isActive":true}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileMiddlewareFileAttributes"}],"type":"topic","title":"FileMiddlewareFileAttributes","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","navigatorTitle":[{"kind":"identifier","text":"FileMiddlewareFileAttributes"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","kind":"symbol","role":"symbol","title":"BasicRequestContext","navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRequestContext"}],"type":"topic","url":"\/documentation\/hummingbird\/basicrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/metricsmiddleware","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"kind":"symbol","title":"MetricsMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","kind":"article","role":"article","title":"Testing","type":"topic","url":"\/documentation\/hummingbird\/testing"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","title":"HummingbirdJobs","url":"\/documentation\/hummingbirdjobs"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","kind":"article","role":"collectionGroup","title":"Middleware","type":"topic","url":"\/documentation\/hummingbird\/middlewareguide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"kind":"symbol","url":"\/documentation\/hummingbird\/application","abstract":[{"text":"Application type bringing together all the components of Hummingbird","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Application"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","role":"symbol","title":"Application","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider":{"abstract":[{"type":"text","text":"Protocol for file provider type used by "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","type":"reference","isActive":true}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FileProvider"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","title":"FileProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileProvider"}],"url":"\/documentation\/hummingbird\/fileprovider"}}}