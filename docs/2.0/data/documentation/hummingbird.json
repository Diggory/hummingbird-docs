{"seeAlsoSections":[{"title":"Related Documentation","anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import Hummingbird","","\/\/ create router and add a single GET \/hello route","let router = Router()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","\/\/ create application using router","let app = Application(","    router: router,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","\/\/ run hummingbird application","try await app.runService()"]}]}],"metadata":{"title":"Hummingbird","symbolKind":"module","externalID":"Hummingbird","role":"collection","roleHeading":"Framework","modules":[{"name":"Hummingbird"}],"images":[{"type":"icon","identifier":"logo.png"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"sections":[],"hierarchy":{"paths":[[]]},"kind":"symbol","topicSections":[{"title":"Getting Started","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"anchor":"Getting-Started"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"],"title":"Guides","anchor":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"anchor":"Application","title":"Application"},{"anchor":"Router","title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"],"anchor":"RequestResponse","title":"Request\/Response"},{"anchor":"Request-context","title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"]},{"anchor":"EncodingDecoding","title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError"],"title":"Errors","anchor":"Errors"},{"anchor":"Middleware","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"title":"Middleware"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem"],"anchor":"File-managementmiddleware","title":"File management\/middleware"},{"anchor":"Storage","title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError"]},{"anchor":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"],"title":"Miscellaneous"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"title":"MiddlewareFixedTypeBuilder","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Middleware stack result builder"}],"navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"navigatorTitle":[{"kind":"identifier","text":"Request"}],"role":"symbol","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","title":"Request","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"title":"RouterResponder","abstract":[],"url":"\/documentation\/hummingbird\/routerresponder","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","kind":"symbol","navigatorTitle":[{"text":"RouterResponder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","type":"topic","url":"\/documentation\/hummingbird\/middlewareguide","title":"Middleware","role":"collectionGroup","abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"type":"topic","abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","kind":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext","role":"symbol","title":"BasicRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BasicRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","type":"topic","url":"\/documentation\/hummingbird\/migratingtov2","title":"Migrating to Hummingbird v2","role":"article","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseBodyWriter","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"abstract":[{"type":"text","text":"HTTP Response Body part writer"}],"url":"\/documentation\/hummingbirdcore\/responsebodywriter","title":"ResponseBodyWriter","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponseError":{"abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}],"title":"HTTPResponseError","url":"\/documentation\/hummingbird\/httpresponseerror","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HTTPResponseError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponseError"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"navigatorTitle":[{"text":"Application","kind":"identifier"}],"title":"Application","url":"\/documentation\/hummingbird\/application","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","type":"topic","url":"\/documentation\/hummingbird\/encodinganddecoding","title":"Encoding and Decoding","role":"collectionGroup","abstract":[{"text":"Hummingbird uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to decode requests and encode responses.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookies":{"title":"Cookies","navigatorTitle":[{"text":"Cookies","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/cookies","kind":"symbol","abstract":[{"text":"Structure holding an array of cookies","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cookies"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"images":[{"type":"icon","identifier":"logo.png"}],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"title":"RequestID","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RequestID","kind":"identifier"}],"type":"topic","abstract":[{"text":"Generate Unique ID for each request","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RequestID"}],"kind":"symbol","url":"\/documentation\/hummingbird\/requestid","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationProtocol"}],"type":"topic","url":"\/documentation\/hummingbird\/applicationprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"title":"ApplicationProtocol","role":"symbol","abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ApplicationConfiguration","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","url":"\/documentation\/hummingbird\/applicationconfiguration","type":"topic","navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}],"title":"ApplicationConfiguration","role":"symbol","abstract":[{"text":"Application configuration","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","title":"HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","role":"collection","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"kind":"symbol","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterPath"}],"navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"title":"RouterPath","url":"\/documentation\/hummingbird\/routerpath","role":"symbol","abstract":[{"type":"text","text":"Split router path into components"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","url":"\/documentation\/hummingbird\/jobsguide","type":"topic","title":"Jobs","role":"collectionGroup","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/httpresponderbuilder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HTTPResponderBuilder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"title":"HTTPResponderBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GettingStarted":{"url":"\/documentation\/hummingbird\/gettingstarted","title":"Getting Started with Hummingbird","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","kind":"article","abstract":[{"text":"Create a new project on GitHub or an app locally from a starter template.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"navigatorTitle":[{"kind":"identifier","text":"RequestContextSource"}],"type":"topic","abstract":[{"text":"Protocol for source of request contexts","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","kind":"symbol","url":"\/documentation\/hummingbird\/requestcontextsource","role":"symbol","title":"RequestContextSource","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContextSource"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"title":"URLEncodedFormEncoder","url":"\/documentation\/hummingbird\/urlencodedformencoder","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"HummingbirdRouter","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdrouter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","title":"MiddlewareProtocol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MiddlewareProtocol"}],"type":"topic","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"URLEncodedFormDecoder"}],"navigatorTitle":[{"kind":"identifier","text":"URLEncodedFormDecoder"}],"title":"URLEncodedFormDecoder","url":"\/documentation\/hummingbird\/urlencodedformdecoder","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The wrapper struct for decoding URL encoded form data to Codable classes"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"title":"HummingbirdHTTP2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdhttp2","abstract":[{"text":"Add HTTP2 support to Hummingbird server.","type":"text"}],"role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"role":"collection","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","url":"\/documentation\/jobs","type":"topic","title":"Jobs","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"navigatorTitle":[{"text":"CoreRequestContextStorage","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","kind":"symbol","url":"\/documentation\/hummingbird\/corerequestcontextstorage","role":"symbol","title":"CoreRequestContextStorage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreRequestContextStorage"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","url":"\/documentation\/mustache","title":"Mustache","role":"collection","abstract":[{"type":"text","text":"Mustache template engine."}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"type":"topic","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","url":"\/documentation\/hummingbird\/routergroup","kind":"symbol","role":"symbol","title":"RouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"title":"ResponseEncodable","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncodable","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Protocol for encodable object that can generate a response. The router will encode"},{"text":" ","type":"text"},{"type":"text","text":"the response using the encoder stored in "},{"code":"Application.encoder","type":"codeVoice"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseEncodable"}],"kind":"symbol","url":"\/documentation\/hummingbird\/responseencodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LogRequestsMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware","title":"LogRequestsMiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"EventLoopGroupProvider","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","url":"\/documentation\/hummingbird\/eventloopgroupprovider","type":"topic","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"title":"EventLoopGroupProvider","role":"symbol","abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"title":"ResponseEncoder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseEncoder"}],"type":"topic","abstract":[{"text":"protocol for encoders generating a Response","type":"text"}],"navigatorTitle":[{"text":"ResponseEncoder","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/responseencoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"abstract":[{"text":"Protocol for codable object that can generate a response","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/responsecodable","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ResponseCodable","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","navigatorTitle":[{"kind":"identifier","text":"ResponseCodable"}],"title":"ResponseCodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationRequestContextSource"}],"type":"topic","title":"ApplicationRequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","abstract":[{"text":"RequestContext source for contexts created by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/applicationrequestcontextsource","navigatorTitle":[{"text":"ApplicationRequestContextSource","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"FileProvider","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","type":"topic","url":"\/documentation\/hummingbird\/fileprovider","navigatorTitle":[{"kind":"identifier","text":"FileProvider"}],"title":"FileProvider","role":"symbol","abstract":[{"type":"text","text":"Protocol for file provider type used by "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddlewareFileAttributes":{"title":"FileMiddlewareFileAttributes","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileMiddlewareFileAttributes"}],"type":"topic","abstract":[{"text":"Protocol for all the file attributes required by ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","type":"reference","isActive":true}],"navigatorTitle":[{"text":"FileMiddlewareFileAttributes","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/filemiddlewarefileattributes","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RouteCollection"}],"url":"\/documentation\/hummingbird\/routecollection","abstract":[{"type":"text","text":"Collection of routes"}],"title":"RouteCollection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","type":"topic","url":"\/documentation\/hummingbird\/errorhandling","title":"Error Handling","role":"collectionGroup","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"title":"InitializableFromSource","url":"\/documentation\/hummingbird\/initializablefromsource","navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","kind":"symbol","type":"topic","abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"navigatorTitle":[{"text":"Router","kind":"identifier"}],"title":"Router","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/router","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"title":"HTTPResponder","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"type":"topic","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"kind":"symbol","url":"\/documentation\/hummingbird\/httpresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","title":"HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","role":"collection","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"kind":"symbol","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"title":"FileMiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FileMiddleware"}],"type":"topic","abstract":[{"text":"Middleware for serving static files.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FileMiddleware"}],"kind":"symbol","url":"\/documentation\/hummingbird\/filemiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistDriver","kind":"identifier"}],"navigatorTitle":[{"text":"PersistDriver","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"url":"\/documentation\/hummingbird\/persistdriver","title":"PersistDriver","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CacheControl":{"navigatorTitle":[{"text":"CacheControl","kind":"identifier"}],"title":"CacheControl","url":"\/documentation\/hummingbird\/cachecontrol","kind":"symbol","type":"topic","abstract":[{"text":"Associates cache control values with filename","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CacheControl","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FileIO","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","url":"\/documentation\/hummingbird\/fileio","title":"FileIO","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FileIO"}],"type":"topic","abstract":[{"text":"Manages File reading and writing.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"title":"EndpointPath","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EndpointPath","kind":"identifier"}],"type":"topic","abstract":[{"text":"Endpoint path storage","type":"text"}],"navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/endpointpath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"type":"topic","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","kind":"symbol","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","role":"symbol","title":"RemoteAddressRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RemoteAddressRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"HummingbirdPostgres","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","abstract":[{"type":"text","text":"Working with Postgres databases."}],"url":"\/documentation\/hummingbirdpostgres","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","url":"\/documentation\/hummingbird\/metricsmiddleware","title":"MetricsMiddleware","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MetricsMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","role":"collection","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"kind":"symbol","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"title":"Response","url":"\/documentation\/hummingbirdcore\/response","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"HummingbirdCompression","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"url":"\/documentation\/hummingbirdcompression","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterOptions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","url":"\/documentation\/hummingbird\/routeroptions","title":"RouterOptions","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterOptions"}],"type":"topic","abstract":[{"text":"Router Options","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"navigatorTitle":[{"text":"MemoryPersistDriver","kind":"identifier"}],"title":"MemoryPersistDriver","url":"\/documentation\/hummingbird\/memorypersistdriver","abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MemoryPersistDriver","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","title":"Logging, Metrics and Tracing","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","role":"collectionGroup","kind":"article","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"role":"overview","title":"Build a Todos application.","kind":"overview","type":"topic","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","url":"\/tutorials\/todos"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ChildRequestContext"}],"type":"topic","title":"ChildRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","abstract":[{"text":"A RequestContext that can be initialized from another RequestContext.","type":"text"}],"url":"\/documentation\/hummingbird\/childrequestcontext","navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookie":{"title":"Cookie","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cookie","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Structure holding a single cookie"}],"navigatorTitle":[{"text":"Cookie","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/cookie","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"HummingbirdFluent","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"kind":"symbol","url":"\/documentation\/hummingbirdfluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"navigatorTitle":[{"kind":"identifier","text":"Environment"}],"abstract":[{"text":"Access environment variables","type":"text"}],"url":"\/documentation\/hummingbird\/environment","title":"Environment","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareGroup","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"url":"\/documentation\/hummingbird\/middlewaregroup","title":"MiddlewareGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PersistError","kind":"identifier"}],"url":"\/documentation\/hummingbird\/persisterror","navigatorTitle":[{"kind":"identifier","text":"PersistError"}],"title":"PersistError","type":"topic","abstract":[{"type":"text","text":"Errors return by persist framework"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"navigatorTitle":[{"kind":"identifier","text":"ResponseGenerator"}],"title":"ResponseGenerator","url":"\/documentation\/hummingbird\/responsegenerator","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Object that can generate a "},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseGenerator"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"abstract":[{"text":"Version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":" and output is ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/routermiddleware","title":"RouterMiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"role":"collection","url":"\/documentation\/hummingbirdtls","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","title":"HummingbirdTLS","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data","url":"\/documentation\/hummingbird\/persistentdata","role":"collectionGroup","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"kind":"article","type":"topic","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","type":"topic","url":"\/documentation\/hummingbird\/servicelifecycle","title":"Service Lifecycle","role":"article","abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","title":"HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","role":"collection","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"kind":"symbol","type":"topic","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPError":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HTTPError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","url":"\/documentation\/hummingbird\/httperror","title":"HTTPError","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPError"}],"type":"topic","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","url":"\/documentation\/hummingbirdredis","type":"topic","title":"HummingbirdRedis","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/requestdecoder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecoder"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","navigatorTitle":[{"kind":"identifier","text":"RequestDecoder"}],"title":"RequestDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EditedResponse":{"title":"EditedResponse","navigatorTitle":[{"kind":"identifier","text":"EditedResponse"}],"type":"topic","url":"\/documentation\/hummingbird\/editedresponse","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EditedResponse","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"title":"Router","kind":"article","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","url":"\/documentation\/hummingbird\/routerguide","role":"collectionGroup","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"title":"CORSMiddleware","url":"\/documentation\/hummingbird\/corsmiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CORSMiddleware","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"type":"topic","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Parameters":{"navigatorTitle":[{"text":"Parameters","kind":"identifier"}],"title":"Parameters","url":"\/documentation\/hummingbird\/parameters","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Parameters is a special case of FlatDictionary where both the key"},{"text":" ","type":"text"},{"type":"text","text":"and value types are Substrings. It is used for parameters extracted"},{"text":" ","type":"text"},{"type":"text","text":"from URIs"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parameters"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","type":"topic","url":"\/documentation\/hummingbird\/testing","title":"Testing","role":"article","abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"title":"RouterMethods","navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routermethods","abstract":[{"type":"text","text":"Conform to "},{"code":"RouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LocalFileSystem":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"LocalFileSystem","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem","type":"topic","url":"\/documentation\/hummingbird\/localfilesystem","navigatorTitle":[{"text":"LocalFileSystem","kind":"identifier"}],"title":"LocalFileSystem","role":"symbol","abstract":[{"text":"Local file system file provider used by FileMiddleware. All file accesses are relative to a root folder","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType":{"navigatorTitle":[{"text":"MediaType","kind":"identifier"}],"type":"topic","title":"MediaType","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","abstract":[{"type":"text","text":"Define media type of file"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MediaType","kind":"identifier"}],"url":"\/documentation\/hummingbird\/mediatype","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore","type":"topic","title":"HummingbirdCore","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TracingMiddleware"}],"navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}],"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"url":"\/documentation\/hummingbird\/tracingmiddleware","title":"TracingMiddleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"title":"CallbackResponder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CallbackResponder","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"kind":"symbol","url":"\/documentation\/hummingbird\/callbackresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder"}}}