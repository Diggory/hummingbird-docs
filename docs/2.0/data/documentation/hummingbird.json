{"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2."}]},{"syntax":"swift","code":["import Hummingbird","","\/\/ create router and add a single GET \/hello route","let router = Router()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","\/\/ create application using router","let app = Application(","    router: router,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","\/\/ run hummingbird application","try await app.runService()"],"type":"codeListing"}]}],"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]}],"metadata":{"roleHeading":"Framework","externalID":"Hummingbird","role":"collection","symbolKind":"module","title":"Hummingbird","modules":[{"name":"Hummingbird"}],"images":[{"type":"icon","identifier":"logo.png"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"title":"Getting Started","anchor":"Getting-Started"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"],"anchor":"Guides","title":"Guides"},{"anchor":"Application","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"title":"Application"},{"anchor":"Router","title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"]},{"anchor":"RequestResponse","title":"Request\/Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"]},{"title":"Request context","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"],"anchor":"Request-context"},{"anchor":"EncodingDecoding","title":"Encoding\/Decoding","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"]},{"anchor":"Errors","title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"anchor":"Middleware","title":"Middleware"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem"],"title":"File management\/middleware","anchor":"File-managementmiddleware"},{"anchor":"Storage","title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"],"title":"Miscellaneous","anchor":"Miscellaneous"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"variants":[{"paths":["\/documentation\/hummingbird"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GettingStarted":{"type":"topic","kind":"article","role":"article","url":"\/documentation\/hummingbird\/gettingstarted","title":"Getting Started with Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Create a new project on GitHub or an app locally from a starter template."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"navigatorTitle":[{"text":"ResponseEncoder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/responseencoder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ResponseEncoder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","kind":"symbol","title":"ResponseEncoder","abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}],"type":"topic","url":"\/documentation\/hummingbird\/responsecodable","navigatorTitle":[{"text":"ResponseCodable","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCodable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","title":"ResponseCodable","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Parameters":{"abstract":[{"type":"text","text":"Parameters is a special case of FlatDictionary where both the key"},{"text":" ","type":"text"},{"text":"and value types are Substrings. It is used for parameters extracted","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from URIs"}],"type":"topic","url":"\/documentation\/hummingbird\/parameters","navigatorTitle":[{"text":"Parameters","kind":"identifier"}],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parameters","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","title":"Parameters","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}],"title":"RouterPath","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Split router path into components"}],"url":"\/documentation\/hummingbird\/routerpath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CacheControl":{"role":"symbol","title":"CacheControl","navigatorTitle":[{"kind":"identifier","text":"CacheControl"}],"abstract":[{"text":"Associates cache control values with filename","type":"text"}],"url":"\/documentation\/hummingbird\/cachecontrol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CacheControl","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"url":"\/documentation\/hummingbird\/routergroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterGroup"}],"title":"RouterGroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"text":" ","type":"text"},{"type":"text","text":"suffix to the endpoint path"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"title":"Application","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Application","kind":"identifier"}],"abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}],"url":"\/documentation\/hummingbird\/application","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","kind":"symbol","navigatorTitle":[{"text":"Application","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"navigatorTitle":[{"text":"RequestDecoder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/requestdecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestDecoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","kind":"symbol","title":"RequestDecoder","abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"navigatorTitle":[{"text":"FileMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/filemiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FileMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","title":"FileMiddleware","kind":"symbol","abstract":[{"text":"Middleware for serving static files.","type":"text"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"role":"symbol","title":"MiddlewareGroup","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"url":"\/documentation\/hummingbird\/middlewaregroup","type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareGroup","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"role":"symbol","title":"RemoteAddressRequestContext","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for request context that stores the remote address of connected client."}],"url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemoteAddressRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/requestcontexts","title":"Request Contexts","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"role":"symbol","title":"RouterMiddleware","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"abstract":[{"text":"Version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/routermiddleware","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponseError":{"navigatorTitle":[{"kind":"identifier","text":"HTTPResponseError"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/httpresponseerror","title":"HTTPResponseError","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HTTPResponseError","kind":"identifier"}],"abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/responsegenerator","title":"ResponseGenerator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"abstract":[{"text":"Object that can generate a ","type":"text"},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"type":"topic","url":"\/documentation\/hummingbird\/testing","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","title":"Testing","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"role":"symbol","title":"LogRequestsMiddleware","navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware outputting to log for every call to server."}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"title":"HummingbirdTesting","role":"collection","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"url":"\/documentation\/hummingbirdtesting","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"navigatorTitle":[{"text":"URLEncodedFormDecoder","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/urlencodedformdecoder","title":"URLEncodedFormDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormDecoder","kind":"identifier"}],"abstract":[{"type":"text","text":"The wrapper struct for decoding URL encoded form data to Codable classes"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"role":"symbol","title":"TracingMiddleware","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"url":"\/documentation\/hummingbird\/tracingmiddleware","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"title":"HummingbirdFluent","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"url":"\/documentation\/hummingbirdfluent","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider":{"navigatorTitle":[{"text":"FileProvider","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/fileprovider","title":"FileProvider","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileProvider"}],"abstract":[{"type":"text","text":"Protocol for file provider type used by "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","type":"reference"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"role":"collection","title":"HummingbirdWebSocket","abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"url":"\/documentation\/hummingbirdwebsocket","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"navigatorTitle":[{"text":"FileIO","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/fileio","title":"FileIO","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"FileIO","kind":"identifier"}],"abstract":[{"type":"text","text":"Manages File reading and writing."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","type":"topic","abstract":[{"text":"Endpoint path storage","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/endpointpath","title":"EndpointPath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EndpointPath"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcore\/responsebodywriter","title":"ResponseBodyWriter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP Response Body part writer"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"title":"ApplicationProtocol","url":"\/documentation\/hummingbird\/applicationprotocol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ApplicationProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"ApplicationProtocol"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"url":"\/documentation\/hummingbirdlambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","role":"collection","kind":"symbol","title":"HummingbirdLambda","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"title":"HummingbirdAuth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"url":"\/documentation\/hummingbirdauth","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/routeroptions","abstract":[{"text":"Router Options","type":"text"}],"title":"RouterOptions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterOptions"}],"navigatorTitle":[{"kind":"identifier","text":"RouterOptions"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"title":"Request","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsMiddleware","kind":"identifier"}],"title":"MetricsMiddleware","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/metricsmiddleware","type":"topic","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"url":"\/documentation\/hummingbird\/initializablefromsource","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InitializableFromSource"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","kind":"symbol","title":"InitializableFromSource","abstract":[{"type":"text","text":"A type that can be initialized from another type"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/persisterror","abstract":[{"text":"Errors return by persist framework","type":"text"}],"title":"PersistError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistError"}],"navigatorTitle":[{"kind":"identifier","text":"PersistError"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"role":"collection","title":"HummingbirdPostgres","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"url":"\/documentation\/hummingbirdpostgres","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","type":"topic","abstract":[{"text":"Conform to ","type":"text"},{"code":"RouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routermethods","title":"RouterMethods","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"url":"\/tutorials\/todos","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","type":"topic","role":"overview","kind":"overview","title":"Build a Todos application.","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Integration with Swift Service Lifecycle"}],"type":"topic","url":"\/documentation\/hummingbird\/servicelifecycle","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","title":"Service Lifecycle","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookie":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cookie","kind":"identifier"}],"title":"Cookie","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/cookie","abstract":[{"type":"text","text":"Structure holding a single cookie"}],"navigatorTitle":[{"kind":"identifier","text":"Cookie"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","title":"MiddlewareProtocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"role":"collectionGroup","title":"Persistent data","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"url":"\/documentation\/hummingbird\/persistentdata","type":"topic","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPError":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/httperror","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message"}],"title":"HTTPError","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HTTPError","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPError"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookies":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Cookies"}],"title":"Cookies","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/cookies","abstract":[{"type":"text","text":"Structure holding an array of cookies"}],"navigatorTitle":[{"text":"Cookies","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/requestid","abstract":[{"text":"Generate Unique ID for each request","type":"text"}],"title":"RequestID","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RequestID","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RequestID"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"role":"symbol","title":"RequestContextSource","navigatorTitle":[{"text":"RequestContextSource","kind":"identifier"}],"abstract":[{"text":"Protocol for source of request contexts","type":"text"}],"url":"\/documentation\/hummingbird\/requestcontextsource","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RequestContextSource","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"title":"Response","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"navigatorTitle":[{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"role":"symbol","title":"HTTPResponderBuilder","navigatorTitle":[{"kind":"identifier","text":"HTTPResponderBuilder"}],"abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"url":"\/documentation\/hummingbird\/httpresponderbuilder","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"type":"topic","kind":"article","role":"article","url":"\/documentation\/hummingbird\/migratingtov2","title":"Migrating to Hummingbird v2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/callbackresponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"title":"CallbackResponder","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CallbackResponder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/routerguide","title":"Router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/routecollection","abstract":[{"text":"Collection of routes","type":"text"}],"title":"RouteCollection","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouteCollection"}],"navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"Responder"},{"text":" that will follow these rules.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Router","kind":"identifier"}],"url":"\/documentation\/hummingbird\/router","title":"Router","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Router"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/corerequestcontextstorage","abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"title":"CoreRequestContextStorage","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"CoreRequestContextStorage","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CoreRequestContextStorage"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"title":"Jobs","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/jobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"title":"MiddlewareFixedTypeBuilder","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","abstract":[{"text":"Middleware stack result builder","type":"text"}],"navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"RouterResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerresponder","title":"RouterResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterResponder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"url":"\/documentation\/hummingbird\/eventloopgroupprovider","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroupProvider"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","title":"EventLoopGroupProvider","kind":"symbol","abstract":[{"text":"Where should the application get its EventLoopGroup from","type":"text"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicRequestContext"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/basicrequestcontext","title":"BasicRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BasicRequestContext"}],"abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"title":"MemoryPersistDriver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MemoryPersistDriver"}],"abstract":[{"type":"text","text":"In memory driver for persist system for storing persistent cross request key\/value pairs"}],"url":"\/documentation\/hummingbird\/memorypersistdriver","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MemoryPersistDriver"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/applicationconfiguration","title":"ApplicationConfiguration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationConfiguration"}],"abstract":[{"text":"Application configuration","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"abstract":[{"type":"text","text":"Access environment variables"}],"type":"topic","url":"\/documentation\/hummingbird\/environment","navigatorTitle":[{"text":"Environment","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","title":"Environment","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddlewareFileAttributes":{"navigatorTitle":[{"text":"FileMiddlewareFileAttributes","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/filemiddlewarefileattributes","title":"FileMiddlewareFileAttributes","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"FileMiddlewareFileAttributes","kind":"identifier"}],"abstract":[{"text":"Protocol for all the file attributes required by ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","isActive":true,"type":"reference"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EditedResponse":{"abstract":[],"type":"topic","url":"\/documentation\/hummingbird\/editedresponse","navigatorTitle":[{"text":"EditedResponse","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EditedResponse","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","title":"EditedResponse","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","title":"HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType":{"role":"symbol","title":"MediaType","navigatorTitle":[{"kind":"identifier","text":"MediaType"}],"abstract":[{"type":"text","text":"Define media type of file"}],"url":"\/documentation\/hummingbird\/mediatype","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"MediaType","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/loggingmetricsandtracing","title":"Logging, Metrics and Tracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"abstract":[{"type":"text","text":"Protocol for encodable object that can generate a response. The router will encode"},{"text":" ","type":"text"},{"type":"text","text":"the response using the encoder stored in "},{"type":"codeVoice","code":"Application.encoder"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/hummingbird\/responseencodable","navigatorTitle":[{"kind":"identifier","text":"ResponseEncodable"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseEncodable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","title":"ResponseEncodable","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"title":"CORSMiddleware","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/corsmiddleware","type":"topic","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"ChildRequestContext"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/childrequestcontext","title":"ChildRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChildRequestContext","kind":"identifier"}],"abstract":[{"text":"A RequestContext that can be initialized from another RequestContext.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"title":"HummingbirdRouter","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"url":"\/documentation\/hummingbirdrouter","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PersistDriver"}],"title":"PersistDriver","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"url":"\/documentation\/hummingbird\/persistdriver","navigatorTitle":[{"kind":"identifier","text":"PersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","title":"HummingbirdRedis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"url":"\/documentation\/hummingbirdredis","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Hummingbird uses "},{"type":"codeVoice","code":"Codable"},{"text":" to decode requests and encode responses.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/encodinganddecoding","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","title":"Encoding and Decoding","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdtls","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server."}],"title":"HummingbirdTLS","type":"topic","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"role":"collection","title":"Mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"url":"\/documentation\/mustache","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","title":"HummingbirdHTTP2","abstract":[{"text":"Add HTTP2 support to Hummingbird server.","type":"text"}],"url":"\/documentation\/hummingbirdhttp2","type":"topic","kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/jobsguide","title":"Jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LocalFileSystem":{"abstract":[{"type":"text","text":"Local file system file provider used by FileMiddleware. All file accesses are relative to a root folder"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LocalFileSystem"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem","title":"LocalFileSystem","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocalFileSystem"}],"url":"\/documentation\/hummingbird\/localfilesystem","role":"symbol"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/httpresponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"title":"HTTPResponder","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"navigatorTitle":[{"kind":"identifier","text":"ApplicationRequestContextSource"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/applicationrequestcontextsource","title":"ApplicationRequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ApplicationRequestContextSource","kind":"identifier"}],"abstract":[{"text":"RequestContext source for contexts created by ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"},{"text":".","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"role":"collectionGroup","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird\/errorhandling","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"title":"Error Handling","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Processing requests and responses outside of request handlers.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/middlewareguide","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","title":"Middleware","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"url":"\/documentation\/hummingbird\/urlencodedformencoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","type":"topic","navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"title":"URLEncodedFormEncoder","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}]}}}