{"metadata":{"externalID":"Hummingbird","symbolKind":"module","title":"Hummingbird","modules":[{"name":"Hummingbird"}],"role":"collection","roleHeading":"Framework"},"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"],"title":"Related Documentation"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"title":"Getting Started"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"title":"Application"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"title":"Router"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"],"title":"Request\/Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage"],"title":"Request context"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"],"title":"Encoding\/Decoding"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError"],"title":"Errors"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"title":"Middleware"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError"],"title":"Storage"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem"],"title":"File management\/middleware"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"],"title":"Miscellaneous"}],"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2."}]},{"type":"codeListing","syntax":"swift","code":["import Hummingbird","","\/\/ create router and add a single GET \/hello route","let router = Router()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","\/\/ create application using router","let app = Application(","    router: router,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","\/\/ run hummingbird application","try await app.runService()"]}]}],"variants":[{"paths":["\/documentation\/hummingbird"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"title":"MemoryPersistDriver","kind":"symbol","abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"url":"\/documentation\/hummingbird\/memorypersistdriver","role":"symbol","navigatorTitle":[{"text":"MemoryPersistDriver","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemoryPersistDriver","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"url":"\/documentation\/hummingbird\/routecollection","role":"symbol","title":"RouteCollection","navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Collection of routes"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContextSource":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContextSource","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestContextSource"}],"type":"topic","title":"RequestContextSource","role":"symbol","url":"\/documentation\/hummingbird\/requestcontextsource","abstract":[{"type":"text","text":"Protocol for source of request contexts"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestContextSource"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"url":"\/documentation\/mustache","title":"Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","abstract":[{"text":"Define media type of file","type":"text"}],"title":"MediaType","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MediaType","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MediaType"}],"url":"\/documentation\/hummingbird\/mediatype"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Parameters":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameters"}],"url":"\/documentation\/hummingbird\/parameters","navigatorTitle":[{"kind":"identifier","text":"Parameters"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Parameters is a special case of FlatDictionary where both the key","type":"text"},{"text":" ","type":"text"},{"text":"and value types are Substrings. It is used for parameters extracted","type":"text"},{"text":" ","type":"text"},{"text":"from URIs","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","title":"Parameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"type":"topic","url":"\/documentation\/hummingbird\/servicelifecycle","title":"Service Lifecycle","abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"url":"\/documentation\/hummingbird\/migratingtov2","type":"topic","title":"Migrating to Hummingbird v2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"kind":"article","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"MetricsMiddleware","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Middleware recording metrics for each request","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsMiddleware","kind":"identifier"}],"title":"MetricsMiddleware","url":"\/documentation\/hummingbird\/metricsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","title":"RouterMiddleware","abstract":[{"text":"Version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","isActive":true},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","isActive":true},{"type":"text","text":"."}],"url":"\/documentation\/hummingbird\/routermiddleware","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ApplicationConfiguration","kind":"identifier"}],"kind":"symbol","title":"ApplicationConfiguration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Application configuration"}],"url":"\/documentation\/hummingbird\/applicationconfiguration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddlewareFileAttributes":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileMiddlewareFileAttributes"}],"role":"symbol","abstract":[{"text":"Protocol for all the file attributes required by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","type":"reference"}],"type":"topic","title":"FileMiddlewareFileAttributes","navigatorTitle":[{"kind":"identifier","text":"FileMiddlewareFileAttributes"}],"url":"\/documentation\/hummingbird\/filemiddlewarefileattributes"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"type":"topic","url":"\/documentation\/hummingbird\/urlencodedformencoder","title":"URLEncodedFormEncoder","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLEncodedFormEncoder"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"URLEncodedFormEncoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"url":"\/documentation\/hummingbirdwebsocket","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","title":"HummingbirdWebSocket"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMethods"}],"type":"topic","title":"RouterMethods","role":"symbol","url":"\/documentation\/hummingbird\/routermethods","abstract":[{"text":"Conform to ","type":"text"},{"code":"RouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterMethods"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","title":"Router","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"url":"\/documentation\/hummingbird\/routerguide","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","title":"RouterOptions","abstract":[{"text":"Router Options","type":"text"}],"url":"\/documentation\/hummingbird\/routeroptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Application","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","title":"Application","abstract":[{"text":"Application type bringing together all the components of Hummingbird","type":"text"}],"url":"\/documentation\/hummingbird\/application","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Application","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationRequestContextSource":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ApplicationRequestContextSource"}],"type":"topic","abstract":[{"type":"text","text":"RequestContext source for contexts created by "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","isActive":true,"type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/hummingbird\/applicationrequestcontextsource","role":"symbol","title":"ApplicationRequestContextSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationRequestContextSource","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApplicationRequestContextSource"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"url":"\/documentation\/hummingbirdrouter","title":"HummingbirdRouter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","abstract":[{"type":"text","text":"Split router path into components"}],"title":"RouterPath","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterPath"}],"role":"symbol","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerpath"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"url":"\/documentation\/hummingbirdcore","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"type":"topic","url":"\/documentation\/hummingbird\/fileio","title":"FileIO","abstract":[{"text":"Manages File reading and writing.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FileIO","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FileIO"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"url":"\/documentation\/hummingbird\/eventloopgroupprovider","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroupProvider"}],"title":"EventLoopGroupProvider","abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroupProvider"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponseError":{"title":"HTTPResponseError","kind":"symbol","abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}],"url":"\/documentation\/hummingbird\/httpresponseerror","role":"symbol","navigatorTitle":[{"text":"HTTPResponseError","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponseError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseError"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","title":"BasicRequestContext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"url":"\/documentation\/hummingbird\/basicrequestcontext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRequestContext"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistError"}],"url":"\/documentation\/hummingbird\/persisterror","navigatorTitle":[{"kind":"identifier","text":"PersistError"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Errors return by persist framework","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError","title":"PersistError"},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"url":"\/documentation\/jobs","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","title":"Jobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"title":"HummingbirdTesting","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdtesting"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"title":"MiddlewareProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/middlewareprotocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"type":"topic","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. Holds data associated with"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EditedResponse":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EditedResponse"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","title":"EditedResponse","abstract":[],"url":"\/documentation\/hummingbird\/editedresponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EditedResponse"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider":{"type":"topic","navigatorTitle":[{"text":"FileProvider","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileProvider","kind":"identifier"}],"abstract":[{"text":"Protocol for file provider type used by ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","isActive":true,"type":"reference"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","url":"\/documentation\/hummingbird\/fileprovider","title":"FileProvider"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"kind":"article","title":"Encoding and Decoding","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","type":"topic","role":"collectionGroup","abstract":[{"text":"Hummingbird uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to decode requests and encode responses.","type":"text"}],"url":"\/documentation\/hummingbird\/encodinganddecoding"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"navigatorTitle":[{"text":"Environment","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbird\/environment","type":"topic","title":"Environment","abstract":[{"type":"text","text":"Access environment variables"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"type":"topic","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"title":"RemoteAddressRequestContext","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemoteAddressRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookie":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cookie"}],"url":"\/documentation\/hummingbird\/cookie","navigatorTitle":[{"kind":"identifier","text":"Cookie"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Structure holding a single cookie","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","title":"Cookie"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"navigatorTitle":[{"text":"URLEncodedFormDecoder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLEncodedFormDecoder"}],"kind":"symbol","title":"URLEncodedFormDecoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","type":"topic","role":"symbol","abstract":[{"type":"text","text":"The wrapper struct for decoding URL encoded form data to Codable classes"}],"url":"\/documentation\/hummingbird\/urlencodedformdecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"url":"\/documentation\/hummingbird\/persistentdata","role":"collectionGroup","kind":"article","type":"topic","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"title":"LogRequestsMiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"LogRequestsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","title":"HTTPResponder","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"url":"\/documentation\/hummingbird\/httpresponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"kind":"overview","url":"\/tutorials\/todos","role":"overview","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"type":"topic","title":"Build a Todos application.","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","kind":"symbol","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"Responder"},{"text":" that will follow these rules.","type":"text"}],"url":"\/documentation\/hummingbird\/router","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Router"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Router","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseBodyWriter":{"title":"ResponseBodyWriter","kind":"symbol","navigatorTitle":[{"text":"ResponseBodyWriter","kind":"identifier"}],"type":"topic","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseBodyWriter","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ResponseBodyWriter","kind":"identifier"}],"url":"\/documentation\/hummingbird\/responsebodywriter"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RequestDecoder"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestDecoder"}],"abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","url":"\/documentation\/hummingbird\/requestdecoder","title":"RequestDecoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"url":"\/documentation\/hummingbirdredis","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","title":"HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LocalFileSystem":{"title":"LocalFileSystem","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem","navigatorTitle":[{"text":"LocalFileSystem","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/localfilesystem","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LocalFileSystem","kind":"identifier"}],"abstract":[{"type":"text","text":"Local file system file provider used by FileMiddleware. All file accesses are relative to a root folder"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"MiddlewareGroup","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareGroup","kind":"identifier"}],"title":"MiddlewareGroup","url":"\/documentation\/hummingbird\/middlewaregroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"title":"PersistDriver","kind":"symbol","abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"url":"\/documentation\/hummingbird\/persistdriver","role":"symbol","navigatorTitle":[{"text":"PersistDriver","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistDriver","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","type":"topic","title":"Middleware","role":"collectionGroup","url":"\/documentation\/hummingbird\/middlewareguide","abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"title":"ResponseCodable","kind":"symbol","abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}],"url":"\/documentation\/hummingbird\/responsecodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ResponseCodable"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCodable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/GettingStarted":{"abstract":[{"type":"text","text":"Create a new project on GitHub or an app locally from a starter template."}],"role":"article","kind":"article","url":"\/documentation\/hummingbird\/gettingstarted","type":"topic","title":"Getting Started with Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/GettingStarted"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"title":"ApplicationProtocol","abstract":[{"type":"text","text":"Application protocol bringing together all the components of Hummingbird"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","url":"\/documentation\/hummingbird\/applicationprotocol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","abstract":[{"text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working.","type":"text"}],"title":"Logging, Metrics and Tracing","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/loggingmetricsandtracing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"FileMiddleware","kind":"identifier"}],"type":"topic","title":"FileMiddleware","role":"symbol","url":"\/documentation\/hummingbird\/filemiddleware","abstract":[{"text":"Middleware for serving static files.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FileMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContextStorage":{"url":"\/documentation\/hummingbird\/corerequestcontextstorage","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CoreRequestContextStorage","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Request context values required by Hummingbird itself.","type":"text"}],"navigatorTitle":[{"text":"CoreRequestContextStorage","kind":"identifier"}],"kind":"symbol","type":"topic","title":"CoreRequestContextStorage","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContextStorage"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"title":"CORSMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","navigatorTitle":[{"kind":"identifier","text":"CORSMiddleware"}],"type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CORSMiddleware"}],"abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookies":{"title":"Cookies","kind":"symbol","navigatorTitle":[{"text":"Cookies","kind":"identifier"}],"type":"topic","abstract":[{"text":"Structure holding an array of cookies","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Cookies","kind":"identifier"}],"url":"\/documentation\/hummingbird\/cookies"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Response":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Response","title":"Response","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"url":"\/documentation\/hummingbird\/response","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Request":{"title":"Request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","url":"\/documentation\/hummingbird\/request","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterResponder"}],"type":"topic","title":"RouterResponder","role":"symbol","url":"\/documentation\/hummingbird\/routerresponder","abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RouterResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"title":"Testing","kind":"article","abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}],"url":"\/documentation\/hummingbird\/testing","role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestID"}],"type":"topic","title":"RequestID","role":"symbol","url":"\/documentation\/hummingbird\/requestid","abstract":[{"text":"Generate Unique ID for each request","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RequestID"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CacheControl":{"url":"\/documentation\/hummingbird\/cachecontrol","role":"symbol","title":"CacheControl","navigatorTitle":[{"kind":"identifier","text":"CacheControl"}],"kind":"symbol","abstract":[{"type":"text","text":"Associates cache control values with filename"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CacheControl","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"url":"\/documentation\/hummingbird\/errorhandling","type":"topic","title":"Error Handling","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","abstract":[{"text":"How to build errors for the server to return.","type":"text"}],"kind":"article","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"url":"\/documentation\/hummingbird\/endpointpath","navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"type":"topic","title":"EndpointPath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","abstract":[{"text":"Endpoint path storage","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EndpointPath"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"title":"TracingMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","navigatorTitle":[{"kind":"identifier","text":"TracingMiddleware"}],"type":"topic","url":"\/documentation\/hummingbird\/tracingmiddleware","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TracingMiddleware"}],"abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"title":"ResponseGenerator","kind":"symbol","abstract":[{"text":"Object that can generate a ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/responsegenerator","role":"symbol","navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"abstract":[{"text":"Middleware for decompressing requests and compressing responses","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","type":"topic","title":"HummingbirdCompression","url":"\/documentation\/hummingbirdcompression","role":"collection","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"title":"Request Contexts","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","type":"topic","url":"\/documentation\/hummingbird\/requestcontexts","role":"collectionGroup","abstract":[{"type":"text","text":"Controlling contextual data provided to middleware and route handlers"}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"text":"suffix to the endpoint path","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterGroup"}],"title":"RouterGroup","url":"\/documentation\/hummingbird\/routergroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","title":"HTTPResponderBuilder","abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"url":"\/documentation\/hummingbird\/httpresponderbuilder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"url":"\/documentation\/hummingbirdfluent","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","title":"HummingbirdFluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"abstract":[{"text":"protocol for encoders generating a Response","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseEncoder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","url":"\/documentation\/hummingbird\/responseencoder","kind":"symbol","title":"ResponseEncoder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ResponseEncoder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPError":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPError","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message"}],"title":"HTTPError","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPError","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HTTPError","kind":"identifier"}],"url":"\/documentation\/hummingbird\/httperror"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"url":"\/documentation\/hummingbirdpostgres","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"kind":"symbol","title":"HummingbirdLambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","type":"topic","role":"collection","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda."}],"url":"\/documentation\/hummingbirdlambda"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","type":"topic","title":"Jobs","role":"collectionGroup","url":"\/documentation\/hummingbird\/jobsguide","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","abstract":[{"type":"text","text":"Protocol for encodable object that can generate a response. The router will encode"},{"text":" ","type":"text"},{"type":"text","text":"the response using the encoder stored in "},{"type":"codeVoice","code":"Application.encoder"},{"text":".","type":"text"}],"title":"ResponseEncodable","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseEncodable","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ResponseEncodable","kind":"identifier"}],"url":"\/documentation\/hummingbird\/responseencodable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CallbackResponder"}],"url":"\/documentation\/hummingbird\/callbackresponder","role":"symbol","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CallbackResponder","kind":"identifier"}],"type":"topic","title":"CallbackResponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"role":"symbol","abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}],"kind":"symbol","type":"topic","title":"InitializableFromSource","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","url":"\/documentation\/hummingbird\/initializablefromsource"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","title":"HummingbirdAuth","abstract":[{"text":"Authentication framework and extensions for Hummingbird.","type":"text"}],"url":"\/documentation\/hummingbirdauth","type":"topic"}}}