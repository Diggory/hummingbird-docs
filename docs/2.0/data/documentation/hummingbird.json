{"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[[]]},"sections":[],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket"],"title":"Related Documentation"}],"variants":[{"paths":["\/documentation\/hummingbird"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"],"title":"Tutorials"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider"],"title":"Application"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath"],"title":"Router"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies"],"title":"Request\/Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext"],"title":"Request context"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder"],"title":"Encoding\/Decoding"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware"],"title":"Middleware"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError"],"title":"Storage"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"],"title":"File management"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/DateCache"],"title":"Miscellaneous"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"title":"Structures"}],"primaryContentSections":[{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Hummingbird is a lightweight, modern, flexible server framework designed to require the minimum number of dependencies."}],"type":"paragraph"},{"inlineContent":[{"text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, custom encoding\/decoding of requests\/responses, TLS and HTTP2.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import Hummingbird","","\/\/ create router and add a single GET \/hello route","let router = Router()","router.get(\"hello\") { request, _ -> String in","    return \"Hello\"","}","\/\/ create application using router","let app = Application(","    responder: router.buildResponder(),","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","\/\/ run hummingbird application","try await app.runService()"]}],"kind":"content"}],"metadata":{"modules":[{"name":"Hummingbird"}],"roleHeading":"Framework","role":"collection","title":"Hummingbird","symbolKind":"module","externalID":"Hummingbird"},"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroupProvider":{"role":"symbol","title":"EventLoopGroupProvider","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroupProvider","abstract":[{"type":"text","text":"Where should the application get its EventLoopGroup from"}],"url":"\/documentation\/hummingbird\/eventloopgroupprovider","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroupProvider"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroupProvider"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"title":"RouterResponder","kind":"symbol","url":"\/documentation\/hummingbird\/routerresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"text":"RouterResponder","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CoreRequestContext":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreRequestContext"}],"title":"CoreRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CoreRequestContext","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Request context values required by Hummingbird itself."}],"url":"\/documentation\/hummingbird\/corerequestcontext","navigatorTitle":[{"kind":"identifier","text":"CoreRequestContext"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TracingMiddleware":{"url":"\/documentation\/hummingbird\/tracingmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TracingMiddleware","role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"TracingMiddleware","kind":"identifier"}],"abstract":[{"text":"Middleware creating Distributed Tracing spans for each request.","type":"text"}],"title":"TracingMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TracingMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"type":"topic","url":"\/documentation\/hummingbird\/router","role":"symbol","title":"Router","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"Responder"},{"text":" that will follow these rules.","type":"text"}],"navigatorTitle":[{"text":"Router","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"kind":"article","abstract":[{"type":"text","text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working."}],"url":"\/documentation\/hummingbird\/loggingmetricsandtracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","title":"Logging, Metrics and Tracing","role":"collectionGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol":{"type":"topic","abstract":[{"text":"Application protocol bringing together all the components of Hummingbird","type":"text"}],"url":"\/documentation\/hummingbird\/applicationprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol","role":"symbol","navigatorTitle":[{"text":"ApplicationProtocol","kind":"identifier"}],"kind":"symbol","title":"ApplicationProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookies":{"type":"topic","navigatorTitle":[{"text":"Cookies","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cookies","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/cookies","abstract":[{"type":"text","text":"Structure holding an array of cookies"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookies","title":"Cookies","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LogRequestsMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"LogRequestsMiddleware"}],"kind":"symbol","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LogRequestsMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/logrequestsmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LogRequestsMiddleware","title":"LogRequestsMiddleware","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/DateCache":{"abstract":[{"type":"text","text":"Current date formatted cache service"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateCache","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/DateCache","type":"topic","title":"DateCache","url":"\/documentation\/hummingbird\/datecache","role":"symbol","navigatorTitle":[{"text":"DateCache","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseGenerator":{"type":"topic","url":"\/documentation\/hummingbird\/responsegenerator","role":"symbol","title":"ResponseGenerator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseGenerator","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Object that can generate a ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"ResponseGenerator","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseGenerator"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CORSMiddleware":{"abstract":[{"type":"text","text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CORSMiddleware","title":"CORSMiddleware","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CORSMiddleware","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/corsmiddleware","kind":"symbol","navigatorTitle":[{"text":"CORSMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","url":"\/documentation\/hummingbird\/routeroptions","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterOptions","kind":"identifier"}],"title":"RouterOptions","abstract":[{"type":"text","text":"Router Options"}],"navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddleware":{"role":"symbol","type":"topic","title":"FileMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileMiddleware","kind":"identifier"}],"abstract":[{"text":"Middleware for serving static files.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"FileMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","url":"\/documentation\/hummingbird\/filemiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"kind":"symbol","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","title":"HummingbirdTesting","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistDriver":{"type":"topic","navigatorTitle":[{"text":"PersistDriver","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PersistDriver","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/persistdriver","abstract":[{"text":"Protocol for driver supporting persistent Key\/Value pairs across requests","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistDriver","title":"PersistDriver","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"type":"topic","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext","abstract":[{"type":"text","text":"Protocol for a request context that can be created from a NIO Channel"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","title":"RequestContext","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"kind":"symbol","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"role":"collection","type":"topic","url":"\/documentation\/hummingbirdfluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","title":"HummingbirdFluent"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/JobsGuide":{"url":"\/documentation\/hummingbird\/jobsguide","title":"Jobs","type":"topic","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/JobsGuide","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","url":"\/documentation\/hummingbird\/memorypersistdriver","kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MemoryPersistDriver","kind":"identifier"}],"title":"MemoryPersistDriver","abstract":[{"text":"In memory driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MemoryPersistDriver"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/routecollection","abstract":[{"type":"text","text":"Collection of routes"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouteCollection","kind":"identifier"}],"title":"RouteCollection","navigatorTitle":[{"text":"RouteCollection","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGuide":{"kind":"article","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGuide","url":"\/documentation\/hummingbird\/routerguide","title":"Router","type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","type":"topic","title":"HummingbirdCore","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"title":"RequestID","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestID"}],"navigatorTitle":[{"kind":"identifier","text":"RequestID"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","role":"symbol","abstract":[{"type":"text","text":"Generate Unique ID for each request"}],"type":"topic","url":"\/documentation\/hummingbird\/requestid"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"title":"RouterGroup","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routergroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RouterGroup","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","title":"Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"role":"symbol","type":"topic","title":"EndpointPath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"abstract":[{"type":"text","text":"Endpoint path storage"}],"kind":"symbol","navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","url":"\/documentation\/hummingbird\/endpointpath"},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"type":"topic","kind":"symbol","url":"\/documentation\/mustache","abstract":[{"type":"text","text":"Mustache template engine."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache","title":"Mustache","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationConfiguration":{"abstract":[{"text":"Application configuration","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationConfiguration","title":"ApplicationConfiguration","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationConfiguration","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ApplicationConfiguration","kind":"identifier"}],"url":"\/documentation\/hummingbird\/applicationconfiguration"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RemoteAddressRequestContext"}],"url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RemoteAddressRequestContext"}],"title":"RemoteAddressRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EditedResponse":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EditedResponse","url":"\/documentation\/hummingbird\/editedresponse","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EditedResponse","kind":"identifier"}],"abstract":[],"role":"symbol","navigatorTitle":[{"text":"EditedResponse","kind":"identifier"}],"title":"EditedResponse"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MetricsMiddleware":{"role":"symbol","title":"MetricsMiddleware","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MetricsMiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"url":"\/documentation\/hummingbird\/metricsmiddleware","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MetricsMiddleware"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MetricsMiddleware"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"title":"HummingbirdRouter","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"url":"\/documentation\/hummingbirdrouter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","kind":"symbol","role":"collection","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContexts":{"type":"topic","url":"\/documentation\/hummingbird\/requestcontexts","role":"collectionGroup","title":"Request Contexts","kind":"article","abstract":[{"text":"Controlling contextual data provided to middleware and route handlers","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContexts"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LocalFileSystem":{"url":"\/documentation\/hummingbird\/localfilesystem","title":"LocalFileSystem","abstract":[{"type":"text","text":"Local file system file provider used by FileMiddleware. All file accesses are relative to a root folder"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LocalFileSystem"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LocalFileSystem"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LocalFileSystem"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"role":"symbol","url":"\/documentation\/hummingbird\/httpresponder","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"title":"HTTPResponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileMiddlewareFileAttributes":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddlewareFileAttributes","abstract":[{"type":"text","text":"Protocol for all the file attributes required by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FileMiddlewareFileAttributes"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileMiddlewareFileAttributes"}],"title":"FileMiddlewareFileAttributes","kind":"symbol","url":"\/documentation\/hummingbird\/filemiddlewarefileattributes","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/routermethods","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMethods","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","title":"RouterMethods","role":"symbol","abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"RouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"role":"overview","title":"Build a Todos application.","url":"\/tutorials\/todos","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","type":"topic","kind":"overview","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"kind":"article","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"role":"collectionGroup","type":"topic","url":"\/documentation\/hummingbird\/persistentdata","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncodable":{"url":"\/documentation\/hummingbird\/responseencodable","kind":"symbol","abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the response using the encoder stored in "},{"code":"Application.encoder","type":"codeVoice"},{"type":"text","text":"."}],"title":"ResponseEncodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseEncodable"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseEncodable"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncodable","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseCodable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseCodable","title":"ResponseCodable","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCodable"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseCodable"}],"abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}],"role":"symbol","url":"\/documentation\/hummingbird\/responsecodable","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/basicrequestcontext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports everything the Hummingbird library needs"}],"title":"BasicRequestContext","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","kind":"symbol","type":"topic","title":"HummingbirdPostgres","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"kind":"symbol","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","url":"\/documentation\/hummingbirdwebsocket","title":"HummingbirdWebSocket","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGuide":{"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGuide","url":"\/documentation\/hummingbird\/middlewareguide","role":"collectionGroup","kind":"article","title":"Middleware","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"title":"RouterMiddleware","abstract":[{"text":"Version of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","type":"reference"},{"text":" whose Input is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"type":"text","text":" and output is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routermiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"title":"RouterPath","abstract":[{"text":"Split router path into components","type":"text"}],"navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routerpath","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterPath","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ServiceLifecycle":{"abstract":[{"text":"Integration with Swift Service Lifecycle","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/servicelifecycle","kind":"article","title":"Service Lifecycle","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ServiceLifecycle"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"abstract":[{"type":"text","text":"Manages File reading and writing."}],"url":"\/documentation\/hummingbird\/fileio","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FileIO"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileIO"}],"title":"FileIO","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Cookie":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cookie"}],"kind":"symbol","abstract":[{"type":"text","text":"Structure holding a single cookie"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Cookie","url":"\/documentation\/hummingbird\/cookie","title":"Cookie","navigatorTitle":[{"kind":"identifier","text":"Cookie"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"url":"\/documentation\/hummingbird\/httpresponderbuilder","kind":"symbol","role":"symbol","abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","title":"HTTPResponderBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","type":"topic","title":"HummingbirdAuth","url":"\/documentation\/hummingbirdauth","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormEncoder","url":"\/documentation\/hummingbird\/urlencodedformencoder","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormEncoder","kind":"identifier"}],"title":"URLEncodedFormEncoder","abstract":[{"type":"text","text":"The wrapper struct for encoding Codable classes to URL encoded form data"}],"navigatorTitle":[{"text":"URLEncodedFormEncoder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"kind":"symbol","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/URLEncodedFormDecoder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URLEncodedFormDecoder","kind":"identifier"}],"navigatorTitle":[{"text":"URLEncodedFormDecoder","kind":"identifier"}],"abstract":[{"text":"The wrapper struct for decoding URL encoded form data to Codable classes","type":"text"}],"type":"topic","title":"URLEncodedFormDecoder","role":"symbol","url":"\/documentation\/hummingbird\/urlencodedformdecoder","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/URLEncodedFormDecoder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistError":{"type":"topic","navigatorTitle":[{"text":"PersistError","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PersistError","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/persisterror","abstract":[{"type":"text","text":"Errors return by persist framework"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistError","title":"PersistError","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"title":"Application","abstract":[{"text":"Application type bringing together all the components of Hummingbird","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Application","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Application"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"url":"\/documentation\/hummingbird\/callbackresponder","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CallbackResponder","kind":"identifier"}],"navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","title":"CallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"abstract":[{"type":"text","text":"Access environment variables"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","type":"topic","title":"Environment","url":"\/documentation\/hummingbird\/environment","role":"symbol","navigatorTitle":[{"text":"Environment","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ResponseEncoder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ResponseEncoder","title":"ResponseEncoder","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseEncoder"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseEncoder"}],"abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"role":"symbol","url":"\/documentation\/hummingbird\/responseencoder","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MigratingToV2":{"title":"Migrating to Hummingbird v2","abstract":[{"type":"text","text":"Migration guide for converting Hummingbird v1 applications to Hummingbird v2"}],"type":"topic","url":"\/documentation\/hummingbird\/migratingtov2","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MigratingToV2","kind":"article","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Parameters":{"url":"\/documentation\/hummingbird\/parameters","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parameters","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parameters","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Parameters","abstract":[{"text":"Parameters is a special case of FlatDictionary where both the key","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and value types are Substrings. It is used for parameters extracted"},{"type":"text","text":" "},{"type":"text","text":"from URIs"}],"title":"Parameters"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EncodingAndDecoding":{"title":"Encoding and Decoding","abstract":[{"type":"text","text":"Hummingbird uses "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" to decode requests and encode responses."}],"type":"topic","url":"\/documentation\/hummingbird\/encodinganddecoding","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EncodingAndDecoding","kind":"article","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"title":"Response","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"url":"\/documentation\/hummingbirdcore\/response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBodyWriter":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ResponseBodyWriter"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseBodyWriter","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/responsebodywriter","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBodyWriter","title":"ResponseBodyWriter","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","type":"topic","abstract":[{"text":"Offload work your server would be doing to another server.","type":"text"}],"url":"\/documentation\/hummingbirdjobs","kind":"symbol","title":"HummingbirdJobs"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CacheControl":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CacheControl","role":"symbol","type":"topic","url":"\/documentation\/hummingbird\/cachecontrol","abstract":[{"type":"text","text":"Associates cache control values with filename"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CacheControl","kind":"identifier"}],"title":"CacheControl","navigatorTitle":[{"text":"CacheControl","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"type":"topic","kind":"article","url":"\/documentation\/hummingbird\/testing","abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","title":"Testing","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"title":"MiddlewareProtocol","abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareProtocol"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ErrorHandling":{"kind":"article","abstract":[{"type":"text","text":"How to build errors for the server to return."}],"url":"\/documentation\/hummingbird\/errorhandling","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ErrorHandling","title":"Error Handling","role":"collectionGroup","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"kind":"symbol","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","url":"\/documentation\/hummingbirdcore\/request","title":"Request","navigatorTitle":[{"kind":"identifier","text":"Request"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareGroup","url":"\/documentation\/hummingbird\/middlewaregroup","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MiddlewareGroup"}],"abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"title":"MiddlewareGroup","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MiddlewareGroup"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MediaType":{"type":"topic","navigatorTitle":[{"text":"MediaType","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MediaType","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/mediatype","abstract":[{"type":"text","text":"Define media type of file"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MediaType","title":"MediaType","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BaseRequestContext":{"role":"symbol","type":"topic","title":"BaseRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BaseRequestContext","kind":"identifier"}],"abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"BaseRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BaseRequestContext","url":"\/documentation\/hummingbird\/baserequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileProvider":{"role":"symbol","type":"topic","title":"FileProvider","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileProvider","kind":"identifier"}],"abstract":[{"text":"Protocol for file provider type used by ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileMiddleware","type":"reference","isActive":true}],"kind":"symbol","navigatorTitle":[{"text":"FileProvider","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileProvider","url":"\/documentation\/hummingbird\/fileprovider"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","type":"topic","title":"HummingbirdRedis","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","url":"\/documentation\/hummingbirdredis"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestDecoder":{"kind":"symbol","navigatorTitle":[{"text":"RequestDecoder","kind":"identifier"}],"type":"topic","title":"RequestDecoder","url":"\/documentation\/hummingbird\/requestdecoder","abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestDecoder","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestDecoder","kind":"identifier"}]}}}