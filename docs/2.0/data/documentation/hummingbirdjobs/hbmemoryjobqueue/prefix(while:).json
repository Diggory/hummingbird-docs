{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV","kind":"typeIdentifier","text":"AsyncPrefixWhileSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue\/prefix(while:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","role":"symbol","extendedModule":"_Concurrency","platforms":[{"deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false,"name":"iOS"},{"deprecated":false,"beta":false,"introducedAt":"10.15","unavailable":false,"name":"macOS"},{"deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false,"name":"tvOS"},{"deprecated":false,"beta":false,"introducedAt":"6.0","unavailable":false,"name":"watchOS"}],"externalID":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:15HummingbirdJobs16HBMemoryJobQueueC","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"modules":[{"relatedModules":["_Concurrency"],"name":"HummingbirdJobs"}],"title":"prefix(while:)","symbolKind":"method"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"AsyncSequence.prefix(while:)","type":"codeVoice"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/prefix(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue\/AsyncSequence-Implementations"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"type":"topic","title":"HBMemoryJobQueue","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"HBMemoryJobQueue","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores jobs in a circular buffer"}],"url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","navigatorTitle":[{"text":"HBMemoryJobQueue","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue/AsyncSequence-Implementations":{"type":"topic","title":"AsyncSequence Implementations","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue\/AsyncSequence-Implementations","abstract":[],"url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/asyncsequence-implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue/prefix(while:)":{"title":"prefix(while:)","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/prefix(while:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue\/prefix(while:)","abstract":[],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV","kind":"typeIdentifier","text":"AsyncPrefixWhileSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"type":"topic","title":"HummingbirdJobs","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"url":"\/documentation\/hummingbirdjobs","kind":"symbol"}}}