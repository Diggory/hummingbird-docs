{"abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtesting"]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"metadata":{"symbolKind":"module","role":"collection","externalID":"HummingbirdTesting","modules":[{"name":"HummingbirdTesting"}],"roleHeading":"Framework","title":"HummingbirdTesting"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"Provides methods for easy setup of unit tests using XCTest framework.","type":"text"}],"type":"paragraph"},{"anchor":"Usage","text":"Usage","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Setup your server and run requests to the routes you want to test."}],"type":"paragraph"},{"syntax":"swift","code":["let router = Router()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = Application(router: router)","try await app.test(.router) { client in","    try await client.execute(uri: \"test\", method: .GET) { response in","        XCTAssertEqual(response.status, .ok)","        XCTAssertEqual(String(buffer: response.body), \"testing\")","    }","}"],"type":"codeListing"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"hierarchy":{"paths":[[]]},"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"],"title":"Test Setup"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"],"title":"Protocols"},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"title":"Testing","url":"\/documentation\/hummingbird\/testing","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","role":"article","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestingSetup":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestingSetup"}],"abstract":[{"text":"Type of test framework","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdtesting\/testingsetup","navigatorTitle":[{"kind":"identifier","text":"TestingSetup"}],"title":"TestingSetup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"type":"topic","title":"HummingbirdTesting","url":"\/documentation\/hummingbirdtesting","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"url":"\/documentation\/hummingbirdtesting\/testclient","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TestClient","kind":"identifier"}],"navigatorTitle":[{"text":"TestClient","kind":"identifier"}],"type":"topic","title":"TestClient","abstract":[{"text":"Bare bones single connection HTTP client.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdtesting\/testhttpscheme","abstract":[{"type":"text","text":"HTTP Scheme to use with AsyncHTTPClient test framework"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestHTTPScheme"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestHTTPScheme"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","title":"TestHTTPScheme"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestResponse":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestResponse"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse","title":"TestResponse","url":"\/documentation\/hummingbirdtesting\/testresponse","abstract":[{"type":"text","text":"Response structure returned by testing framework"}],"navigatorTitle":[{"kind":"identifier","text":"TestResponse"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestClientProtocol"}],"type":"topic","url":"\/documentation\/hummingbirdtesting\/testclientprotocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestClientProtocol"}],"abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}],"title":"TestClientProtocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"TestingSetup","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"}],"abstract":[{"text":"Test ","type":"text"},{"code":"Application","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","role":"symbol","type":"topic","title":"test(_:_:)"}}}