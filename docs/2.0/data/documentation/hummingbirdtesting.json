{"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"metadata":{"modules":[{"name":"HummingbirdTesting"}],"title":"HummingbirdTesting","externalID":"HummingbirdTesting","role":"collection","symbolKind":"module","roleHeading":"Framework"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"Provides methods for easy setup of unit tests using XCTest framework.","type":"text"}],"type":"paragraph"},{"level":3,"text":"Usage","type":"heading","anchor":"Usage"},{"inlineContent":[{"text":"Setup your server and run requests to the routes you want to test.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let router = Router()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = Application(router: router)","try await app.test(.router) { client in","    try await client.execute(uri: \"test\", method: .GET) { response in","        XCTAssertEqual(response.status, .ok)","        XCTAssertEqual(String(buffer: response.body), \"testing\")","    }","}"],"type":"codeListing"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"],"title":"Test Setup"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse"],"title":"Structures"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[[]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtesting"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"abstract":[{"type":"text","text":"HTTP Scheme to use with AsyncHTTPClient test framework"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestHTTPScheme"}],"title":"TestHTTPScheme","url":"\/documentation\/hummingbirdtesting\/testhttpscheme","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestHTTPScheme"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"kind":"symbol","type":"topic","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","title":"HummingbirdTesting","url":"\/documentation\/hummingbirdtesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestClient"}],"type":"topic","abstract":[{"text":"Bare bones single connection HTTP client.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestClient"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","title":"TestClient","url":"\/documentation\/hummingbirdtesting\/testclient"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestResponse":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestResponse","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"TestResponse","abstract":[{"type":"text","text":"Response structure returned by testing framework"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse","navigatorTitle":[{"text":"TestResponse","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdtesting\/testresponse"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"type":"topic","abstract":[{"type":"text","text":"Test "},{"type":"codeVoice","code":"Application"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"test"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"TestingSetup","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV"},{"kind":"text","text":", ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"text":"TestClientProtocol","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","role":"symbol","title":"test(_:_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestingSetup":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","type":"topic","abstract":[{"type":"text","text":"Type of test framework"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestingSetup"}],"url":"\/documentation\/hummingbirdtesting\/testingsetup","navigatorTitle":[{"kind":"identifier","text":"TestingSetup"}],"kind":"symbol","title":"TestingSetup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"role":"symbol","abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}],"title":"TestClientProtocol","url":"\/documentation\/hummingbirdtesting\/testclientprotocol","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestClientProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"TestClientProtocol"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}],"url":"\/documentation\/hummingbird\/testing","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","role":"article","kind":"article","title":"Testing"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"kind":"symbol","role":"collection","title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}