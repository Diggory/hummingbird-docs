{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdtesting"]}],"kind":"symbol","sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"]},{"title":"Test Setup","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse"],"title":"Structures"}],"metadata":{"symbolKind":"module","modules":[{"name":"HummingbirdTesting"}],"title":"HummingbirdTesting","role":"collection","roleHeading":"Framework","externalID":"HummingbirdTesting"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[[]]},"abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Provides methods for easy setup of unit tests using XCTest framework."}],"type":"paragraph"},{"level":3,"anchor":"Usage","type":"heading","text":"Usage"},{"inlineContent":[{"type":"text","text":"Setup your server and run requests to the routes you want to test."}],"type":"paragraph"},{"code":["let router = Router()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = Application(router: router)","try await app.test(.router) { client in","    try await client.execute(uri: \"test\", method: .GET) { response in","        XCTAssertEqual(response.status, .ok)","        XCTAssertEqual(String(buffer: response.body), \"testing\")","    }","}"],"type":"codeListing","syntax":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","title":"TestClientProtocol","navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdtesting\/testclientprotocol","abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"TestingSetup","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKctYaKlF5ValueL_qd__mfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","role":"symbol","title":"test(_:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","kind":"symbol","abstract":[{"type":"text","text":"Test "},{"type":"codeVoice","code":"Application"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestingSetup":{"title":"TestingSetup","url":"\/documentation\/hummingbirdtesting\/testingsetup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestingSetup","kind":"identifier"}],"navigatorTitle":[{"text":"TestingSetup","kind":"identifier"}],"type":"topic","abstract":[{"text":"Type of test framework","type":"text"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","type":"topic","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"url":"\/documentation\/hummingbirdtesting","kind":"symbol","type":"topic","title":"HummingbirdTesting","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","title":"TestClient","kind":"symbol","abstract":[{"type":"text","text":"Bare bones single connection HTTP client."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestClient"}],"url":"\/documentation\/hummingbirdtesting\/testclient","navigatorTitle":[{"kind":"identifier","text":"TestClient"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"abstract":[{"type":"text","text":"HTTP Scheme to use with AsyncHTTPClient test framework"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","type":"topic","url":"\/documentation\/hummingbirdtesting\/testhttpscheme","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestHTTPScheme"}],"navigatorTitle":[{"kind":"identifier","text":"TestHTTPScheme"}],"title":"TestHTTPScheme"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"title":"Testing","url":"\/documentation\/hummingbird\/testing","type":"topic","role":"article","abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestResponse":{"role":"symbol","url":"\/documentation\/hummingbirdtesting\/testresponse","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestResponse"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse","kind":"symbol","title":"TestResponse","navigatorTitle":[{"text":"TestResponse","kind":"identifier"}],"abstract":[{"type":"text","text":"Response structure returned by testing framework"}]}}}