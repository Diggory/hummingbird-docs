{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"sections":[],"topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"]},{"title":"Test Setup","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse"],"title":"Structures"}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides methods for easy setup of unit tests using XCTest framework."}]},{"level":3,"text":"Usage","anchor":"Usage","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Setup your server and run requests to the routes you want to test.","type":"text"}]},{"type":"codeListing","code":["let router = Router()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = Application(router: router)","try await app.test(.router) { client in","    try await client.execute(uri: \"test\", method: .GET) { response in","        XCTAssertEqual(response.status, .ok)","        XCTAssertEqual(String(buffer: response.body), \"testing\")","    }","}"],"syntax":"swift"}]}],"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"metadata":{"symbolKind":"module","roleHeading":"Framework","modules":[{"name":"HummingbirdTesting"}],"role":"collection","externalID":"HummingbirdTesting","title":"HummingbirdTesting"},"variants":[{"paths":["\/documentation\/hummingbirdtesting"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","kind":"symbol","title":"HummingbirdTesting","role":"collection","url":"\/documentation\/hummingbirdtesting","abstract":[{"text":"Test framework for Hummingbird","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"abstract":[{"text":"Bare bones single connection HTTP client.","type":"text"}],"url":"\/documentation\/hummingbirdtesting\/testclient","kind":"symbol","navigatorTitle":[{"text":"TestClient","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClient","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","role":"symbol","title":"TestClient"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"url":"\/documentation\/hummingbird\/testing","abstract":[{"type":"text","text":"Using the HummingbirdTesting framework to test your application"}],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","kind":"article","title":"Testing","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestResponse":{"role":"symbol","title":"TestResponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestResponse"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestResponse"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse","type":"topic","url":"\/documentation\/hummingbirdtesting\/testresponse","abstract":[{"text":"Response structure returned by testing framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestingSetup":{"abstract":[{"type":"text","text":"Type of test framework"}],"url":"\/documentation\/hummingbirdtesting\/testingsetup","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestingSetup"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestingSetup"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","role":"symbol","title":"TestingSetup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"title":"TestClientProtocol","kind":"symbol","abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}],"navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"role":"symbol","url":"\/documentation\/hummingbirdtesting\/testhttpscheme","type":"topic","title":"TestHTTPScheme","abstract":[{"text":"HTTP Scheme to use with AsyncHTTPClient test framework","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestHTTPScheme","kind":"identifier"}],"navigatorTitle":[{"text":"TestHTTPScheme","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"title":"test(_:_:)","kind":"symbol","type":"topic","abstract":[{"text":"Test ","type":"text"},{"type":"codeVoice","code":"Application"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"test","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"TestingSetup","preciseIdentifier":"s:18HummingbirdTesting0B5SetupV","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"keyword","text":"any"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"TestClientProtocol","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKctYaKlF5ValueL_qd__mfp","kind":"typeIdentifier","text":"Value"}]}}}