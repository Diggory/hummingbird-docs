{"seeAlsoSections":[{"title":"Related Documentation","anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"abstract":[{"type":"text","text":"Test framework for Hummingbird."}],"sections":[],"kind":"symbol","hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"HummingbirdTesting","role":"collection","modules":[{"name":"HummingbirdTesting"}],"roleHeading":"Framework","externalID":"HummingbirdTesting","symbolKind":"module","images":[{"type":"icon","identifier":"logo.png"}]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides methods for easy setup of unit tests using either the XCTest or Swift Testing frameworks."}]},{"text":"Usage","level":3,"type":"heading","anchor":"Usage"},{"inlineContent":[{"type":"text","text":"Setup your server and run requests to the routes you want to test."}],"type":"paragraph"},{"code":["let router = Router()","router.get(\"test\") { _ in","    return \"testing\"","}","let app = Application(router: router)","try await app.test(.router) { client in","    try await client.execute(uri: \"test\", method: .GET) { response in","        #expect(response.status == .ok)","        #expect(String(buffer: response.body) == \"testing\")","    }","}"],"syntax":"swift","type":"codeListing"}]}],"topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing"],"anchor":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)"],"title":"Test Setup","anchor":"Test-Setup"},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol"],"generated":true,"anchor":"Protocols"},{"anchor":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse"],"title":"Structures","generated":true}],"variants":[{"paths":["\/documentation\/hummingbirdtesting"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting"},"references":{"logo.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestingSetup":{"title":"TestingSetup","type":"topic","url":"\/documentation\/hummingbirdtesting\/testingsetup","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestingSetup"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TestingSetup"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestingSetup","abstract":[{"text":"Type of test framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClient":{"role":"symbol","url":"\/documentation\/hummingbirdtesting\/testclient","navigatorTitle":[{"text":"TestClient","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClient","kind":"symbol","abstract":[{"type":"text","text":"Bare bones single connection HTTP client."}],"title":"TestClient","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestClient","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestResponse":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestResponse","abstract":[{"type":"text","text":"Response structure returned by testing framework"}],"url":"\/documentation\/hummingbirdtesting\/testresponse","navigatorTitle":[{"text":"TestResponse","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestResponse","kind":"identifier"}],"kind":"symbol","title":"TestResponse","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Testing":{"title":"Testing","type":"topic","url":"\/documentation\/hummingbird\/testing","kind":"article","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Testing","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Using the HummingbirdTesting framework to test your application","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestHTTPScheme":{"title":"TestHTTPScheme","type":"topic","url":"\/documentation\/hummingbirdtesting\/testhttpscheme","kind":"symbol","navigatorTitle":[{"text":"TestHTTPScheme","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestHTTPScheme","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestHTTPScheme","abstract":[{"type":"text","text":"HTTP Scheme to use with AsyncHTTPClient test framework"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting":{"role":"collection","url":"\/documentation\/hummingbirdtesting","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting","kind":"symbol","abstract":[{"text":"Test framework for Hummingbird.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdTesting"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTesting/TestClientProtocol":{"type":"topic","title":"TestClientProtocol","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"TestClientProtocol","kind":"identifier"}],"url":"\/documentation\/hummingbirdtesting\/testclientprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTesting\/TestClientProtocol","abstract":[{"type":"text","text":"Protocol for client used by HummingbirdTesting"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TestClientProtocol","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ApplicationProtocol/test(_:_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ApplicationProtocol\/test(_:_:)","title":"test(_:_:)","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/applicationprotocol\/test(_:_:)","abstract":[{"type":"text","text":"Test "},{"code":"Application","type":"codeVoice"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"test","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:18HummingbirdTesting0B5SetupV","kind":"typeIdentifier","text":"TestingSetup"},{"text":", (","kind":"text"},{"text":"any","kind":"keyword"},{"kind":"text","text":" "},{"text":"TestClientProtocol","kind":"typeIdentifier","preciseIdentifier":"s:18HummingbirdTesting18TestClientProtocolP"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp","text":"Value"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:11Hummingbird19ApplicationProtocolP0A7TestingE4testyqd__AD0D5SetupV_qd__AD010TestClientC0_pYaYbKXEtYaKlF5ValueL_qd__mfp"}]}}}