{"metadata":{"title":"HummingbirdFluent","symbolKind":"module","externalID":"HummingbirdFluent","role":"collection","modules":[{"name":"HummingbirdFluent"}],"images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Framework"},"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"],"title":"Related Documentation"}],"kind":"symbol","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"text":"Storage","anchor":"Storage","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}],"type":"paragraph"},{"code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Read the "},{"type":"reference","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","isActive":true},{"type":"text","text":" for more information on Fluent."}],"type":"paragraph"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"],"title":"Fluent"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"],"title":"Storage"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"],"title":"Classes"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfluent"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"abstract":[{"type":"text","text":"Fluent driver for persist system for storing persistent cross request key\/value pairs"}],"title":"FluentPersistDriver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FluentPersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","navigatorTitle":[{"kind":"identifier","text":"FluentPersistDriver"}],"kind":"symbol","url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"kind":"article","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"role":"collectionGroup","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","url":"\/documentation\/hummingbird\/persistentdata","type":"topic","title":"Persistent data"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"navigatorTitle":[{"kind":"identifier","text":"Fluent"}],"type":"topic","title":"Fluent","abstract":[{"text":"Manage fluent databases and migrations","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdfluent\/fluent","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fluent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}]},"https://docs.vapor.codes/fluent/overview/":{"titleInlineContent":[{"type":"text","text":"Vapor docs"}],"type":"link","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","title":"Vapor docs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","abstract":[{"text":"Manage Fluent database migrations","type":"text"}],"url":"\/documentation\/hummingbirdfluent\/fluentmigrations","type":"topic","role":"symbol","navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"title":"FluentMigrations","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FluentMigrations","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"type":"topic","title":"HummingbirdFluent","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"kind":"symbol","url":"\/documentation\/hummingbirdfluent","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"abstract":[{"type":"text","text":"Working with Postgres databases."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","title":"HummingbirdPostgres","role":"collection","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdpostgres","kind":"symbol"}}}