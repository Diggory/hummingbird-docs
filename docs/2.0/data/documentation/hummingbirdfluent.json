{"hierarchy":{"paths":[[]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"],"title":"Related Documentation"}],"abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"metadata":{"modules":[{"name":"HummingbirdFluent"}],"role":"collection","symbolKind":"module","title":"HummingbirdFluent","roleHeading":"Framework","externalID":"HummingbirdFluent"},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"syntax":"swift"},{"text":"Storage","type":"heading","level":2,"anchor":"Storage"},{"inlineContent":[{"text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"syntax":"swift"},{"inlineContent":[{"text":"Read the ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/"},{"text":" for more information on Fluent.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"title":"Guides"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"],"title":"Fluent"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"],"title":"Storage"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"],"title":"Classes"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"variants":[{"paths":["\/documentation\/hummingbirdfluent"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","kind":"article","role":"collectionGroup","title":"Persistent data","type":"topic","url":"\/documentation\/hummingbird\/persistentdata"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"abstract":[{"type":"text","text":"Fluent driver for persist system for storing persistent cross request key\/value pairs"}],"kind":"symbol","url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","role":"symbol","type":"topic","navigatorTitle":[{"text":"FluentPersistDriver","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FluentPersistDriver","kind":"identifier"}],"title":"FluentPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","type":"topic","kind":"symbol","title":"HummingbirdFluent","role":"collection","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"url":"\/documentation\/hummingbirdfluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Fluent","kind":"identifier"}],"title":"Fluent","role":"symbol","abstract":[{"type":"text","text":"Manage fluent databases and migrations"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Fluent","kind":"identifier"}],"url":"\/documentation\/hummingbirdfluent\/fluent"},"https://docs.vapor.codes/fluent/overview/":{"url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","titleInlineContent":[{"text":"Vapor docs","type":"text"}],"title":"Vapor docs","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","kind":"symbol","title":"Hummingbird","role":"collection","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","type":"topic","kind":"symbol","navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"title":"FluentMigrations","role":"symbol","abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"FluentMigrations","kind":"identifier"}],"url":"\/documentation\/hummingbirdfluent\/fluentmigrations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","title":"HummingbirdPostgres","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Working with Postgres databases."}],"role":"collection","url":"\/documentation\/hummingbirdpostgres"}}}