{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluent"],"title":"Fluent"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluentPersistDriver"],"title":"Storage"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/MainActorBox"],"title":"Structures"}],"kind":"symbol","hierarchy":{"paths":[[]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"code":["let fluent = HBFluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = HBRouter()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = HBApplication(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"anchor":"Storage","type":"heading","level":2,"text":"Storage"},{"inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}],"type":"paragraph"},{"code":["let fluent = HBFluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = HBFluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = HBRouter()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = HBApplication(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Read the ","type":"text"},{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","isActive":true,"type":"reference"},{"text":" for more information on Fluent.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"externalID":"HummingbirdFluent","modules":[{"name":"HummingbirdFluent"}],"symbolKind":"module","title":"HummingbirdFluent","roleHeading":"Framework","role":"collection"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdfluent"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/HBFluentPersistDriver":{"abstract":[{"type":"text","text":"Fluent driver for persist system for storing persistent cross request key\/value pairs"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluentPersistDriver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFluentPersistDriver","kind":"identifier"}],"url":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver","role":"symbol","navigatorTitle":[{"text":"HBFluentPersistDriver","kind":"identifier"}],"kind":"symbol","type":"topic","title":"HBFluentPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"role":"collection","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/MainActorBox":{"role":"symbol","type":"topic","abstract":[],"title":"MainActorBox","url":"\/documentation\/hummingbirdfluent\/mainactorbox","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/MainActorBox","navigatorTitle":[{"text":"MainActorBox","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MainActorBox","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"role":"collection","title":"HummingbirdFluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/HBFluent":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFluent","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluent","url":"\/documentation\/hummingbirdfluent\/hbfluent","navigatorTitle":[{"text":"HBFluent","kind":"identifier"}],"abstract":[{"type":"text","text":"Manage fluent databases and migrations"}],"role":"symbol","title":"HBFluent"},"https://docs.vapor.codes/fluent/overview/":{"titleInlineContent":[{"type":"text","text":"Vapor docs"}],"url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","title":"Vapor docs","type":"link","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/"}}}