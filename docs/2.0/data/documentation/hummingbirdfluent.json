{"topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"],"anchor":"Guides"},{"anchor":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"],"title":"Fluent"},{"title":"Storage","anchor":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfluent"]}],"metadata":{"roleHeading":"Framework","title":"HummingbirdFluent","role":"collection","modules":[{"name":"HummingbirdFluent"}],"symbolKind":"module","externalID":"HummingbirdFluent","images":[{"identifier":"logo.png","type":"icon"}]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"type":"codeListing"},{"anchor":"Storage","type":"heading","text":"Storage","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}]},{"syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"type":"codeListing"},{"inlineContent":[{"text":"For more information:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Follow the tutorial: "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Read the ","type":"text"},{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","isActive":true,"type":"reference"}]}]}],"type":"unorderedList"}]}],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[[]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","navigatorTitle":[{"kind":"identifier","text":"FluentPersistDriver"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FluentPersistDriver"}],"title":"FluentPersistDriver","type":"topic","abstract":[{"text":"Fluent driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"url":"\/documentation\/hummingbirdfluent\/fluent","navigatorTitle":[{"kind":"identifier","text":"Fluent"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fluent","kind":"identifier"}],"title":"Fluent","type":"topic","abstract":[{"type":"text","text":"Manage fluent databases and migrations"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","type":"topic","role":"collection","abstract":[{"type":"text","text":"Integration with Vapor’s Fluent ORM framework."}],"images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","kind":"symbol"},"https://docs.vapor.codes/fluent/overview/":{"title":"Fluent docs","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","type":"link","url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","titleInlineContent":[{"text":"Fluent docs","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","type":"topic","role":"collectionGroup","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"images":[{"identifier":"logo.png","type":"icon"}],"title":"Persistent data","url":"\/documentation\/hummingbird\/persistentdata","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","type":"topic","role":"collection","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"images":[{"identifier":"logo.png","type":"icon"}],"title":"HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","kind":"symbol"},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"url":"\/tutorials\/fluent","kind":"overview","role":"overview","title":"Store Data with Fluent","type":"topic","abstract":[{"type":"text","text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","title":"FluentMigrations","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"FluentMigrations","kind":"identifier"}],"url":"\/documentation\/hummingbirdfluent\/fluentmigrations","abstract":[{"type":"text","text":"Manage Fluent database migrations"}]},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]}}}