{"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","interfaceLanguage":"swift"},"kind":"symbol","seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"type":"codeListing"},{"anchor":"Storage","type":"heading","text":"Storage","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}]},{"syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Read the "},{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","type":"reference","isActive":true},{"type":"text","text":" for more information on Fluent."}]}]}],"topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"]},{"title":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"]},{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"]}],"variants":[{"paths":["\/documentation\/hummingbirdfluent"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"HummingbirdFluent","modules":[{"name":"HummingbirdFluent"}],"symbolKind":"module","roleHeading":"Framework","role":"collection","externalID":"HummingbirdFluent"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data","role":"collectionGroup","url":"\/documentation\/hummingbird\/persistentdata","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"FluentPersistDriver","kind":"identifier"}],"navigatorTitle":[{"text":"FluentPersistDriver","kind":"identifier"}],"abstract":[{"type":"text","text":"Fluent driver for persist system for storing persistent cross request key\/value pairs"}],"url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","title":"FluentPersistDriver","role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Fluent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","abstract":[{"text":"Manage fluent databases and migrations","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdfluent\/fluent","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Fluent"}],"title":"Fluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"abstract":[{"text":"Working with Postgres databases.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","title":"HummingbirdPostgres","role":"collection","url":"\/documentation\/hummingbirdpostgres","kind":"symbol"},"https://docs.vapor.codes/fluent/overview/":{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","titleInlineContent":[{"type":"text","text":"Vapor docs"}],"type":"link","title":"Vapor docs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"kind":"symbol","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"FluentMigrations","kind":"identifier"}],"abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"title":"FluentMigrations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"title":"HummingbirdFluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","role":"collection","type":"topic","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"kind":"symbol"}}}