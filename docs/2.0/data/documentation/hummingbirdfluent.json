{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfluent"]}],"topicSections":[{"anchor":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"title":"Guides"},{"title":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"],"anchor":"Fluent"},{"anchor":"Storage","title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"]},{"generated":true,"title":"Classes","anchor":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"]}],"metadata":{"modules":[{"name":"HummingbirdFluent"}],"title":"HummingbirdFluent","symbolKind":"module","images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"Framework","role":"collection","externalID":"HummingbirdFluent"},"sections":[],"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"],"anchor":"Related-Documentation","title":"Related Documentation"}],"abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"type":"codeListing"},{"level":2,"anchor":"Storage","text":"Storage","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}]},{"code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Read the "},{"isActive":true,"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","type":"reference"},{"type":"text","text":" for more information on Fluent."}],"type":"paragraph"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbird","title":"Hummingbird","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"type":"topic","abstract":[{"text":"Manage fluent databases and migrations","type":"text"}],"title":"Fluent","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","url":"\/documentation\/hummingbirdfluent\/fluent","kind":"symbol","navigatorTitle":[{"text":"Fluent","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Fluent","kind":"identifier"}]},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"url":"\/documentation\/hummingbirdfluent","kind":"symbol","title":"HummingbirdFluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","role":"collection","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","abstract":[{"text":"Fluent driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FluentPersistDriver"}],"type":"topic","title":"FluentPersistDriver","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FluentPersistDriver"}],"url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"kind":"article","type":"topic","url":"\/documentation\/hummingbird\/persistentdata","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","images":[{"identifier":"logo.png","type":"icon"}],"title":"Persistent data","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","url":"\/documentation\/hummingbirdpostgres","role":"collection","title":"HummingbirdPostgres","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Working with Postgres databases."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"type":"topic","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","abstract":[{"text":"Manage Fluent database migrations","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"title":"FluentMigrations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FluentMigrations"}]},"https://docs.vapor.codes/fluent/overview/":{"url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","type":"link","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","titleInlineContent":[{"type":"text","text":"Vapor docs"}],"title":"Vapor docs"}}}