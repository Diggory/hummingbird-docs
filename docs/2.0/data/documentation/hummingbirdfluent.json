{"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","interfaceLanguage":"swift"},"hierarchy":{"paths":[[]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfluent"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"syntax":"swift","type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"]},{"type":"heading","level":2,"text":"Storage","anchor":"Storage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}]},{"syntax":"swift","type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Read the "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/"},{"type":"text","text":" for more information on Fluent."}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"metadata":{"roleHeading":"Framework","modules":[{"name":"HummingbirdFluent"}],"title":"HummingbirdFluent","symbolKind":"module","role":"collection","externalID":"HummingbirdFluent"},"topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"]},{"title":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"]},{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","url":"\/documentation\/hummingbird","abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic"},"https://docs.vapor.codes/fluent/overview/":{"type":"link","url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","title":"Vapor docs","titleInlineContent":[{"type":"text","text":"Vapor docs"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"kind":"symbol","abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","title":"FluentMigrations","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FluentMigrations"}],"navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdfluent\/fluentmigrations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","role":"collectionGroup","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"title":"Persistent data","kind":"article","url":"\/documentation\/hummingbird\/persistentdata"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","abstract":[{"type":"text","text":"Manage fluent databases and migrations"}],"title":"Fluent","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fluent"}],"url":"\/documentation\/hummingbirdfluent\/fluent","navigatorTitle":[{"kind":"identifier","text":"Fluent"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","role":"collection","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"title":"HummingbirdPostgres","kind":"symbol","url":"\/documentation\/hummingbirdpostgres"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FluentPersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FluentPersistDriver"}],"abstract":[{"text":"Fluent driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"title":"FluentPersistDriver","kind":"symbol","url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","role":"collection","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"title":"HummingbirdFluent","kind":"symbol","url":"\/documentation\/hummingbirdfluent"}}}