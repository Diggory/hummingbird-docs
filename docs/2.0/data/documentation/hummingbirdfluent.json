{"primaryContentSections":[{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":2,"text":"Storage","anchor":"Storage"},{"inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}],"type":"paragraph"},{"syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"For more information:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Follow the tutorial: ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Read the "},{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","isActive":true,"type":"reference"}]}]}]}],"kind":"content"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Integration with Vapor’s Fluent ORM framework.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"],"title":"Related Documentation","anchor":"Related-Documentation"}],"hierarchy":{"paths":[[]]},"sections":[],"topicSections":[{"title":"Guides","anchor":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent"]},{"anchor":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"],"title":"Fluent"},{"anchor":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"],"title":"Storage"}],"variants":[{"paths":["\/documentation\/hummingbirdfluent"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"images":[{"identifier":"logo.png","type":"icon"}],"role":"collection","externalID":"HummingbirdFluent","modules":[{"name":"HummingbirdFluent"}],"symbolKind":"module","roleHeading":"Framework","title":"HummingbirdFluent"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"abstract":[{"type":"text","text":"Manage fluent databases and migrations"}],"url":"\/documentation\/hummingbirdfluent\/fluent","role":"symbol","type":"topic","title":"Fluent","navigatorTitle":[{"kind":"identifier","text":"Fluent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fluent"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"title":"FluentPersistDriver","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"FluentPersistDriver","kind":"identifier"}],"abstract":[{"type":"text","text":"Fluent driver for persist system for storing persistent cross request key\/value pairs"}],"navigatorTitle":[{"text":"FluentPersistDriver","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","abstract":[{"type":"text","text":"Integration with Vapor’s Fluent ORM framework."}],"url":"\/documentation\/hummingbirdfluent","type":"topic","title":"HummingbirdFluent","role":"collection"},"doc://com.opticalaberration.hummingbird/tutorials/Fluent":{"role":"overview","url":"\/tutorials\/fluent","abstract":[{"text":"A tutorial that shows you how to set up Hummingbird 2 with Fluent to create and access your Galaxies.","type":"text"}],"title":"Store Data with Fluent","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Fluent","kind":"overview"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"type":"topic","role":"collection","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdpostgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","abstract":[{"type":"text","text":"Working with Postgres databases."}],"title":"HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"abstract":[{"text":"Manage Fluent database migrations","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FluentMigrations"}],"title":"FluentMigrations","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FluentMigrations","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","type":"topic"},"https://docs.vapor.codes/fluent/overview/":{"title":"Fluent docs","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","titleInlineContent":[{"type":"text","text":"Fluent docs"}],"type":"link","url":"https:\/\/docs.vapor.codes\/fluent\/overview\/"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","type":"topic","title":"Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","title":"Persistent data","role":"collectionGroup","url":"\/documentation\/hummingbird\/persistentdata","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"kind":"article"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null}}}