{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfluent"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"],"anchor":"Related-Documentation"}],"sections":[],"abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"images":[{"type":"icon","identifier":"logo.png"}],"modules":[{"name":"HummingbirdFluent"}],"title":"HummingbirdFluent","role":"collection","symbolKind":"module","externalID":"HummingbirdFluent","roleHeading":"Framework"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"codeListing","syntax":"swift","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"]},{"level":2,"type":"heading","anchor":"Storage","text":"Storage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}]},{"code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Read the "},{"type":"reference","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","isActive":true},{"type":"text","text":" for more information on Fluent."}]}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"anchor":"Guides","title":"Guides"},{"title":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"],"anchor":"Fluent"},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"],"anchor":"Storage"}],"hierarchy":{"paths":[[]]},"references":{"logo.png":{"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"title":"FluentMigrations","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FluentMigrations"}],"navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"navigatorTitle":[{"kind":"identifier","text":"Fluent"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdfluent\/fluent","title":"Fluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Fluent","kind":"identifier"}],"abstract":[{"type":"text","text":"Manage fluent databases and migrations"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FluentPersistDriver","kind":"identifier"}],"navigatorTitle":[{"text":"FluentPersistDriver","kind":"identifier"}],"title":"FluentPersistDriver","type":"topic","abstract":[{"text":"Fluent driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"role":"collectionGroup","title":"Persistent data","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"url":"\/documentation\/hummingbird\/persistentdata","type":"topic","kind":"article","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"},"https://docs.vapor.codes/fluent/overview/":{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","titleInlineContent":[{"type":"text","text":"Vapor docs"}],"title":"Vapor docs","url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","type":"link"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"title":"HummingbirdFluent","role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"url":"\/documentation\/hummingbirdfluent","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"role":"collection","title":"HummingbirdPostgres","abstract":[{"text":"Working with Postgres databases.","type":"text"}],"url":"\/documentation\/hummingbirdpostgres","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","role":"collection","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"}}}