{"metadata":{"symbolKind":"module","externalID":"HummingbirdFluent","modules":[{"name":"HummingbirdFluent"}],"title":"HummingbirdFluent","roleHeading":"Framework","role":"collection"},"topicSections":[{"title":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"]},{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"]}],"abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"syntax":"swift"},{"anchor":"Storage","type":"heading","level":2,"text":"Storage"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests.","type":"text"}]},{"type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Read the ","type":"text"},{"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","type":"reference","isActive":true},{"text":" for more information on Fluent.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfluent"]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"role":"symbol","kind":"symbol","title":"FluentPersistDriver","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"FluentPersistDriver","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","navigatorTitle":[{"text":"FluentPersistDriver","kind":"identifier"}],"abstract":[{"text":"Fluent driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"kind":"symbol","navigatorTitle":[{"text":"Fluent","kind":"identifier"}],"title":"Fluent","abstract":[{"text":"Manage fluent databases and migrations","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdfluent\/fluent","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fluent","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","kind":"symbol","url":"\/documentation\/hummingbirdfluent","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"title":"HummingbirdFluent","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"navigatorTitle":[{"text":"FluentMigrations","kind":"identifier"}],"type":"topic","title":"FluentMigrations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FluentMigrations","kind":"identifier"}],"abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"role":"symbol","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","type":"topic","role":"collection","url":"\/documentation\/hummingbird","kind":"symbol"},"https://docs.vapor.codes/fluent/overview/":{"titleInlineContent":[{"text":"Vapor docs","type":"text"}],"url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","type":"link","title":"Vapor docs","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/"}}}