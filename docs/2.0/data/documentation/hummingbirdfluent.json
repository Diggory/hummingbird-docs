{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdfluent"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres"]}],"metadata":{"modules":[{"name":"HummingbirdFluent"}],"roleHeading":"Framework","externalID":"HummingbirdFluent","role":"collection","title":"HummingbirdFluent","symbolKind":"module"},"topicSections":[{"title":"Guides","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"]},{"title":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver"]},{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations"]}],"hierarchy":{"paths":[[]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"primaryContentSections":[{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = Router()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = Application(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"syntax":"swift"},{"type":"heading","anchor":"Storage","level":2,"text":"Storage"},{"type":"paragraph","inlineContent":[{"text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests.","type":"text"}]},{"type":"codeListing","code":["let fluent = Fluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = FluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = Router()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Read the ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/"},{"type":"text","text":" for more information on Fluent."}]}],"kind":"content"}],"references":{"https://docs.vapor.codes/fluent/overview/":{"type":"link","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","title":"Vapor docs","titleInlineContent":[{"type":"text","text":"Vapor docs"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"type":"topic","abstract":[{"type":"text","text":"How to persist data between requests to your server."}],"role":"collectionGroup","url":"\/documentation\/hummingbird\/persistentdata","kind":"article","title":"Persistent data","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"title":"HummingbirdFluent","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","kind":"symbol","url":"\/documentation\/hummingbirdfluent","role":"collection","abstract":[{"type":"text","text":"Integration with Vapor Fluent ORM framework."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/Fluent":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Fluent","kind":"identifier"}],"abstract":[{"text":"Manage fluent databases and migrations","type":"text"}],"url":"\/documentation\/hummingbirdfluent\/fluent","navigatorTitle":[{"kind":"identifier","text":"Fluent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/Fluent","title":"Fluent","role":"symbol","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentMigrations":{"title":"FluentMigrations","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdfluent\/fluentmigrations","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FluentMigrations"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentMigrations","abstract":[{"type":"text","text":"Manage Fluent database migrations"}],"navigatorTitle":[{"kind":"identifier","text":"FluentMigrations"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/FluentPersistDriver":{"type":"topic","url":"\/documentation\/hummingbirdfluent\/fluentpersistdriver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FluentPersistDriver"}],"navigatorTitle":[{"kind":"identifier","text":"FluentPersistDriver"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Fluent driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/FluentPersistDriver","title":"FluentPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdPostgres":{"title":"HummingbirdPostgres","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdPostgres","kind":"symbol","url":"\/documentation\/hummingbirdpostgres","role":"collection","abstract":[{"type":"text","text":"Working with Postgres databases."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","kind":"symbol","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","url":"\/documentation\/hummingbird"}}}