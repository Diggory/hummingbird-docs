{"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"code":["let fluent = HBFluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","","\/\/ add router with one route to return a Todo type","let router = HBRouter()","router.get(\"todo\/{id}\") { request, context in","    let id = try await context.parameters.require(\"id\", as: UUID.self)","    return Todo.find(id, on: fluent.db())","}","","var app = HBApplication(router: router)","\/\/ add fluent as a service to manage its lifecycle","app.addServices(fluent)","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"anchor":"Storage","level":2,"type":"heading","text":"Storage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdFluent provides a driver for the persist framework to store key, value pairs between requests."}]},{"code":["let fluent = HBFluent()","\/\/ add sqlite database","fluent.databases.use(.sqlite(.file(\"db.sqlite\")), as: .sqlite)","let persist = HBFluentPersistDriver(fluent: fluent)","if doingMigration {","    \/\/ fluent persist driver requires a migrate the first time you run","    try await fluent.migrate()","}","let router = HBRouter()","\/\/ return value from sqlite database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in sqlite database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = HBApplication(router: router)","\/\/ add fluent and persist driver as services to manage their lifecycle","app.addServices(fluent, persist)","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Read the "},{"type":"reference","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/","isActive":true},{"type":"text","text":" for more information on Fluent."}]}]}],"variants":[{"paths":["\/documentation\/hummingbirdfluent"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"HummingbirdFluent"}],"symbolKind":"module","role":"collection","title":"HummingbirdFluent","externalID":"HummingbirdFluent","roleHeading":"Framework"},"abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Fluent","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluent"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluentPersistDriver"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/MainActorBox"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent"},"references":{"https://docs.vapor.codes/fluent/overview/":{"titleInlineContent":[{"type":"text","text":"Vapor docs"}],"url":"https:\/\/docs.vapor.codes\/fluent\/overview\/","title":"Vapor docs","type":"link","identifier":"https:\/\/docs.vapor.codes\/fluent\/overview\/"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/MainActorBox":{"role":"symbol","title":"MainActorBox","navigatorTitle":[{"kind":"identifier","text":"MainActorBox"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MainActorBox"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/MainActorBox","type":"topic","abstract":[],"url":"\/documentation\/hummingbirdfluent\/mainactorbox"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","title":"Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","url":"\/documentation\/hummingbirdfluent","kind":"symbol","title":"HummingbirdFluent","abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/HBFluent":{"navigatorTitle":[{"text":"HBFluent","kind":"identifier"}],"abstract":[{"text":"Manage fluent databases and migrations","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluent","kind":"symbol","url":"\/documentation\/hummingbirdfluent\/hbfluent","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HBFluent","kind":"identifier"}],"title":"HBFluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/HBFluentPersistDriver":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluentPersistDriver","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBFluentPersistDriver"}],"role":"symbol","url":"\/documentation\/hummingbirdfluent\/hbfluentpersistdriver","title":"HBFluentPersistDriver","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFluentPersistDriver"}],"abstract":[{"type":"text","text":"Fluent driver for persist system for storing persistent cross request key\/value pairs"}],"type":"topic"}}}