{"topicSections":[{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/HTTPResponder-Implementations"},"sections":[],"metadata":{"role":"collectionGroup","title":"HTTPResponder Implementations","roleHeading":"API Collection","modules":[{"name":"HummingbirdRouter"}]},"kind":"article","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/respond(to:context:)":{"url":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa","text":"Input"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp","text":"Context"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa","text":"Output","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Context"},{"type":"text","text":" conforms to "},{"code":"RouterRequestContext","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Context","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Handler.Context","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Handler"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"MiddlewareProtocol"},{"text":", ","type":"text"},{"code":"Handler.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Request","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Handler.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]},"type":"topic","abstract":[],"title":"respond(to:context:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder":{"type":"topic","url":"\/documentation\/hummingbirdrouter\/routerbuilder","navigatorTitle":[{"kind":"identifier","text":"RouterBuilder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","abstract":[{"text":"Router built using a result builder","type":"text"}],"kind":"symbol","title":"RouterBuilder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterBuilder","kind":"identifier"}],"role":"symbol"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"url":"\/documentation\/hummingbirdrouter","role":"collection","images":[{"identifier":"logo.png","type":"icon"}],"type":"topic","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"title":"HummingbirdRouter","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter"}}}