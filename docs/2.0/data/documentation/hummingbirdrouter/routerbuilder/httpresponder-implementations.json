{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/HTTPResponder-Implementations","interfaceLanguage":"swift"},"metadata":{"title":"HTTPResponder Implementations","modules":[{"name":"HummingbirdRouter"}],"roleHeading":"API Collection","role":"collectionGroup"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder"]]},"sections":[],"kind":"article","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"role":"collection","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"url":"\/documentation\/hummingbirdrouter","type":"topic","kind":"symbol","title":"HummingbirdRouter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","images":[{"identifier":"logo.png","type":"icon"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder":{"type":"topic","title":"RouterBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","url":"\/documentation\/hummingbirdrouter\/routerbuilder","kind":"symbol","abstract":[{"text":"Router built using a result builder","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"RouterBuilder","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouterBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/respond(to:context:)":{"title":"respond(to:context:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa","text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp","text":"Context"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa","text":"Output","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Context"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RouterRequestContext"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Context"},{"type":"text","text":" is "},{"code":"Handler.Context","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Handler"},{"text":" conforms to ","type":"text"},{"code":"MiddlewareProtocol","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Handler.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Request","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Handler.Output"},{"type":"text","text":" is "},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic"},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"identifier":"logo.png","alt":null,"type":"image"}}}