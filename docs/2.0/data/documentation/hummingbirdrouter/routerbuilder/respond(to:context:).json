{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/HTTPResponder-Implementations"]]},"metadata":{"role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Input","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Context","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa"}],"title":"respond(to:context:)","externalID":"s:17HummingbirdRouter0B7BuilderV7respond2to7context0A4Core8ResponseVAG7RequestV_xtYaKF","roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Context","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RouterRequestContext"},{"type":"text","text":", "},{"type":"codeVoice","code":"Context"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Handler.Context"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MiddlewareProtocol"},{"type":"text","text":", "},{"code":"Handler.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Request","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Handler.Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]},"modules":[{"name":"HummingbirdRouter"}],"extendedModule":"HummingbirdRouter"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"respond"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":" ","kind":"text"},{"text":"request","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/Input","text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/Output","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa","kind":"typeIdentifier","text":"Output"}]}]}],"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"HTTPResponder.respond(to:context:)"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/HTTPResponder-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/HTTPResponder-Implementations","kind":"article","title":"HTTPResponder Implementations","abstract":[],"url":"\/documentation\/hummingbirdrouter\/routerbuilder\/httpresponder-implementations","type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"title":"HummingbirdRouter","role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","url":"\/documentation\/hummingbirdrouter","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","navigatorTitle":[{"text":"RouterBuilder","kind":"identifier"}],"kind":"symbol","title":"RouterBuilder","abstract":[{"text":"Router built using a result builder","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdrouter\/routerbuilder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterBuilder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/Output":{"title":"RouterBuilder.Output","type":"topic","navigatorTitle":[{"text":"Output","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/Output","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Output"}],"kind":"symbol","url":"\/documentation\/hummingbirdrouter\/routerbuilder\/output","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/Input":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/Input","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"role":"symbol","abstract":[],"navigatorTitle":[{"text":"Input","kind":"identifier"}],"kind":"symbol","title":"RouterBuilder.Input","url":"\/documentation\/hummingbirdrouter\/routerbuilder\/input"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/respond(to:context:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/respond(to:context:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Input","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV5Inputa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV6Outputa","kind":"typeIdentifier"}],"title":"respond(to:context:)","url":"\/documentation\/hummingbirdrouter\/routerbuilder\/respond(to:context:)","abstract":[],"role":"symbol","conformance":{"constraints":[{"code":"Context","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RouterRequestContext","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Context"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Handler.Context"},{"type":"text","text":", "},{"code":"Handler","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MiddlewareProtocol"},{"type":"text","text":", "},{"type":"codeVoice","code":"Handler.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Request"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Handler.Output"},{"type":"text","text":" is "},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"}}}