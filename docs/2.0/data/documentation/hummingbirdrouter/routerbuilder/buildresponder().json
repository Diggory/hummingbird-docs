{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/buildResponder()","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"HTTPResponderBuilder.buildResponder()"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/hummingbirdrouter\/routerbuilder\/buildresponder()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"role":"symbol","externalID":"s:17HummingbirdRouter0B7BuilderV14buildResponderACyxq_GyF","conformance":{"constraints":[{"type":"codeVoice","code":"Context"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RouterRequestContext"},{"type":"text","text":", "},{"type":"codeVoice","code":"Context"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Handler.Context"},{"type":"text","text":", "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MiddlewareProtocol"},{"type":"text","text":", "},{"type":"codeVoice","code":"Handler.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Request"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Handler.Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"modules":[{"name":"HummingbirdRouter"}],"symbolKind":"method","extendedModule":"HummingbirdRouter","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildResponder","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV","text":"RouterBuilder","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Handler","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"buildResponder()","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/HTTPResponderBuilder-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildResponder"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV","kind":"typeIdentifier","text":"RouterBuilder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":">"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","type":"topic","role":"collection","title":"HummingbirdRouter","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"url":"\/documentation\/hummingbirdrouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder","abstract":[{"text":"Router built using a result builder","type":"text"}],"navigatorTitle":[{"text":"RouterBuilder","kind":"identifier"}],"title":"RouterBuilder","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterBuilder"}],"url":"\/documentation\/hummingbirdrouter\/routerbuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/HTTPResponderBuilder-Implementations":{"title":"HTTPResponderBuilder Implementations","kind":"article","url":"\/documentation\/hummingbirdrouter\/routerbuilder\/httpresponderbuilder-implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/HTTPResponderBuilder-Implementations","type":"topic","abstract":[],"role":"collectionGroup"},"logo.png":{"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterBuilder/buildResponder()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"buildResponder"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"RouterBuilder","preciseIdentifier":"s:17HummingbirdRouter0B7BuilderV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterBuilder\/buildResponder()","url":"\/documentation\/hummingbirdrouter\/routerbuilder\/buildresponder()","kind":"symbol","type":"topic","title":"buildResponder()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Context"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RouterRequestContext"},{"type":"text","text":", "},{"type":"codeVoice","code":"Context"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Handler.Context"},{"type":"text","text":", "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"MiddlewareProtocol"},{"type":"text","text":", "},{"type":"codeVoice","code":"Handler.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Request"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Handler.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}]},"role":"symbol","abstract":[]}}}