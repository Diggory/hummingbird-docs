{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterController","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterController\/Context","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B10ControllerP7ContextQa"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You create custom controllers by declaring types that conform to the "},{"type":"codeVoice","code":"RouterController"},{"text":" ","type":"text"},{"text":"protocol. Implement the required ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterController\/body-swift.property","type":"reference"},{"text":" computed","type":"text"},{"text":" ","type":"text"},{"text":"property to provide the content for your custom controller.","type":"text"}]},{"type":"codeListing","code":["struct MyController: RouterController {","    typealias Context = BasicRouterRequestContext","","    var body: some RouterMiddleware<Context> {","        Get(\"foo\") { _,_ in \"foo\" }","    }"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"}","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Assemble the controller’s body by combining one or more of the built-in controllers or middleware."},{"type":"text","text":" "},{"type":"text","text":"provided by Hummingbird, plus other custom controllers that you define, into a hierarchy of controllers."}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"RouterController"}],"symbolKind":"protocol","externalID":"s:17HummingbirdRouter0B10ControllerP","role":"symbol","title":"RouterController","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterController"}],"modules":[{"name":"HummingbirdRouter"}],"roleHeading":"Protocol"},"abstract":[{"type":"text","text":"A type that represents part of your app’s middleware and routes"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdrouter\/routercontroller"]}],"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterController","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterController\/Body-swift.associatedtype","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterController\/Context"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterController\/body-swift.property"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterController/Body-swift.associatedtype":{"required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Body"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16RouterMiddlewareP","text":"RouterMiddleware"}],"kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterController\/Body-swift.associatedtype","url":"\/documentation\/hummingbirdrouter\/routercontroller\/body-swift.associatedtype","title":"Body","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"role":"collection","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"url":"\/documentation\/hummingbirdrouter","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"title":"HummingbirdRouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterController":{"navigatorTitle":[{"text":"RouterController","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterController","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type that represents part of your app’s middleware and routes"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterController","url":"\/documentation\/hummingbirdrouter\/routercontroller","title":"RouterController","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterController/body-swift.property":{"title":"body","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter0B10ControllerP4BodyQa","text":"Body"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterController\/body-swift.property","role":"symbol","type":"topic","url":"\/documentation\/hummingbirdrouter\/routercontroller\/body-swift.property","kind":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterController/Context":{"required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Context"}],"kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterController\/Context","url":"\/documentation\/hummingbirdrouter\/routercontroller\/context","title":"Context","type":"topic"},"logo.png":{"identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}],"type":"image"}}}