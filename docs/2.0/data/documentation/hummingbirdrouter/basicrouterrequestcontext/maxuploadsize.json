{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/maxUploadSize"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/BaseRequestContext-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"code":"BaseRequestContext.maxUploadSize","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"title":"maxUploadSize","externalID":"s:11Hummingbird18BaseRequestContextPAAE13maxUploadSizeSivp::SYNTHESIZED::s:17HummingbirdRouter05BasicB14RequestContextV","extendedModule":"Hummingbird","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdRouter"}],"roleHeading":"Instance Property","role":"symbol","symbolKind":"property"},"variants":[{"paths":["\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/maxuploadsize"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext/BaseRequestContext-Implementations":{"kind":"article","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/baserequestcontext-implementations","abstract":[],"title":"BaseRequestContext Implementations","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/BaseRequestContext-Implementations","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRouterRequestContext","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","type":"topic","title":"BasicRouterRequestContext","abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `RouterBuilder``"}],"navigatorTitle":[{"text":"BasicRouterRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"type":"topic","url":"\/documentation\/hummingbirdrouter","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","title":"HummingbirdRouter","kind":"symbol","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext/maxUploadSize":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/maxUploadSize","title":"maxUploadSize","abstract":[],"kind":"symbol","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/maxuploadsize","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]}}}