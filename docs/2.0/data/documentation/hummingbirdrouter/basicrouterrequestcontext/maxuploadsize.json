{"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"RequestContext.maxUploadSize"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/RequestContext-Implementations"]]},"metadata":{"externalID":"s:11Hummingbird14RequestContextPAAE13maxUploadSizeSivp::SYNTHESIZED::s:17HummingbirdRouter05BasicB14RequestContextV","modules":[{"name":"HummingbirdRouter","relatedModules":["Hummingbird"]}],"role":"symbol","extendedModule":"Hummingbird","roleHeading":"Instance Property","title":"maxUploadSize","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/maxUploadSize"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/maxuploadsize"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext/maxUploadSize":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/maxUploadSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"type":"topic","role":"symbol","title":"maxUploadSize","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/maxuploadsize","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext/RequestContext-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/RequestContext-Implementations","type":"topic","title":"RequestContext Implementations","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/requestcontext-implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"role":"collection","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"url":"\/documentation\/hummingbirdrouter","type":"topic","kind":"symbol","title":"HummingbirdRouter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","images":[{"identifier":"logo.png","type":"icon"}]},"logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicRouterRequestContext"}],"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","abstract":[{"text":"Basic implementation of a context that can be used with `RouterBuilder``","type":"text"}],"role":"symbol","type":"topic","title":"BasicRouterRequestContext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BasicRouterRequestContext","kind":"identifier"}],"kind":"symbol"}}}