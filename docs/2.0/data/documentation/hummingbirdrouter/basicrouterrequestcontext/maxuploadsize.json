{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/maxUploadSize","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/maxuploadsize"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"BaseRequestContext.maxUploadSize"},{"type":"text","text":"."}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/BaseRequestContext-Implementations"]]},"metadata":{"role":"symbol","externalID":"s:11Hummingbird18BaseRequestContextPAAE13maxUploadSizeSivp::SYNTHESIZED::s:17HummingbirdRouter05BasicB14RequestContextV","symbolKind":"property","modules":[{"name":"HummingbirdRouter","relatedModules":["Hummingbird"]}],"roleHeading":"Instance Property","title":"maxUploadSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"extendedModule":"Hummingbird"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext/maxUploadSize":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"title":"maxUploadSize","abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/maxuploadsize","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/maxUploadSize","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext/BaseRequestContext-Implementations":{"abstract":[],"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext\/baserequestcontext-implementations","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext\/BaseRequestContext-Implementations","role":"collectionGroup","type":"topic","title":"BaseRequestContext Implementations"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `RouterBuilder``"}],"role":"symbol","title":"BasicRouterRequestContext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRouterRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BasicRouterRequestContext"}],"url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","role":"collection","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"url":"\/documentation\/hummingbirdrouter","title":"HummingbirdRouter","kind":"symbol","type":"topic"}}}