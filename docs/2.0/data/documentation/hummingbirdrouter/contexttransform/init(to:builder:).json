{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":" "},{"text":"context","kind":"internalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV07HandlerC0q_mfp","text":"HandlerContext","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"kind":"attribute","text":"@"},{"kind":"attribute","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","text":"MiddlewareFixedTypeBuilder","preciseIdentifier":"s:11Hummingbird26MiddlewareFixedTypeBuilderO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},{"text":", ","kind":"text"},{"text":"HandlerContext","kind":"typeIdentifier"},{"kind":"text","text":">"},{"text":" ","kind":"text"},{"text":"builder","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV7Handlerq0_mfp","text":"Handler"},{"kind":"text","text":")"}]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"RequestContext to convert to"}],"type":"paragraph"}],"name":"context"},{"name":"builder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"RouteGroup builder"}]}]}],"kind":"parameters"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/init(to:builder:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform"]]},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/hummingbirdrouter\/contexttransform\/init(to:builder:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Create RouteGroup from result builder"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"s:17HummingbirdRouter16ContextTransformV2to7builderACyxq_q0_Gq_m_q0_yXEtcfc","symbolKind":"init","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV07HandlerC0q_mfp","text":"HandlerContext"},{"text":".Type, ","kind":"text"},{"kind":"externalParam","text":"builder"},{"kind":"text","text":": () -> "},{"text":"Handler","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV7Handlerq0_mfp"},{"text":")","kind":"text"}],"roleHeading":"Initializer","modules":[{"name":"HummingbirdRouter"}],"title":"init(to:builder:)"},"references":{"logo.png":{"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform/init(to:builder:)":{"url":"\/documentation\/hummingbirdrouter\/contexttransform\/init(to:builder:)","abstract":[{"type":"text","text":"Create RouteGroup from result builder"}],"title":"init(to:builder:)","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV07HandlerC0q_mfp","kind":"typeIdentifier","text":"HandlerContext"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"builder"},{"text":": () -> ","kind":"text"},{"text":"Handler","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV7Handlerq0_mfp","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/init(to:builder:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform":{"url":"\/documentation\/hummingbirdrouter\/contexttransform","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContextTransform","kind":"identifier"}],"navigatorTitle":[{"text":"ContextTransform","kind":"identifier"}],"title":"ContextTransform","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","abstract":[{"text":"Router middleware that transforms the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},{"type":"text","text":" and uses it with the contained"},{"type":"text","text":" "},{"type":"text","text":"Middleware chain"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/requestcontext","kind":"symbol","title":"RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"title":"Response","navigatorTitle":[{"text":"Response","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","url":"\/documentation\/hummingbirdcore\/response"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"title":"HummingbirdRouter","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"url":"\/documentation\/hummingbirdrouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"url":"\/documentation\/hummingbirdcore\/request","navigatorTitle":[{"text":"Request","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"title":"Request","type":"topic","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareFixedTypeBuilder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareFixedTypeBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MiddlewareFixedTypeBuilder"}],"type":"topic","url":"\/documentation\/hummingbird\/middlewarefixedtypebuilder","kind":"symbol","title":"MiddlewareFixedTypeBuilder","abstract":[{"type":"text","text":"Middleware stack result builder"}],"role":"symbol","navigatorTitle":[{"text":"MiddlewareFixedTypeBuilder","kind":"identifier"}]}}}