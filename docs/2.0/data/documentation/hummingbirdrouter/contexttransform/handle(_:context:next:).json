{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/handle(_:context:next:)"},"metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"HummingbirdRouter"}],"title":"handle(_:context:next:)","externalID":"s:17HummingbirdRouter16ContextTransformV6handle_7context4next0A4Core8ResponseVAG7RequestV_xAiK_xtYaKXEtYaKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"Context","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa"}],"symbolKind":"method"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"text":"Input","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Input"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"next","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Input"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","text":"Context","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Output","text":"Output"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Request","type":"text"}]}],"name":"input"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Request context"}]}],"name":"context"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next middleware to run, if no route handler is found"}]}],"name":"next"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"Response"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbirdrouter\/contexttransform\/handle(_:context:next:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"Process HTTP request and return an HTTP response","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform/Output":{"navigatorTitle":[{"kind":"identifier","text":"Output"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Output","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Output","kind":"identifier"}],"title":"ContextTransform.Output","kind":"symbol","abstract":[],"url":"\/documentation\/hummingbirdrouter\/contexttransform\/output"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","kind":"symbol","title":"ContextTransform","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ContextTransform","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdrouter\/contexttransform","abstract":[{"type":"text","text":"Router middleware that transforms the "},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"reference"},{"text":" and uses it with the contained","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Middleware chain"}],"navigatorTitle":[{"text":"ContextTransform","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"type":"topic","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdrouter","kind":"symbol","title":"HummingbirdRouter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","role":"collection","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform/Input":{"role":"symbol","title":"ContextTransform.Input","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Input","type":"topic","url":"\/documentation\/hummingbirdrouter\/contexttransform\/input","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Input"}],"abstract":[]},"logo.png":{"type":"image","alt":null,"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform/handle(_:context:next:)":{"role":"symbol","title":"handle(_:context:next:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/handle(_:context:next:)","type":"topic","url":"\/documentation\/hummingbirdrouter\/contexttransform\/handle(_:context:next:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handle"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa","text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa"}],"kind":"symbol","abstract":[{"type":"text","text":"Process HTTP request and return an HTTP response"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"topic"}}}