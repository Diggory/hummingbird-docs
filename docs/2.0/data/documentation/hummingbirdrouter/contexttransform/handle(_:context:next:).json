{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Input","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","text":"Context"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": ("},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Input","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","text":"Input"},{"kind":"text","text":", "},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","kind":"typeIdentifier","text":"Context"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Output","kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Output","kind":"typeIdentifier","text":"Output"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"Request","type":"text"}],"type":"paragraph"}],"name":"input"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Request context"}]}],"name":"context"},{"content":[{"inlineContent":[{"text":"Next middleware to run, if no route handler is found","type":"text"}],"type":"paragraph"}],"name":"next"}]},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"Response","type":"text"}]}],"kind":"content"}],"sections":[],"kind":"symbol","metadata":{"symbolKind":"method","externalID":"s:17HummingbirdRouter16ContextTransformV6handle_7context4next0A4Core8ResponseVAG7RequestV_xAiK_xtYaKXEtYaKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Context","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa","text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa","text":"Output","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"HummingbirdRouter"}],"roleHeading":"Instance Method","title":"handle(_:context:next:)"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/handle(_:context:next:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Process HTTP request and return an HTTP response","type":"text"}],"variants":[{"paths":["\/documentation\/hummingbirdrouter\/contexttransform\/handle(_:context:next:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"title":"HummingbirdRouter","type":"topic","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"kind":"symbol","images":[{"type":"icon","identifier":"logo.png"}],"url":"\/documentation\/hummingbirdrouter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"title":"RequestContext","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","type":"reference"},{"text":", and is therefore instantiated alongside the request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform/Output":{"type":"topic","title":"ContextTransform.Output","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Output"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Output","url":"\/documentation\/hummingbirdrouter\/contexttransform\/output","kind":"symbol","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Output"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform/Input":{"url":"\/documentation\/hummingbirdrouter\/contexttransform\/input","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"identifier"}],"abstract":[],"title":"ContextTransform.Input","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/Input","navigatorTitle":[{"text":"Input","kind":"identifier"}],"kind":"symbol","type":"topic"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform","abstract":[{"text":"Router middleware that transforms the ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","isActive":true,"type":"reference"},{"text":" and uses it with the contained","type":"text"},{"text":" ","type":"text"},{"text":"Middleware chain","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContextTransform"}],"url":"\/documentation\/hummingbirdrouter\/contexttransform","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ContextTransform"}],"title":"ContextTransform","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ContextTransform/handle(_:context:next:)":{"role":"symbol","abstract":[{"type":"text","text":"Process HTTP request and return an HTTP response"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ContextTransform\/handle(_:context:next:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","text":"Context","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV5Inputa","text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV0C0xmfp","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa","text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdRouter16ContextTransformV6Outputa","text":"Output","kind":"typeIdentifier"}],"title":"handle(_:context:next:)","url":"\/documentation\/hummingbirdrouter\/contexttransform\/handle(_:context:next:)"}}}