{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/init(allocator:logger:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext\/init(allocator:logger:)"},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"code":"HBRequestContext.init(allocator:logger:)","type":"codeVoice"},{"type":"text","text":"."}],"metadata":{"externalID":"s:17HummingbirdRouter07HBBasicB14RequestContextV9allocator6loggerAC7NIOCore19ByteBufferAllocatorV_7Logging6LoggerVtcfc","roleHeading":"Initializer","role":"symbol","title":"init(allocator:logger:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"init","modules":[{"name":"HummingbirdRouter"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext":{"url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext","type":"topic","abstract":[{"text":"Basic implementation of a context that can be used with `HBRouterBuilder``","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBasicRouterRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"HBBasicRouterRequestContext","kind":"identifier"}],"kind":"symbol","title":"HBBasicRouterRequestContext","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"type":"topic","abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"title":"HummingbirdRouter","url":"\/documentation\/hummingbirdrouter","role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext/init(allocator:logger:)":{"title":"init(allocator:logger:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext\/init(allocator:logger:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/init(allocator:logger:)"}}}