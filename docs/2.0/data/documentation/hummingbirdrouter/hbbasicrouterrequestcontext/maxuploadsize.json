{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxUploadSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"HBBaseRequestContext.maxUploadSize"},{"type":"text","text":"."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext\/HBBaseRequestContext-Implementations"]]},"variants":[{"paths":["\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/maxuploadsize"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"roleHeading":"Instance Property","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"externalID":"s:11Hummingbird20HBBaseRequestContextPAAE13maxUploadSizeSivp::SYNTHESIZED::s:17HummingbirdRouter07HBBasicB14RequestContextV","title":"maxUploadSize","role":"symbol","extendedModule":"Hummingbird","modules":[{"name":"HummingbirdRouter","relatedModules":["Hummingbird"]}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext\/maxUploadSize","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext":{"url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext","abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `HBRouterBuilder``"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRouterRequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"HBBasicRouterRequestContext"}],"role":"symbol","kind":"symbol","type":"topic","title":"HBBasicRouterRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"url":"\/documentation\/hummingbirdrouter","title":"HummingbirdRouter","type":"topic","kind":"symbol","role":"collection","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext/HBBaseRequestContext-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext\/HBBaseRequestContext-Implementations","role":"collectionGroup","url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/hbbaserequestcontext-implementations","type":"topic","title":"HBBaseRequestContext Implementations","kind":"article","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext/maxUploadSize":{"url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/maxuploadsize","abstract":[],"kind":"symbol","role":"symbol","title":"maxUploadSize","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext\/maxUploadSize","type":"topic"}}}