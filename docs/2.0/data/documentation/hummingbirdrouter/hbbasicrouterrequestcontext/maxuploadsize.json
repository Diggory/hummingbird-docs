{"kind":"symbol","abstract":[{"text":"Inherited from ","type":"text"},{"code":"HBBaseRequestContext.maxUploadSize","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext\/HBBaseRequestContext-Implementations"]]},"variants":[{"paths":["\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/maxuploadsize"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"maxUploadSize","externalID":"s:11Hummingbird20HBBaseRequestContextPAAE13maxUploadSizeSivp::SYNTHESIZED::s:17HummingbirdRouter07HBBasicB14RequestContextV","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"extendedModule":"Hummingbird","modules":[{"name":"HummingbirdRouter","relatedModules":["Hummingbird"]}],"roleHeading":"Instance Property","symbolKind":"property"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext\/maxUploadSize"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext":{"abstract":[{"text":"Basic implementation of a context that can be used with `HBRouterBuilder``","type":"text"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBBasicRouterRequestContext"}],"type":"topic","title":"HBBasicRouterRequestContext","url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBasicRouterRequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext/maxUploadSize":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maxUploadSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/maxuploadsize","title":"maxUploadSize","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext\/maxUploadSize","abstract":[],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"abstract":[{"type":"text","text":"Alternative result builder based router for Hummingbird."}],"role":"collection","kind":"symbol","type":"topic","title":"HummingbirdRouter","url":"\/documentation\/hummingbirdrouter","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/HBBasicRouterRequestContext/HBBaseRequestContext-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/HBBasicRouterRequestContext\/HBBaseRequestContext-Implementations","url":"\/documentation\/hummingbirdrouter\/hbbasicrouterrequestcontext\/hbbaserequestcontext-implementations","kind":"article","title":"HBBaseRequestContext Implementations","abstract":[],"type":"topic"}}}