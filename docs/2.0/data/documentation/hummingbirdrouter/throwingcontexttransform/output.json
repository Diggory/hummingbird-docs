{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/hummingbirdrouter\/throwingcontexttransform\/output"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform\/Output","interfaceLanguage":"swift"},"sections":[],"metadata":{"externalID":"s:17HummingbirdRouter24ThrowingContextTransformV6Outputa","roleHeading":"Type Alias","modules":[{"name":"HummingbirdRouter"}],"symbolKind":"typealias","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Output"}],"navigatorTitle":[{"kind":"identifier","text":"Output"}],"title":"ThrowingContextTransform.Output","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Output"},{"kind":"text","text":" = "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","kind":"typeIdentifier","text":"Response"}],"languages":["swift"],"platforms":["Linux"]}]}],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"MiddlewareProtocol.Output"},{"type":"text","text":"."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ThrowingContextTransform":{"title":"ThrowingContextTransform","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ThrowingContextTransform","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Router middleware that transforms the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"},{"text":" and uses it with the contained","type":"text"},{"text":" ","type":"text"},{"text":"Middleware chain. Used by ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup\/init(_:context:builder:)","isActive":true,"type":"reference"}],"navigatorTitle":[{"text":"ThrowingContextTransform","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdrouter\/throwingcontexttransform","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform"},"logo.png":{"alt":null,"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RequestContext","kind":"identifier"}],"type":"topic","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","abstract":[{"text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information","type":"text"},{"text":" ","type":"text"},{"text":"that is associated with a ","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"title":"Response","url":"\/documentation\/hummingbirdcore\/response","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/ThrowingContextTransform/Output":{"url":"\/documentation\/hummingbirdrouter\/throwingcontexttransform\/output","abstract":[],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/ThrowingContextTransform\/Output","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Output"}],"navigatorTitle":[{"text":"Output","kind":"identifier"}],"type":"topic","title":"ThrowingContextTransform.Output"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouteGroup/init(_:context:builder:)":{"title":"init(_:context:builder:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"ChildHandler","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"ChildContext","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV","text":"RouterPath"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdRouter10RouteGroupV_7context7builderACyxAA24ThrowingContextTransformVyxqd_0_qd__GG0A00B4PathV_qd_0_mqd__yXEtc06ParentH0AJ012ChildRequestH0PQyd_0_RszAHRs_AJ18MiddlewareProtocolRd__AjNRd_0_AA0bmH0Rd_0_0H0Qyd__Rsd_0_0A4Core0M0V5InputRtd__AU8ResponseV6OutputRtd__r0_lufc0lH0L_qd_0_mfp","text":"ChildContext"},{"kind":"text","text":".Type, "},{"text":"builder","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"ChildHandler","preciseIdentifier":"s:17HummingbirdRouter10RouteGroupV_7context7builderACyxAA24ThrowingContextTransformVyxqd_0_qd__GG0A00B4PathV_qd_0_mqd__yXEtc06ParentH0AJ012ChildRequestH0PQyd_0_RszAHRs_AJ18MiddlewareProtocolRd__AjNRd_0_AA0bmH0Rd_0_0H0Qyd__Rsd_0_0A4Core0M0V5InputRtd__AU8ResponseV6OutputRtd__r0_lufc0L7HandlerL_qd__mfp"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Create RouteGroup from RequestContext transform and result builder"}],"kind":"symbol","url":"\/documentation\/hummingbirdrouter\/routegroup\/init(_:context:builder:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouteGroup\/init(_:context:builder:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter":{"images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","title":"HummingbirdRouter","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter","abstract":[{"text":"Alternative result builder based router for Hummingbird.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdrouter"}}}