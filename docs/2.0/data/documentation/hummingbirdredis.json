{"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"hierarchy":{"paths":[[]]},"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Adds Redis support to Hummingbird via "},{"identifier":"https:\/\/github.com\/swift-server\/RediStack","type":"reference","isActive":true},{"text":" and manage the lifecycle of your Redis connection pool. Also provides a Redis based driver for the persist framework.","type":"text"}],"type":"paragraph"},{"code":["let redis = try HBRedisConnectionPoolService(","    .init(hostname: Self.redisHostname, port: 6379),","    logger: Logger(label: \"Redis\")",")","\/\/ add router with one route to return Redis info","let router = HBRouter()","router.get(\"redis\") { _, _ in","    try await redis.send(command: \"INFO\").map(\\.description).get()","}","var app = HBApplication(router: router)","\/\/ add Redis connection pool as a service to manage its lifecycle","app.addServices(redis)","try await app.runService()"],"syntax":"swift","type":"codeListing"},{"level":2,"type":"heading","text":"Storage","anchor":"Storage"},{"inlineContent":[{"type":"text","text":"HummingbirdRedis provides a driver for the persist framework to store key, value pairs between requests."}],"type":"paragraph"},{"code":["let redis = try HBRedisConnectionPoolService(","    .init(hostname: Self.redisHostname, port: 6379),","    logger: Logger(label: \"Redis\")",")","let persist = HBRedisPersistDriver(redisConnectionPoolService: redis)","let router = HBRouter()","\/\/ return value from redis database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in redis database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = HBApplication(router: router)","\/\/ add Redis connection pool and persist driver as services to manage their lifecycle","app.addServices(redis, persist)","try await app.runService()"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbirdredis"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"],"title":"Related Documentation"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration"],"title":"Connection Pool"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisPersistDriver"],"title":"Storage"}],"kind":"symbol","metadata":{"modules":[{"name":"HummingbirdRedis"}],"roleHeading":"Framework","symbolKind":"module","externalID":"HummingbirdRedis","role":"collection","title":"HummingbirdRedis"},"sections":[],"references":{"https://github.com/swift-server/RediStack":{"titleInlineContent":[{"text":"RediStack","type":"text"}],"url":"https:\/\/github.com\/swift-server\/RediStack","identifier":"https:\/\/github.com\/swift-server\/RediStack","type":"link","title":"RediStack"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"role":"collection","title":"HummingbirdJobsRedis","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"url":"\/documentation\/hummingbirdjobsredis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisConnectionPoolService"}],"type":"topic","abstract":[{"text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service","type":"text"}],"kind":"symbol","title":"HBRedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","navigatorTitle":[{"kind":"identifier","text":"HBRedisConnectionPoolService"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"kind":"symbol","title":"Hummingbird","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"role":"collection","kind":"symbol","type":"topic","title":"HummingbirdRedis","url":"\/documentation\/hummingbirdredis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisPersistDriver":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisPersistDriver","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRedisPersistDriver","kind":"identifier"}],"navigatorTitle":[{"text":"HBRedisPersistDriver","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdredis\/hbredispersistdriver","abstract":[{"text":"Redis driver for persist system for storing persistent cross request key\/value pairs","type":"text"}],"role":"symbol","type":"topic","title":"HBRedisPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConfiguration":{"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration","url":"\/documentation\/hummingbirdredis\/hbredisconfiguration","title":"HBRedisConfiguration","navigatorTitle":[{"kind":"identifier","text":"HBRedisConfiguration"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisConfiguration"}],"abstract":[],"kind":"symbol"}}}