{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"inlineContent":[{"type":"text","text":"Adds Redis support to Hummingbird via "},{"isActive":true,"identifier":"https:\/\/github.com\/swift-server\/RediStack","type":"reference"},{"type":"text","text":" and manage the lifecycle of your Redis connection pool. Also provides a Redis based driver for the persist framework."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let redis = try RedisConnectionPoolService(","    .init(hostname: Self.redisHostname, port: 6379),","    logger: Logger(label: \"Redis\")",")","\/\/ add router with one route to return Redis info","let router = Router()","router.get(\"redis\") { _, _ in","    try await redis.send(command: \"INFO\").map(\\.description).get()","}","var app = Application(router: router)","\/\/ add Redis connection pool as a service to manage its lifecycle","app.addServices(redis)","try await app.runService()"]},{"anchor":"Storage","type":"heading","text":"Storage","level":2},{"inlineContent":[{"type":"text","text":"HummingbirdRedis provides a driver for the persist framework to store key, value pairs between requests."}],"type":"paragraph"},{"type":"codeListing","code":["let redis = try RedisConnectionPoolService(","    .init(hostname: Self.redisHostname, port: 6379),","    logger: Logger(label: \"Redis\")",")","let persist = RedisPersistDriver(redisConnectionPoolService: redis)","let router = Router()","\/\/ return value from redis database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in redis database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = Application(router: router)","\/\/ add Redis connection pool and persist driver as services to manage their lifecycle","app.addServices(redis, persist)","try await app.runService()"],"syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData"],"anchor":"Guides","title":"Guides"},{"title":"Connection Pool","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConfiguration"],"anchor":"Connection-Pool"},{"anchor":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisPersistDriver"],"title":"Storage"}],"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"symbolKind":"module","externalID":"HummingbirdRedis","modules":[{"name":"HummingbirdRedis"}],"images":[{"type":"icon","identifier":"logo.png"}],"roleHeading":"Framework","title":"HummingbirdRedis","role":"collection"},"sections":[],"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"seeAlsoSections":[{"title":"Related Documentation","anchor":"Related-Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolService":{"kind":"symbol","title":"RedisConnectionPoolService","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolservice","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolService","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RedisConnectionPoolService","kind":"identifier"}],"abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"navigatorTitle":[{"text":"RedisConnectionPoolService","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisPersistDriver":{"kind":"symbol","abstract":[{"type":"text","text":"Redis driver for persist system for storing persistent cross request key\/value pairs"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RedisPersistDriver"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisPersistDriver","navigatorTitle":[{"kind":"identifier","text":"RedisPersistDriver"}],"role":"symbol","url":"\/documentation\/hummingbirdredis\/redispersistdriver","title":"RedisPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"kind":"symbol","title":"HummingbirdRedis","images":[{"type":"icon","identifier":"logo.png"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","url":"\/documentation\/hummingbirdredis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"type":"topic","role":"collection"},"https://github.com/swift-server/RediStack":{"type":"link","title":"RediStack","identifier":"https:\/\/github.com\/swift-server\/RediStack","titleInlineContent":[{"type":"text","text":"RediStack"}],"url":"https:\/\/github.com\/swift-server\/RediStack"},"logo.png":{"type":"image","identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/PersistentData":{"kind":"article","title":"Persistent data","images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/PersistentData","url":"\/documentation\/hummingbird\/persistentdata","abstract":[{"text":"How to persist data between requests to your server.","type":"text"}],"type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConfiguration":{"role":"symbol","url":"\/documentation\/hummingbirdredis\/redisconfiguration","title":"RedisConfiguration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConfiguration","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RedisConfiguration","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RedisConfiguration"}],"kind":"symbol"}}}