{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis"},"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis"]}],"kind":"symbol","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"metadata":{"roleHeading":"Framework","title":"HummingbirdRedis","modules":[{"name":"HummingbirdRedis"}],"externalID":"HummingbirdRedis","symbolKind":"module","role":"collection"},"topicSections":[{"title":"Connection Pool","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration"]},{"title":"Storage","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisPersistDriver"]}],"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"Adds Redis support to Hummingbird via "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/swift-server\/RediStack"},{"type":"text","text":" and manage the lifecycle of your Redis connection pool. Also provides a Redis based driver for the persist framework."}],"type":"paragraph"},{"code":["let redis = try HBRedisConnectionPoolService(","    .init(hostname: Self.redisHostname, port: 6379),","    logger: Logger(label: \"Redis\")",")","\/\/ add router with one route to return Redis info","let router = HBRouter()","router.get(\"redis\") { _, _ in","    try await redis.send(command: \"INFO\").map(\\.description).get()","}","var app = HBApplication(router: router)","\/\/ add Redis connection pool as a service to manage its lifecycle","app.addServices(redis)","try await app.runService()"],"type":"codeListing","syntax":"swift"},{"level":2,"type":"heading","anchor":"Storage","text":"Storage"},{"inlineContent":[{"text":"HummingbirdRedis provides a driver for the persist framework to store key, value pairs between requests.","type":"text"}],"type":"paragraph"},{"code":["let redis = try HBRedisConnectionPoolService(","    .init(hostname: Self.redisHostname, port: 6379),","    logger: Logger(label: \"Redis\")",")","let persist = HBRedisPersistDriver(redisConnectionPoolService: redis)","let router = HBRouter()","\/\/ return value from redis database","router.get(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    try await persist.get(key: id, as: String.self)","}","\/\/ set value in redis database","router.put(\"{id}\") { request, context -> String? in","    let id = try context.parameters.require(\"id\")","    let value = try request.uri.queryParameters.require(\"value\")","    try await persist.set(key: id, value: value)","}","var app = HBApplication(router: router)","\/\/ add Redis connection pool and persist driver as services to manage their lifecycle","app.addServices(redis, persist)","try await app.runService()"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"url":"\/documentation\/hummingbird","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConnectionPoolService":{"role":"symbol","url":"\/documentation\/hummingbirdredis\/hbredisconnectionpoolservice","navigatorTitle":[{"text":"HBRedisConnectionPoolService","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConnectionPoolService","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisConnectionPoolService","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Wrapper for RedisConnectionPool that conforms to ServiceLifecycle Service"}],"title":"HBRedisConnectionPoolService"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobsRedis":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobsRedis","abstract":[{"text":"Redis implementation for Hummingbird jobs framework","type":"text"}],"role":"collection","url":"\/documentation\/hummingbirdjobsredis","kind":"symbol","title":"HummingbirdJobsRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","url":"\/documentation\/hummingbirdredis","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"title":"HummingbirdRedis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConfiguration":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"HBRedisConfiguration","kind":"identifier"}],"title":"HBRedisConfiguration","abstract":[],"url":"\/documentation\/hummingbirdredis\/hbredisconfiguration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisConfiguration","kind":"identifier"}]},"https://github.com/swift-server/RediStack":{"title":"RediStack","titleInlineContent":[{"text":"RediStack","type":"text"}],"identifier":"https:\/\/github.com\/swift-server\/RediStack","type":"link","url":"https:\/\/github.com\/swift-server\/RediStack"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisPersistDriver":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRedisPersistDriver","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisPersistDriver","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRedisPersistDriver"}],"type":"topic","title":"HBRedisPersistDriver","abstract":[{"type":"text","text":"Redis driver for persist system for storing persistent cross request key\/value pairs"}],"url":"\/documentation\/hummingbirdredis\/hbredispersistdriver"}}}