{"metadata":{"externalID":"s:22HummingbirdCompression08ResponseB10MiddlewareV","role":"symbol","roleHeading":"Structure","symbolKind":"struct","title":"ResponseCompressionMiddleware","modules":[{"name":"HummingbirdCompression"}],"navigatorTitle":[{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ResponseCompressionMiddleware","kind":"identifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Middleware for compressing response bodies","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"]]},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware\/init(windowSize:minimumResponseSizeToCompress:zlibCompressionLevel:zlibMemoryLevel:)"],"title":"Initializers","generated":true},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware\/handle(_:context:next:)"]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionMiddleware","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Context","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"text":"If the accept-encoding header in request is set to gzip or deflate and the response body","type":"text"},{"type":"text","text":" "},{"text":"is of at least a minimum size then the middleware will return a response with a compressed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"version of the response body that it received."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/hummingbirdcompression\/responsecompressionmiddleware"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware/handle(_:context:next:)":{"title":"handle(_:context:next:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware\/handle(_:context:next:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","kind":"typeIdentifier","text":"Request"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Context","preciseIdentifier":"s:22HummingbirdCompression08ResponseB10MiddlewareV7Contextxmfp"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Context","kind":"typeIdentifier","preciseIdentifier":"s:22HummingbirdCompression08ResponseB10MiddlewareV7Contextxmfp"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware\/handle(_:context:next:)","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"role":"symbol","title":"MiddlewareProtocol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"url":"\/documentation\/hummingbird\/middlewareprotocol","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MiddlewareProtocol","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Request"}],"title":"Request","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","type":"topic","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"navigatorTitle":[{"kind":"identifier","text":"Request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware","title":"ResponseCompressionMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"abstract":[{"type":"text","text":"Middleware for compressing response bodies"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/requestcontext","title":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"title":"Response","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/response","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}],"navigatorTitle":[{"text":"Response","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"role":"symbol","title":"RouterMiddleware","navigatorTitle":[{"kind":"identifier","text":"RouterMiddleware"}],"abstract":[{"text":"Version of ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","isActive":true},{"type":"text","text":" whose Input is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/routermiddleware","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RouterMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"logo.png":{"alt":null,"identifier":"logo.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware/init(windowSize:minimumResponseSizeToCompress:zlibCompressionLevel:zlibMemoryLevel:)":{"abstract":[{"type":"text","text":"Initialize ResponseCompressionMiddleware"}],"type":"topic","url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware\/init(windowsize:minimumresponsesizetocompress:zlibcompressionlevel:zlibmemorylevel:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"windowSize","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"minimumResponseSizeToCompress"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"zlibCompressionLevel","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ZlibConfiguration","preciseIdentifier":"s:11CompressNIO17ZlibConfigurationV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:11CompressNIO17ZlibConfigurationV16CompressionLevelO","text":"CompressionLevel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"zlibMemoryLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ZlibConfiguration","preciseIdentifier":"s:11CompressNIO17ZlibConfigurationV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"MemoryLevel","preciseIdentifier":"s:11CompressNIO17ZlibConfigurationV11MemoryLevelO"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware\/init(windowSize:minimumResponseSizeToCompress:zlibCompressionLevel:zlibMemoryLevel:)","title":"init(windowSize:minimumResponseSizeToCompress:zlibCompressionLevel:zlibMemoryLevel:)","kind":"symbol"}}}