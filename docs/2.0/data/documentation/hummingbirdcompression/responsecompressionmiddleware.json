{"metadata":{"symbolKind":"struct","navigatorTitle":[{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionMiddleware","kind":"identifier"}],"modules":[{"name":"HummingbirdCompression"}],"title":"ResponseCompressionMiddleware","externalID":"s:22HummingbirdCompression08ResponseB10MiddlewareV"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcompression\/responsecompressionmiddleware"]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Context","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RequestContext","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"}]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"If the accept-encoding header in request is set to gzip or deflate and the response body"},{"type":"text","text":" "},{"type":"text","text":"is of at least a minimum size then the middleware will return a response with a compressed"},{"type":"text","text":" "},{"type":"text","text":"version of the response body that it received."}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Middleware for compressing response bodies"}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware\/init(windowSize:minimumResponseSizeToCompress:zlibCompressionLevel:zlibMemoryLevel:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware\/handle(_:context:next:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"title":"Request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"navigatorTitle":[{"text":"Request","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/request","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"kind":"symbol","title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"navigatorTitle":[{"kind":"identifier","text":"RequestContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","type":"topic","role":"symbol","abstract":[{"text":"Protocol that all request contexts should conform to. Holds data associated with","type":"text"},{"text":" ","type":"text"},{"text":"a request. Provides context for request processing","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"title":"Response","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Response"}],"url":"\/documentation\/hummingbirdcore\/response"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMiddleware":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMiddleware","abstract":[{"type":"text","text":"Version of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol"},{"type":"text","text":" whose Input is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"type":"text","text":" and output is "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"RouterMiddleware","kind":"identifier"}],"title":"RouterMiddleware","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routermiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware/handle(_:context:next:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handle","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22HummingbirdCompression08ResponseB10MiddlewareV7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"next","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:22HummingbirdCompression08ResponseB10MiddlewareV7Contextxmfp","text":"Context","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:15HummingbirdCore8ResponseV"}],"url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware\/handle(_:context:next:)","abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware\/handle(_:context:next:)","title":"handle(_:context:next:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MiddlewareProtocol":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"MiddlewareProtocol","kind":"identifier"}],"abstract":[{"text":"Middleware protocol with generic input, context and output types","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MiddlewareProtocol","url":"\/documentation\/hummingbird\/middlewareprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MiddlewareProtocol","kind":"identifier"}],"title":"MiddlewareProtocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware/init(windowSize:minimumResponseSizeToCompress:zlibCompressionLevel:zlibMemoryLevel:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware\/init(windowSize:minimumResponseSizeToCompress:zlibCompressionLevel:zlibMemoryLevel:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"windowSize"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"minimumResponseSizeToCompress","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"zlibCompressionLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"zlibMemoryLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Initialize ResponseCompressionMiddleware"}],"title":"init(windowSize:minimumResponseSizeToCompress:zlibCompressionLevel:zlibMemoryLevel:)","role":"symbol","url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware\/init(windowsize:minimumresponsesizetocompress:zlibcompressionlevel:zlibmemorylevel:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","abstract":[{"type":"text","text":"Middleware for decompressing requests and compressing responses"}],"url":"\/documentation\/hummingbirdcompression","title":"HummingbirdCompression","images":[{"type":"icon","identifier":"logo.png"}],"type":"topic","kind":"symbol","role":"collection"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/ResponseCompressionMiddleware":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/ResponseCompressionMiddleware","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"type":"topic","abstract":[{"type":"text","text":"Middleware for compressing response bodies"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseCompressionMiddleware"}],"title":"ResponseCompressionMiddleware","role":"symbol","url":"\/documentation\/hummingbirdcompression\/responsecompressionmiddleware"},"logo.png":{"alt":null,"variants":[{"url":"\/images\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png"}}}