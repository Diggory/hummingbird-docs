{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","interfaceLanguage":"swift"},"metadata":{"title":"Setup a Hummingbird application.","category":"Todo backend","role":"project","categoryPathComponent":"Todos"},"kind":"project","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/hummingbird\/todos-1-setup"]}],"sections":[{"title":"Setup a Hummingbird application.","chapter":"Application setup","kind":"hero","image":"hummingbird.png","estimatedTimeInMinutes":5,"content":[{"inlineContent":[{"type":"text","text":"Create a simple web application."}],"type":"paragraph"}],"backgroundImage":"hummingbird.png"},{"kind":"tasks","tasks":[{"contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Create your Package.swift, and add the dependencies your will need."}],"type":"paragraph"}],"mediaPosition":"trailing","media":"hummingbird.png","kind":"contentAndMedia"}],"stepsSection":[{"runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Create a new folder and enter it.","type":"text"}]}],"code":"todos-setup-01.sh","type":"step","media":null},{"runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Create your swift package."}],"type":"paragraph"}],"code":"todos-setup-02.sh","type":"step","media":null},{"runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open your swift package."}]}],"code":"todos-setup-03.swift","type":"step","media":null},{"runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Add the Hummingbird package as a dependency and add the the libraries you are going to use to the target. You need HummingbirdFoundation because you need the JSON encoder and decoder.","type":"text"}]}],"code":"todos-setup-04.swift","type":"step","media":null},{"runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"text":"Open ","type":"text"},{"code":"Sources\/Todos.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"code":"todos-setup-05.swift","type":"step","media":null},{"runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make "},{"type":"codeVoice","code":"Todos"},{"type":"text","text":" conform to "},{"type":"codeVoice","code":"AsyncParsableCommand"},{"type":"text","text":" as Hummingbird requires an async entry point."}]}],"code":"todos-setup-06.swift","type":"step","media":null},{"runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"text":"Create an Hummingbird application and add a single route that returns “Hello”.","type":"text"}],"type":"paragraph"}],"code":"todos-setup-07.swift","type":"step","media":null},{"runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Run you application and use curl to test it works."}],"type":"paragraph"}],"code":"todos-setup-08.sh","type":"step","media":null},{"runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Congratulations you wrote your first Hummingbird app.","type":"text"}]}],"code":"todos-setup-09.sh","type":"step","media":null}],"anchor":"Setup-your-project","title":"Setup your project"},{"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add logging middleware and add some commandline parameters to control your application."}]}],"media":"hummingbird.png"}],"stepsSection":[{"type":"step","content":[{"inlineContent":[{"text":"Return to Todos.swift…","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"code":"todos-extend-01.swift","caption":[],"media":null},{"type":"step","content":[{"inlineContent":[{"type":"text","text":"And add logging middleware and a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" to be used by the application. By changing the logger "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" we can control the fidelity of the logging."}],"type":"paragraph"}],"runtimePreview":null,"code":"todos-extend-02.swift","caption":[],"media":null},{"type":"step","content":[{"inlineContent":[{"text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"code":"todos-extend-03.sh","caption":[],"media":null},{"type":"step","content":[{"inlineContent":[{"text":"Go back to Todos.swift","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"code":"todos-extend-02.swift","caption":[],"media":null},{"type":"step","content":[{"inlineContent":[{"type":"text","text":"Now we are going to add some commandline parameters. Let’s add server bind address details: hostname and port."}],"type":"paragraph"}],"runtimePreview":null,"code":"todos-extend-06.swift","caption":[],"media":null},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}]}],"runtimePreview":null,"code":"todos-extend-07.swift","caption":[],"media":null},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Now you can set the bind address of your server from the command line and anyone on your network can talk to your application.","type":"text"}]}],"runtimePreview":null,"code":"todos-extend-08.sh","caption":[],"media":null}],"anchor":"Extend-your-Application","title":"Extend your Application"}]},{"action":{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"overridingTitle":"Get started"},"title":"Add your application API","kind":"callToAction","abstract":[{"type":"text","text":"Add some functionality to your app"}],"featuredEyebrow":"Tutorial"}],"hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"modules":[{"projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","kind":"task"}]}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database"}]},"references":{"todos-setup-04.swift":{"identifier":"todos-setup-04.swift","fileName":"Package.swift","content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", branch: \"2.x.x\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","                .product(name: \"HummingbirdFoundation\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"highlights":[{"line":6},{"line":9},{"line":16},{"line":17}],"syntax":"swift","type":"file","fileType":"swift"},"todos-setup-05.swift":{"identifier":"todos-setup-05.swift","fileName":"Todos.swift","content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"highlights":[],"syntax":"swift","type":"file","fileType":"swift"},"todos-setup-08.sh":{"identifier":"todos-setup-08.sh","fileName":"Test Application","content":["> curl localhost:8080"],"highlights":[],"syntax":"","type":"file","fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"abstract":[{"text":"Create a simple web application.","type":"text"}],"title":"Setup a Hummingbird application.","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","kind":"project","role":"project","estimatedTime":"5min","url":"\/tutorials\/hummingbird\/todos-1-setup"},"todos-extend-03.sh":{"identifier":"todos-extend-03.sh","fileName":"Test Application","content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "],"highlights":[],"syntax":"","type":"file","fileType":""},"todos-extend-01.swift":{"identifier":"todos-extend-01.swift","fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"highlights":[],"syntax":"swift","type":"file","fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"abstract":[{"text":"Add some functionality to your app","type":"text"}],"title":"Add your application API","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","kind":"project","role":"project","estimatedTime":"15min","url":"\/tutorials\/hummingbird\/todos-2-api"},"todos-extend-06.swift":{"identifier":"todos-extend-06.swift","fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}],"syntax":"swift","type":"file","fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"abstract":[],"title":"Testing your application","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","kind":"article","role":"article","url":"\/tutorials\/todos\/testing-your-application"},"todos-setup-06.swift":{"identifier":"todos-setup-06.swift","fileName":"Todos.swift","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"highlights":[{"line":4},{"line":5}],"syntax":"swift","type":"file","fileType":"swift"},"todos-setup-02.sh":{"identifier":"todos-setup-02.sh","fileName":"Create Swift Package","content":["> swift package init --type tool"],"highlights":[],"syntax":"","type":"file","fileType":""},"todos-extend-08.sh":{"identifier":"todos-extend-08.sh","fileName":"Test Application","content":["> swift run Todos -p 8081 -h 0.0.0.0"],"highlights":[],"syntax":"","type":"file","fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"title":"Use PostgresNIO to store your Todos in a Postgres database","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","kind":"project","role":"project","estimatedTime":"20min","url":"\/tutorials\/hummingbird\/todos-4-postgres"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"title":"Testing your application","role":"project","kind":"project","abstract":[{"type":"text","text":"Test your application using the HummingbirdXCT framework"}],"type":"topic","url":"\/tutorials\/hummingbird\/todos-3-testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","estimatedTime":"15min"},"todos-setup-03.swift":{"identifier":"todos-setup-03.swift","fileName":"Package.swift","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"highlights":[],"syntax":"swift","type":"file","fileType":"swift"},"todos-setup-01.sh":{"identifier":"todos-setup-01.sh","fileName":"Create folder","content":["> mkdir Todos","> cd Todos"],"highlights":[],"syntax":"","type":"file","fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"title":"Setup your Postgres database","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"type":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},"todos-extend-02.swift":{"identifier":"todos-extend-02.swift","fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"highlights":[],"syntax":"swift","type":"file","fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"title":"Todo Controller and Repository","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Add some functionality to your app"}],"type":"section","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"title":"API Setup","role":"article","kind":"article","abstract":[],"type":"topic","url":"\/tutorials\/todos\/api-setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"abstract":[],"title":"Store Todos in a database","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","kind":"article","role":"article","url":"\/tutorials\/todos\/store-todos-in-a-database"},"todos-extend-07.swift":{"identifier":"todos-extend-07.swift","fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"],"highlights":[{"line":24},{"line":25},{"line":26},{"line":27},{"line":28}],"syntax":"swift","type":"file","fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"title":"Setup a Postgres repository","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository"},"hummingbird.png":{"identifier":"hummingbird.png","alt":"Hummingbird logo","variants":[{"traits":["1x","light"],"url":"\/images\/hummingbird.png"}],"type":"image"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"title":"Test you application","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"title":"Build a Todos application.","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","kind":"overview","role":"overview","url":"\/tutorials\/todos"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"title":"Setup your project for testing","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"title":"Testing your application with curl","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Add some functionality to your app"}],"type":"section","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"title":"Setup your project","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Create a simple web application."}],"type":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"abstract":[{"text":"Create a simple web application.","type":"text"}],"title":"Extend your Application","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"abstract":[],"title":"Application setup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","kind":"article","role":"article","url":"\/tutorials\/todos\/application-setup"},"todos-setup-09.sh":{"identifier":"todos-setup-09.sh","fileName":"Test Applicatoin","content":["> curl localhost:8080","Hello"],"highlights":[],"syntax":"","type":"file","fileType":""},"todos-setup-07.swift":{"identifier":"todos-setup-07.swift","fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"syntax":"swift","type":"file","fileType":"swift"}}}