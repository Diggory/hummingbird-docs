{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","kind":"task"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","kind":"task"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository"}]}]}]},"variants":[{"paths":["\/tutorials\/hummingbird\/todos-1-setup"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"project","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"role":"project","categoryPathComponent":"Todos","category":"Todo backend","title":"Setup a Hummingbird application."},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"sections":[{"chapter":"Application setup","content":[{"type":"paragraph","inlineContent":[{"text":"Create a simple web application.","type":"text"}]}],"image":"hummingbird.png","kind":"hero","backgroundImage":"hummingbird.png","title":"Setup a Hummingbird application.","estimatedTimeInMinutes":5},{"kind":"tasks","tasks":[{"title":"Setup your project","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create your Package.swift, and add the dependencies your will need."}]}],"media":"hummingbird.png","mediaPosition":"trailing"}],"anchor":"Setup-your-project","stepsSection":[{"code":"todos-setup-01.sh","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Create a new folder and enter it.","type":"text"}]}],"media":null,"type":"step"},{"code":"todos-setup-02.sh","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create your swift package."}]}],"media":null,"type":"step"},{"code":"todos-setup-03.swift","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"text":"Open your swift package.","type":"text"}],"type":"paragraph"}],"media":null,"type":"step"},{"code":"todos-setup-04.swift","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"text":"Add the Hummingbird package as a dependency and add the Hummingbird library to the “Todos” target.","type":"text"}],"type":"paragraph"}],"media":null,"type":"step"},{"code":"todos-setup-05.swift","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"Sources\/Todos.swift"},{"type":"text","text":"."}],"type":"paragraph"}],"media":null,"type":"step"},{"code":"todos-setup-06.swift","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Make "},{"type":"codeVoice","code":"Todos"},{"type":"text","text":" conform to "},{"type":"codeVoice","code":"AsyncParsableCommand"},{"type":"text","text":" as Hummingbird requires an async entry point."}],"type":"paragraph"}],"media":null,"type":"step"},{"code":"todos-setup-07.swift","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an Hummingbird application and add a single route that returns “Hello”."}]}],"media":null,"type":"step"},{"code":"todos-setup-08.sh","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"text":"Run you application and use curl to test it works.","type":"text"}],"type":"paragraph"}],"media":null,"type":"step"},{"code":"todos-setup-09.sh","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Congratulations you wrote your first Hummingbird app."}],"type":"paragraph"}],"media":null,"type":"step"}]},{"title":"Extend your Application","contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Add logging middleware and add some commandline parameters to control your application."}],"type":"paragraph"}],"media":"hummingbird.png","mediaPosition":"trailing"}],"anchor":"Extend-your-Application","stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Return to Todos.swift…","type":"text"}]}],"code":"todos-extend-01.swift","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"inlineContent":[{"type":"text","text":"And add logging middleware and a "},{"code":"Logger","type":"codeVoice"},{"type":"text","text":" to be used by the application. By changing the logger "},{"code":"logLevel","type":"codeVoice"},{"type":"text","text":" we can control the fidelity of the logging."}],"type":"paragraph"}],"code":"todos-extend-02.swift","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"inlineContent":[{"text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it.","type":"text"}],"type":"paragraph"}],"code":"todos-extend-03.sh","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Go back to Todos.swift","type":"text"}]}],"code":"todos-extend-02.swift","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"inlineContent":[{"type":"text","text":"Now we are going to add some commandline parameters. Let’s add server bind address details: hostname and port."}],"type":"paragraph"}],"code":"todos-extend-06.swift","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}],"type":"paragraph"}],"code":"todos-extend-07.swift","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"inlineContent":[{"text":"Now you can set the bind address of your server from the command line and anyone on your network can talk to your application.","type":"text"}],"type":"paragraph"}],"code":"todos-extend-08.sh","media":null,"caption":[],"type":"step","runtimePreview":null}]}]},{"abstract":[{"text":"Add some functionality to your app","type":"text"}],"action":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"isActive":true,"type":"reference"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Add your application API"}],"references":{"todos-extend-01.swift":{"content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"type":"file","fileType":"swift","fileName":"Todos.swift","syntax":"swift","identifier":"todos-extend-01.swift","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"role":"pseudoSymbol","title":"Extend your Application","abstract":[{"text":"Create a simple web application.","type":"text"}],"type":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application","kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"kind":"article","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","title":"Testing your application","url":"\/tutorials\/todos\/testing-your-application","type":"topic","abstract":[]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"title":"API Setup","url":"\/tutorials\/todos\/api-setup","abstract":[],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"title":"Add your application API","url":"\/tutorials\/hummingbird\/todos-2-api","abstract":[{"text":"Add some functionality to your app","type":"text"}],"kind":"project","estimatedTime":"15min","role":"project","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"title":"Setup your Postgres database","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","role":"pseudoSymbol","kind":"section","type":"section","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"title":"Setup your project","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project","role":"pseudoSymbol","kind":"section","type":"section","abstract":[{"text":"Create a simple web application.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"title":"Store Todos in a database","url":"\/tutorials\/todos\/store-todos-in-a-database","abstract":[],"kind":"article","role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database"},"todos-extend-03.sh":{"content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "],"type":"file","fileType":"","fileName":"Test Application","syntax":"","identifier":"todos-extend-03.sh","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","title":"Todo Controller and Repository","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","type":"section","abstract":[{"text":"Add some functionality to your app","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"title":"Setup your project for testing","url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"kind":"section","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"title":"Setup a Hummingbird application.","url":"\/tutorials\/hummingbird\/todos-1-setup","role":"project","kind":"project","estimatedTime":"5min","type":"topic","abstract":[{"text":"Create a simple web application.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","title":"Test you application"},"todos-setup-02.sh":{"content":["> swift package init --type tool"],"type":"file","fileType":"","fileName":"Create Swift Package","syntax":"","identifier":"todos-setup-02.sh","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"title":"Use PostgresNIO to store your Todos in a Postgres database","url":"\/tutorials\/hummingbird\/todos-4-postgres","role":"project","kind":"project","estimatedTime":"20min","type":"topic","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"url":"\/tutorials\/hummingbird\/todos-3-testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","title":"Testing your application","kind":"project","role":"project","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"type":"topic","estimatedTime":"15min"},"todos-setup-05.swift":{"content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"type":"file","fileType":"swift","fileName":"Todos.swift","syntax":"swift","identifier":"todos-setup-05.swift","highlights":[]},"todos-setup-08.sh":{"content":["> curl localhost:8080"],"type":"file","fileType":"","fileName":"Test Application","syntax":"","identifier":"todos-setup-08.sh","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","role":"pseudoSymbol","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"kind":"section","title":"Setup a Postgres repository","type":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"abstract":[],"kind":"article","role":"article","url":"\/tutorials\/todos\/application-setup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","title":"Application setup"},"todos-setup-04.swift":{"content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0-alpha.1\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"type":"file","fileType":"swift","fileName":"Package.swift","syntax":"swift","identifier":"todos-setup-04.swift","highlights":[{"line":6},{"line":9},{"line":16}]},"hummingbird.png":{"identifier":"hummingbird.png","type":"image","variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}],"alt":"Hummingbird logo"},"todos-setup-03.swift":{"content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"type":"file","fileType":"swift","fileName":"Package.swift","syntax":"swift","identifier":"todos-setup-03.swift","highlights":[]},"todos-setup-07.swift":{"content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"type":"file","fileType":"swift","fileName":"Todos.swift","syntax":"swift","identifier":"todos-setup-07.swift","highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}]},"todos-setup-06.swift":{"identifier":"todos-setup-06.swift","fileType":"swift","fileName":"Todos.swift","type":"file","syntax":"swift","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"highlights":[{"line":4},{"line":5}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"type":"topic","url":"\/tutorials\/todos","title":"Build a Todos application.","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","role":"overview","kind":"overview"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"title":"Testing your application with curl","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","abstract":[{"text":"Add some functionality to your app","type":"text"}],"kind":"section","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"},"todos-extend-07.swift":{"content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"],"type":"file","fileType":"swift","fileName":"Todos.swift","syntax":"swift","identifier":"todos-extend-07.swift","highlights":[{"line":24},{"line":25},{"line":26},{"line":27},{"line":28}]},"todos-extend-08.sh":{"content":["> swift run Todos -p 8081 -h 0.0.0.0"],"type":"file","fileType":"","fileName":"Test Application","syntax":"","identifier":"todos-extend-08.sh","highlights":[]},"todos-extend-06.swift":{"content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"type":"file","fileType":"swift","fileName":"Todos.swift","syntax":"swift","identifier":"todos-extend-06.swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}]},"todos-setup-09.sh":{"identifier":"todos-setup-09.sh","fileType":"","fileName":"Test Applicatoin","type":"file","syntax":"","content":["> curl localhost:8080","Hello"],"highlights":[]},"todos-setup-01.sh":{"identifier":"todos-setup-01.sh","fileType":"","fileName":"Create folder","type":"file","syntax":"","content":["> mkdir Todos","> cd Todos"],"highlights":[]},"todos-extend-02.swift":{"identifier":"todos-extend-02.swift","fileType":"swift","fileName":"Todos.swift","type":"file","syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"highlights":[]}}}