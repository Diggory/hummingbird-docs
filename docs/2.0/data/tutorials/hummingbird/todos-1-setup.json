{"kind":"project","hierarchy":{"modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","kind":"task"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}]}],"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"metadata":{"role":"project","category":"Todo backend","categoryPathComponent":"Todos","title":"Setup a Hummingbird application."},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/hummingbird\/todos-1-setup"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[{"kind":"hero","image":"hummingbird.png","estimatedTimeInMinutes":5,"content":[{"inlineContent":[{"text":"Create a simple web application.","type":"text"}],"type":"paragraph"}],"backgroundImage":"hummingbird.png","title":"Setup a Hummingbird application.","chapter":"Application setup"},{"kind":"tasks","tasks":[{"anchor":"Setup-your-project","title":"Setup your project","contentSection":[{"media":"hummingbird.png","kind":"contentAndMedia","content":[{"inlineContent":[{"text":"Create your Package.swift, and add the dependencies your will need.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing"}],"stepsSection":[{"media":null,"code":"todos-setup-01.sh","type":"step","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Create a new folder and enter it."}],"type":"paragraph"}]},{"media":null,"code":"todos-setup-02.sh","type":"step","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Create your swift package.","type":"text"}]}]},{"media":null,"code":"todos-setup-03.swift","type":"step","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Open your swift package.","type":"text"}]}]},{"media":null,"code":"todos-setup-04.swift","type":"step","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"text":"Add the Hummingbird package as a dependency and add the Hummingbird library to the “Todos” target.","type":"text"}],"type":"paragraph"}]},{"media":null,"code":"todos-setup-05.swift","type":"step","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"text":"Open ","type":"text"},{"code":"Sources\/Todos.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"media":null,"code":"todos-setup-06.swift","type":"step","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"text":"Make ","type":"text"},{"code":"Todos","type":"codeVoice"},{"text":" conform to ","type":"text"},{"code":"AsyncParsableCommand","type":"codeVoice"},{"text":" as Hummingbird requires an async entry point.","type":"text"}],"type":"paragraph"}]},{"media":null,"code":"todos-setup-07.swift","type":"step","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Create an Hummingbird application and add a single route that returns “Hello”."}],"type":"paragraph"}]},{"media":null,"code":"todos-setup-08.sh","type":"step","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Run you application and use curl to test it works."}],"type":"paragraph"}]},{"media":null,"code":"todos-setup-09.sh","type":"step","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Congratulations you wrote your first Hummingbird app."}]}]}]},{"anchor":"Extend-your-Application","title":"Extend your Application","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Add logging middleware and add some commandline parameters to control your application."}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia","media":"hummingbird.png"}],"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Return to Todos.swift…","type":"text"}]}],"code":"todos-extend-01.swift","type":"step","caption":[],"runtimePreview":null,"media":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"And add logging middleware and a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" to be used by the application. By changing the logger ","type":"text"},{"code":"logLevel","type":"codeVoice"},{"text":" we can control the fidelity of the logging.","type":"text"}]}],"code":"todos-extend-02.swift","type":"step","caption":[],"runtimePreview":null,"media":null},{"content":[{"inlineContent":[{"type":"text","text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it."}],"type":"paragraph"}],"code":"todos-extend-03.sh","type":"step","caption":[],"runtimePreview":null,"media":null},{"content":[{"inlineContent":[{"text":"Go back to Todos.swift","type":"text"}],"type":"paragraph"}],"code":"todos-extend-02.swift","type":"step","caption":[],"runtimePreview":null,"media":null},{"content":[{"inlineContent":[{"type":"text","text":"Now we are going to add some commandline parameters. Let’s add server bind address details: hostname and port."}],"type":"paragraph"}],"code":"todos-extend-06.swift","type":"step","caption":[],"runtimePreview":null,"media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}]}],"code":"todos-extend-07.swift","type":"step","caption":[],"runtimePreview":null,"media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now you can set the bind address of your server from the command line and anyone on your network can talk to your application."}]}],"code":"todos-extend-08.sh","type":"step","caption":[],"runtimePreview":null,"media":null}]}]},{"featuredEyebrow":"Tutorial","kind":"callToAction","action":{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}]},"abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Add your application API"}],"references":{"todos-extend-06.swift":{"fileName":"Todos.swift","fileType":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}],"identifier":"todos-extend-06.swift","type":"file","syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"]},"todos-setup-04.swift":{"fileName":"Package.swift","fileType":"swift","highlights":[{"line":6},{"line":9},{"line":16},{"line":17}],"identifier":"todos-setup-04.swift","type":"file","syntax":"swift","content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0-alpha.1\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","                .product(name: \"HummingbirdFoundation\", package: \"hummingbird\"),","            ]","        ),","    ]",")"]},"todos-setup-06.swift":{"fileName":"Todos.swift","fileType":"swift","highlights":[{"line":4},{"line":5}],"identifier":"todos-setup-06.swift","type":"file","syntax":"swift","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"]},"todos-setup-02.sh":{"fileName":"Create Swift Package","fileType":"","highlights":[],"identifier":"todos-setup-02.sh","type":"file","syntax":"","content":["> swift package init --type tool"]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","role":"pseudoSymbol","title":"Setup your Postgres database","kind":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]},"todos-setup-08.sh":{"fileName":"Test Application","fileType":"","highlights":[],"identifier":"todos-setup-08.sh","type":"file","syntax":"","content":["> curl localhost:8080"]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","role":"article","title":"Application setup","kind":"article","url":"\/tutorials\/todos\/application-setup","abstract":[]},"todos-setup-01.sh":{"fileName":"Create folder","fileType":"","highlights":[],"identifier":"todos-setup-01.sh","type":"file","syntax":"","content":["> mkdir Todos","> cd Todos"]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"title":"Setup a Hummingbird application.","abstract":[{"type":"text","text":"Create a simple web application."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","role":"project","estimatedTime":"5min","kind":"project","type":"topic","url":"\/tutorials\/hummingbird\/todos-1-setup"},"todos-setup-07.swift":{"fileName":"Todos.swift","fileType":"swift","highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"identifier":"todos-setup-07.swift","type":"file","syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"type":"topic","estimatedTime":"15min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","role":"project","title":"Add your application API","kind":"project","url":"\/tutorials\/hummingbird\/todos-2-api","abstract":[{"type":"text","text":"Add some functionality to your app"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","role":"pseudoSymbol","title":"Extend your Application","kind":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application","abstract":[{"type":"text","text":"Create a simple web application."}]},"todos-extend-08.sh":{"fileName":"Test Application","fileType":"","highlights":[],"identifier":"todos-extend-08.sh","type":"file","syntax":"","content":["> swift run Todos -p 8081 -h 0.0.0.0"]},"todos-setup-09.sh":{"fileName":"Test Applicatoin","fileType":"","highlights":[],"identifier":"todos-setup-09.sh","type":"file","syntax":"","content":["> curl localhost:8080","Hello"]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"role":"pseudoSymbol","title":"Test you application","abstract":[{"type":"text","text":"Test your application using the HummingbirdXCT framework"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application","type":"section","kind":"section"},"todos-extend-01.swift":{"fileName":"Todos.swift","fileType":"swift","highlights":[],"identifier":"todos-extend-01.swift","type":"file","syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","role":"article","title":"API Setup","kind":"article","url":"\/tutorials\/todos\/api-setup","abstract":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","role":"pseudoSymbol","title":"Todo Controller and Repository","kind":"section","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","abstract":[{"type":"text","text":"Add some functionality to your app"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","role":"pseudoSymbol","title":"Setup your project for testing","kind":"section","url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing","abstract":[{"type":"text","text":"Test your application using the HummingbirdXCT framework"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"title":"Build a Todos application.","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","role":"overview","kind":"overview","type":"topic","url":"\/tutorials\/todos"},"todos-extend-02.swift":{"fileName":"Todos.swift","fileType":"swift","highlights":[],"identifier":"todos-extend-02.swift","type":"file","syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"]},"todos-setup-03.swift":{"fileName":"Package.swift","fileType":"swift","highlights":[],"identifier":"todos-setup-03.swift","type":"file","syntax":"swift","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"]},"todos-setup-05.swift":{"fileName":"Todos.swift","fileType":"swift","highlights":[],"identifier":"todos-setup-05.swift","type":"file","syntax":"swift","content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"type":"topic","estimatedTime":"15min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","role":"project","title":"Testing your application","kind":"project","url":"\/tutorials\/hummingbird\/todos-3-testing","abstract":[{"type":"text","text":"Test your application using the HummingbirdXCT framework"}]},"hummingbird.png":{"alt":"Hummingbird logo","variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}],"identifier":"hummingbird.png","type":"image"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"title":"Testing your application","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","role":"article","kind":"article","type":"topic","url":"\/tutorials\/todos\/testing-your-application"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"role":"pseudoSymbol","title":"Testing your application with curl","abstract":[{"type":"text","text":"Add some functionality to your app"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","type":"section","kind":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"title":"Setup your project","abstract":[{"type":"text","text":"Create a simple web application."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","role":"pseudoSymbol","kind":"section","type":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","role":"pseudoSymbol","title":"Setup a Postgres repository","kind":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","role":"article","title":"Store Todos in a database","kind":"article","url":"\/tutorials\/todos\/store-todos-in-a-database","abstract":[]},"todos-extend-03.sh":{"fileName":"Test Application","fileType":"","highlights":[],"identifier":"todos-extend-03.sh","type":"file","syntax":"","content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"type":"topic","estimatedTime":"20min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","role":"project","title":"Use PostgresNIO to store your Todos in a Postgres database","kind":"project","url":"\/tutorials\/hummingbird\/todos-4-postgres","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]},"todos-extend-07.swift":{"fileName":"Todos.swift","fileType":"swift","highlights":[{"line":24},{"line":25},{"line":26},{"line":27},{"line":28}],"identifier":"todos-extend-07.swift","type":"file","syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"]}}}