{"hierarchy":{"modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}]}],"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[{"backgroundImage":"hummingbird.png","kind":"hero","chapter":"Application setup","content":[{"inlineContent":[{"type":"text","text":"Create a simple web application."}],"type":"paragraph"}],"estimatedTimeInMinutes":5,"image":"hummingbird.png","title":"Setup a Hummingbird application."},{"kind":"tasks","tasks":[{"stepsSection":[{"code":"todos-setup-01.sh","content":[{"type":"paragraph","inlineContent":[{"text":"Create a new folder and enter it.","type":"text"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todos-setup-02.sh","content":[{"type":"paragraph","inlineContent":[{"text":"Create your swift package.","type":"text"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todos-setup-03.swift","content":[{"inlineContent":[{"type":"text","text":"Open your swift package."}],"type":"paragraph"}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todos-setup-04.swift","content":[{"inlineContent":[{"type":"text","text":"Add the Hummingbird package as a dependency and add the Hummingbird library to the “Todos” target."}],"type":"paragraph"}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todos-setup-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"Sources\/Todos.swift"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todos-setup-06.swift","content":[{"inlineContent":[{"type":"text","text":"Make "},{"type":"codeVoice","code":"Todos"},{"type":"text","text":" conform to "},{"type":"codeVoice","code":"AsyncParsableCommand"},{"type":"text","text":" as Hummingbird requires an async entry point."}],"type":"paragraph"}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todos-setup-07.swift","content":[{"inlineContent":[{"type":"text","text":"Create an Hummingbird application and add a single route that returns “Hello”."}],"type":"paragraph"}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todos-setup-08.sh","content":[{"inlineContent":[{"text":"Run you application and use curl to test it works.","type":"text"}],"type":"paragraph"}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"todos-setup-09.sh","content":[{"inlineContent":[{"type":"text","text":"Congratulations you wrote your first Hummingbird app."}],"type":"paragraph"}],"caption":[],"type":"step","runtimePreview":null,"media":null}],"contentSection":[{"content":[{"inlineContent":[{"text":"Create your Package.swift, and add the dependencies your will need.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia","media":"hummingbird.png"}],"title":"Setup your project","anchor":"Setup-your-project"},{"stepsSection":[{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Return to Todos.swift…"}],"type":"paragraph"}],"code":"todos-extend-01.swift","caption":[],"type":"step","media":null},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"And add logging middleware and a ","type":"text"},{"type":"codeVoice","code":"Logger"},{"text":" to be used by the router. By changing the logger ","type":"text"},{"type":"codeVoice","code":"logLevel"},{"text":" we can control the fidelity of the logging.","type":"text"}]}],"code":"todos-extend-02.swift","caption":[],"type":"step","media":null},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it."}]}],"code":"todos-extend-03.sh","caption":[],"type":"step","media":null},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Go back to Todos.swift","type":"text"}]}],"code":"todos-extend-02.swift","caption":[],"type":"step","media":null},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Now we are going to add some commandline parameters. Let’s add server bind address details: hostname and port.","type":"text"}]}],"code":"todos-extend-06.swift","caption":[],"type":"step","media":null},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}]}],"code":"todos-extend-07.swift","caption":[],"type":"step","media":null},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now you can set the bind address of your server from the command line and anyone on your network can talk to your application."}]}],"code":"todos-extend-08.sh","caption":[{"type":"paragraph","inlineContent":[{"text":"As as alternative to the above you can use the ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/hummingbird-project\/template","type":"reference"},{"text":" to setup a similarly structured project.","type":"text"}]}],"type":"step","media":null}],"contentSection":[{"content":[{"inlineContent":[{"text":"Add logging middleware and add some commandline parameters to control your application.","type":"text"}],"type":"paragraph"}],"kind":"contentAndMedia","mediaPosition":"trailing","media":"hummingbird.png"}],"title":"Extend your Application","anchor":"Extend-your-Application"}]},{"kind":"callToAction","action":{"overridingTitle":"Get started","type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"featuredEyebrow":"Tutorial","abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Add your application API"}],"variants":[{"paths":["\/tutorials\/hummingbird\/todos-1-setup"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"project","categoryPathComponent":"Todos","title":"Setup a Hummingbird application.","category":"Todo backend"},"kind":"project","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"references":{"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Testing your application with curl","type":"section","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","abstract":[{"text":"Create a simple web application.","type":"text"}],"title":"Extend your Application","type":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application"},"todos-extend-03.sh":{"content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "],"fileType":"","fileName":"Test Application","highlights":[],"identifier":"todos-extend-03.sh","syntax":"","type":"file"},"todos-setup-09.sh":{"syntax":"","content":["> curl localhost:8080","Hello"],"identifier":"todos-setup-09.sh","fileType":"","highlights":[{"line":2}],"type":"file","fileName":"Test Application"},"hummingbird.png":{"alt":"Hummingbird logo","identifier":"hummingbird.png","variants":[{"traits":["1x","light"],"url":"\/images\/hummingbird.png"}],"type":"image"},"todos-setup-03.swift":{"syntax":"swift","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"identifier":"todos-setup-03.swift","fileType":"swift","highlights":[],"type":"file","fileName":"Package.swift"},"todos-setup-08.sh":{"fileName":"Test Application","type":"file","syntax":"","highlights":[],"content":["> curl localhost:8080"],"fileType":"","identifier":"todos-setup-08.sh"},"todos-extend-02.swift":{"fileName":"Todos.swift","type":"file","syntax":"swift","highlights":[],"content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift","identifier":"todos-extend-02.swift"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"url":"\/tutorials\/todos","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","title":"Build a Todos application.","role":"overview","type":"topic","kind":"overview"},"todos-setup-02.sh":{"syntax":"","content":["> swift package init --type tool"],"identifier":"todos-setup-02.sh","fileType":"","highlights":[],"type":"file","fileName":"Create Swift Package"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"title":"Setup your Postgres database","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","kind":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","role":"pseudoSymbol","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"title":"Application setup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","kind":"article","url":"\/tutorials\/todos\/application-setup","role":"article","abstract":[]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"abstract":[],"url":"\/tutorials\/todos\/api-setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","title":"API Setup","role":"article","type":"topic","kind":"article"},"todos-setup-05.swift":{"fileName":"Todos.swift","type":"file","syntax":"swift","highlights":[],"content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"fileType":"swift","identifier":"todos-setup-05.swift"},"todos-setup-06.swift":{"syntax":"swift","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"identifier":"todos-setup-06.swift","fileType":"swift","highlights":[{"line":4},{"line":5}],"type":"file","fileName":"Todos.swift"},"todos-setup-07.swift":{"fileName":"Todos.swift","type":"file","syntax":"swift","highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift","identifier":"todos-setup-07.swift"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","title":"Testing your application","url":"\/tutorials\/todos\/testing-your-application","abstract":[],"role":"article","kind":"article","type":"topic"},"https://github.com/hummingbird-project/template":{"type":"link","url":"https:\/\/github.com\/hummingbird-project\/template","titleInlineContent":[{"text":"template project","type":"text"}],"identifier":"https:\/\/github.com\/hummingbird-project\/template","title":"template project"},"todos-extend-08.sh":{"identifier":"todos-extend-08.sh","syntax":"","fileName":"Test Application","fileType":"","highlights":[],"content":["> swift run Todos -p 8081 -h 0.0.0.0"],"type":"file"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"role":"project","kind":"project","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","url":"\/tutorials\/hummingbird\/todos-2-api","title":"Add your application API","abstract":[{"text":"Add some functionality to your app","type":"text"}],"estimatedTime":"15min"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"estimatedTime":"20min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","title":"Use PostgresNIO to store your Todos in a Postgres database","url":"\/tutorials\/hummingbird\/todos-4-postgres","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"role":"project","kind":"project","type":"topic"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"type":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Create a simple web application."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","title":"Setup your project"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"role":"pseudoSymbol","kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application","title":"Test you application","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","title":"Todo Controller and Repository","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","abstract":[{"type":"text","text":"Add some functionality to your app"}],"role":"pseudoSymbol","kind":"section","type":"section"},"todos-extend-07.swift":{"type":"file","syntax":"swift","fileType":"swift","highlights":[{"line":25},{"line":26},{"line":27},{"line":28},{"line":29}],"content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-07.swift","fileName":"Todos.swift"},"todos-extend-06.swift":{"fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12}],"type":"file","identifier":"todos-extend-06.swift","syntax":"swift","content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"fileName":"Todos.swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","title":"Setup your project for testing","role":"pseudoSymbol","type":"section","kind":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"kind":"project","role":"project","estimatedTime":"15min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"title":"Testing your application","type":"topic","url":"\/tutorials\/hummingbird\/todos-3-testing"},"todos-setup-01.sh":{"content":["> mkdir Todos","> cd Todos"],"fileType":"","fileName":"Create folder","highlights":[],"identifier":"todos-setup-01.sh","syntax":"","type":"file"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"type":"topic","url":"\/tutorials\/todos\/store-todos-in-a-database","role":"article","kind":"article","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","title":"Store Todos in a database"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"title":"Setup a Postgres repository","type":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository"},"todos-setup-04.swift":{"type":"file","syntax":"swift","fileType":"swift","highlights":[{"line":6},{"line":9},{"line":16}],"content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0-alpha.1\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"identifier":"todos-setup-04.swift","fileName":"Package.swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"kind":"project","role":"project","estimatedTime":"5min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","abstract":[{"text":"Create a simple web application.","type":"text"}],"title":"Setup a Hummingbird application.","type":"topic","url":"\/tutorials\/hummingbird\/todos-1-setup"},"todos-extend-01.swift":{"syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-01.swift","fileType":"swift","highlights":[],"type":"file","fileName":"Todos.swift"}}}