{"variants":[{"paths":["\/tutorials\/hummingbird\/todos-1-setup"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","interfaceLanguage":"swift"},"sections":[{"estimatedTimeInMinutes":5,"chapter":"Application setup","image":"hummingbird.png","backgroundImage":"hummingbird.png","kind":"hero","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a simple web application."}]}],"title":"Setup a Hummingbird application."},{"tasks":[{"anchor":"Setup-your-project","contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Create your Package.swift, and add the dependencies your will need."}],"type":"paragraph"}],"mediaPosition":"trailing","media":"hummingbird.png"}],"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Create a new folder and enter it.","type":"text"}]}],"type":"step","runtimePreview":null,"caption":[],"media":null,"code":"todos-setup-01.sh"},{"content":[{"inlineContent":[{"text":"Create your swift package.","type":"text"}],"type":"paragraph"}],"type":"step","runtimePreview":null,"caption":[],"media":null,"code":"todos-setup-02.sh"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open your swift package."}]}],"type":"step","runtimePreview":null,"caption":[],"media":null,"code":"todos-setup-03.swift"},{"content":[{"inlineContent":[{"text":"Add the Hummingbird package as a dependency and add the Hummingbird library to the “Todos” target.","type":"text"}],"type":"paragraph"}],"type":"step","runtimePreview":null,"caption":[],"media":null,"code":"todos-setup-04.swift"},{"content":[{"inlineContent":[{"text":"Open ","type":"text"},{"code":"Sources\/Todos.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"step","runtimePreview":null,"caption":[],"media":null,"code":"todos-setup-05.swift"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Make ","type":"text"},{"code":"Todos","type":"codeVoice"},{"text":" conform to ","type":"text"},{"code":"AsyncParsableCommand","type":"codeVoice"},{"text":" as Hummingbird requires an async entry point.","type":"text"}]}],"type":"step","runtimePreview":null,"caption":[],"media":null,"code":"todos-setup-06.swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an Hummingbird application and add a single route that returns “Hello”."}]}],"type":"step","runtimePreview":null,"caption":[],"media":null,"code":"todos-setup-07.swift"},{"content":[{"inlineContent":[{"type":"text","text":"Run you application and use curl to test it works."}],"type":"paragraph"}],"type":"step","runtimePreview":null,"caption":[],"media":null,"code":"todos-setup-08.sh"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Congratulations you wrote your first Hummingbird app."}]}],"type":"step","runtimePreview":null,"caption":[],"media":null,"code":"todos-setup-09.sh"}],"title":"Setup your project"},{"anchor":"Extend-your-Application","contentSection":[{"media":"hummingbird.png","mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Add logging middleware and add some commandline parameters to control your application.","type":"text"}]}]}],"stepsSection":[{"code":"todos-extend-01.swift","runtimePreview":null,"media":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Return to Todos.swift…"}],"type":"paragraph"}],"type":"step"},{"code":"todos-extend-02.swift","runtimePreview":null,"media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"And add logging middleware and a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" to be used by the router. By changing the logger ","type":"text"},{"code":"logLevel","type":"codeVoice"},{"text":" we can control the fidelity of the logging.","type":"text"}]}],"type":"step"},{"code":"todos-extend-03.sh","runtimePreview":null,"media":null,"caption":[],"content":[{"inlineContent":[{"text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it.","type":"text"}],"type":"paragraph"}],"type":"step"},{"code":"todos-extend-02.swift","runtimePreview":null,"media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to Todos.swift"}]}],"type":"step"},{"code":"todos-extend-06.swift","runtimePreview":null,"media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we are going to add some commandline parameters. Let’s add server bind address details: hostname and port."}]}],"type":"step"},{"code":"todos-extend-07.swift","runtimePreview":null,"media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}]}],"type":"step"},{"code":"todos-extend-08.sh","runtimePreview":null,"media":null,"caption":[{"inlineContent":[{"type":"text","text":"As as alternative to the above you can use the "},{"identifier":"https:\/\/github.com\/hummingbird-project\/template","type":"reference","isActive":true},{"type":"text","text":" to setup a similarly structured project."}],"type":"paragraph"}],"content":[{"inlineContent":[{"text":"Now you can set the bind address of your server from the command line and anyone on your network can talk to your application.","type":"text"}],"type":"paragraph"}],"type":"step"}],"title":"Extend your Application"}],"kind":"tasks"},{"abstract":[{"text":"Add some functionality to your app","type":"text"}],"action":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"type":"reference","isActive":true,"overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Add your application API"}],"hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}]}]},"kind":"project","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"categoryPathComponent":"Todos","role":"project","category":"Todo backend","title":"Setup a Hummingbird application."},"references":{"todos-extend-07.swift":{"fileType":"swift","identifier":"todos-extend-07.swift","fileName":"Todos.swift","type":"file","highlights":[{"line":25},{"line":26},{"line":27},{"line":28},{"line":29}],"content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"],"syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"url":"\/tutorials\/todos\/testing-your-application","role":"article","type":"topic","kind":"article","title":"Testing your application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","abstract":[]},"https://github.com/hummingbird-project/template":{"url":"https:\/\/github.com\/hummingbird-project\/template","identifier":"https:\/\/github.com\/hummingbird-project\/template","title":"template project","type":"link","titleInlineContent":[{"text":"template project","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Todo Controller and Repository","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","type":"section","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","kind":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application","role":"pseudoSymbol","type":"section","kind":"section","title":"Extend your Application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","abstract":[{"text":"Create a simple web application.","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"url":"\/tutorials\/todos\/application-setup","role":"article","type":"topic","kind":"article","title":"Application setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","abstract":[]},"todos-extend-03.sh":{"fileType":"","identifier":"todos-extend-03.sh","fileName":"Test Application","type":"file","highlights":[],"content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "],"syntax":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"url":"\/tutorials\/hummingbird\/todos-4-postgres","role":"project","type":"topic","kind":"project","estimatedTime":"20min","title":"Use PostgresNIO to store your Todos in a Postgres database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"role":"project","abstract":[{"type":"text","text":"Create a simple web application."}],"title":"Setup a Hummingbird application.","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","type":"topic","estimatedTime":"5min","url":"\/tutorials\/hummingbird\/todos-1-setup","kind":"project"},"hummingbird.png":{"alt":"Hummingbird logo","identifier":"hummingbird.png","type":"image","variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}]},"todos-setup-01.sh":{"fileType":"","identifier":"todos-setup-01.sh","fileName":"Create folder","type":"file","highlights":[],"content":["> mkdir Todos","> cd Todos"],"syntax":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"role":"project","abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Add your application API","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","type":"topic","estimatedTime":"15min","url":"\/tutorials\/hummingbird\/todos-2-api","kind":"project"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"title":"Setup a Postgres repository","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","type":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository","kind":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project","role":"pseudoSymbol","type":"section","kind":"section","title":"Setup your project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","abstract":[{"text":"Create a simple web application.","type":"text"}]},"todos-extend-08.sh":{"fileType":"","identifier":"todos-extend-08.sh","fileName":"Test Application","type":"file","highlights":[],"content":["> swift run Todos -p 8081 -h 0.0.0.0"],"syntax":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","role":"pseudoSymbol","type":"section","kind":"section","title":"Testing your application with curl","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","abstract":[{"text":"Add some functionality to your app","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing","role":"pseudoSymbol","type":"section","kind":"section","title":"Setup your project for testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"role":"article","abstract":[],"title":"API Setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","type":"topic","url":"\/tutorials\/todos\/api-setup","kind":"article"},"todos-extend-01.swift":{"fileType":"swift","identifier":"todos-extend-01.swift","fileName":"Todos.swift","type":"file","highlights":[],"content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"title":"Test you application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","type":"section","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application","kind":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"role":"project","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"title":"Testing your application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","type":"topic","estimatedTime":"15min","url":"\/tutorials\/hummingbird\/todos-3-testing","kind":"project"},"todos-extend-02.swift":{"fileType":"swift","identifier":"todos-extend-02.swift","fileName":"Todos.swift","type":"file","highlights":[],"content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"syntax":"swift"},"todos-extend-06.swift":{"fileType":"swift","identifier":"todos-extend-06.swift","fileName":"Todos.swift","type":"file","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12}],"content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"syntax":"swift"},"todos-setup-09.sh":{"fileType":"","identifier":"todos-setup-09.sh","fileName":"Test Application","type":"file","highlights":[{"line":2}],"content":["> curl localhost:8080","Hello"],"syntax":""},"todos-setup-03.swift":{"fileType":"swift","identifier":"todos-setup-03.swift","fileName":"Package.swift","type":"file","highlights":[],"content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"syntax":"swift"},"todos-setup-05.swift":{"fileType":"swift","identifier":"todos-setup-05.swift","fileName":"Todos.swift","type":"file","highlights":[],"content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"title":"Setup your Postgres database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","type":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","kind":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","url":"\/tutorials\/todos","type":"topic","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"role":"overview","title":"Build a Todos application.","kind":"overview"},"todos-setup-02.sh":{"fileType":"","identifier":"todos-setup-02.sh","fileName":"Create Swift Package","type":"file","highlights":[],"content":["> swift package init --type tool"],"syntax":""},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"role":"article","abstract":[],"title":"Store Todos in a database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","type":"topic","url":"\/tutorials\/todos\/store-todos-in-a-database","kind":"article"},"todos-setup-06.swift":{"fileType":"swift","identifier":"todos-setup-06.swift","fileName":"Todos.swift","type":"file","highlights":[{"line":4},{"line":5}],"content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"syntax":"swift"},"todos-setup-04.swift":{"fileType":"swift","identifier":"todos-setup-04.swift","fileName":"Package.swift","type":"file","highlights":[{"line":6},{"line":9},{"line":16}],"content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0-alpha.1\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"syntax":"swift"},"todos-setup-07.swift":{"fileType":"swift","identifier":"todos-setup-07.swift","fileName":"Todos.swift","type":"file","highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"syntax":"swift"},"todos-setup-08.sh":{"fileType":"","identifier":"todos-setup-08.sh","fileName":"Test Application","type":"file","highlights":[],"content":["> curl localhost:8080"],"syntax":""}}}