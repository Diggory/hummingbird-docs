{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","interfaceLanguage":"swift"},"sections":[{"title":"Setup a Hummingbird application.","backgroundImage":"hummingbird.png","estimatedTimeInMinutes":5,"kind":"hero","content":[{"inlineContent":[{"type":"text","text":"Create a simple web application."}],"type":"paragraph"}],"image":"hummingbird.png","chapter":"Application setup"},{"kind":"tasks","tasks":[{"contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Create your Package.swift, and add the dependencies your will need.","type":"text"}]}],"mediaPosition":"trailing","media":"hummingbird.png"}],"anchor":"Setup-your-project","title":"Setup your project","stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Create a new folder and enter it.","type":"text"}]}],"runtimePreview":null,"type":"step","code":"todos-setup-01.sh","caption":[],"media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create your swift package."}]}],"runtimePreview":null,"type":"step","code":"todos-setup-02.sh","caption":[],"media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open your swift package."}]}],"runtimePreview":null,"type":"step","code":"todos-setup-03.swift","caption":[],"media":null},{"content":[{"inlineContent":[{"type":"text","text":"Add the Hummingbird package as a dependency and add the Hummingbird library to the “Todos” target."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","code":"todos-setup-04.swift","caption":[],"media":null},{"content":[{"inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"Sources\/Todos.swift"},{"type":"text","text":"."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","code":"todos-setup-05.swift","caption":[],"media":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Make ","type":"text"},{"type":"codeVoice","code":"Todos"},{"text":" conform to ","type":"text"},{"type":"codeVoice","code":"AsyncParsableCommand"},{"text":" as Hummingbird requires an async entry point.","type":"text"}]}],"runtimePreview":null,"type":"step","code":"todos-setup-06.swift","caption":[],"media":null},{"content":[{"inlineContent":[{"text":"Create an Hummingbird application and add a single route that returns “Hello”.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step","code":"todos-setup-07.swift","caption":[],"media":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Run you application and use curl to test it works.","type":"text"}]}],"runtimePreview":null,"type":"step","code":"todos-setup-08.sh","caption":[],"media":null},{"content":[{"inlineContent":[{"type":"text","text":"Congratulations you wrote your first Hummingbird app."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","code":"todos-setup-09.sh","caption":[],"media":null}]},{"contentSection":[{"kind":"contentAndMedia","media":"hummingbird.png","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"Add logging middleware and add some commandline parameters to control your application.","type":"text"}]}]}],"anchor":"Extend-your-Application","title":"Extend your Application","stepsSection":[{"media":null,"runtimePreview":null,"code":"todos-extend-01.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Return to Todos.swift…","type":"text"}]}],"caption":[],"type":"step"},{"media":null,"runtimePreview":null,"code":"todos-extend-02.swift","content":[{"type":"paragraph","inlineContent":[{"text":"And add logging middleware and a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" to be used by the application. By changing the logger ","type":"text"},{"code":"logLevel","type":"codeVoice"},{"text":" we can control the fidelity of the logging.","type":"text"}]}],"caption":[],"type":"step"},{"media":null,"runtimePreview":null,"code":"todos-extend-03.sh","content":[{"inlineContent":[{"type":"text","text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it."}],"type":"paragraph"}],"caption":[],"type":"step"},{"media":null,"runtimePreview":null,"code":"todos-extend-02.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Go back to Todos.swift","type":"text"}]}],"caption":[],"type":"step"},{"media":null,"runtimePreview":null,"code":"todos-extend-06.swift","content":[{"inlineContent":[{"type":"text","text":"Now we are going to add some commandline parameters. Let’s add server bind address details: hostname and port."}],"type":"paragraph"}],"caption":[],"type":"step"},{"media":null,"runtimePreview":null,"code":"todos-extend-07.swift","content":[{"inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}],"type":"paragraph"}],"caption":[],"type":"step"},{"media":null,"runtimePreview":null,"code":"todos-extend-08.sh","content":[{"inlineContent":[{"type":"text","text":"Now you can set the bind address of your server from the command line and anyone on your network can talk to your application."}],"type":"paragraph"}],"caption":[],"type":"step"}]}]},{"title":"Add your application API","action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","overridingTitle":"Get started","type":"reference","isActive":true},"kind":"callToAction","featuredEyebrow":"Tutorial","abstract":[{"text":"Add some functionality to your app","type":"text"}]}],"hierarchy":{"modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}]}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]]},"kind":"project","schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"Setup a Hummingbird application.","categoryPathComponent":"Todos","role":"project","category":"Todo backend"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/hummingbird\/todos-1-setup"]}],"references":{"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"abstract":[{"type":"text","text":"Create a simple web application."}],"title":"Setup a Hummingbird application.","kind":"project","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","estimatedTime":"5min","role":"project","url":"\/tutorials\/hummingbird\/todos-1-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"url":"\/tutorials\/todos","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"kind":"overview","role":"overview","title":"Build a Todos application.","type":"topic"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"abstract":[{"type":"text","text":"Test your application using the HummingbirdXCT framework"}],"title":"Testing your application","kind":"project","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","estimatedTime":"15min","role":"project","url":"\/tutorials\/hummingbird\/todos-3-testing"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"abstract":[{"type":"text","text":"Create a simple web application."}],"title":"Setup your project","kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project"},"todos-setup-04.swift":{"type":"file","syntax":"swift","content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0-alpha.1\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","                .product(name: \"HummingbirdFoundation\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"identifier":"todos-setup-04.swift","highlights":[{"line":6},{"line":9},{"line":16},{"line":17}],"fileType":"swift","fileName":"Package.swift"},"todos-setup-08.sh":{"highlights":[],"fileName":"Test Application","syntax":"","type":"file","content":["> curl localhost:8080"],"identifier":"todos-setup-08.sh","fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Todo Controller and Repository","kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository"},"todos-setup-07.swift":{"highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"fileName":"Todos.swift","syntax":"swift","type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-setup-07.swift","fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"abstract":[],"title":"Application setup","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","role":"article","url":"\/tutorials\/todos\/application-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Testing your application with curl","kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl"},"todos-extend-07.swift":{"type":"file","syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-07.swift","highlights":[{"line":24},{"line":25},{"line":26},{"line":27},{"line":28}],"fileType":"swift","fileName":"Todos.swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"title":"Setup your Postgres database","kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"abstract":[],"title":"Testing your application","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","role":"article","url":"\/tutorials\/todos\/testing-your-application"},"todos-setup-05.swift":{"type":"file","syntax":"swift","content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"identifier":"todos-setup-05.swift","highlights":[],"fileType":"swift","fileName":"Todos.swift"},"todos-setup-01.sh":{"type":"file","syntax":"","content":["> mkdir Todos","> cd Todos"],"identifier":"todos-setup-01.sh","highlights":[],"fileType":"","fileName":"Create folder"},"todos-setup-09.sh":{"type":"file","syntax":"","content":["> curl localhost:8080","Hello"],"identifier":"todos-setup-09.sh","highlights":[],"fileType":"","fileName":"Test Applicatoin"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"type":"section","kind":"section","title":"Setup your project for testing","abstract":[{"type":"text","text":"Test your application using the HummingbirdXCT framework"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing"},"todos-setup-06.swift":{"type":"file","syntax":"swift","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"identifier":"todos-setup-06.swift","highlights":[{"line":4},{"line":5}],"fileType":"swift","fileName":"Todos.swift"},"todos-extend-08.sh":{"highlights":[],"fileName":"Test Application","syntax":"","type":"file","content":["> swift run Todos -p 8081 -h 0.0.0.0"],"identifier":"todos-extend-08.sh","fileType":""},"hummingbird.png":{"variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}],"type":"image","identifier":"hummingbird.png","alt":"Hummingbird logo"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"abstract":[{"type":"text","text":"Test your application using the HummingbirdXCT framework"}],"title":"Test you application","kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"type":"topic","kind":"article","title":"Store Todos in a database","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","role":"article","url":"\/tutorials\/todos\/store-todos-in-a-database"},"todos-setup-02.sh":{"type":"file","syntax":"","content":["> swift package init --type tool"],"identifier":"todos-setup-02.sh","highlights":[],"fileType":"","fileName":"Create Swift Package"},"todos-extend-03.sh":{"type":"file","syntax":"","content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "],"identifier":"todos-extend-03.sh","highlights":[],"fileType":"","fileName":"Test Application"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"title":"Setup a Postgres repository","kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository"},"todos-extend-06.swift":{"type":"file","syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-06.swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}],"fileType":"swift","fileName":"Todos.swift"},"todos-extend-02.swift":{"highlights":[],"fileName":"Todos.swift","syntax":"swift","type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-02.swift","fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"abstract":[],"title":"API Setup","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","role":"article","url":"\/tutorials\/todos\/api-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Add your application API","kind":"project","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","estimatedTime":"15min","role":"project","url":"\/tutorials\/hummingbird\/todos-2-api"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"title":"Use PostgresNIO to store your Todos in a Postgres database","kind":"project","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","estimatedTime":"20min","role":"project","url":"\/tutorials\/hummingbird\/todos-4-postgres"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"abstract":[{"type":"text","text":"Create a simple web application."}],"title":"Extend your Application","kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application"},"todos-setup-03.swift":{"highlights":[],"fileName":"Package.swift","syntax":"swift","type":"file","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"identifier":"todos-setup-03.swift","fileType":"swift"},"todos-extend-01.swift":{"highlights":[],"fileName":"Todos.swift","syntax":"swift","type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-01.swift","fileType":"swift"}}}