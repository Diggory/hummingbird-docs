{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","kind":"task"}]}]}],"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]]},"kind":"project","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/hummingbird\/todos-1-setup"]}],"metadata":{"category":"Todo backend","categoryPathComponent":"Todos","title":"Setup a Hummingbird application.","role":"project"},"sections":[{"estimatedTimeInMinutes":5,"kind":"hero","title":"Setup a Hummingbird application.","content":[{"inlineContent":[{"type":"text","text":"Create a simple web application."}],"type":"paragraph"}],"chapter":"Application setup","image":"hummingbird.png","backgroundImage":"hummingbird.png"},{"kind":"tasks","tasks":[{"anchor":"Setup-your-project","title":"Setup your project","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Create your Package.swift, and add the dependencies your will need."}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia","media":"hummingbird.png"}],"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Create a new folder and enter it.","type":"text"}]}],"code":"todos-setup-01.sh","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Create your swift package.","type":"text"}]}],"code":"todos-setup-02.sh","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"inlineContent":[{"type":"text","text":"Open your swift package."}],"type":"paragraph"}],"code":"todos-setup-03.swift","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the Hummingbird package as a dependency and add the Hummingbird library to the “Todos” target."}]}],"code":"todos-setup-04.swift","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"inlineContent":[{"type":"text","text":"Open "},{"code":"Sources\/Todos.swift","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"code":"todos-setup-05.swift","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Make ","type":"text"},{"code":"Todos","type":"codeVoice"},{"text":" conform to ","type":"text"},{"code":"AsyncParsableCommand","type":"codeVoice"},{"text":" as Hummingbird requires an async entry point.","type":"text"}]}],"code":"todos-setup-06.swift","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an Hummingbird application and add a single route that returns “Hello”."}]}],"code":"todos-setup-07.swift","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Run you application and use curl to test it works.","type":"text"}]}],"code":"todos-setup-08.sh","media":null,"caption":[],"type":"step","runtimePreview":null},{"content":[{"inlineContent":[{"text":"Congratulations you wrote your first Hummingbird app.","type":"text"}],"type":"paragraph"}],"code":"todos-setup-09.sh","media":null,"caption":[],"type":"step","runtimePreview":null}]},{"anchor":"Extend-your-Application","title":"Extend your Application","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Add logging middleware and add some commandline parameters to control your application."}],"type":"paragraph"}],"media":"hummingbird.png"}],"stepsSection":[{"type":"step","caption":[],"code":"todos-extend-01.swift","content":[{"inlineContent":[{"type":"text","text":"Return to Todos.swift…"}],"type":"paragraph"}],"media":null,"runtimePreview":null},{"type":"step","caption":[],"code":"todos-extend-02.swift","content":[{"inlineContent":[{"type":"text","text":"And add logging middleware and a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" to be used by the application. By changing the logger "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" we can control the fidelity of the logging."}],"type":"paragraph"}],"media":null,"runtimePreview":null},{"type":"step","caption":[],"code":"todos-extend-03.sh","content":[{"inlineContent":[{"type":"text","text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it."}],"type":"paragraph"}],"media":null,"runtimePreview":null},{"type":"step","caption":[],"code":"todos-extend-02.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Go back to Todos.swift","type":"text"}]}],"media":null,"runtimePreview":null},{"type":"step","caption":[],"code":"todos-extend-06.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we are going to add some commandline parameters. Let’s add server bind address details: hostname and port."}]}],"media":null,"runtimePreview":null},{"type":"step","caption":[],"code":"todos-extend-07.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}]}],"media":null,"runtimePreview":null},{"type":"step","caption":[],"code":"todos-extend-08.sh","content":[{"inlineContent":[{"type":"text","text":"Now you can set the bind address of your server from the command line and anyone on your network can talk to your application."}],"type":"paragraph"}],"media":null,"runtimePreview":null}]}]},{"kind":"callToAction","title":"Add your application API","abstract":[{"type":"text","text":"Add some functionality to your app"}],"featuredEyebrow":"Tutorial","action":{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"overridingTitle":"Get started","isActive":true}}],"references":{"todos-extend-06.swift":{"fileName":"Todos.swift","type":"file","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}],"syntax":"swift","identifier":"todos-extend-06.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"type":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","kind":"section","title":"Setup your Postgres database","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application","type":"section","title":"Extend your Application","abstract":[{"type":"text","text":"Create a simple web application."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","kind":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"estimatedTime":"15min","type":"topic","role":"project","url":"\/tutorials\/hummingbird\/todos-2-api","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","kind":"project","title":"Add your application API","abstract":[{"type":"text","text":"Add some functionality to your app"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"role":"article","url":"\/tutorials\/todos\/store-todos-in-a-database","type":"topic","title":"Store Todos in a database","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","kind":"article"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing","type":"section","title":"Setup your project for testing","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","kind":"section"},"todos-setup-07.swift":{"fileName":"Todos.swift","type":"file","highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"syntax":"swift","identifier":"todos-setup-07.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift"},"todos-setup-04.swift":{"fileName":"Package.swift","type":"file","highlights":[{"line":6},{"line":9},{"line":16}],"syntax":"swift","identifier":"todos-setup-04.swift","content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0-alpha.1\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"fileType":"swift"},"todos-extend-08.sh":{"fileName":"Test Application","type":"file","highlights":[],"syntax":"","identifier":"todos-extend-08.sh","content":["> swift run Todos -p 8081 -h 0.0.0.0"],"fileType":""},"todos-setup-09.sh":{"fileName":"Test Applicatoin","type":"file","highlights":[],"syntax":"","identifier":"todos-setup-09.sh","content":["> curl localhost:8080","Hello"],"fileType":""},"todos-extend-07.swift":{"fileName":"Todos.swift","type":"file","highlights":[{"line":24},{"line":25},{"line":26},{"line":27},{"line":28}],"syntax":"swift","identifier":"todos-extend-07.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift"},"todos-setup-05.swift":{"fileType":"swift","syntax":"swift","content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"type":"file","fileName":"Todos.swift","identifier":"todos-setup-05.swift","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"type":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","kind":"section","title":"Setup your project","abstract":[{"type":"text","text":"Create a simple web application."}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"type":"topic","role":"article","url":"\/tutorials\/todos\/application-setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","kind":"article","title":"Application setup","abstract":[]},"todos-setup-01.sh":{"fileName":"Create folder","type":"file","highlights":[],"syntax":"","identifier":"todos-setup-01.sh","content":["> mkdir Todos","> cd Todos"],"fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"estimatedTime":"5min","type":"topic","role":"project","url":"\/tutorials\/hummingbird\/todos-1-setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","kind":"project","title":"Setup a Hummingbird application.","abstract":[{"type":"text","text":"Create a simple web application."}]},"todos-setup-03.swift":{"fileName":"Package.swift","type":"file","highlights":[],"syntax":"swift","identifier":"todos-setup-03.swift","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"type":"topic","role":"article","url":"\/tutorials\/todos\/api-setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","kind":"article","title":"API Setup","abstract":[]},"todos-extend-01.swift":{"fileName":"Todos.swift","type":"file","highlights":[],"syntax":"swift","identifier":"todos-extend-01.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift"},"todos-extend-03.sh":{"fileName":"Test Application","type":"file","highlights":[],"syntax":"","identifier":"todos-extend-03.sh","content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "],"fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"type":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","kind":"section","title":"Testing your application with curl","abstract":[{"type":"text","text":"Add some functionality to your app"}]},"hummingbird.png":{"type":"image","alt":"Hummingbird logo","identifier":"hummingbird.png","variants":[{"traits":["1x","light"],"url":"\/images\/hummingbird.png"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"type":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","kind":"section","title":"Setup a Postgres repository","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"type":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","kind":"section","title":"Test you application","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}]},"todos-extend-02.swift":{"fileName":"Todos.swift","type":"file","highlights":[],"syntax":"swift","identifier":"todos-extend-02.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"type":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","kind":"section","title":"Todo Controller and Repository","abstract":[{"type":"text","text":"Add some functionality to your app"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"estimatedTime":"15min","type":"topic","role":"project","url":"\/tutorials\/hummingbird\/todos-3-testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","kind":"project","title":"Testing your application","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"type":"topic","role":"overview","url":"\/tutorials\/todos","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","kind":"overview","title":"Build a Todos application.","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}]},"todos-setup-02.sh":{"fileName":"Create Swift Package","type":"file","highlights":[],"syntax":"","identifier":"todos-setup-02.sh","content":["> swift package init --type tool"],"fileType":""},"todos-setup-06.swift":{"fileName":"Todos.swift","type":"file","highlights":[{"line":4},{"line":5}],"syntax":"swift","identifier":"todos-setup-06.swift","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"estimatedTime":"20min","type":"topic","role":"project","url":"\/tutorials\/hummingbird\/todos-4-postgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","kind":"project","title":"Use PostgresNIO to store your Todos in a Postgres database","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]},"todos-setup-08.sh":{"fileName":"Test Application","type":"file","highlights":[],"syntax":"","identifier":"todos-setup-08.sh","content":["> curl localhost:8080"],"fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"type":"topic","role":"article","url":"\/tutorials\/todos\/testing-your-application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","kind":"article","title":"Testing your application","abstract":[]}}}