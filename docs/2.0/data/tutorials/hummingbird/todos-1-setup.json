{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"sections":[{"chapter":"Application setup","content":[{"inlineContent":[{"type":"text","text":"Create a simple web application."}],"type":"paragraph"}],"estimatedTimeInMinutes":5,"backgroundImage":"hummingbird.png","title":"Setup a Hummingbird application.","image":"hummingbird.png","kind":"hero"},{"tasks":[{"stepsSection":[{"media":null,"caption":[],"code":"todos-setup-01.sh","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Create a new folder and enter it."}],"type":"paragraph"}]},{"media":null,"caption":[],"code":"todos-setup-02.sh","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Create your swift package."}],"type":"paragraph"}]},{"media":null,"caption":[],"code":"todos-setup-03.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open your swift package."}]}]},{"media":null,"caption":[],"code":"todos-setup-04.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Add the Hummingbird package as a dependency and add the the libraries you are going to use to the target. You need HummingbirdFoundation because you need the JSON encoder and decoder."}],"type":"paragraph"}]},{"media":null,"caption":[],"code":"todos-setup-05.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"text":"Open ","type":"text"},{"code":"Sources\/Todos.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"media":null,"caption":[],"code":"todos-setup-06.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Make ","type":"text"},{"type":"codeVoice","code":"Todos"},{"text":" conform to ","type":"text"},{"type":"codeVoice","code":"AsyncParsableCommand"},{"text":" as Hummingbird requires an async entry point.","type":"text"}]}]},{"media":null,"caption":[],"code":"todos-setup-07.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Create an Hummingbird application and add a single route that returns “Hello”."}],"type":"paragraph"}]},{"media":null,"caption":[],"code":"todos-setup-08.sh","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Run you application and use curl to test it works."}],"type":"paragraph"}]},{"media":null,"caption":[],"code":"todos-setup-09.sh","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"text":"Congratulations you wrote your first Hummingbird app.","type":"text"}],"type":"paragraph"}]}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"text":"Create your Package.swift, and add the dependencies your will need.","type":"text"}],"type":"paragraph"}],"media":"hummingbird.png"}],"anchor":"Setup-your-project","title":"Setup your project"},{"stepsSection":[{"caption":[],"media":null,"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"text":"Return to Todos.swift…","type":"text"}],"type":"paragraph"}],"code":"todos-extend-01.swift"},{"caption":[],"media":null,"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"text":"And add logging middleware.","type":"text"}],"type":"paragraph"}],"code":"todos-extend-02.swift"},{"caption":[],"media":null,"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it.","type":"text"}]}],"code":"todos-extend-03.sh"},{"caption":[],"media":null,"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Setting up JSON encoding\/decoding requires a custom request context. The request context is the object that is passed along with the request in your route and middleware handlers. You can set the router to use your own context type as long as it conforms to "},{"code":"HBRequestContext","type":"codeVoice"},{"type":"text","text":"."}]}],"code":"todos-extend-04.swift"},{"caption":[],"media":null,"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Go back to Todos.swift"}],"type":"paragraph"}],"code":"todos-extend-02.swift"},{"caption":[],"media":null,"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"text":"Set your router to use the new request context.","type":"text"}],"type":"paragraph"}],"code":"todos-extend-05.swift"},{"caption":[],"media":null,"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally we are going to add some commandline parameters. Let’s add server bind address details: hostname and port."}]}],"code":"todos-extend-06.swift"},{"caption":[],"media":null,"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}]}],"code":"todos-extend-07.swift"},{"caption":[],"media":null,"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Now you can set the bind address of your server from the command line. Now anyone can talk to your application.","type":"text"}]}],"code":"todos-extend-08.sh"}],"contentSection":[{"kind":"contentAndMedia","media":"hummingbird.png","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"Add logging middleware, set up JSON request decoding and reponse encoding and add some commandline parameters to control your application."}],"type":"paragraph"}]}],"anchor":"Extend-your-Application","title":"Extend your Application"}],"kind":"tasks"},{"action":{"type":"reference","overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"},"title":"Add your application API","abstract":[{"text":"Add some functionality to your app","type":"text"}],"kind":"callToAction","featuredEyebrow":"Tutorial"}],"kind":"project","variants":[{"paths":["\/tutorials\/hummingbird\/todos-1-setup"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"project","category":"Todo backend","title":"Setup a Hummingbird application.","categoryPathComponent":"Todos"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","kind":"task"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}]}]},"references":{"todos-setup-05.swift":{"identifier":"todos-setup-05.swift","syntax":"swift","highlights":[],"fileName":"Todos.swift","fileType":"swift","type":"file","content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"title":"Store Todos in a database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","url":"\/tutorials\/todos\/store-todos-in-a-database","abstract":[],"role":"article","kind":"article","type":"topic"},"todos-extend-07.swift":{"content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter(context: TodoRequestContext.self)","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-07.swift","fileName":"Todos.swift","syntax":"swift","type":"file","fileType":"swift","highlights":[{"line":24},{"line":25},{"line":26},{"line":27},{"line":28}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"title":"Setup your Postgres database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"role":"pseudoSymbol","kind":"section","type":"section"},"todos-extend-02.swift":{"syntax":"swift","highlights":[],"fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift","type":"file","identifier":"todos-extend-02.swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"kind":"project","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"title":"Use PostgresNIO to store your Todos in a Postgres database","type":"topic","estimatedTime":"20min","url":"\/tutorials\/hummingbird\/todos-4-postgres","role":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"kind":"article","abstract":[],"title":"API Setup","type":"topic","url":"\/tutorials\/todos\/api-setup","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup"},"todos-setup-03.swift":{"syntax":"swift","highlights":[],"fileName":"Package.swift","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"fileType":"swift","type":"file","identifier":"todos-setup-03.swift"},"todos-setup-08.sh":{"syntax":"","highlights":[],"fileName":"Test Application","content":["> curl localhost:8080"],"fileType":"","type":"file","identifier":"todos-setup-08.sh"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"type":"section","title":"Setup your project for testing"},"todos-extend-04.swift":{"syntax":"swift","highlights":[],"fileName":"TodosRequestContext.swift","content":["import Hummingbird","import HummingbirdFoundation","import Logging","","\/\/\/ Custom request context setting up JSON decoding and encoding","struct TodoRequestContext: HBRequestContext {","    var coreContext: HBCoreRequestContext","","    init(allocator: ByteBufferAllocator, logger: Logger) {","        self.coreContext = .init(","            requestDecoder: JSONDecoder(),","            responseEncoder: JSONEncoder(),","            allocator: allocator,","            logger: logger","        )","    }","}"],"fileType":"swift","type":"file","identifier":"todos-extend-04.swift"},"todos-setup-01.sh":{"syntax":"","highlights":[],"fileName":"Create folder","content":["> mkdir Todos","> cd Todos"],"fileType":"","type":"file","identifier":"todos-setup-01.sh"},"todos-extend-05.swift":{"syntax":"swift","highlights":[{"line":10}],"fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter(context: TodoRequestContext.self)","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift","type":"file","identifier":"todos-extend-05.swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"kind":"section","abstract":[{"text":"Add some functionality to your app","type":"text"}],"title":"Testing your application with curl","type":"section","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"},"todos-extend-06.swift":{"syntax":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}],"fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter(context: TodoRequestContext.self)","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift","type":"file","identifier":"todos-extend-06.swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"role":"project","type":"topic","kind":"project","url":"\/tutorials\/hummingbird\/todos-3-testing","estimatedTime":"15min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","title":"Testing your application","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}]},"todos-setup-09.sh":{"identifier":"todos-setup-09.sh","syntax":"","highlights":[],"fileName":"Test Applicatoin","fileType":"","type":"file","content":["> curl localhost:8080","Hello"]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","role":"overview","kind":"overview","url":"\/tutorials\/todos","abstract":[{"text":"This is a tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"type":"topic","title":"Build a Todos application."},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"role":"article","type":"topic","kind":"article","url":"\/tutorials\/todos\/testing-your-application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","title":"Testing your application","abstract":[]},"todos-extend-01.swift":{"syntax":"swift","highlights":[],"fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift","type":"file","identifier":"todos-extend-01.swift"},"todos-setup-06.swift":{"syntax":"swift","highlights":[{"line":4},{"line":5}],"fileName":"Todos.swift","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"fileType":"swift","type":"file","identifier":"todos-setup-06.swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"kind":"section","abstract":[{"type":"text","text":"Create a simple web application."}],"title":"Setup your project","type":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project"},"todos-setup-04.swift":{"identifier":"todos-setup-04.swift","syntax":"swift","highlights":[{"line":6},{"line":9},{"line":16},{"line":17}],"fileName":"Package.swift","fileType":"swift","type":"file","content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", branch: \"2.x.x\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","                .product(name: \"HummingbirdFoundation\", package: \"hummingbird\"),","            ]","        ),","    ]",")"]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"kind":"section","abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Todo Controller and Repository","type":"section","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},"hummingbird.png":{"variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}],"identifier":"hummingbird.png","alt":"Hummingbird logo","type":"image"},"todos-setup-07.swift":{"identifier":"todos-setup-07.swift","syntax":"swift","highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18}],"fileName":"Todos.swift","fileType":"swift","type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"]},"todos-setup-02.sh":{"identifier":"todos-setup-02.sh","syntax":"","highlights":[],"fileName":"Create Swift Package","fileType":"","type":"file","content":["> swift package init --type tool"]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application","abstract":[{"type":"text","text":"Create a simple web application."}],"type":"section","title":"Extend your Application"},"todos-extend-08.sh":{"syntax":"","highlights":[],"fileName":"Test Application","content":["> swift run Todos -p 8081 -h 0.0.0.0"],"fileType":"","type":"file","identifier":"todos-extend-08.sh"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","role":"project","kind":"project","url":"\/tutorials\/hummingbird\/todos-2-api","estimatedTime":"15min","abstract":[{"type":"text","text":"Add some functionality to your app"}],"type":"topic","title":"Add your application API"},"todos-extend-03.sh":{"content":["2024-01-06T09:05:24+0100 info Hummingbird : [HummingbirdCore] Server started and listening on 127.0.0.1:8080","2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "],"identifier":"todos-extend-03.sh","fileName":"Test Application","syntax":"","type":"file","fileType":"","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"type":"section","title":"Test you application"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"title":"Setup a Hummingbird application.","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","url":"\/tutorials\/hummingbird\/todos-1-setup","abstract":[{"text":"Create a simple web application.","type":"text"}],"role":"project","estimatedTime":"5min","kind":"project","type":"topic"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"title":"Setup a Postgres repository","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"role":"pseudoSymbol","kind":"section","type":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"kind":"article","abstract":[],"title":"Application setup","type":"topic","url":"\/tutorials\/todos\/application-setup","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"}}}