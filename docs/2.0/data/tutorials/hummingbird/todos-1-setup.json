{"kind":"project","hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","kind":"task"}]}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"},{"projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup"},{"projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","kind":"task"}]}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application"},{"projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","kind":"task"}]}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database"}],"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"variants":[{"paths":["\/tutorials\/hummingbird\/todos-1-setup"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"Setup a Hummingbird application.","role":"project","categoryPathComponent":"Todos","category":"Todo backend"},"sections":[{"title":"Setup a Hummingbird application.","image":"hummingbird.png","estimatedTimeInMinutes":5,"backgroundImage":"hummingbird.png","kind":"hero","chapter":"Application setup","content":[{"type":"paragraph","inlineContent":[{"text":"Create a simple web application.","type":"text"}]}]},{"tasks":[{"stepsSection":[{"runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"inlineContent":[{"type":"text","text":"Create a new folder and enter it."}],"type":"paragraph"}],"code":"todos-setup-01.sh"},{"runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Create your swift package.","type":"text"}]}],"code":"todos-setup-02.sh"},{"runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"inlineContent":[{"text":"Open your swift package.","type":"text"}],"type":"paragraph"}],"code":"todos-setup-03.swift"},{"runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Add the Hummingbird package as a dependency and add the the libraries you are going to use to the target. You need HummingbirdFoundation because you need the JSON encoder and decoder.","type":"text"}]}],"code":"todos-setup-04.swift"},{"runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Open ","type":"text"},{"type":"codeVoice","code":"Sources\/Todos.swift"},{"text":".","type":"text"}]}],"code":"todos-setup-05.swift"},{"runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Make ","type":"text"},{"code":"Todos","type":"codeVoice"},{"text":" conform to ","type":"text"},{"code":"AsyncParsableCommand","type":"codeVoice"},{"text":" as Hummingbird requires an async entry point.","type":"text"}]}],"code":"todos-setup-06.swift"},{"runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"inlineContent":[{"type":"text","text":"Create an Hummingbird application and add a single route that returns “Hello”."}],"type":"paragraph"}],"code":"todos-setup-07.swift"},{"runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run you application and use curl to test it works."}]}],"code":"todos-setup-08.sh"},{"runtimePreview":null,"type":"step","caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Congratulations you wrote your first Hummingbird app."}]}],"code":"todos-setup-09.sh"}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","media":"hummingbird.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create your Package.swift, and add the dependencies your will need."}]}]}],"title":"Setup your project","anchor":"Setup-your-project"},{"stepsSection":[{"type":"step","caption":[],"code":"todos-extend-01.swift","runtimePreview":null,"media":null,"content":[{"inlineContent":[{"type":"text","text":"Return to Todos.swift…"}],"type":"paragraph"}]},{"type":"step","caption":[],"code":"todos-extend-02.swift","runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"And add logging middleware and a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" to be used by the application. By changing the logger ","type":"text"},{"code":"logLevel","type":"codeVoice"},{"text":" we can control the fidelity of the logging.","type":"text"}]}]},{"type":"step","caption":[],"code":"todos-extend-03.sh","runtimePreview":null,"media":null,"content":[{"inlineContent":[{"type":"text","text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it."}],"type":"paragraph"}]},{"type":"step","caption":[],"code":"todos-extend-02.swift","runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Go back to Todos.swift","type":"text"}]}]},{"type":"step","caption":[],"code":"todos-extend-06.swift","runtimePreview":null,"media":null,"content":[{"inlineContent":[{"text":"Now we are going to add some commandline parameters. Let’s add server bind address details: hostname and port.","type":"text"}],"type":"paragraph"}]},{"type":"step","caption":[],"code":"todos-extend-07.swift","runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}]}]},{"type":"step","caption":[],"code":"todos-extend-08.sh","runtimePreview":null,"media":null,"content":[{"inlineContent":[{"type":"text","text":"Now you can set the bind address of your server from the command line and anyone on your network can talk to your application."}],"type":"paragraph"}]}],"contentSection":[{"mediaPosition":"trailing","media":"hummingbird.png","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add logging middleware and add some commandline parameters to control your application."}]}]}],"title":"Extend your Application","anchor":"Extend-your-Application"}],"kind":"tasks"},{"title":"Add your application API","action":{"isActive":true,"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"type":"reference","overridingTitle":"Get started","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"},"featuredEyebrow":"Tutorial","abstract":[{"type":"text","text":"Add some functionality to your app"}],"kind":"callToAction"}],"references":{"todos-extend-08.sh":{"fileType":"","content":["> swift run Todos -p 8081 -h 0.0.0.0"],"highlights":[],"fileName":"Test Application","identifier":"todos-extend-08.sh","type":"file","syntax":""},"todos-setup-05.swift":{"fileType":"swift","content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"highlights":[],"fileName":"Todos.swift","identifier":"todos-setup-05.swift","type":"file","syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","abstract":[],"url":"\/tutorials\/todos\/application-setup","type":"topic","title":"Application setup","kind":"article","role":"article"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"abstract":[{"type":"text","text":"Add some functionality to your app"}],"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","type":"section","title":"Todo Controller and Repository"},"todos-extend-07.swift":{"fileType":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"],"highlights":[{"line":24},{"line":25},{"line":26},{"line":27},{"line":28}],"fileName":"Todos.swift","identifier":"todos-extend-07.swift","type":"file","syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"title":"Testing your application","url":"\/tutorials\/todos\/testing-your-application","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","type":"topic","abstract":[],"role":"article"},"todos-extend-03.sh":{"fileType":"","content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "],"highlights":[],"fileName":"Test Application","identifier":"todos-extend-03.sh","type":"file","syntax":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","kind":"project","url":"\/tutorials\/hummingbird\/todos-3-testing","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"estimatedTime":"15min","title":"Testing your application","type":"topic","role":"project"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"estimatedTime":"20min","title":"Use PostgresNIO to store your Todos in a Postgres database","url":"\/tutorials\/hummingbird\/todos-4-postgres","kind":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","type":"topic","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"role":"project"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"title":"Build a Todos application.","url":"\/tutorials\/todos","kind":"overview","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","type":"topic","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"role":"overview"},"todos-setup-09.sh":{"fileType":"","content":["> curl localhost:8080","Hello"],"highlights":[],"fileName":"Test Applicatoin","identifier":"todos-setup-09.sh","type":"file","syntax":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","type":"section","title":"Setup your Postgres database"},"todos-setup-06.swift":{"fileType":"swift","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"highlights":[{"line":4},{"line":5}],"fileName":"Todos.swift","identifier":"todos-setup-06.swift","type":"file","syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"abstract":[{"type":"text","text":"Create a simple web application."}],"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application","type":"section","title":"Extend your Application"},"todos-extend-02.swift":{"type":"file","identifier":"todos-extend-02.swift","highlights":[],"syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift","fileName":"Todos.swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"abstract":[{"text":"Add some functionality to your app","type":"text"}],"role":"project","kind":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","url":"\/tutorials\/hummingbird\/todos-2-api","type":"topic","estimatedTime":"15min","title":"Add your application API"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","abstract":[{"text":"Create a simple web application.","type":"text"}],"estimatedTime":"5min","url":"\/tutorials\/hummingbird\/todos-1-setup","type":"topic","title":"Setup a Hummingbird application.","kind":"project","role":"project"},"todos-extend-06.swift":{"type":"file","identifier":"todos-extend-06.swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}],"syntax":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift","fileName":"Todos.swift"},"todos-setup-02.sh":{"type":"file","identifier":"todos-setup-02.sh","highlights":[],"syntax":"","content":["> swift package init --type tool"],"fileType":"","fileName":"Create Swift Package"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"kind":"section","role":"pseudoSymbol","abstract":[{"text":"Create a simple web application.","type":"text"}],"title":"Setup your project","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","type":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","kind":"article","url":"\/tutorials\/todos\/api-setup","abstract":[],"title":"API Setup","type":"topic","role":"article"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"abstract":[{"text":"Add some functionality to your app","type":"text"}],"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","type":"section","title":"Testing your application with curl"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository","type":"section","title":"Setup a Postgres repository","kind":"section","role":"pseudoSymbol"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","abstract":[],"url":"\/tutorials\/todos\/store-todos-in-a-database","type":"topic","title":"Store Todos in a database","kind":"article","role":"article"},"hummingbird.png":{"variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}],"alt":"Hummingbird logo","type":"image","identifier":"hummingbird.png"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","title":"Setup your project for testing","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing","type":"section","kind":"section","abstract":[{"type":"text","text":"Test your application using the HummingbirdXCT framework"}]},"todos-setup-08.sh":{"fileType":"","content":["> curl localhost:8080"],"highlights":[],"fileName":"Test Application","identifier":"todos-setup-08.sh","type":"file","syntax":""},"todos-setup-03.swift":{"fileType":"swift","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"highlights":[],"fileName":"Package.swift","identifier":"todos-setup-03.swift","type":"file","syntax":"swift"},"todos-setup-07.swift":{"fileType":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"fileName":"Todos.swift","identifier":"todos-setup-07.swift","type":"file","syntax":"swift"},"todos-setup-01.sh":{"type":"file","identifier":"todos-setup-01.sh","highlights":[],"syntax":"","content":["> mkdir Todos","> cd Todos"],"fileType":"","fileName":"Create folder"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","kind":"section","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"title":"Test you application","type":"section","role":"pseudoSymbol"},"todos-setup-04.swift":{"type":"file","identifier":"todos-setup-04.swift","highlights":[{"line":6},{"line":9},{"line":16},{"line":17}],"syntax":"swift","content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", branch: \"2.x.x\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","                .product(name: \"HummingbirdFoundation\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"fileType":"swift","fileName":"Package.swift"},"todos-extend-01.swift":{"fileType":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"highlights":[],"fileName":"Todos.swift","identifier":"todos-extend-01.swift","type":"file","syntax":"swift"}}}