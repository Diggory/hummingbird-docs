{"hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","kind":"task"}]}]}]},"sections":[{"estimatedTimeInMinutes":5,"chapter":"Application setup","image":"hummingbird.png","kind":"hero","backgroundImage":"hummingbird.png","title":"Setup a Hummingbird application.","content":[{"inlineContent":[{"type":"text","text":"Create a simple web application."}],"type":"paragraph"}]},{"tasks":[{"contentSection":[{"content":[{"inlineContent":[{"text":"Create your Package.swift, and add the dependencies your will need.","type":"text"}],"type":"paragraph"}],"media":"hummingbird.png","mediaPosition":"trailing","kind":"contentAndMedia"}],"stepsSection":[{"code":"todos-setup-01.sh","content":[{"inlineContent":[{"type":"text","text":"Create a new folder and enter it."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":null,"caption":[]},{"code":"todos-setup-02.sh","content":[{"inlineContent":[{"text":"Create your swift package.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":null,"caption":[]},{"code":"todos-setup-03.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Open your swift package.","type":"text"}]}],"runtimePreview":null,"type":"step","media":null,"caption":[]},{"code":"todos-setup-04.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Add the Hummingbird package as a dependency and add the the libraries you are going to use to the target. You need HummingbirdFoundation because you need the JSON encoder and decoder.","type":"text"}]}],"runtimePreview":null,"type":"step","media":null,"caption":[]},{"code":"todos-setup-05.swift","content":[{"inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"Sources\/HummingbirdTodos.swift"},{"type":"text","text":"."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":null,"caption":[]},{"code":"todos-setup-06.swift","content":[{"inlineContent":[{"type":"text","text":"Make "},{"code":"HummingbirdTodos","type":"codeVoice"},{"type":"text","text":" conform to "},{"code":"AsyncParsableCommand","type":"codeVoice"},{"type":"text","text":" as Hummingbird requires an async entry point."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":null,"caption":[]},{"code":"todos-setup-07.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an Hummingbird application and add a single route that returns “Hello”."}]}],"runtimePreview":null,"type":"step","media":null,"caption":[]},{"code":"todos-setup-08.sh","content":[{"inlineContent":[{"text":"Run you application and use curl to test it works.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":null,"caption":[]},{"code":"todos-setup-09.sh","content":[{"inlineContent":[{"text":"Congratulations you wrote your first Hummingbird app.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":null,"caption":[]}],"anchor":"Setup-your-project","title":"Setup your project"},{"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Add logging middleware, set up JSON request decoding and reponse encoding and add some commandline parameters to control your application."}],"type":"paragraph"}],"media":"hummingbird.png"}],"stepsSection":[{"runtimePreview":null,"caption":[],"code":"todos-extend-01.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Add logging middleware.","type":"text"}]}],"type":"step","media":null},{"runtimePreview":null,"caption":[],"code":"todos-extend-02.sh","content":[{"inlineContent":[{"text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it.","type":"text"}],"type":"paragraph"}],"type":"step","media":null},{"runtimePreview":null,"caption":[],"code":"todos-extend-03.swift","content":[{"inlineContent":[{"type":"text","text":"Setting up JSON encoding\/decoding requires a custom request context. The request context is the object that is passed along with the request in your route handler. You can set the router to use your own context type as long as it conforms to "},{"type":"codeVoice","code":"HBRequestContext"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"step","media":null},{"runtimePreview":null,"caption":[],"code":"todos-extend-01.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Go back to HummingbirdTodos.swift","type":"text"}]}],"type":"step","media":null},{"runtimePreview":null,"caption":[],"code":"todos-extend-04.swift","content":[{"inlineContent":[{"text":"Set your router to use the new request context.","type":"text"}],"type":"paragraph"}],"type":"step","media":null},{"runtimePreview":null,"caption":[],"code":"todos-extend-05.swift","content":[{"inlineContent":[{"type":"text","text":"Finally we are going to add some commandline parameters. Let’s add server bind address details: hostname and port."}],"type":"paragraph"}],"type":"step","media":null},{"runtimePreview":null,"caption":[],"code":"todos-extend-06.swift","content":[{"inlineContent":[{"text":"Then use those arguments to configure our application.","type":"text"}],"type":"paragraph"}],"type":"step","media":null},{"runtimePreview":null,"caption":[],"code":"todos-extend-07.sh","content":[{"type":"paragraph","inlineContent":[{"text":"Now you can set the bind address of your server from the command line. Now anyone can talk to your application.","type":"text"}]}],"type":"step","media":null}],"anchor":"Extend-your-Application","title":"Extend your Application"}],"kind":"tasks"},{"action":{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"overridingTitle":"Get started"},"abstract":[{"type":"text","text":"Add some functionality to your app"}],"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Add your application API"}],"metadata":{"categoryPathComponent":"Todos","role":"project","category":"Todo backend","title":"Setup a Hummingbird application."},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","interfaceLanguage":"swift"},"variants":[{"paths":["\/tutorials\/hummingbird\/todos-1-setup"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"project","references":{"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"type":"section","title":"Testing your application with curl","abstract":[{"text":"Add some functionality to your app","type":"text"}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"type":"topic","title":"Use PostgresNIO to store your Todos in a Postgres database","estimatedTime":"20min","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"kind":"project","role":"project","url":"\/tutorials\/hummingbird\/todos-4-postgres","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"type":"topic","title":"Store Todos in a database","abstract":[],"kind":"article","role":"article","url":"\/tutorials\/todos\/store-todos-in-a-database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database"},"todos-setup-05.swift":{"type":"file","content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct HummingbirdTodos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"fileName":"HummingbirdTodos.swift","identifier":"todos-setup-05.swift","syntax":"swift","fileType":"swift","highlights":[]},"todos-setup-04.swift":{"type":"file","content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"HummingbirdTodos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", branch: \"2.x.x\"),","    ],","    targets: [","        .executableTarget(","            name: \"HummingbirdTodos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","                .product(name: \"HummingbirdFoundation\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"fileName":"Package.swift","identifier":"todos-setup-04.swift","syntax":"swift","fileType":"swift","highlights":[{"line":6},{"line":9},{"line":16},{"line":17}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"type":"section","title":"Setup your Postgres database","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},"todos-setup-01.sh":{"type":"file","content":["> mkdir HummingbirdTodos","> cd HummingbirdTodos"],"fileName":"Create folder","identifier":"todos-setup-01.sh","syntax":"","fileType":"","highlights":[]},"todos-setup-08.sh":{"type":"file","content":["> curl localhost:8080"],"fileName":"Test Application","identifier":"todos-setup-08.sh","syntax":"","fileType":"","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"type":"section","title":"Test you application","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"type":"topic","title":"Add your application API","estimatedTime":"15min","abstract":[{"text":"Add some functionality to your app","type":"text"}],"kind":"project","role":"project","url":"\/tutorials\/hummingbird\/todos-2-api","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"},"todos-extend-04.swift":{"type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct HummingbirdTodos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter(context: TodoRequestContext.self)","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"fileName":"HummingbirdTodos.swift","identifier":"todos-extend-04.swift","syntax":"swift","fileType":"swift","highlights":[{"line":8}]},"todos-extend-06.swift":{"type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct HummingbirdTodos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        \/\/ create router","        let router = HBRouter(context: TodoRequestContext.self)","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port))","        )","        \/\/ run application","        try await app.runService()","    }","}"],"fileName":"HummingbirdTodos.swift","identifier":"todos-extend-06.swift","syntax":"swift","fileType":"swift","highlights":[{"line":22},{"line":23},{"line":24},{"line":25}]},"hummingbird.png":{"type":"image","alt":"Hummingbird logo","identifier":"hummingbird.png","variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}]},"todos-extend-05.swift":{"type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct HummingbirdTodos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        \/\/ create router","        let router = HBRouter(context: TodoRequestContext.self)","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"fileName":"HummingbirdTodos.swift","identifier":"todos-extend-05.swift","syntax":"swift","fileType":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}]},"todos-extend-01.swift":{"type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct HummingbirdTodos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"fileName":"HummingbirdTodos.swift","identifier":"todos-extend-01.swift","syntax":"swift","fileType":"swift","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"type":"topic","title":"Build a Todos application.","abstract":[{"text":"This is a tutorial showing you how to build a simple Todos application that stores Todos in a database. It follows the API spec of the ","type":"text"},{"identifier":"https:\/\/www.todobackend.com","isActive":true,"type":"reference"},{"text":" project.","type":"text"}],"kind":"overview","role":"overview","url":"\/tutorials\/todos","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"type":"section","title":"Todo Controller and Repository","abstract":[{"text":"Add some functionality to your app","type":"text"}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"type":"topic","title":"Application setup","abstract":[],"kind":"article","role":"article","url":"\/tutorials\/todos\/application-setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"type":"topic","title":"Testing your application","abstract":[],"kind":"article","role":"article","url":"\/tutorials\/todos\/testing-your-application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application"},"todos-extend-03.swift":{"type":"file","content":["import Hummingbird","import HummingbirdFoundation","import Logging","","\/\/\/ Custom request context setting up JSON decoding and encoding","struct TodoRequestContext: HBRequestContext {","    var coreContext: HBCoreRequestContext","","    init(allocator: ByteBufferAllocator, logger: Logger) {","        self.coreContext = .init(","            requestDecoder: JSONDecoder(),","            responseEncoder: JSONEncoder(),","            allocator: allocator,","            logger: logger","        )","    }","}"],"fileName":"TodosRequestContext.swift","identifier":"todos-extend-03.swift","syntax":"swift","fileType":"swift","highlights":[]},"todos-extend-02.sh":{"type":"file","content":["2024-01-06T09:57:00+0100 info HummingBird : [HummingbirdCore] Server started and listening on 127.0.0.1:8080","2024-01-06T09:57:11+0100 info HummingBird : hb_id=10a358b95e11ffc607cbe533cd2baf6a hb_method=GET hb_uri=\/ [Hummingbird] "],"fileName":"Test Application","identifier":"todos-extend-02.sh","syntax":"","fileType":"","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"type":"section","title":"Setup your project for testing","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"type":"section","title":"Setup your project","abstract":[{"text":"Create a simple web application.","type":"text"}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"type":"topic","title":"API Setup","abstract":[],"kind":"article","role":"article","url":"\/tutorials\/todos\/api-setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup"},"todos-setup-03.swift":{"type":"file","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"HummingbirdTodos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"HummingbirdTodos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"fileName":"Package.swift","identifier":"todos-setup-03.swift","syntax":"swift","fileType":"swift","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"type":"topic","title":"Testing your application","estimatedTime":"15min","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"kind":"project","role":"project","url":"\/tutorials\/hummingbird\/todos-3-testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"},"todos-extend-07.sh":{"type":"file","content":["> swift run HummingbirdTodos -p 8081 -h 0.0.0.0"],"fileName":"Test Application","identifier":"todos-extend-07.sh","syntax":"","fileType":"","highlights":[]},"https://www.todobackend.com":{"type":"link","title":"Todo-Backend","titleInlineContent":[{"text":"Todo-Backend","type":"text"}],"identifier":"https:\/\/www.todobackend.com","url":"https:\/\/www.todobackend.com"},"todos-setup-02.sh":{"type":"file","content":["> swift package init --type tool"],"fileName":"Create Swift Package","identifier":"todos-setup-02.sh","syntax":"","fileType":"","highlights":[]},"todos-setup-06.swift":{"type":"file","content":["import ArgumentParser","","@main","struct HummingbirdTodos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"fileName":"HummingbirdTodos.swift","identifier":"todos-setup-06.swift","syntax":"swift","fileType":"swift","highlights":[{"line":4},{"line":5}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"type":"section","title":"Extend your Application","abstract":[{"text":"Create a simple web application.","type":"text"}],"kind":"section","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application"},"todos-setup-07.swift":{"type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct HummingbirdTodos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"fileName":"HummingbirdTodos.swift","identifier":"todos-setup-07.swift","syntax":"swift","fileType":"swift","highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"type":"topic","title":"Setup a Hummingbird application.","estimatedTime":"5min","abstract":[{"text":"Create a simple web application.","type":"text"}],"kind":"project","role":"project","url":"\/tutorials\/hummingbird\/todos-1-setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"todos-setup-09.sh":{"type":"file","content":["> curl localhost:8080","Hello"],"fileName":"Test Applicatoin","identifier":"todos-setup-09.sh","syntax":"","fileType":"","highlights":[]}}}