{"metadata":{"categoryPathComponent":"Todos","role":"project","title":"Setup a Hummingbird application.","category":"Todo backend"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository"}]}]}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"sections":[{"estimatedTimeInMinutes":5,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a simple web application."}]}],"chapter":"Application setup","title":"Setup a Hummingbird application.","kind":"hero","backgroundImage":"hummingbird.png","image":"hummingbird.png"},{"tasks":[{"contentSection":[{"mediaPosition":"trailing","media":"hummingbird.png","kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Create your Package.swift, and add the dependencies your will need."}],"type":"paragraph"}]}],"anchor":"Setup-your-project","stepsSection":[{"media":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Create a new folder and enter it."}],"type":"paragraph"}],"code":"todos-setup-01.sh","runtimePreview":null},{"media":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Create your swift package."}],"type":"paragraph"}],"code":"todos-setup-02.sh","runtimePreview":null},{"media":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Open your swift package."}],"type":"paragraph"}],"code":"todos-setup-03.swift","runtimePreview":null},{"media":null,"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the Hummingbird package as a dependency and add the Hummingbird library to the “Todos” target."}]}],"code":"todos-setup-04.swift","runtimePreview":null},{"media":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"Sources\/Todos.swift"},{"type":"text","text":"."}],"type":"paragraph"}],"code":"todos-setup-05.swift","runtimePreview":null},{"media":null,"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Make ","type":"text"},{"code":"Todos","type":"codeVoice"},{"text":" conform to ","type":"text"},{"code":"AsyncParsableCommand","type":"codeVoice"},{"text":" as Hummingbird requires an async entry point.","type":"text"}]}],"code":"todos-setup-06.swift","runtimePreview":null},{"media":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Create an Hummingbird application and add a single route that returns “Hello”."}],"type":"paragraph"}],"code":"todos-setup-07.swift","runtimePreview":null},{"media":null,"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run you application and use curl to test it works."}]}],"code":"todos-setup-08.sh","runtimePreview":null},{"media":null,"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Congratulations you wrote your first Hummingbird app."}]}],"code":"todos-setup-09.sh","runtimePreview":null}],"title":"Setup your project"},{"contentSection":[{"kind":"contentAndMedia","media":"hummingbird.png","content":[{"inlineContent":[{"text":"Add logging middleware and add some commandline parameters to control your application.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing"}],"anchor":"Extend-your-Application","stepsSection":[{"code":"todos-extend-01.swift","runtimePreview":null,"type":"step","media":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Return to Todos.swift…"}],"type":"paragraph"}]},{"code":"todos-extend-02.swift","runtimePreview":null,"type":"step","media":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"And add logging middleware and a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" to be used by the router. By changing the logger "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" we can control the fidelity of the logging."}],"type":"paragraph"}]},{"code":"todos-extend-03.sh","runtimePreview":null,"type":"step","media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it."}]}]},{"code":"todos-extend-02.swift","runtimePreview":null,"type":"step","media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Go back to Todos.swift","type":"text"}]}]},{"code":"todos-extend-06.swift","runtimePreview":null,"type":"step","media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we are going to add some commandline parameters. Let’s add server bind address details: hostname and port."}]}]},{"code":"todos-extend-07.swift","runtimePreview":null,"type":"step","media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}]}]},{"code":"todos-extend-08.sh","runtimePreview":null,"type":"step","media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Now you can set the bind address of your server from the command line and anyone on your network can talk to your application.","type":"text"}]}]}],"title":"Extend your Application"}],"kind":"tasks"},{"abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Add your application API","featuredEyebrow":"Tutorial","kind":"callToAction","action":{"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"overridingTitle":"Get started","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"}}],"variants":[{"paths":["\/tutorials\/hummingbird\/todos-1-setup"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"project","references":{"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"title":"Setup your project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project","type":"section","role":"pseudoSymbol","abstract":[{"text":"Create a simple web application.","type":"text"}],"kind":"section"},"hummingbird.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/hummingbird.png"}],"type":"image","alt":"Hummingbird logo","identifier":"hummingbird.png"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","title":"Extend your Application","type":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application","abstract":[{"text":"Create a simple web application.","type":"text"}]},"todos-extend-02.swift":{"syntax":"swift","fileName":"Todos.swift","type":"file","content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-02.swift","fileType":"swift","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"url":"\/tutorials\/hummingbird\/todos-4-postgres","kind":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","estimatedTime":"20min","role":"project","type":"topic","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"title":"Use PostgresNIO to store your Todos in a Postgres database"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing","kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"title":"Setup your project for testing"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"title":"Store Todos in a database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","url":"\/tutorials\/todos\/store-todos-in-a-database","type":"topic","role":"article","abstract":[],"kind":"article"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","title":"Todo Controller and Repository","kind":"section","type":"section","abstract":[{"type":"text","text":"Add some functionality to your app"}]},"todos-setup-06.swift":{"syntax":"swift","fileName":"Todos.swift","type":"file","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"identifier":"todos-setup-06.swift","fileType":"swift","highlights":[{"line":4},{"line":5}]},"todos-setup-09.sh":{"syntax":"","fileName":"Test Applicatoin","type":"file","content":["> curl localhost:8080","Hello"],"identifier":"todos-setup-09.sh","fileType":"","highlights":[]},"todos-setup-02.sh":{"syntax":"","fileName":"Create Swift Package","type":"file","content":["> swift package init --type tool"],"identifier":"todos-setup-02.sh","fileType":"","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"type":"topic","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","title":"Application setup","url":"\/tutorials\/todos\/application-setup","abstract":[],"kind":"article"},"todos-extend-06.swift":{"syntax":"swift","fileName":"Todos.swift","type":"file","content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-06.swift","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"url":"\/tutorials\/todos\/testing-your-application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","type":"topic","title":"Testing your application","role":"article","kind":"article","abstract":[]},"todos-extend-01.swift":{"syntax":"swift","fileName":"Todos.swift","type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-01.swift","fileType":"swift","highlights":[]},"todos-setup-01.sh":{"syntax":"","fileName":"Create folder","type":"file","content":["> mkdir Todos","> cd Todos"],"identifier":"todos-setup-01.sh","fileType":"","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"Add some functionality to your app"}],"title":"Testing your application with curl"},"todos-setup-07.swift":{"syntax":"swift","fileName":"Todos.swift","type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-setup-07.swift","fileType":"swift","highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"type":"topic","kind":"overview","role":"overview","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"title":"Build a Todos application.","url":"\/tutorials\/todos","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"todos-setup-05.swift":{"syntax":"swift","fileName":"Todos.swift","type":"file","content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"identifier":"todos-setup-05.swift","fileType":"swift","highlights":[]},"todos-extend-08.sh":{"syntax":"","fileName":"Test Application","type":"file","content":["> swift run Todos -p 8081 -h 0.0.0.0"],"identifier":"todos-extend-08.sh","fileType":"","highlights":[]},"todos-setup-04.swift":{"syntax":"swift","fileName":"Package.swift","type":"file","content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0-alpha.1\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"identifier":"todos-setup-04.swift","fileType":"swift","highlights":[{"line":6},{"line":9},{"line":16}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"abstract":[{"text":"Add some functionality to your app","type":"text"}],"title":"Add your application API","url":"\/tutorials\/hummingbird\/todos-2-api","estimatedTime":"15min","kind":"project","role":"project","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"},"todos-setup-03.swift":{"syntax":"swift","fileName":"Package.swift","type":"file","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"identifier":"todos-setup-03.swift","fileType":"swift","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"estimatedTime":"5min","url":"\/tutorials\/hummingbird\/todos-1-setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","type":"topic","title":"Setup a Hummingbird application.","role":"project","kind":"project","abstract":[{"type":"text","text":"Create a simple web application."}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"role":"pseudoSymbol","type":"section","kind":"section","title":"Test you application"},"todos-extend-03.sh":{"syntax":"","fileName":"Test Application","type":"file","content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "],"identifier":"todos-extend-03.sh","fileType":"","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"title":"Testing your application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","type":"topic","url":"\/tutorials\/hummingbird\/todos-3-testing","role":"project","estimatedTime":"15min","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"kind":"project"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"title":"Setup your Postgres database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","type":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","role":"pseudoSymbol","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"kind":"section"},"todos-extend-07.swift":{"syntax":"swift","fileName":"Todos.swift","type":"file","content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-07.swift","fileType":"swift","highlights":[{"line":25},{"line":26},{"line":27},{"line":28},{"line":29}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"url":"\/tutorials\/todos\/api-setup","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","role":"article","type":"topic","abstract":[],"title":"API Setup"},"todos-setup-08.sh":{"syntax":"","fileName":"Test Application","type":"file","content":["> curl localhost:8080"],"identifier":"todos-setup-08.sh","fileType":"","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","type":"section","title":"Setup a Postgres repository","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]}}}