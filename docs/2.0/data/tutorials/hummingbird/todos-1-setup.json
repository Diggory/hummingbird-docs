{"metadata":{"title":"Setup a Hummingbird application.","categoryPathComponent":"Todos","category":"Todo backend","role":"project"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/hummingbird\/todos-1-setup"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"project","hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","modules":[{"projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application"}]}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"},{"projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"}]}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database"}],"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]]},"sections":[{"backgroundImage":"hummingbird.png","image":"hummingbird.png","title":"Setup a Hummingbird application.","kind":"hero","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a simple web application."}]}],"estimatedTimeInMinutes":5,"chapter":"Application setup"},{"tasks":[{"title":"Setup your project","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Create your Package.swift, and add the dependencies your will need."}],"type":"paragraph"}],"kind":"contentAndMedia","media":"hummingbird.png","mediaPosition":"trailing"}],"stepsSection":[{"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Create a new folder and enter it.","type":"text"}]}],"media":null,"code":"todos-setup-01.sh","runtimePreview":null},{"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create your swift package."}]}],"media":null,"code":"todos-setup-02.sh","runtimePreview":null},{"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Open your swift package."}],"type":"paragraph"}],"media":null,"code":"todos-setup-03.swift","runtimePreview":null},{"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the Hummingbird package as a dependency and add the the libraries you are going to use to the target. You need HummingbirdFoundation because you need the JSON encoder and decoder."}]}],"media":null,"code":"todos-setup-04.swift","runtimePreview":null},{"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"Sources\/Todos.swift"},{"type":"text","text":"."}],"type":"paragraph"}],"media":null,"code":"todos-setup-05.swift","runtimePreview":null},{"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make "},{"code":"Todos","type":"codeVoice"},{"type":"text","text":" conform to "},{"code":"AsyncParsableCommand","type":"codeVoice"},{"type":"text","text":" as Hummingbird requires an async entry point."}]}],"media":null,"code":"todos-setup-06.swift","runtimePreview":null},{"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Create an Hummingbird application and add a single route that returns “Hello”.","type":"text"}]}],"media":null,"code":"todos-setup-07.swift","runtimePreview":null},{"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Run you application and use curl to test it works.","type":"text"}]}],"media":null,"code":"todos-setup-08.sh","runtimePreview":null},{"type":"step","caption":[],"content":[{"inlineContent":[{"text":"Congratulations you wrote your first Hummingbird app.","type":"text"}],"type":"paragraph"}],"media":null,"code":"todos-setup-09.sh","runtimePreview":null}],"anchor":"Setup-your-project"},{"title":"Extend your Application","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","media":"hummingbird.png","content":[{"inlineContent":[{"type":"text","text":"Add logging middleware, set up JSON request decoding and reponse encoding and add some commandline parameters to control your application."}],"type":"paragraph"}]}],"stepsSection":[{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Return to Todos.swift…"}]}],"code":"todos-extend-01.swift"},{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"And add logging middleware and a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" to be used by the application. By changing the logger "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" we can control the fidelity of the logging."}],"type":"paragraph"}],"code":"todos-extend-02.swift"},{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"inlineContent":[{"text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it.","type":"text"}],"type":"paragraph"}],"code":"todos-extend-03.sh"},{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"inlineContent":[{"text":"Setting up JSON encoding\/decoding requires a custom request context. The request context is the object that is passed along with the request in your route and middleware handlers. You can set the router to use your own context type as long as it conforms to ","type":"text"},{"type":"codeVoice","code":"HBRequestContext"},{"text":".","type":"text"}],"type":"paragraph"}],"code":"todos-extend-04.swift"},{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to Todos.swift"}]}],"code":"todos-extend-02.swift"},{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Set your router to use the new request context."}],"type":"paragraph"}],"code":"todos-extend-05.swift"},{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Finally we are going to add some commandline parameters. Let’s add server bind address details: hostname and port."}],"type":"paragraph"}],"code":"todos-extend-06.swift"},{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Then use those arguments to configure our application.","type":"text"}]}],"code":"todos-extend-07.swift"},{"runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Now you can set the bind address of your server from the command line. Now anyone can talk to your application."}],"type":"paragraph"}],"code":"todos-extend-08.sh"}],"anchor":"Extend-your-Application"}],"kind":"tasks"},{"title":"Add your application API","abstract":[{"text":"Add some functionality to your app","type":"text"}],"kind":"callToAction","action":{"overridingTitle":"Get started","type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","isActive":true,"overridingTitleInlineContent":[{"text":"Get started","type":"text"}]},"featuredEyebrow":"Tutorial"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","interfaceLanguage":"swift"},"references":{"todos-setup-01.sh":{"identifier":"todos-setup-01.sh","highlights":[],"content":["> mkdir Todos","> cd Todos"],"type":"file","fileName":"Create folder","fileType":"","syntax":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"title":"Setup your project","kind":"section","type":"section","abstract":[{"type":"text","text":"Create a simple web application."}],"role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project"},"todos-setup-04.swift":{"syntax":"swift","highlights":[{"line":6},{"line":9},{"line":16},{"line":17}],"fileName":"Package.swift","type":"file","identifier":"todos-setup-04.swift","fileType":"swift","content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", branch: \"2.x.x\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","                .product(name: \"HummingbirdFoundation\", package: \"hummingbird\"),","            ]","        ),","    ]",")"]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"type":"topic","url":"\/tutorials\/hummingbird\/todos-4-postgres","estimatedTime":"20min","kind":"project","role":"project","title":"Use PostgresNIO to store your Todos in a Postgres database"},"todos-extend-03.sh":{"syntax":"","highlights":[],"fileName":"Test Application","type":"file","identifier":"todos-extend-03.sh","fileType":"","content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "]},"todos-setup-05.swift":{"syntax":"swift","type":"file","content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"fileType":"swift","fileName":"Todos.swift","identifier":"todos-setup-05.swift","highlights":[]},"todos-setup-09.sh":{"syntax":"","highlights":[],"fileName":"Test Applicatoin","type":"file","identifier":"todos-setup-09.sh","fileType":"","content":["> curl localhost:8080","Hello"]},"todos-extend-08.sh":{"syntax":"","type":"file","content":["> swift run Todos -p 8081 -h 0.0.0.0"],"fileType":"","fileName":"Test Application","identifier":"todos-extend-08.sh","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"title":"Store Todos in a database","kind":"article","type":"topic","abstract":[],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","url":"\/tutorials\/todos\/store-todos-in-a-database"},"todos-extend-05.swift":{"syntax":"swift","highlights":[{"line":10}],"fileName":"Todos.swift","type":"file","identifier":"todos-extend-05.swift","fileType":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter(context: TodoRequestContext.self)","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"title":"API Setup","kind":"article","type":"topic","abstract":[],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","url":"\/tutorials\/todos\/api-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"title":"Test you application","kind":"section","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","type":"section","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application","role":"pseudoSymbol"},"todos-setup-06.swift":{"syntax":"swift","highlights":[{"line":4},{"line":5}],"fileName":"Todos.swift","type":"file","identifier":"todos-setup-06.swift","fileType":"swift","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"]},"todos-setup-08.sh":{"syntax":"","highlights":[],"fileName":"Test Application","type":"file","identifier":"todos-setup-08.sh","fileType":"","content":["> curl localhost:8080"]},"todos-extend-02.swift":{"identifier":"todos-extend-02.swift","highlights":[],"content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter()","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"type":"file","fileName":"Todos.swift","fileType":"swift","syntax":"swift"},"todos-extend-04.swift":{"syntax":"swift","type":"file","fileName":"TodosRequestContext.swift","highlights":[],"fileType":"swift","identifier":"todos-extend-04.swift","content":["import Hummingbird","import HummingbirdFoundation","import Logging","","\/\/\/ Custom request context setting up JSON decoding and encoding","struct TodoRequestContext: HBRequestContext {","    var coreContext: HBCoreRequestContext","","    init(allocator: ByteBufferAllocator, logger: Logger) {","        self.coreContext = .init(","            requestDecoder: JSONDecoder(),","            responseEncoder: JSONEncoder(),","            allocator: allocator,","            logger: logger","        )","    }","}"]},"todos-setup-02.sh":{"identifier":"todos-setup-02.sh","highlights":[],"content":["> swift package init --type tool"],"type":"file","fileName":"Create Swift Package","fileType":"","syntax":""},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","abstract":[{"type":"text","text":"This is a tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"type":"topic","url":"\/tutorials\/todos","kind":"overview","role":"overview","title":"Build a Todos application."},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"title":"Setup your project for testing","kind":"section","type":"section","abstract":[{"type":"text","text":"Test your application using the HummingbirdXCT framework"}],"role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing"},"todos-setup-07.swift":{"identifier":"todos-setup-07.swift","highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"type":"file","fileName":"Todos.swift","fileType":"swift","syntax":"swift"},"hummingbird.png":{"identifier":"hummingbird.png","alt":"Hummingbird logo","type":"image","variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","abstract":[{"type":"text","text":"Test your application using the HummingbirdXCT framework"}],"type":"topic","url":"\/tutorials\/hummingbird\/todos-3-testing","estimatedTime":"15min","kind":"project","role":"project","title":"Testing your application"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"kind":"project","abstract":[{"text":"Add some functionality to your app","type":"text"}],"type":"topic","estimatedTime":"15min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","title":"Add your application API","role":"project","url":"\/tutorials\/hummingbird\/todos-2-api"},"todos-extend-07.swift":{"syntax":"swift","type":"file","fileName":"Todos.swift","highlights":[{"line":24},{"line":25},{"line":26},{"line":27},{"line":28}],"fileType":"swift","identifier":"todos-extend-07.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter(context: TodoRequestContext.self)","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"title":"Setup your Postgres database","kind":"section","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","type":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","role":"pseudoSymbol"},"todos-extend-06.swift":{"syntax":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}],"fileName":"Todos.swift","type":"file","identifier":"todos-extend-06.swift","fileType":"swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = HBRouter(context: TodoRequestContext.self)","        \/\/ add logging middleware","        router.middlewares.add(HBLogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"]},"todos-extend-01.swift":{"syntax":"swift","type":"file","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = HBRouter()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = HBApplication(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"fileType":"swift","fileName":"Todos.swift","identifier":"todos-extend-01.swift","highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"title":"Testing your application","kind":"article","type":"topic","abstract":[],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","url":"\/tutorials\/todos\/testing-your-application"},"todos-setup-03.swift":{"syntax":"swift","highlights":[],"fileName":"Package.swift","type":"file","identifier":"todos-setup-03.swift","fileType":"swift","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"title":"Setup a Postgres repository","kind":"section","type":"section","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"kind":"project","abstract":[{"type":"text","text":"Create a simple web application."}],"type":"topic","estimatedTime":"5min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","title":"Setup a Hummingbird application.","role":"project","url":"\/tutorials\/hummingbird\/todos-1-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"title":"Todo Controller and Repository","kind":"section","type":"section","abstract":[{"type":"text","text":"Add some functionality to your app"}],"role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"title":"Testing your application with curl","kind":"section","type":"section","abstract":[{"type":"text","text":"Add some functionality to your app"}],"role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"title":"Application setup","kind":"article","type":"topic","abstract":[],"role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","url":"\/tutorials\/todos\/application-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"title":"Extend your Application","kind":"section","abstract":[{"text":"Create a simple web application.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","type":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application","role":"pseudoSymbol"}}}