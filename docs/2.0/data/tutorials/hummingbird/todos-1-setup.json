{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/hummingbird\/todos-1-setup"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","modules":[{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"},{"projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl"}]}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup"},{"projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application"},{"projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database"}]},"kind":"project","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[{"title":"Setup a Hummingbird application.","chapter":"Application setup","estimatedTimeInMinutes":5,"kind":"hero","backgroundImage":"hummingbird.png","content":[{"type":"paragraph","inlineContent":[{"text":"Create a simple web application.","type":"text"}]}],"image":"hummingbird.png"},{"kind":"tasks","tasks":[{"stepsSection":[{"caption":[],"runtimePreview":null,"code":"todos-setup-01.sh","type":"step","content":[{"inlineContent":[{"text":"Create a new folder and enter it.","type":"text"}],"type":"paragraph"}],"media":null},{"caption":[],"runtimePreview":null,"code":"todos-setup-02.sh","type":"step","content":[{"inlineContent":[{"type":"text","text":"Create your swift package."}],"type":"paragraph"}],"media":null},{"caption":[],"runtimePreview":null,"code":"todos-setup-03.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Open your swift package.","type":"text"}]}],"media":null},{"caption":[],"runtimePreview":null,"code":"todos-setup-04.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Add the Hummingbird package as a dependency and add the Hummingbird library to the “Todos” target."}],"type":"paragraph"}],"media":null},{"caption":[],"runtimePreview":null,"code":"todos-setup-05.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Open "},{"code":"Sources\/Todos.swift","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"media":null},{"caption":[],"runtimePreview":null,"code":"todos-setup-06.swift","type":"step","content":[{"inlineContent":[{"text":"Make ","type":"text"},{"code":"Todos","type":"codeVoice"},{"text":" conform to ","type":"text"},{"code":"AsyncParsableCommand","type":"codeVoice"},{"text":" as Hummingbird requires an async entry point.","type":"text"}],"type":"paragraph"}],"media":null},{"caption":[],"runtimePreview":null,"code":"todos-setup-07.swift","type":"step","content":[{"inlineContent":[{"text":"Create an Hummingbird application and add a single route that returns “Hello”.","type":"text"}],"type":"paragraph"}],"media":null},{"caption":[],"runtimePreview":null,"code":"todos-setup-08.sh","type":"step","content":[{"inlineContent":[{"text":"Run you application and use curl to test it works.","type":"text"}],"type":"paragraph"}],"media":null},{"caption":[],"runtimePreview":null,"code":"todos-setup-09.sh","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Congratulations you wrote your first Hummingbird app.","type":"text"}]}],"media":null}],"title":"Setup your project","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Create your Package.swift, and add the dependencies your will need.","type":"text"}]}],"media":"hummingbird.png"}],"anchor":"Setup-your-project"},{"stepsSection":[{"runtimePreview":null,"code":"todos-extend-01.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Return to Todos.swift…"}]}],"media":null,"caption":[]},{"runtimePreview":null,"code":"todos-extend-02.swift","type":"step","content":[{"inlineContent":[{"text":"And add logging middleware and a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" to be used by the application. By changing the logger ","type":"text"},{"code":"logLevel","type":"codeVoice"},{"text":" we can control the fidelity of the logging.","type":"text"}],"type":"paragraph"}],"media":null,"caption":[]},{"runtimePreview":null,"code":"todos-extend-03.sh","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the app again and use the same curl command to test it again. The application will output details of every request sent to it."}]}],"media":null,"caption":[]},{"runtimePreview":null,"code":"todos-extend-02.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to Todos.swift"}]}],"media":null,"caption":[]},{"runtimePreview":null,"code":"todos-extend-06.swift","type":"step","content":[{"inlineContent":[{"text":"Now we are going to add some commandline parameters. Let’s add server bind address details: hostname and port.","type":"text"}],"type":"paragraph"}],"media":null,"caption":[]},{"runtimePreview":null,"code":"todos-extend-07.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Then use those arguments to configure our application."}],"type":"paragraph"}],"media":null,"caption":[]},{"runtimePreview":null,"code":"todos-extend-08.sh","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now you can set the bind address of your server from the command line and anyone on your network can talk to your application."}]}],"media":null,"caption":[]}],"title":"Extend your Application","contentSection":[{"mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"Add logging middleware and add some commandline parameters to control your application."}],"type":"paragraph"}],"media":"hummingbird.png","kind":"contentAndMedia"}],"anchor":"Extend-your-Application"}]},{"featuredEyebrow":"Tutorial","title":"Add your application API","abstract":[{"type":"text","text":"Add some functionality to your app"}],"kind":"callToAction","action":{"overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","type":"reference","isActive":true}}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"metadata":{"role":"project","categoryPathComponent":"Todos","title":"Setup a Hummingbird application.","category":"Todo backend"},"references":{"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"title":"Application setup","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","role":"article","type":"topic","kind":"article","url":"\/tutorials\/todos\/application-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"title":"Setup a Hummingbird application.","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","type":"topic","kind":"project","estimatedTime":"5min","role":"project","url":"\/tutorials\/hummingbird\/todos-1-setup","abstract":[{"text":"Create a simple web application.","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"title":"Setup a Postgres repository","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","title":"Testing your application with curl","abstract":[{"type":"text","text":"Add some functionality to your app"}],"kind":"section","type":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","role":"article","url":"\/tutorials\/todos\/api-setup","title":"API Setup","abstract":[],"kind":"article","type":"topic"},"todos-setup-05.swift":{"fileName":"Todos.swift","content":["\/\/ The Swift Programming Language","\/\/ https:\/\/docs.swift.org\/swift-book","\/\/ ","\/\/ Swift Argument Parser","\/\/ https:\/\/swiftpackageindex.com\/apple\/swift-argument-parser\/documentation","","import ArgumentParser","","@main","struct Todos: ParsableCommand {","    mutating func run() throws {","        print(\"Hello, world!\")","    }","}"],"identifier":"todos-setup-05.swift","highlights":[],"fileType":"swift","syntax":"swift","type":"file"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"title":"Testing your application","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","role":"article","type":"topic","kind":"article","url":"\/tutorials\/todos\/testing-your-application"},"todos-setup-09.sh":{"fileName":"Test Applicatoin","content":["> curl localhost:8080","Hello"],"identifier":"todos-setup-09.sh","highlights":[],"fileType":"","syntax":"","type":"file"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Extend-your-Application":{"title":"Extend your Application","abstract":[{"type":"text","text":"Create a simple web application."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Extend-your-Application","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Extend-your-Application"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"title":"Todo Controller and Repository","abstract":[{"type":"text","text":"Add some functionality to your app"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository"},"todos-setup-03.swift":{"fileName":"Package.swift","content":["\/\/ swift-tools-version: 5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","    ],","    targets: [","        \/\/ Targets are the basic building blocks of a package, defining a module or a test suite.","        \/\/ Targets can depend on other targets in this package and products from dependencies.","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","            ]","        ),","    ]",")"],"identifier":"todos-setup-03.swift","highlights":[],"fileType":"swift","syntax":"swift","type":"file"},"todos-extend-01.swift":{"fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-01.swift","highlights":[],"fileType":"swift","syntax":"swift","type":"file"},"todos-setup-07.swift":{"fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        \/\/ create router","        let router = Router()","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-setup-07.swift","highlights":[{"line":2},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16}],"fileType":"swift","syntax":"swift","type":"file"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup#Setup-your-project":{"title":"Setup your project","abstract":[{"type":"text","text":"Create a simple web application."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup#Setup-your-project","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/hummingbird\/todos-1-setup#Setup-your-project"},"todos-extend-08.sh":{"fileName":"Test Application","content":["> swift run Todos -p 8081 -h 0.0.0.0"],"identifier":"todos-extend-08.sh","highlights":[],"fileType":"","syntax":"","type":"file"},"todos-setup-08.sh":{"fileName":"Test Application","content":["> curl localhost:8080"],"identifier":"todos-setup-08.sh","highlights":[],"fileType":"","syntax":"","type":"file"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"type":"topic","role":"overview","kind":"overview","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"title":"Build a Todos application.","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","url":"\/tutorials\/todos"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"title":"Add your application API","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","type":"topic","kind":"project","estimatedTime":"15min","role":"project","url":"\/tutorials\/hummingbird\/todos-2-api","abstract":[{"text":"Add some functionality to your app","type":"text"}]},"todos-setup-01.sh":{"fileName":"Create folder","content":["> mkdir Todos","> cd Todos"],"identifier":"todos-setup-01.sh","highlights":[],"fileType":"","syntax":"","type":"file"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-you-application":{"title":"Test you application","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-you-application","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-you-application"},"todos-extend-02.swift":{"fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-02.swift","highlights":[],"fileType":"swift","syntax":"swift","type":"file"},"todos-extend-03.sh":{"fileName":"Test Application","content":["2024-01-06T09:05:28+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d10934499f hb_method=GET hb_uri=\/ [Hummingbird] ","2024-01-06T09:05:32+0100 info Hummingbird : hb_id=3260dfc24be1cbbaed5c9d1093449a0 hb_method=GET hb_uri=\/todos [Hummingbird] "],"identifier":"todos-extend-03.sh","highlights":[],"fileType":"","syntax":"","type":"file"},"todos-extend-06.swift":{"fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(router: router, logger: logger)","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-06.swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12}],"fileType":"swift","syntax":"swift","type":"file"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"title":"Store Todos in a database","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","role":"article","type":"topic","kind":"article","url":"\/tutorials\/todos\/store-todos-in-a-database"},"todos-setup-04.swift":{"fileType":"swift","type":"file","fileName":"Package.swift","highlights":[{"line":6},{"line":9},{"line":16}],"identifier":"todos-setup-04.swift","content":["\/\/ swift-tools-version: 5.9","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14)],","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.2.0\"),","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0-alpha.1\"),","    ],","    targets: [","        .executableTarget(","            name: \"Todos\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"syntax":"swift"},"todos-setup-06.swift":{"fileType":"swift","type":"file","fileName":"Todos.swift","highlights":[{"line":4},{"line":5}],"identifier":"todos-setup-06.swift","content":["import ArgumentParser","","@main","struct Todos: AsyncParsableCommand {","    func run() async throws {","        print(\"Hello, world!\")","    }","}"],"syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"title":"Use PostgresNIO to store your Todos in a Postgres database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","type":"topic","kind":"project","estimatedTime":"20min","role":"project","url":"\/tutorials\/hummingbird\/todos-4-postgres","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}]},"hummingbird.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/hummingbird.png"}],"identifier":"hummingbird.png","type":"image","alt":"Hummingbird logo"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"title":"Testing your application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","type":"topic","kind":"project","estimatedTime":"15min","role":"project","url":"\/tutorials\/hummingbird\/todos-3-testing","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Setup-your-project-for-testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Setup-your-project-for-testing","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Setup-your-project-for-testing","title":"Setup your project for testing","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"kind":"section","type":"section"},"todos-setup-02.sh":{"fileName":"Create Swift Package","content":["> swift package init --type tool"],"identifier":"todos-setup-02.sh","highlights":[],"fileType":"","syntax":"","type":"file"},"todos-extend-07.swift":{"fileName":"Todos.swift","content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct Todos: AsyncParsableCommand {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    func run() async throws {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = .debug","        \/\/ create router","        let router = Router()","        \/\/ add logging middleware","        router.middlewares.add(LogRequestsMiddleware(.info))","        \/\/ add hello route","        router.get(\"\/\") { request, context in","            \"Hello\\n\"","        }","        \/\/ create application","        let app = Application(","            router: router,","            configuration: .init(address: .hostname(self.hostname, port: self.port)),","            logger: logger","        )","        \/\/ run application","        try await app.runService()","    }","}"],"identifier":"todos-extend-07.swift","highlights":[{"line":25},{"line":26},{"line":27},{"line":28},{"line":29}],"fileType":"swift","syntax":"swift","type":"file"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","title":"Setup your Postgres database","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"kind":"section","type":"section"}}}