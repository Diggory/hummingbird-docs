{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/hummingbird\/todos-1-template"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[{"title":"Create a Hummingbird application.","estimatedTimeInMinutes":5,"backgroundImage":"hummingbird.png","image":"hummingbird.png","chapter":"Application setup","kind":"hero","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a simple web application using the Hummingbird template."}]}]},{"tasks":[{"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Clone the Hummingbird template GitHub project","type":"text"}]}],"type":"step","media":null,"runtimePreview":null,"caption":[],"code":"todos-template-01.sh"},{"content":[{"inlineContent":[{"type":"text","text":"Create your project, using the template configure script. Press return on each question to use the default value."}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null,"caption":[],"code":"todos-template-02.sh"},{"content":[{"inlineContent":[{"type":"text","text":"Now lets review what the template has setup. Open "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null,"caption":[{"inlineContent":[{"text":"You can see if has dependencies for Hummingbird and the Appleâ€™s Argument Parser library.","type":"text"}],"type":"paragraph"}],"code":"todos-template-03.swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"Sources\/App\/App.swift"}]}],"type":"step","media":null,"runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"This contains an ","type":"text"},{"type":"codeVoice","code":"App"},{"text":" type conforming to ","type":"text"},{"type":"codeVoice","code":"AsyncParsableCommand"},{"text":" with three options, the ","type":"text"},{"type":"codeVoice","code":"hostname"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"port"},{"text":" are used to define the server bind address, ","type":"text"},{"type":"codeVoice","code":"logLevel"},{"text":" sets the level of logging required. Finally the ","type":"text"},{"type":"codeVoice","code":"run()"},{"text":" function which calls ","type":"text"},{"type":"codeVoice","code":"buildApplication(_:)"},{"text":" to create an ","type":"text"},{"type":"codeVoice","code":"Application"},{"text":" and then runs it using ","type":"text"},{"type":"codeVoice","code":"runService()"},{"text":". You can find out more about the argument parser library ","type":"text"},{"type":"reference","identifier":"https:\/\/apple.github.io\/swift-argument-parser\/documentation\/argumentparser","isActive":true},{"text":".","type":"text"}]}],"code":"todos-template-04.swift"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Open ","type":"text"},{"type":"codeVoice","code":"Sources\/App\/Application+build.swift"},{"text":" to find the `buildApplication(_:) function.","type":"text"}]}],"type":"step","media":null,"runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"Here we create a ","type":"text"},{"type":"codeVoice","code":"Logger"},{"text":" with log level set by either the command line argument mentioned above, or the environment variable ","type":"text"},{"type":"codeVoice","code":"LOG_LEVEL"},{"text":". We then call a function ","type":"text"},{"type":"codeVoice","code":"buildRouter()"},{"text":" and use the result of that to create our ","type":"text"},{"type":"codeVoice","code":"Application"},{"text":".","type":"text"}]}],"code":"todos-template-05.swift"},{"content":[{"inlineContent":[{"text":"If we look further down the file we can find the ","type":"text"},{"type":"codeVoice","code":"buildRouter()"},{"text":" function.","type":"text"}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null,"caption":[{"inlineContent":[{"text":"Here we create the ","type":"text"},{"code":"Router","type":"codeVoice"},{"text":". We add a logging middleware to it (this logs all requests to the router). The function uses a result builder to create a stack of middleware, but you can also use ","type":"text"},{"code":"Router.add(middleware:)","type":"codeVoice"},{"text":" to add individual middleware. Finally we add a single endpoint GET ","type":"text"},{"code":"\/health","type":"codeVoice"},{"text":" which returns a 200 (Ok) response.","type":"text"}],"type":"paragraph"}],"code":"todos-template-06.swift"},{"content":[{"inlineContent":[{"text":"We can run this application and use curl to test it works.","type":"text"}],"type":"paragraph"}],"type":"step","media":null,"runtimePreview":null,"caption":[],"code":"todos-template-07.sh"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Now we have a running server, lets add some functionality to it.","type":"text"}]}],"type":"step","media":null,"runtimePreview":null,"caption":[],"code":"todos-template-08.sh"}],"title":"Create your project","anchor":"Create-your-project","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Clone the Hummingbird template, configure a project and review the contents of the generated project."}]}],"media":"hummingbird.png","kind":"contentAndMedia","mediaPosition":"trailing"}]}],"kind":"tasks"},{"abstract":[{"type":"text","text":"Add some functionality to your application."}],"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","type":"reference","isActive":true,"overridingTitle":"Get started"},"title":"Add your application API","featuredEyebrow":"Tutorial","kind":"callToAction"}],"hierarchy":{"modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template#Create-your-project"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","kind":"task"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Project-testing-setup","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-your-application","kind":"task"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}]}],"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"metadata":{"categoryPathComponent":"Todos","category":"Todo backend","title":"Create a Hummingbird application.","role":"project"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template","interfaceLanguage":"swift"},"kind":"project","references":{"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"title":"Build a Todos application.","kind":"overview","url":"\/tutorials\/todos","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"role":"overview","type":"topic"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"title":"Todo Controller and Repository","kind":"section","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","abstract":[{"text":"Add some functionality to your application.","type":"text"}],"role":"pseudoSymbol","type":"section"},"todos-template-06.swift":{"highlights":[],"content":["\/\/\/ Build router","func buildRouter() -> Router<AppRequestContext> {","    let router = Router(context: AppRequestContext.self)","    \/\/ Add middleware","    router.addMiddleware {","        \/\/ logging middleware","        LogRequestsMiddleware(.info)","    }","    \/\/ Add health endpoint","    router.get(\"\/health\") { _, _ -> HTTPResponse.Status in","        return .ok","    }","    return router","}"],"syntax":"swift","identifier":"todos-template-06.swift","type":"file","fileName":"buildRouter() - Sources\/App\/Application+build.swift","fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"title":"Use PostgresNIO to store your Todos in a Postgres database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","url":"\/tutorials\/hummingbird\/todos-4-postgres","kind":"project","type":"topic","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"estimatedTime":"15min","role":"project"},"todos-template-07.sh":{"highlights":[],"content":["> curl -i localhost:8080\/health"],"syntax":"","identifier":"todos-template-07.sh","type":"file","fileName":"Test Application","fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Template#Create-your-project":{"title":"Create your project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template#Create-your-project","url":"\/tutorials\/hummingbird\/todos-1-template#Create-your-project","kind":"section","type":"section","abstract":[{"text":"Create a simple web application using the Hummingbird template.","type":"text"}],"role":"pseudoSymbol"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"title":"Testing your application","kind":"project","estimatedTime":"15min","url":"\/tutorials\/hummingbird\/todos-3-testing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"role":"project","type":"topic"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-your-application":{"url":"\/tutorials\/hummingbird\/todos-3-testing#Test-your-application","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-your-application","title":"Test your application","role":"pseudoSymbol","type":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Project-testing-setup":{"title":"Project testing setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Project-testing-setup","url":"\/tutorials\/hummingbird\/todos-3-testing#Project-testing-setup","kind":"section","type":"section","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"role":"pseudoSymbol"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"title":"Store Todos in a database","kind":"article","url":"\/tutorials\/todos\/store-todos-in-a-database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","abstract":[],"role":"article","type":"topic"},"todos-template-03.swift":{"highlights":[],"content":["\/\/ swift-tools-version:5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14), .iOS(.v17), .tvOS(.v17)],","    products: [","        .executable(name: \"App\", targets: [\"App\"]),","    ],","    dependencies: [","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0\"),","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.3.0\"),","    ],","    targets: [","        .executableTarget(","            name: \"App\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","            ]","        ),","        .testTarget(","            name: \"AppTests\",","            dependencies: [","                .byName(name: \"App\"),","                .product(name: \"HummingbirdTesting\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"syntax":"swift","identifier":"todos-template-03.swift","type":"file","fileName":"Package.swift","fileType":"swift"},"todos-template-01.sh":{"highlights":[],"content":["> git clone https:\/\/github.com\/hummingbird-project\/template"],"syntax":"","identifier":"todos-template-01.sh","type":"file","fileName":"Clone template","fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"title":"API Setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","url":"\/tutorials\/todos\/api-setup","kind":"article","type":"topic","abstract":[],"role":"article"},"todos-template-04.swift":{"highlights":[],"content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct App: AsyncParsableCommand, AppArguments {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    @Option(name: .shortAndLong)","    var logLevel: Logger.Level?","","    func run() async throws {","        let app = try await buildApplication(self)","        try await app.runService()","    }","}","","\/\/\/ Extend `Logger.Level` so it can be used as an argument","#if hasFeature(RetroactiveAttribute)","    extension Logger.Level: @retroactive ExpressibleByArgument {}","#else","    extension Logger.Level: ExpressibleByArgument {}","#endif"],"syntax":"swift","identifier":"todos-template-04.swift","type":"file","fileName":"Sources\/App\/App.swift","fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"title":"Testing your application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","url":"\/tutorials\/todos\/testing-your-application","kind":"article","type":"topic","abstract":[],"role":"article"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"type":"section","title":"Setup your Postgres database","role":"pseudoSymbol","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","kind":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database"},"todos-template-05.swift":{"highlights":[],"content":["\/\/\/  Build application","\/\/\/ - Parameter arguments: application arguments","public func buildApplication(_ arguments: some AppArguments) async throws -> some ApplicationProtocol {","    let environment = Environment()","    let logger = {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = ","            arguments.logLevel ??","            environment.get(\"LOG_LEVEL\").map { Logger.Level(rawValue: $0) ?? .info } ??","            .info","        return logger","    }()","    let router = buildRouter()","    let app = Application(","        router: router,","        configuration: .init(","            address: .hostname(arguments.hostname, port: arguments.port),","            serverName: \"Todos\"","        ),","        logger: logger","    )","    return app","}"],"syntax":"swift","identifier":"todos-template-05.swift","type":"file","fileName":"buildApplication() - Sources\/App\/Application+build.swift","fileType":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"title":"Add your application API","estimatedTime":"20min","kind":"project","type":"topic","role":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","url":"\/tutorials\/hummingbird\/todos-2-api","abstract":[{"type":"text","text":"Add some functionality to your application."}]},"https://apple.github.io/swift-argument-parser/documentation/argumentparser":{"titleInlineContent":[{"type":"text","text":"here"}],"url":"https:\/\/apple.github.io\/swift-argument-parser\/documentation\/argumentparser","title":"here","identifier":"https:\/\/apple.github.io\/swift-argument-parser\/documentation\/argumentparser","type":"link"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"title":"Testing your application with curl","kind":"section","url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","abstract":[{"text":"Add some functionality to your application.","type":"text"}],"role":"pseudoSymbol","type":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"type":"section","title":"Setup a Postgres repository","role":"pseudoSymbol","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","kind":"section","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"title":"Application setup","kind":"article","url":"\/tutorials\/todos\/application-setup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","abstract":[],"role":"article","type":"topic"},"todos-template-08.sh":{"highlights":[{"line":2},{"line":3},{"line":4},{"line":5},{"line":6}],"content":["> curl -i localhost:8080\/health","HTTP\/1.1 200 OK","Content-Length: 0","Date: Fri, 6 Sep 2024 10:32:02 GMT","Server: Todos",""],"syntax":"","identifier":"todos-template-08.sh","type":"file","fileName":"Test Application","fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Template":{"title":"Create a Hummingbird application.","kind":"project","estimatedTime":"5min","url":"\/tutorials\/hummingbird\/todos-1-template","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template","abstract":[{"text":"Create a simple web application using the Hummingbird template.","type":"text"}],"role":"project","type":"topic"},"hummingbird.png":{"variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}],"alt":"Hummingbird logo","identifier":"hummingbird.png","type":"image"},"todos-template-02.sh":{"highlights":[],"content":["> .\/template\/configure.sh Todos","Enter your package name: [Todos] > ","Enter your executable name: [App] > ","Include Visual Studio Code snippets: [Y\/n] > "],"syntax":"","identifier":"todos-template-02.sh","type":"file","fileName":"Create Swift Package","fileType":""}}}