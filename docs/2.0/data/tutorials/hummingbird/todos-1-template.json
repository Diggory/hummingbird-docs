{"kind":"project","sections":[{"content":[{"inlineContent":[{"type":"text","text":"Create a simple web application using the Hummingbird template."}],"type":"paragraph"}],"kind":"hero","estimatedTimeInMinutes":5,"title":"Create a Hummingbird application.","image":"hummingbird.png","backgroundImage":"hummingbird.png","chapter":"Application setup"},{"kind":"tasks","tasks":[{"title":"Create your project","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Clone the Hummingbird template, configure a project and review the contents of the generated project."}],"type":"paragraph"}],"media":"hummingbird.png","mediaPosition":"trailing","kind":"contentAndMedia"}],"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Clone the Hummingbird template GitHub project"}]}],"type":"step","media":null,"caption":[],"code":"todos-template-01.sh","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create your project, using the template configure script. Press return on each question to use the default value."}]}],"type":"step","media":null,"caption":[],"code":"todos-template-02.sh","runtimePreview":null},{"content":[{"inlineContent":[{"type":"text","text":"Now lets review what the template has setup. Open "},{"code":"Package.swift","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"step","media":null,"caption":[{"inlineContent":[{"type":"text","text":"You can see if has dependencies for Hummingbird and the Appleâ€™s Argument Parser library."}],"type":"paragraph"}],"code":"todos-template-03.swift","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"Sources\/App\/App.swift"}]}],"type":"step","media":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This contains an "},{"code":"App","type":"codeVoice"},{"type":"text","text":" type conforming to "},{"code":"AsyncParsableCommand","type":"codeVoice"},{"type":"text","text":" with three options, the "},{"code":"hostname","type":"codeVoice"},{"type":"text","text":" and "},{"code":"port","type":"codeVoice"},{"type":"text","text":" are used to define the server bind address, "},{"code":"logLevel","type":"codeVoice"},{"type":"text","text":" sets the level of logging required. Finally the "},{"code":"run()","type":"codeVoice"},{"type":"text","text":" function which calls "},{"code":"buildApplication(_:)","type":"codeVoice"},{"type":"text","text":" to create an "},{"code":"Application","type":"codeVoice"},{"type":"text","text":" and then runs it using "},{"code":"runService()","type":"codeVoice"},{"type":"text","text":". You can find out more about the argument parser library "},{"identifier":"https:\/\/apple.github.io\/swift-argument-parser\/documentation\/argumentparser","type":"reference","isActive":true},{"type":"text","text":"."}]}],"code":"todos-template-04.swift","runtimePreview":null},{"content":[{"inlineContent":[{"type":"text","text":"Open "},{"code":"Sources\/App\/Application+build.swift","type":"codeVoice"},{"type":"text","text":" to find the `buildApplication(_:) function."}],"type":"paragraph"}],"type":"step","media":null,"caption":[{"inlineContent":[{"type":"text","text":"Here we create a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" with log level set by either the command line argument mentioned above, or the environment variable "},{"type":"codeVoice","code":"LOG_LEVEL"},{"type":"text","text":". We then call a function "},{"type":"codeVoice","code":"buildRouter()"},{"type":"text","text":" and use the result of that to create our "},{"type":"codeVoice","code":"Application"},{"type":"text","text":"."}],"type":"paragraph"}],"code":"todos-template-05.swift","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If we look further down the file we can find the "},{"type":"codeVoice","code":"buildRouter()"},{"type":"text","text":" function."}]}],"type":"step","media":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Here we create the "},{"code":"Router","type":"codeVoice"},{"type":"text","text":". We add a logging middleware to it (this logs all requests to the router). The function uses a result builder to create a stack of middleware, but you can also use "},{"code":"Router.add(middleware:)","type":"codeVoice"},{"type":"text","text":" to add individual middleware. Finally we add a single endpoint GET "},{"code":"\/health","type":"codeVoice"},{"type":"text","text":" which returns a 200 (Ok) response."}]}],"code":"todos-template-06.swift","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"We can run this application and use curl to test it works.","type":"text"}]}],"type":"step","media":null,"caption":[],"code":"todos-template-07.sh","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we have a running server, lets add some functionality to it."}]}],"type":"step","media":null,"caption":[],"code":"todos-template-08.sh","runtimePreview":null}],"anchor":"Create-your-project"}]},{"action":{"isActive":true,"type":"reference","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"overridingTitle":"Get started","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"},"kind":"callToAction","featuredEyebrow":"Tutorial","title":"Add your application API","abstract":[{"type":"text","text":"Add some functionality to your application."}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/hummingbird\/todos-1-template"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"project","category":"Todo backend","title":"Create a Hummingbird application.","categoryPathComponent":"Todos"},"hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","modules":[{"projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template#Create-your-project","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"},{"projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","kind":"task"}]}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup"},{"projects":[{"sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Project-testing-setup","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-your-application","kind":"task"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database"}],"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]]},"references":{"todos-template-03.swift":{"fileName":"Package.swift","identifier":"todos-template-03.swift","highlights":[],"type":"file","fileType":"swift","content":["\/\/ swift-tools-version:5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14), .iOS(.v17), .tvOS(.v17)],","    products: [","        .executable(name: \"App\", targets: [\"App\"]),","    ],","    dependencies: [","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0\"),","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.3.0\"),","    ],","    targets: [","        .executableTarget(","            name: \"App\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","            ]","        ),","        .testTarget(","            name: \"AppTests\",","            dependencies: [","                .byName(name: \"App\"),","                .product(name: \"HummingbirdTesting\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"url":"\/tutorials\/hummingbird\/todos-4-postgres","role":"project","estimatedTime":"15min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","kind":"project","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"type":"topic","title":"Use PostgresNIO to store your Todos in a Postgres database"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"type":"topic","title":"Testing your application","kind":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","url":"\/tutorials\/hummingbird\/todos-3-testing","estimatedTime":"15min","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"role":"project"},"todos-template-01.sh":{"syntax":"","type":"file","fileType":"","identifier":"todos-template-01.sh","fileName":"Clone template","content":["> git clone https:\/\/github.com\/hummingbird-project\/template"],"highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"title":"Application setup","type":"topic","abstract":[],"kind":"article","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","url":"\/tutorials\/todos\/application-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"url":"\/tutorials\/todos\/store-todos-in-a-database","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","kind":"article","abstract":[],"type":"topic","title":"Store Todos in a database"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"title":"Setup a Postgres repository","type":"section","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"url":"\/tutorials\/todos\/api-setup","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","kind":"article","abstract":[],"type":"topic","title":"API Setup"},"https://apple.github.io/swift-argument-parser/documentation/argumentparser":{"titleInlineContent":[{"type":"text","text":"here"}],"url":"https:\/\/apple.github.io\/swift-argument-parser\/documentation\/argumentparser","type":"link","identifier":"https:\/\/apple.github.io\/swift-argument-parser\/documentation\/argumentparser","title":"here"},"todos-template-07.sh":{"syntax":"","type":"file","fileType":"","identifier":"todos-template-07.sh","fileName":"Test Application","content":["> curl -i localhost:8080\/health"],"highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"url":"\/tutorials\/todos","role":"overview","title":"Build a Todos application.","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","kind":"overview","type":"topic"},"todos-template-04.swift":{"syntax":"swift","type":"file","fileType":"swift","identifier":"todos-template-04.swift","fileName":"Sources\/App\/App.swift","content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct App: AsyncParsableCommand, AppArguments {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    @Option(name: .shortAndLong)","    var logLevel: Logger.Level?","","    func run() async throws {","        let app = try await buildApplication(self)","        try await app.runService()","    }","}","","\/\/\/ Extend `Logger.Level` so it can be used as an argument","#if hasFeature(RetroactiveAttribute)","    extension Logger.Level: @retroactive ExpressibleByArgument {}","#else","    extension Logger.Level: ExpressibleByArgument {}","#endif"],"highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"type":"section","title":"Setup your Postgres database","kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"role":"pseudoSymbol"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Template":{"url":"\/tutorials\/hummingbird\/todos-1-template","role":"project","estimatedTime":"5min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template","kind":"project","abstract":[{"type":"text","text":"Create a simple web application using the Hummingbird template."}],"type":"topic","title":"Create a Hummingbird application."},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"type":"section","title":"Todo Controller and Repository","kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","abstract":[{"text":"Add some functionality to your application.","type":"text"}],"role":"pseudoSymbol"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-your-application":{"type":"section","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"kind":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-your-application","role":"pseudoSymbol","title":"Test your application","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-your-application"},"todos-template-02.sh":{"syntax":"","type":"file","fileType":"","identifier":"todos-template-02.sh","fileName":"Create Swift Package","content":["> .\/template\/configure.sh Todos","Enter your package name: [Todos] > ","Enter your executable name: [App] > ","Include Visual Studio Code snippets: [Y\/n] > "],"highlights":[]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","kind":"section","abstract":[{"type":"text","text":"Add some functionality to your application."}],"type":"section","title":"Testing your application with curl"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Project-testing-setup":{"url":"\/tutorials\/hummingbird\/todos-3-testing#Project-testing-setup","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Project-testing-setup","kind":"section","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"type":"section","title":"Project testing setup"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"type":"topic","title":"Add your application API","kind":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","url":"\/tutorials\/hummingbird\/todos-2-api","estimatedTime":"20min","abstract":[{"text":"Add some functionality to your application.","type":"text"}],"role":"project"},"todos-template-06.swift":{"syntax":"swift","type":"file","fileType":"swift","identifier":"todos-template-06.swift","fileName":"buildRouter() - Sources\/App\/Application+build.swift","content":["\/\/\/ Build router","func buildRouter() -> Router<AppRequestContext> {","    let router = Router(context: AppRequestContext.self)","    \/\/ Add middleware","    router.addMiddleware {","        \/\/ logging middleware","        LogRequestsMiddleware(.info)","    }","    \/\/ Add health endpoint","    router.get(\"\/health\") { _, _ -> HTTPResponse.Status in","        return .ok","    }","    return router","}"],"highlights":[]},"hummingbird.png":{"type":"image","alt":"Hummingbird logo","identifier":"hummingbird.png","variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"title":"Testing your application","type":"topic","abstract":[],"kind":"article","role":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","url":"\/tutorials\/todos\/testing-your-application"},"todos-template-05.swift":{"syntax":"swift","type":"file","fileType":"swift","identifier":"todos-template-05.swift","fileName":"buildApplication() - Sources\/App\/Application+build.swift","content":["\/\/\/  Build application","\/\/\/ - Parameter arguments: application arguments","public func buildApplication(_ arguments: some AppArguments) async throws -> some ApplicationProtocol {","    let environment = Environment()","    let logger = {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = ","            arguments.logLevel ??","            environment.get(\"LOG_LEVEL\").map { Logger.Level(rawValue: $0) ?? .info } ??","            .info","        return logger","    }()","    let router = buildRouter()","    let app = Application(","        router: router,","        configuration: .init(","            address: .hostname(arguments.hostname, port: arguments.port),","            serverName: \"Todos\"","        ),","        logger: logger","    )","    return app","}"],"highlights":[]},"todos-template-08.sh":{"syntax":"","type":"file","fileType":"","identifier":"todos-template-08.sh","fileName":"Test Application","content":["> curl -i localhost:8080\/health","HTTP\/1.1 200 OK","Content-Length: 0","Date: Fri, 6 Sep 2024 10:32:02 GMT","Server: Todos",""],"highlights":[{"line":2},{"line":3},{"line":4},{"line":5},{"line":6}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Template#Create-your-project":{"url":"\/tutorials\/hummingbird\/todos-1-template#Create-your-project","role":"pseudoSymbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template#Create-your-project","kind":"section","abstract":[{"type":"text","text":"Create a simple web application using the Hummingbird template."}],"type":"section","title":"Create your project"}}}