{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template","interfaceLanguage":"swift"},"metadata":{"role":"project","category":"Todo backend","categoryPathComponent":"Todos","title":"Create a Hummingbird application."},"sections":[{"image":"hummingbird.png","chapter":"Application setup","backgroundImage":"hummingbird.png","kind":"hero","content":[{"inlineContent":[{"type":"text","text":"Create a simple web application using the Hummingbird template."}],"type":"paragraph"}],"estimatedTimeInMinutes":5,"title":"Create a Hummingbird application."},{"kind":"tasks","tasks":[{"contentSection":[{"mediaPosition":"trailing","media":"hummingbird.png","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Clone the Hummingbird template, configure a project and review the contents of the generated project.","type":"text"}]}]}],"stepsSection":[{"media":null,"code":"todos-template-01.sh","runtimePreview":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Clone the Hummingbird template GitHub project","type":"text"}]}]},{"media":null,"code":"todos-template-02.sh","runtimePreview":null,"caption":[],"type":"step","content":[{"inlineContent":[{"text":"Create your project, using the template configure script. Press return on each question to use the default value.","type":"text"}],"type":"paragraph"}]},{"media":null,"code":"todos-template-03.swift","runtimePreview":null,"caption":[{"inlineContent":[{"text":"You can see if has dependencies for Hummingbird and the Appleâ€™s Argument Parser library.","type":"text"}],"type":"paragraph"}],"type":"step","content":[{"inlineContent":[{"type":"text","text":"Now lets review what the template has setup. Open "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":"."}],"type":"paragraph"}]},{"media":null,"code":"todos-template-04.swift","runtimePreview":null,"caption":[{"inlineContent":[{"type":"text","text":"This contains an "},{"type":"codeVoice","code":"App"},{"type":"text","text":" type conforming to "},{"type":"codeVoice","code":"AsyncParsableCommand"},{"type":"text","text":" with three options, the "},{"type":"codeVoice","code":"hostname"},{"type":"text","text":" and "},{"type":"codeVoice","code":"port"},{"type":"text","text":" are used to define the server bind address, "},{"type":"codeVoice","code":"logLevel"},{"type":"text","text":" sets the level of logging required. Finally the "},{"type":"codeVoice","code":"run()"},{"type":"text","text":" function which calls "},{"type":"codeVoice","code":"buildApplication(_:)"},{"type":"text","text":" to create an "},{"type":"codeVoice","code":"Application"},{"type":"text","text":" and then runs it using "},{"type":"codeVoice","code":"runService()"},{"type":"text","text":". You can find out more about the argument parser library "},{"type":"reference","identifier":"https:\/\/apple.github.io\/swift-argument-parser\/documentation\/argumentparser","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"type":"step","content":[{"inlineContent":[{"text":"Open ","type":"text"},{"code":"Sources\/App\/App.swift","type":"codeVoice"}],"type":"paragraph"}]},{"media":null,"code":"todos-template-05.swift","runtimePreview":null,"caption":[{"inlineContent":[{"type":"text","text":"Here we create a "},{"type":"codeVoice","code":"Logger"},{"type":"text","text":" with log level set by either the command line argument mentioned above, or the environment variable "},{"type":"codeVoice","code":"LOG_LEVEL"},{"type":"text","text":". We then call a function "},{"type":"codeVoice","code":"buildRouter()"},{"type":"text","text":" and use the result of that to create our "},{"type":"codeVoice","code":"Application"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"step","content":[{"inlineContent":[{"text":"Open ","type":"text"},{"code":"Sources\/App\/Application+build.swift","type":"codeVoice"},{"text":" to find the `buildApplication(_:) function.","type":"text"}],"type":"paragraph"}]},{"media":null,"code":"todos-template-06.swift","runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Here we create the "},{"code":"Router","type":"codeVoice"},{"type":"text","text":". We add a logging middleware to it (this logs all requests to the router). The function uses a result builder to create a stack of middleware, but you can also use "},{"code":"Router.add(middleware:)","type":"codeVoice"},{"type":"text","text":" to add individual middleware. Finally we add a single endpoint GET "},{"code":"\/health","type":"codeVoice"},{"type":"text","text":" which returns a 200 (Ok) response."}]}],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If we look further down the file we can find the "},{"code":"buildRouter()","type":"codeVoice"},{"type":"text","text":" function."}]}]},{"media":null,"code":"todos-template-07.sh","runtimePreview":null,"caption":[],"type":"step","content":[{"inlineContent":[{"type":"text","text":"We can run this application and use curl to test it works."}],"type":"paragraph"}]},{"media":null,"code":"todos-template-08.sh","runtimePreview":null,"caption":[],"type":"step","content":[{"inlineContent":[{"type":"text","text":"Now we have a running server, lets add some functionality to it."}],"type":"paragraph"}]}],"title":"Create your project","anchor":"Create-your-project"}]},{"action":{"isActive":true,"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"overridingTitle":"Get started","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"},"featuredEyebrow":"Tutorial","abstract":[{"text":"Add some functionality to your application.","type":"text"}],"kind":"callToAction","title":"Add your application API"}],"kind":"project","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","modules":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template#Create-your-project","kind":"task"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","projects":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","sections":[{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","kind":"task"},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","kind":"task"}]}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Project-testing-setup"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-your-application"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"}]},{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database"},{"kind":"task","reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository"}],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"}]}],"paths":[["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/$volume","doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/hummingbird\/todos-1-template"]}],"references":{"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"kind":"project","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","title":"Testing your application","estimatedTime":"15min","role":"project","url":"\/tutorials\/hummingbird\/todos-3-testing","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Test-your-application":{"kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Test-your-application","title":"Test your application","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-3-testing#Test-your-application","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Todo-Controller-and-Repository":{"kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Todo-Controller-and-Repository","title":"Todo Controller and Repository","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-2-api#Todo-Controller-and-Repository","abstract":[{"type":"text","text":"Add some functionality to your application."}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Store-Todos-in-a-database":{"kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Store-Todos-in-a-database","title":"Store Todos in a database","role":"article","url":"\/tutorials\/todos\/store-todos-in-a-database","abstract":[]},"todos-template-02.sh":{"highlights":[],"fileType":"","identifier":"todos-template-02.sh","type":"file","fileName":"Create Swift Package","content":["> .\/template\/configure.sh Todos","Enter your package name: [Todos] > ","Enter your executable name: [App] > ","Include Visual Studio Code snippets: [Y\/n] > "],"syntax":""},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"role":"overview","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"url":"\/tutorials\/todos","title":"Build a Todos application.","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","kind":"overview"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Application-setup":{"role":"article","abstract":[],"url":"\/tutorials\/todos\/application-setup","title":"Application setup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Application-setup","kind":"article"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-your-Postgres-database":{"kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-your-Postgres-database","title":"Setup your Postgres database","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-your-Postgres-database","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos/Testing-your-application":{"role":"article","abstract":[],"url":"\/tutorials\/todos\/testing-your-application","title":"Testing your application","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/Testing-your-application","kind":"article"},"doc://com.opticalaberration.hummingbird/tutorials/Todos/API-Setup":{"role":"article","abstract":[],"url":"\/tutorials\/todos\/api-setup","title":"API Setup","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos\/API-Setup","kind":"article"},"todos-template-06.swift":{"highlights":[],"fileType":"swift","identifier":"todos-template-06.swift","type":"file","fileName":"buildRouter() - Sources\/App\/Application+build.swift","content":["\/\/\/ Build router","func buildRouter() -> Router<AppRequestContext> {","    let router = Router(context: AppRequestContext.self)","    \/\/ Add middleware","    router.addMiddleware {","        \/\/ logging middleware","        LogRequestsMiddleware(.info)","    }","    \/\/ Add health endpoint","    router.get(\"\/health\") { _, _ -> HTTPResponse.Status in","        return .ok","    }","    return router","}"],"syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Template":{"role":"project","abstract":[{"type":"text","text":"Create a simple web application using the Hummingbird template."}],"url":"\/tutorials\/hummingbird\/todos-1-template","title":"Create a Hummingbird application.","type":"topic","estimatedTime":"5min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template","kind":"project"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"kind":"project","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","title":"Use PostgresNIO to store your Todos in a Postgres database","estimatedTime":"15min","role":"project","url":"\/tutorials\/hummingbird\/todos-4-postgres","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]},"todos-template-04.swift":{"highlights":[],"fileType":"swift","identifier":"todos-template-04.swift","type":"file","fileName":"Sources\/App\/App.swift","content":["import ArgumentParser","import Hummingbird","import Logging","","@main","struct App: AsyncParsableCommand, AppArguments {","    @Option(name: .shortAndLong)","    var hostname: String = \"127.0.0.1\"","","    @Option(name: .shortAndLong)","    var port: Int = 8080","","    @Option(name: .shortAndLong)","    var logLevel: Logger.Level?","","    func run() async throws {","        let app = try await buildApplication(self)","        try await app.runService()","    }","}","","\/\/\/ Extend `Logger.Level` so it can be used as an argument","#if hasFeature(RetroactiveAttribute)","    extension Logger.Level: @retroactive ExpressibleByArgument {}","#else","    extension Logger.Level: ExpressibleByArgument {}","#endif"],"syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API#Testing-your-application-with-curl":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Add some functionality to your application."}],"url":"\/tutorials\/hummingbird\/todos-2-api#Testing-your-application-with-curl","title":"Testing your application with curl","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API#Testing-your-application-with-curl","kind":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing#Project-testing-setup":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"url":"\/tutorials\/hummingbird\/todos-3-testing#Project-testing-setup","title":"Project testing setup","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing#Project-testing-setup","kind":"section"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres#Setup-a-Postgres-repository":{"kind":"section","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres#Setup-a-Postgres-repository","title":"Setup a Postgres repository","role":"pseudoSymbol","url":"\/tutorials\/hummingbird\/todos-4-postgres#Setup-a-Postgres-repository","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]},"todos-template-05.swift":{"highlights":[],"fileType":"swift","identifier":"todos-template-05.swift","type":"file","fileName":"buildApplication() - Sources\/App\/Application+build.swift","content":["\/\/\/  Build application","\/\/\/ - Parameter arguments: application arguments","public func buildApplication(_ arguments: some AppArguments) async throws -> some ApplicationProtocol {","    let environment = Environment()","    let logger = {","        var logger = Logger(label: \"Todos\")","        logger.logLevel = ","            arguments.logLevel ??","            environment.get(\"LOG_LEVEL\").map { Logger.Level(rawValue: $0) ?? .info } ??","            .info","        return logger","    }()","    let router = buildRouter()","    let app = Application(","        router: router,","        configuration: .init(","            address: .hostname(arguments.hostname, port: arguments.port),","            serverName: \"Todos\"","        ),","        logger: logger","    )","    return app","}"],"syntax":"swift"},"todos-template-08.sh":{"highlights":[{"line":2},{"line":3},{"line":4},{"line":5},{"line":6}],"fileType":"","identifier":"todos-template-08.sh","type":"file","fileName":"Test Application","content":["> curl -i localhost:8080\/health","HTTP\/1.1 200 OK","Content-Length: 0","Date: Fri, 6 Sep 2024 10:32:02 GMT","Server: Todos",""],"syntax":""},"todos-template-03.swift":{"highlights":[],"fileType":"swift","identifier":"todos-template-03.swift","type":"file","fileName":"Package.swift","content":["\/\/ swift-tools-version:5.9","\/\/ The swift-tools-version declares the minimum version of Swift required to build this package.","","import PackageDescription","","let package = Package(","    name: \"Todos\",","    platforms: [.macOS(.v14), .iOS(.v17), .tvOS(.v17)],","    products: [","        .executable(name: \"App\", targets: [\"App\"]),","    ],","    dependencies: [","        .package(url: \"https:\/\/github.com\/hummingbird-project\/hummingbird.git\", from: \"2.0.0\"),","        .package(url: \"https:\/\/github.com\/apple\/swift-argument-parser.git\", from: \"1.3.0\"),","    ],","    targets: [","        .executableTarget(","            name: \"App\",","            dependencies: [","                .product(name: \"ArgumentParser\", package: \"swift-argument-parser\"),","                .product(name: \"Hummingbird\", package: \"hummingbird\"),","            ]","        ),","        .testTarget(","            name: \"AppTests\",","            dependencies: [","                .byName(name: \"App\"),","                .product(name: \"HummingbirdTesting\", package: \"hummingbird\"),","            ]","        ),","    ]",")"],"syntax":"swift"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"role":"project","abstract":[{"type":"text","text":"Add some functionality to your application."}],"url":"\/tutorials\/hummingbird\/todos-2-api","title":"Add your application API","type":"topic","estimatedTime":"20min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","kind":"project"},"todos-template-07.sh":{"identifier":"todos-template-07.sh","content":["> curl -i localhost:8080\/health"],"type":"file","fileName":"Test Application","syntax":"","highlights":[],"fileType":""},"todos-template-01.sh":{"identifier":"todos-template-01.sh","content":["> git clone https:\/\/github.com\/hummingbird-project\/template"],"type":"file","fileName":"Clone template","syntax":"","highlights":[],"fileType":""},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Template#Create-your-project":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Create a simple web application using the Hummingbird template."}],"url":"\/tutorials\/hummingbird\/todos-1-template#Create-your-project","title":"Create your project","type":"section","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template#Create-your-project","kind":"section"},"https://apple.github.io/swift-argument-parser/documentation/argumentparser":{"title":"here","identifier":"https:\/\/apple.github.io\/swift-argument-parser\/documentation\/argumentparser","type":"link","titleInlineContent":[{"type":"text","text":"here"}],"url":"https:\/\/apple.github.io\/swift-argument-parser\/documentation\/argumentparser"},"hummingbird.png":{"identifier":"hummingbird.png","type":"image","alt":"Hummingbird logo","variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}]}}}