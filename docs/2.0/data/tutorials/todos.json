{"hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","paths":[]},"kind":"overview","metadata":{"title":"Build a Todos application.","categoryPathComponent":"Todos","category":"Todo backend","estimatedTime":"55min","role":"overview"},"sections":[{"image":"hummingbird.png","title":"Build a Todos application.","kind":"hero","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}]}],"action":{"type":"reference","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"overridingTitle":"Get started","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"backgroundImage":"hummingbird.png"},{"image":null,"kind":"volume","content":[],"chapters":[{"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"],"content":[],"image":"hummingbird.png","name":"Application setup"},{"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"],"image":"hummingbird.png","name":"API Setup","content":[]},{"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"],"image":"hummingbird.png","name":"Testing your application","content":[]},{"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"],"image":"hummingbird.png","name":"Store Todos in a database","content":[]}],"name":null}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/tutorials\/todos"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"role":"project","type":"topic","estimatedTime":"15min","url":"\/tutorials\/hummingbird\/todos-2-api","kind":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","title":"Add your application API","abstract":[{"type":"text","text":"Add some functionality to your app"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"role":"project","type":"topic","estimatedTime":"15min","url":"\/tutorials\/hummingbird\/todos-3-testing","kind":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","title":"Testing your application","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"title":"Setup a Hummingbird application.","type":"topic","url":"\/tutorials\/hummingbird\/todos-1-setup","estimatedTime":"5min","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","abstract":[{"type":"text","text":"Create a simple web application."}],"role":"project","kind":"project"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"type":"topic","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"url":"\/tutorials\/todos","title":"Build a Todos application.","role":"overview","kind":"overview","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"hummingbird.png":{"identifier":"hummingbird.png","type":"image","alt":"Hummingbird logo","variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"role":"project","type":"topic","estimatedTime":"20min","url":"\/tutorials\/hummingbird\/todos-4-postgres","kind":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","title":"Use PostgresNIO to store your Todos in a Postgres database","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}]}}}