{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/todos"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"kind":"overview","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"categoryPathComponent":"Todos","estimatedTime":"55min","title":"Build a Todos application.","category":"Todo backend","role":"overview"},"hierarchy":{"paths":[],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}]}],"kind":"hero","backgroundImage":"hummingbird.png","title":"Build a Todos application.","action":{"type":"reference","isActive":true,"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","overridingTitle":"Get started"},"image":"hummingbird.png"},{"content":[],"name":null,"kind":"volume","image":null,"chapters":[{"image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"],"name":"Application setup","content":[]},{"image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"],"name":"API Setup","content":[]},{"image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"],"name":"Testing your application","content":[]},{"image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"],"name":"Store Todos in a database","content":[]}]}],"references":{"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"kind":"overview","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","url":"\/tutorials\/todos","type":"topic","title":"Build a Todos application.","role":"overview"},"hummingbird.png":{"alt":"Hummingbird logo","variants":[{"traits":["1x","light"],"url":"\/images\/hummingbird.png"}],"identifier":"hummingbird.png","type":"image"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"kind":"project","estimatedTime":"5min","abstract":[{"text":"Create a simple web application.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","url":"\/tutorials\/hummingbird\/todos-1-setup","type":"topic","title":"Setup a Hummingbird application.","role":"project"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"url":"\/tutorials\/hummingbird\/todos-3-testing","kind":"project","role":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"type":"topic","title":"Testing your application","estimatedTime":"15min"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"url":"\/tutorials\/hummingbird\/todos-2-api","kind":"project","role":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","abstract":[{"text":"Add some functionality to your app","type":"text"}],"type":"topic","title":"Add your application API","estimatedTime":"15min"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"url":"\/tutorials\/hummingbird\/todos-4-postgres","kind":"project","role":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"type":"topic","title":"Use PostgresNIO to store your Todos in a Postgres database","estimatedTime":"20min"}}}