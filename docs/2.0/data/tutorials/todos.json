{"kind":"overview","hierarchy":{"paths":[],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"sections":[{"action":{"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","type":"reference","isActive":true,"overridingTitle":"Get started"},"kind":"hero","title":"Build a Todos application.","backgroundImage":"hummingbird.png","content":[{"type":"paragraph","inlineContent":[{"text":"This is a tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}]}],"image":"hummingbird.png"},{"kind":"volume","content":[],"image":null,"name":null,"chapters":[{"name":"Application setup","image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"],"content":[]},{"name":"API Setup","image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"],"content":[]},{"name":"Testing your application","image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"],"content":[]},{"name":"Store Todos in a database","image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"],"content":[]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"overview","category":"Todo backend","estimatedTime":"55min","title":"Build a Todos application.","categoryPathComponent":"Todos"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"variants":[{"paths":["\/tutorials\/todos"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"kind":"project","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"estimatedTime":"20min","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","role":"project","url":"\/tutorials\/hummingbird\/todos-4-postgres","title":"Use PostgresNIO to store your Todos in a Postgres database"},"hummingbird.png":{"type":"image","identifier":"hummingbird.png","variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}],"alt":"Hummingbird logo"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"kind":"project","abstract":[{"type":"text","text":"Create a simple web application."}],"estimatedTime":"5min","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","role":"project","url":"\/tutorials\/hummingbird\/todos-1-setup","title":"Setup a Hummingbird application."},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","role":"project","estimatedTime":"15min","title":"Testing your application","url":"\/tutorials\/hummingbird\/todos-3-testing","kind":"project","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"abstract":[{"text":"Add some functionality to your app","type":"text"}],"url":"\/tutorials\/hummingbird\/todos-2-api","type":"topic","estimatedTime":"15min","kind":"project","title":"Add your application API","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","role":"project"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","role":"overview","title":"Build a Todos application.","url":"\/tutorials\/todos","kind":"overview","abstract":[{"text":"This is a tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"type":"topic"}}}