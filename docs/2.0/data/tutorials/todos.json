{"variants":[{"paths":["\/tutorials\/todos"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[{"backgroundImage":"hummingbird.png","action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","overridingTitle":"Get started","type":"reference"},"image":"hummingbird.png","kind":"hero","title":"Build a Todos application.","content":[{"inlineContent":[{"type":"text","text":"This is a tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"type":"paragraph"}]},{"image":null,"chapters":[{"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"],"name":"Application setup","content":[],"image":"hummingbird.png"},{"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"],"name":"API Setup","content":[],"image":"hummingbird.png"},{"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"],"name":"Testing your application","content":[],"image":"hummingbird.png"},{"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"],"name":"Store Todos in a database","content":[],"image":"hummingbird.png"}],"kind":"volume","name":null,"content":[]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","interfaceLanguage":"swift"},"kind":"overview","metadata":{"role":"overview","categoryPathComponent":"Todos","title":"Build a Todos application.","category":"Todo backend","estimatedTime":"55min"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","paths":[]},"references":{"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","title":"Build a Todos application.","abstract":[{"type":"text","text":"This is a tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"role":"overview","kind":"overview","url":"\/tutorials\/todos"},"hummingbird.png":{"type":"image","variants":[{"url":"\/images\/hummingbird.png","traits":["1x","light"]}],"alt":"Hummingbird logo","identifier":"hummingbird.png"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","type":"topic","kind":"project","url":"\/tutorials\/hummingbird\/todos-1-setup","estimatedTime":"5min","title":"Setup a Hummingbird application.","role":"project","abstract":[{"text":"Create a simple web application.","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","role":"project","url":"\/tutorials\/hummingbird\/todos-2-api","estimatedTime":"15min","title":"Add your application API","kind":"project","abstract":[{"type":"text","text":"Add some functionality to your app"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","type":"topic","kind":"project","url":"\/tutorials\/hummingbird\/todos-3-testing","estimatedTime":"15min","title":"Testing your application","role":"project","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"estimatedTime":"20min","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","title":"Use PostgresNIO to store your Todos in a Postgres database","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"role":"project","kind":"project","url":"\/tutorials\/hummingbird\/todos-4-postgres"}}}