{"kind":"overview","hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","paths":[]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/todos"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[{"backgroundImage":"hummingbird.png","kind":"hero","title":"Build a Todos application.","image":"hummingbird.png","content":[{"inlineContent":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"type":"paragraph"}],"action":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template","isActive":true,"type":"reference","overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}]}},{"name":null,"kind":"volume","image":null,"content":[],"chapters":[{"image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template"],"name":"Application setup","content":[]},{"content":[],"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"],"name":"API Setup","image":"hummingbird.png"},{"content":[],"image":"hummingbird.png","name":"Testing your application","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"]},{"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"],"content":[],"image":"hummingbird.png","name":"Store Todos in a database"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"metadata":{"category":"Todo backend","role":"overview","categoryPathComponent":"Todos","estimatedTime":"55min","title":"Build a Todos application."},"references":{"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"estimatedTime":"15min","type":"topic","url":"\/tutorials\/hummingbird\/todos-4-postgres","role":"project","title":"Use PostgresNIO to store your Todos in a Postgres database","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"kind":"project"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Template":{"kind":"project","type":"topic","url":"\/tutorials\/hummingbird\/todos-1-template","role":"project","estimatedTime":"5min","title":"Create a Hummingbird application.","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Template","abstract":[{"text":"Create a simple web application using the Hummingbird template.","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"type":"topic","url":"\/tutorials\/todos","role":"overview","title":"Build a Todos application.","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"kind":"overview"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"kind":"project","type":"topic","url":"\/tutorials\/hummingbird\/todos-2-api","role":"project","estimatedTime":"20min","title":"Add your application API","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","abstract":[{"text":"Add some functionality to your application.","type":"text"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"estimatedTime":"15min","type":"topic","url":"\/tutorials\/hummingbird\/todos-3-testing","role":"project","title":"Testing your application","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","abstract":[{"text":"Test your application using the HummingbirdTesting framework","type":"text"}],"kind":"project"},"hummingbird.png":{"identifier":"hummingbird.png","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/hummingbird.png","traits":["1x","light"]}],"type":"image","alt":"Hummingbird logo"}}}