{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"kind":"overview","schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/todos"]}],"hierarchy":{"paths":[],"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"sections":[{"title":"Build a Todos application.","kind":"hero","content":[{"inlineContent":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"type":"paragraph"}],"backgroundImage":"hummingbird.png","image":"hummingbird.png","action":{"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","type":"reference","isActive":true,"overridingTitle":"Get started"}},{"chapters":[{"name":"Application setup","content":[],"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"],"image":"hummingbird.png"},{"name":"API Setup","content":[],"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"],"image":"hummingbird.png"},{"name":"Testing your application","content":[],"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"],"image":"hummingbird.png"},{"name":"Store Todos in a database","content":[],"tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"],"image":"hummingbird.png"}],"name":null,"kind":"volume","content":[],"image":null}],"metadata":{"estimatedTime":"55min","categoryPathComponent":"Todos","title":"Build a Todos application.","role":"overview","category":"Todo backend"},"references":{"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"role":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","type":"topic","title":"Setup a Hummingbird application.","estimatedTime":"5min","abstract":[{"type":"text","text":"Create a simple web application."}],"kind":"project","url":"\/tutorials\/hummingbird\/todos-1-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","abstract":[{"type":"text","text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO."}],"kind":"overview","role":"overview","url":"\/tutorials\/todos","type":"topic","title":"Build a Todos application."},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","abstract":[{"type":"text","text":"Test your application using the HummingbirdTesting framework"}],"kind":"project","estimatedTime":"15min","role":"project","url":"\/tutorials\/hummingbird\/todos-3-testing","type":"topic","title":"Testing your application"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","url":"\/tutorials\/hummingbird\/todos-2-api","kind":"project","role":"project","abstract":[{"type":"text","text":"Add some functionality to your app"}],"type":"topic","estimatedTime":"15min","title":"Add your application API"},"hummingbird.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/hummingbird.png"}],"identifier":"hummingbird.png","alt":"Hummingbird logo","type":"image"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","url":"\/tutorials\/hummingbird\/todos-4-postgres","kind":"project","role":"project","abstract":[{"type":"text","text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO."}],"type":"topic","estimatedTime":"20min","title":"Use PostgresNIO to store your Todos in a Postgres database"}}}