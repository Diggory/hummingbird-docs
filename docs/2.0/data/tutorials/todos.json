{"kind":"overview","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}]}],"action":{"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"isActive":true,"type":"reference","overridingTitle":"Get started","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"},"kind":"hero","title":"Build a Todos application.","backgroundImage":"hummingbird.png","image":"hummingbird.png"},{"content":[],"kind":"volume","chapters":[{"image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup"],"content":[],"name":"Application setup"},{"image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API"],"content":[],"name":"API Setup"},{"image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing"],"content":[],"name":"Testing your application"},{"image":"hummingbird.png","tutorials":["doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres"],"content":[],"name":"Store Todos in a database"}],"image":null,"name":null}],"metadata":{"estimatedTime":"55min","role":"overview","categoryPathComponent":"Todos","title":"Build a Todos application.","category":"Todo backend"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/todos"]}],"hierarchy":{"reference":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","paths":[]},"references":{"doc://com.opticalaberration.hummingbird/tutorials/Todos":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Todos","type":"topic","title":"Build a Todos application.","role":"overview","abstract":[{"text":"A tutorial showing you how to build a simple Todos application that allows you to store, access, edit and delete Todos in a database, using Hummingbird and PostgresNIO.","type":"text"}],"url":"\/tutorials\/todos","kind":"overview"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-2-API":{"estimatedTime":"15min","kind":"project","role":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-2-API","title":"Add your application API","type":"topic","abstract":[{"text":"Add some functionality to your app","type":"text"}],"url":"\/tutorials\/hummingbird\/todos-2-api"},"hummingbird.png":{"identifier":"hummingbird.png","type":"image","alt":"Hummingbird logo","variants":[{"traits":["1x","light"],"url":"\/images\/hummingbird.png"}]},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-1-Setup":{"estimatedTime":"5min","kind":"project","role":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-1-Setup","title":"Setup a Hummingbird application.","type":"topic","abstract":[{"text":"Create a simple web application.","type":"text"}],"url":"\/tutorials\/hummingbird\/todos-1-setup"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-3-Testing":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-3-Testing","type":"topic","title":"Testing your application","role":"project","estimatedTime":"15min","abstract":[{"text":"Test your application using the HummingbirdXCT framework","type":"text"}],"url":"\/tutorials\/hummingbird\/todos-3-testing","kind":"project"},"doc://com.opticalaberration.hummingbird/tutorials/Hummingbird/Todos-4-Postgres":{"estimatedTime":"20min","kind":"project","role":"project","identifier":"doc:\/\/com.opticalaberration.hummingbird\/tutorials\/Hummingbird\/Todos-4-Postgres","title":"Use PostgresNIO to store your Todos in a Postgres database","type":"topic","abstract":[{"text":"Now we have a working API and a way to test it, lets look into storing our todos in a Postgres database with PostgresNIO.","type":"text"}],"url":"\/tutorials\/hummingbird\/todos-4-postgres"}}}