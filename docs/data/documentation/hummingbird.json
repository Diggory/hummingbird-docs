{"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","isActive":true},{"type":"text","text":" is a lightweight, flexible server framework designed to require the minimum number of dependencies."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"It provides a router for directing different endpoints to their handlers, middleware for processing requests before they reach your handlers and processing the responses returned, support for adding channel handlers to extend the HTTP server, extending the core "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest"},{"type":"text","text":" types and providing custom encoding\/decoding of "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" objects."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The interface is fairly standard. Anyone who has had experience of Vapor, Express.js etc will recognise most of the APIs. Simple setup is as follows"}],"type":"paragraph"},{"code":["import Hummingbird","","let app = HBApplication(configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080)))","app.router.get(\"hello\") { request -> String in","    return \"Hello\"","}","try app.start()","app.wait()"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],"title":"Articles"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ServiceLifecycleProvider"],"title":"Application"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder"],"title":"Router"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBURL","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMediaType","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponse"],"title":"Request\/Response"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseEncodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseGenerator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseCodable"],"title":"Encoding\/Decoding"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMetricsMiddleware"],"title":"Middleware"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensible","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions"],"title":"Extending the Application"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPool","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncConnection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncConnectionSource","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPoolGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPoolError"],"title":"Connection Pool"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriverFactory","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistError"],"title":"Storage"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParser"],"title":"Miscellaneous"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"],"title":"NIOCore Symbols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPMethod","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseStatus"],"title":"NIOHTTP1 Symbols"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"],"title":"Related Documentation"}],"metadata":{"modules":[{"name":"Hummingbird"}],"roleHeading":"Framework","externalID":"Hummingbird","role":"collection","title":"Hummingbird","symbolKind":"module"},"abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"hierarchy":{"paths":[[]]},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeaders":{"title":"HTTPHeaders","navigatorTitle":[{"kind":"identifier","text":"HTTPHeaders"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPHeaders"}],"url":"\/documentation\/hummingbird\/httpheaders","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders","role":"symbol","abstract":[{"type":"text","text":"A representation of a block of HTTP header fields."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HTTPHeadersPatch":{"url":"\/documentation\/hummingbirdauth\/httpheaderspatch","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPHeadersPatch"}],"type":"topic","kind":"symbol","title":"HTTPHeadersPatch","abstract":[{"type":"text","text":"Used to Patch HTTPHeaders. Remembers if a header was added in with "},{"code":"add","type":"codeVoice"},{"type":"text","text":" or "},{"code":"replaceOrAdd","type":"codeVoice"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPHeadersPatch"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"type":"topic","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"role":"symbol","title":"EventLoopFuture","url":"\/documentation\/hummingbird\/eventloopfuture","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcompression","abstract":[{"type":"text","text":"Adds request decompression and response compression to Hummingbird"}],"role":"collection","title":"HummingbirdCompression","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBRouterGroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"url":"\/documentation\/hummingbirdauth\/hbroutergroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouteHandler":{"abstract":[{"text":"Object for handling requests.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"url":"\/documentation\/hummingbirdauth\/hbroutehandler","title":"HBRouteHandler","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBEnvironment":{"navigatorTitle":[{"text":"HBEnvironment","kind":"identifier"}],"title":"HBEnvironment","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBEnvironment","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBEnvironment","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbenvironment","abstract":[{"type":"text","text":"Access environment variables"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","url":"\/documentation\/hummingbird\/bytebuffer","type":"topic","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress":{"navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}],"title":"SocketAddress","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}],"url":"\/documentation\/hummingbird\/socketaddress","abstract":[{"text":"Represent a socket address to which we may want to connect or bind.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequest":{"type":"topic","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequest","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequest","kind":"identifier"}],"role":"symbol","title":"HBRequest","url":"\/documentation\/hummingbirdauth\/hbrequest","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncConnectionSource":{"navigatorTitle":[{"kind":"identifier","text":"HBAsyncConnectionSource"}],"title":"HBAsyncConnectionSource","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncConnectionSource","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncConnectionSource"}],"url":"\/documentation\/hummingbirdauth\/hbasyncconnectionsource","abstract":[{"type":"text","text":"Source of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncConnection"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponseGenerator":{"url":"\/documentation\/hummingbirdauth\/hbresponsegenerator","navigatorTitle":[{"kind":"identifier","text":"HBResponseGenerator"}],"role":"symbol","kind":"symbol","title":"HBResponseGenerator","abstract":[{"type":"text","text":"Object that can generate a "},{"code":"Response","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseGenerator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseGenerator"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder":{"url":"\/documentation\/hummingbirdauth\/hbrouterbuilder","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"type":"topic","kind":"symbol","title":"HBRouterBuilder","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBConnectionPool":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPool","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBConnectionPool"}],"navigatorTitle":[{"text":"HBConnectionPool","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBConnectionPool","abstract":[{"text":"Connection Pool","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbconnectionpool"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBCORSMiddleware":{"url":"\/documentation\/hummingbirdauth\/hbcorsmiddleware","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"HBCORSMiddleware","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCORSMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"url":"\/documentation\/hummingbirdfluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","role":"collection","title":"HummingbirdFluent","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"ByteBufferAllocator","abstract":[{"type":"text","text":"The preferred allocator for "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"code":"malloc","type":"codeVoice"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/bytebufferallocator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMiddleware":{"title":"HBMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBMiddleware"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddleware"}],"url":"\/documentation\/hummingbirdauth\/hbmiddleware","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddleware","role":"symbol","abstract":[{"type":"text","text":"Applied to "},{"code":"HBRequest","type":"codeVoice"},{"text":" before it is dealt with by the router. Middleware passes the processed request onto the next responder","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(either the next middleware or the router) by calling "},{"code":"next.apply(to: request)","type":"codeVoice"},{"type":"text","text":". If you want to shortcut the request you"},{"text":" ","type":"text"},{"text":"can return a response immediately","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncCallbackResponder":{"url":"\/documentation\/hummingbirdauth\/hbasynccallbackresponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"type":"topic","title":"HBAsyncCallbackResponder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBApplication":{"url":"\/documentation\/hummingbirdauth\/hbapplication","navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"role":"symbol","kind":"symbol","title":"HBApplication","abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethods":{"abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"title":"HBRouterMethods","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/hbroutermethods","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponse":{"kind":"symbol","navigatorTitle":[{"text":"HBResponse","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponse","kind":"identifier"}],"title":"HBResponse","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponse","url":"\/documentation\/hummingbirdauth\/hbresponse","type":"topic","abstract":[{"type":"text","text":"Holds all the required to generate a HTTP Response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMetricsMiddleware":{"type":"topic","url":"\/documentation\/hummingbirdauth\/hbmetricsmiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"title":"HBMetricsMiddleware","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBMetricsMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMetricsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponseStatus":{"kind":"symbol","navigatorTitle":[{"text":"HTTPResponseStatus","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponseStatus","kind":"identifier"}],"title":"HTTPResponseStatus","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponseStatus","url":"\/documentation\/hummingbird\/httpresponsestatus","type":"topic","abstract":[{"type":"text","text":"A HTTP response status code."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponseEncoder":{"url":"\/documentation\/hummingbirdauth\/hbresponseencoder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBResponseEncoder","kind":"identifier"}],"abstract":[{"type":"text","text":"protocol for encoders generating a Response"}],"kind":"symbol","title":"HBResponseEncoder","navigatorTitle":[{"text":"HBResponseEncoder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseEncoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"kind":"symbol","title":"HummingbirdLambda","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncConnection":{"type":"topic","title":"HBAsyncConnection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncConnection","navigatorTitle":[{"kind":"identifier","text":"HBAsyncConnection"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbasyncconnection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncConnection"}],"role":"symbol","abstract":[{"type":"text","text":"Connection that supports async close"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethodOptions":{"type":"topic","title":"HBRouterMethodOptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbroutermethodoptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Options available to routes"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"title":"Router","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","role":"collectionGroup","url":"\/documentation\/hummingbird\/router","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncRouteHandler":{"url":"\/documentation\/hummingbirdauth\/hbasyncroutehandler","abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"type":"topic","title":"HBAsyncRouteHandler","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequestDecoder":{"url":"\/documentation\/hummingbirdauth\/hbrequestdecoder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecoder","kind":"identifier"}],"abstract":[{"text":"protocol for decoder deserializing from a Request body","type":"text"}],"kind":"symbol","title":"HBRequestDecoder","navigatorTitle":[{"text":"HBRequestDecoder","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecoder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/ServiceLifecycleProvider":{"type":"topic","title":"ServiceLifecycleProvider","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/ServiceLifecycleProvider","navigatorTitle":[{"text":"ServiceLifecycleProvider","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/servicelifecycleprovider","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServiceLifecycleProvider","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Define where we get the ServiceLifecycle from.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBParser":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"title":"HBParser","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParser","url":"\/documentation\/hummingbirdauth\/hbparser","type":"topic","abstract":[{"type":"text","text":"Reader object for parsing String buffers"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequestDecodable":{"url":"\/documentation\/hummingbirdauth\/hbrequestdecodable","abstract":[{"type":"codeVoice","code":"HBRouteHandler"},{"type":"text","text":" which uses "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" to initialize it"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecodable"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestDecodable"}],"type":"topic","title":"HBRequestDecodable","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponseCodable":{"title":"HBResponseCodable","navigatorTitle":[{"kind":"identifier","text":"HBResponseCodable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseCodable"}],"url":"\/documentation\/hummingbirdauth\/hbresponsecodable","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseCodable","role":"symbol","abstract":[{"type":"text","text":"Protocol for codable object that can generate a response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBLogRequestsMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"title":"HBLogRequestsMiddleware","url":"\/documentation\/hummingbirdauth\/hblogrequestsmiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBLogRequestsMiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPMethod":{"navigatorTitle":[{"kind":"identifier","text":"HTTPMethod"}],"title":"HTTPMethod","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPMethod","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPMethod"}],"url":"\/documentation\/hummingbird\/httpmethod","abstract":[],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncMiddleware","title":"HBAsyncMiddleware","abstract":[{"type":"text","text":"Middleware using async\/await"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBAsyncMiddleware","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBAsyncMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbasyncmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"type":"topic","title":"HummingbirdFoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","kind":"symbol","url":"\/documentation\/hummingbirdfoundation","role":"collection","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBConnectionSource":{"abstract":[{"type":"text","text":"Source of "},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnection","isActive":true}],"title":"HBConnectionSource","navigatorTitle":[{"text":"HBConnectionSource","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/hbconnectionsource","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionSource","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionSource"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMediaType":{"navigatorTitle":[{"text":"HBMediaType","kind":"identifier"}],"title":"HBMediaType","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMediaType","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMediaType","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbmediatype","abstract":[{"type":"text","text":"Define media type of file"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBPersistDriverFactory":{"type":"topic","kind":"symbol","title":"HBPersistDriverFactory","abstract":[{"type":"text","text":"Factory class for persist drivers"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/hbpersistdriverfactory","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriverFactory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBPersistDriverFactory"}],"navigatorTitle":[{"text":"HBPersistDriverFactory","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensible":{"url":"\/documentation\/hummingbirdauth\/hbextensible","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}],"type":"topic","kind":"symbol","title":"HBExtensible","abstract":[{"text":"Protocol for extensible classes","type":"text"}],"navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensible"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"title":"HummingbirdJobs","role":"collection","url":"\/documentation\/hummingbirdjobs","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBConnectionPoolError":{"kind":"symbol","navigatorTitle":[{"text":"HBConnectionPoolError","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBConnectionPoolError"}],"title":"HBConnectionPoolError","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPoolError","url":"\/documentation\/hummingbirdauth\/hbconnectionpoolerror","type":"topic","abstract":[{"type":"text","text":"Errors generated by Connection Pool"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBConnectionPoolGroup":{"kind":"symbol","navigatorTitle":[{"text":"HBConnectionPoolGroup","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnectionPoolGroup","kind":"identifier"}],"title":"HBConnectionPoolGroup","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnectionPoolGroup","url":"\/documentation\/hummingbirdauth\/hbconnectionpoolgroup","type":"topic","abstract":[{"type":"text","text":"Array of connection pools associated with an EventLoopGroup."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponder":{"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"title":"HBResponder","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"kind":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","url":"\/documentation\/hummingbird\/eventloop","type":"topic","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBPersistDriver":{"abstract":[{"type":"text","text":"Protocol for driver supporting persistent Key\/Value pairs across requests"}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBPersistDriver","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbpersistdriver","title":"HBPersistDriver","navigatorTitle":[{"text":"HBPersistDriver","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TimeAmount":{"type":"topic","title":"TimeAmount","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount","navigatorTitle":[{"text":"TimeAmount","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/timeamount","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimeAmount","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Represents a time "},{"type":"emphasis","inlineContent":[{"text":"interval","type":"text"}]},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestContext","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}],"navigatorTitle":[{"text":"HBRequestContext","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBRequestContext","abstract":[{"text":"Context that created HBRequest.","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBParameters":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBParameters"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParameters"}],"title":"HBParameters","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters","url":"\/documentation\/hummingbirdauth\/hbparameters","type":"topic","abstract":[{"type":"text","text":"Store for parameters key, value pairs extracted from URI"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"kind":"symbol","title":"HummingbirdAuth","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","url":"\/documentation\/hummingbirdauth","type":"topic","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBExtensions":{"kind":"symbol","navigatorTitle":[{"text":"HBExtensions","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"}],"title":"HBExtensions","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBExtensions","url":"\/documentation\/hummingbirdauth\/hbextensions","type":"topic","abstract":[{"type":"text","text":"Extend objects with additional member variables"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBCallbackResponder":{"url":"\/documentation\/hummingbirdauth\/hbcallbackresponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"type":"topic","title":"HBCallbackResponder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/FlatDictionary":{"navigatorTitle":[{"kind":"identifier","text":"FlatDictionary"}],"title":"FlatDictionary","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/FlatDictionary","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatDictionary"}],"url":"\/documentation\/hummingbirdauth\/flatdictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"type":"topic","title":"HummingbirdRedis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","url":"\/documentation\/hummingbirdredis","role":"collection","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBConnection":{"abstract":[{"type":"text","text":"Protocol describing a single connection"}],"title":"HBConnection","navigatorTitle":[{"text":"HBConnection","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/hbconnection","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBConnection","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBConnection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBURL":{"kind":"symbol","navigatorTitle":[{"text":"HBURL","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBURL","kind":"identifier"}],"title":"HBURL","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBURL","url":"\/documentation\/hummingbirdauth\/hburl","type":"topic","abstract":[{"text":"Simple URL parser","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"url":"\/documentation\/hummingbird\/eventloopgroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol","title":"EventLoopGroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponseEncodable":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponseEncodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseEncodable","kind":"identifier"}],"navigatorTitle":[{"text":"HBResponseEncodable","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBResponseEncodable","abstract":[{"text":"Protocol for encodable object that can generate a response. The router will encode","type":"text"},{"text":" ","type":"text"},{"text":"the response using the encoder stored in ","type":"text"},{"code":"HBApplication.encoder","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbresponseencodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBPersistError":{"url":"\/documentation\/hummingbirdauth\/hbpersisterror","navigatorTitle":[{"kind":"identifier","text":"HBPersistError"}],"role":"symbol","kind":"symbol","title":"HBPersistError","abstract":[{"type":"text","text":"Errors return by persist framework"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBPersistError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBPersistError"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBDateCache":{"url":"\/documentation\/hummingbirdauth\/hbdatecache","navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"HBDateCache","abstract":[{"type":"text","text":"Current date cache."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBDateCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBDateCache","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMiddlewareGroup":{"type":"topic","title":"HBMiddlewareGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddlewareGroup","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbmiddlewaregroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBMiddlewareGroup"}],"role":"symbol","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"title":"HummingbirdXCT","url":"\/documentation\/hummingbirdxct","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","role":"collection","abstract":[{"type":"text","text":"Test framework for Hummingbird"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"title":"HummingbirdWebSocket","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","role":"collection","url":"\/documentation\/hummingbirdwebsocket","abstract":[{"text":"Adds support for upgrading HTTP connections to WebSocket.","type":"text"}],"kind":"symbol"}}}