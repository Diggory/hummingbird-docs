{"seeAlsoSections":[{"title":"Rendering","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheParent"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/hummingbirdmustache\/hbmustacheparent"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheParent"}],"title":"HBMustacheParent","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:19HummingbirdMustache16HBMustacheParentP","modules":[{"name":"HummingbirdMustache"}],"navigatorTitle":[{"kind":"identifier","text":"HBMustacheParent"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent\/child(named:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheParent":{"role":"symbol","title":"HBMustacheParent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheParent"}],"abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBMustacheParent"}],"url":"\/documentation\/hummingbirdmustache\/hbmustacheparent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheTransformable":{"role":"symbol","title":"HBMustacheTransformable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheTransformable"}],"abstract":[{"type":"text","text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation"},{"type":"text","text":" "},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheTransformable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBMustacheTransformable"}],"url":"\/documentation\/hummingbirdmustache\/hbmustachetransformable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"role":"collection","title":"HummingbirdMustache","abstract":[{"type":"text","text":"Mustache template engine."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdmustache"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheCustomRenderable":{"role":"symbol","title":"HBMustacheCustomRenderable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheCustomRenderable"}],"abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheCustomRenderable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBMustacheCustomRenderable"}],"url":"\/documentation\/hummingbirdmustache\/hbmustachecustomrenderable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheLambda":{"role":"symbol","title":"HBMustacheLambda","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMustacheLambda"}],"abstract":[{"type":"text","text":"Lambda function. Can add this to object being rendered to filter contents of objects."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheLambda","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBMustacheLambda"}],"url":"\/documentation\/hummingbirdmustache\/hbmustachelambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache/HBMustacheParent/child(named:)":{"role":"symbol","title":"child(named:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"child"},{"kind":"text","text":"("},{"kind":"externalParam","text":"named"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache\/HBMustacheParent\/child(named:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hummingbirdmustache\/hbmustacheparent\/child(named:)"}}}