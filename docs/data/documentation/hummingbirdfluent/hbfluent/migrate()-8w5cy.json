{"metadata":{"externalID":"s:17HummingbirdFluent8HBFluentV7migrate7NIOCore15EventLoopFutureCyytGyF","roleHeading":"Instance Method","title":"migrate()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"migrate"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"role":"symbol","symbolKind":"method","modules":[{"name":"HummingbirdFluent"}]},"variants":[{"paths":["\/documentation\/hummingbirdfluent\/hbfluent\/migrate()-8w5cy"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluent\/migrate()-8w5cy"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluent"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"migrate"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"platforms":["Linux"]}]}],"abstract":[{"text":"Run migration if needed","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/HBFluent":{"url":"\/documentation\/hummingbirdfluent\/hbfluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluent","title":"HBFluent","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFluent"}],"navigatorTitle":[{"kind":"identifier","text":"HBFluent"}],"kind":"symbol","abstract":[{"type":"text","text":"Manage fluent databases and migrations"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent":{"abstract":[{"text":"Integration with Vapor Fluent ORM framework.","type":"text"}],"url":"\/documentation\/hummingbirdfluent","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent","role":"collection","title":"HummingbirdFluent","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFluent/HBFluent/migrate()-8w5cy":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"migrate","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFluent\/HBFluent\/migrate()-8w5cy","type":"topic","title":"migrate()","url":"\/documentation\/hummingbirdfluent\/hbfluent\/migrate()-8w5cy","abstract":[{"type":"text","text":"Run migration if needed"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"type":"topic","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"role":"symbol","title":"EventLoopFuture","url":"\/documentation\/hummingbird\/eventloopfuture","kind":"symbol"}}}