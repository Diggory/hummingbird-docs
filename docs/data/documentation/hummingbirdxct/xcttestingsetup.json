{"sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Type of test framework"}],"metadata":{"role":"symbol","title":"XCTTestingSetup","roleHeading":"Enumeration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"externalID":"s:14HummingbirdXCT15XCTTestingSetupO","modules":[{"name":"HummingbirdXCT"}],"navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"symbolKind":"enum"},"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/SH"],"kind":"relationships"}],"variants":[{"paths":["\/documentation\/hummingbirdxct\/xcttestingsetup"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live"]},{"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}]}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/live":{"title":"XCTTestingSetup.live","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live","abstract":[{"type":"text","text":"Sets up a live server and execute tests using a HTTP client."}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/live","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"live"}]},"doc://com.opticalaberration.hummingbird/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SH","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/asyncTest":{"title":"XCTTestingSetup.asyncTest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","abstract":[{"type":"text","text":"Test using SwiftNIO "},{"type":"codeVoice","code":"NIOAsyncTestingChannel"},{"type":"text","text":". This allows for testing of Swift Concurrency based routes."}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/asynctest","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncTest"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/Equatable-Implementations":{"title":"Equatable Implementations","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/equatable-implementations","type":"topic","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XCTTestingSetup"}],"title":"XCTTestingSetup","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"abstract":[{"text":"Type of test framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/embedded":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"embedded","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","title":"XCTTestingSetup.embedded","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Test using SwiftNIO "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":". This is useful for testing where no actual IO or multi threading is required."}],"url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/embedded","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"title":"HummingbirdXCT","role":"collection","url":"\/documentation\/hummingbirdxct","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/SQ":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","title":"Swift.Equatable","type":"unresolvable"}}}