{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT"]]},"topicSections":[{"title":"Enumeration Cases","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations"]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/SH"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"XCTTestingSetup","externalID":"s:14HummingbirdXCT15XCTTestingSetupO","roleHeading":"Enumeration","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"modules":[{"name":"HummingbirdXCT"}],"symbolKind":"enum"},"abstract":[{"text":"Type of test framework","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"platforms":["Linux"]}]}],"variants":[{"paths":["\/documentation\/hummingbirdxct\/xcttestingsetup"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/embedded":{"url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/embedded","title":"XCTTestingSetup.embedded","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/embedded","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"embedded","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Test using SwiftNIO ","type":"text"},{"type":"codeVoice","code":"EmbeddedChannel"},{"text":". This is useful for testing where no actual IO or multi threading is required.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/live":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"live"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/live","role":"symbol","url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/live","type":"topic","title":"XCTTestingSetup.live","abstract":[{"type":"text","text":"Sets up a live server and execute tests using a HTTP client."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/Equatable-Implementations":{"url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/equatable-implementations","title":"Equatable Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/Equatable-Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdxct","title":"HummingbirdXCT","role":"collection"},"doc://com.opticalaberration.hummingbird/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SH","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XCTTestingSetup"}],"url":"\/documentation\/hummingbirdxct\/xcttestingsetup","type":"topic","title":"XCTTestingSetup","abstract":[{"type":"text","text":"Type of test framework"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup/asyncTest":{"url":"\/documentation\/hummingbirdxct\/xcttestingsetup\/asynctest","title":"XCTTestingSetup.asyncTest","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup\/asyncTest","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"asyncTest","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Test using SwiftNIO ","type":"text"},{"type":"codeVoice","code":"NIOAsyncTestingChannel"},{"text":". This allows for testing of Swift Concurrency based routes.","type":"text"}],"role":"symbol"}}}