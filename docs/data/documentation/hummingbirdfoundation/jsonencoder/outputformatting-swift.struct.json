{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue"]},{"title":"Type Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations"]}],"metadata":{"title":"JSONEncoder.OutputFormatting","modules":[{"name":"HummingbirdFoundation"}],"externalID":"s:10Foundation11JSONEncoderC16OutputFormattingV","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"symbolKind":"struct","roleHeading":"Structure","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputFormatting"}]}],"kind":"declarations"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"],"type":"conformsTo","kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct"},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"The formatting of the output JSON data."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/Equatable-Implementations":{"title":"Equatable Implementations","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/equatable-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/Equatable-Implementations","kind":"article","abstract":[]},"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"title":"Swift.SetAlgebra","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"type":"topic","title":"HummingbirdFoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","kind":"symbol","url":"\/documentation\/hummingbirdfoundation","role":"collection","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}]},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/withoutEscapingSlashes":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"withoutEscapingSlashes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","text":"OutputFormatting"}],"title":"withoutEscapingSlashes","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/withoutescapingslashes","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/withoutEscapingSlashes","kind":"symbol","abstract":[{"type":"text","text":"By default slashes get escaped (”\/” → “\/”, “http:\/\/apple.com\/” → “http:\/\/apple.com\/”)"},{"type":"text","text":" "},{"type":"text","text":"for security reasons, allowing outputted JSON to be safely embedded within HTML\/XML."},{"type":"text","text":" "},{"type":"text","text":"In contexts where this escaping is unnecessary, the JSON is known to not be embedded,"},{"type":"text","text":" "},{"type":"text","text":"or is intended only for display, this option avoids this escaping."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/init(rawValue:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"title":"init(rawValue:)","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/init(rawvalue:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/init(rawValue:)","kind":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/SetAlgebra-Implementations":{"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/setalgebra-implementations","abstract":[],"kind":"article","title":"SetAlgebra Implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/SetAlgebra-Implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct":{"kind":"symbol","navigatorTitle":[{"text":"OutputFormatting","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutputFormatting","kind":"identifier"}],"title":"JSONEncoder.OutputFormatting","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct","type":"topic","abstract":[{"text":"The formatting of the output JSON data.","type":"text"}]},"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"title":"Swift.OptionSet","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"type":"topic","title":"JSONEncoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}],"role":"symbol","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/sortedKeys":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"sortedKeys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","text":"OutputFormatting"}],"title":"sortedKeys","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/sortedkeys","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/sortedKeys","kind":"symbol","abstract":[{"type":"text","text":"Produce JSON with dictionary keys sorted in lexicographic order."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/rawValue":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/rawValue","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"}],"type":"topic","role":"symbol","kind":"symbol","title":"rawValue","abstract":[],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/rawvalue"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/OptionSet-Implementations":{"abstract":[],"title":"OptionSet Implementations","role":"collectionGroup","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/optionset-implementations","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/OptionSet-Implementations"},"doc://com.opticalaberration.hummingbird/SY":{"title":"Swift.RawRepresentable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/OutputFormatting-swift.struct/prettyPrinted":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"prettyPrinted"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC16OutputFormattingV","text":"OutputFormatting"}],"title":"prettyPrinted","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/outputformatting-swift.struct\/prettyprinted","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/OutputFormatting-swift.struct\/prettyPrinted","kind":"symbol","abstract":[{"type":"text","text":"Produce human-readable JSON with indented output."}]}}}