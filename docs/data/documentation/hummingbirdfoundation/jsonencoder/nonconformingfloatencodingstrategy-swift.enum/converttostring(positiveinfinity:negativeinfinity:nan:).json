{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum"]]},"metadata":{"title":"JSONEncoder.NonConformingFloatEncodingStrategy.convertToString(positiveInfinity:negativeInfinity:nan:)","symbolKind":"case","roleHeading":"Case","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertToString","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"positiveInfinity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"negativeInfinity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nan"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"modules":[{"name":"HummingbirdFoundation"}],"externalID":"s:10Foundation11JSONEncoderC34NonConformingFloatEncodingStrategyO15convertToStringyAESS_S2StcAEmF"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertToString","kind":"identifier"},{"text":"(","kind":"text"},{"text":"positiveInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"negativeInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"nan","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Encode the values using the given representation strings.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/convertToString(positiveInfinity:negativeInfinity:nan:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/converttostring(positiveinfinity:negativeinfinity:nan:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NonConformingFloatEncodingStrategy"}],"title":"JSONEncoder.NonConformingFloatEncodingStrategy","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum","type":"topic","abstract":[{"type":"text","text":"The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN)."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"type":"topic","title":"HummingbirdFoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","kind":"symbol","url":"\/documentation\/hummingbirdfoundation","role":"collection","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/NonConformingFloatEncodingStrategy-swift.enum/convertToString(positiveInfinity:negativeInfinity:nan:)":{"abstract":[{"type":"text","text":"Encode the values using the given representation strings."}],"title":"JSONEncoder.NonConformingFloatEncodingStrategy.convertToString(positiveInfinity:negativeInfinity:nan:)","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/nonconformingfloatencodingstrategy-swift.enum\/converttostring(positiveinfinity:negativeinfinity:nan:)","kind":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertToString","kind":"identifier"},{"text":"(","kind":"text"},{"text":"positiveInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"negativeInfinity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"nan","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/NonConformingFloatEncodingStrategy-swift.enum\/convertToString(positiveInfinity:negativeInfinity:nan:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"type":"topic","title":"JSONEncoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}],"role":"symbol","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}]}}}