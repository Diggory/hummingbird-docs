{"variants":[{"paths":["\/documentation\/hummingbirdfoundation\/jsonencoder\/encode(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/encode(_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"role":"symbol","title":"encode(_:)","modules":[{"name":"HummingbirdFoundation"}],"symbolKind":"method","externalID":"s:10Foundation11JSONEncoderC6encodeyAA4DataVxKSERzlF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"}],"roleHeading":"Instance Method"},"kind":"symbol","abstract":[{"type":"text","text":"Encodes the given top-level value and returns its JSON representation."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Encodable","preciseIdentifier":"s:SE","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The value to encode.","type":"text"}]}],"name":"value"}]},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A new ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" value containing the encoded JSON data.","type":"text"}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"code":"EncodingError.invalidValue","type":"codeVoice"},{"type":"text","text":" if a non-conforming floating-point value is encountered during encoding, and the encoding strategy is "},{"code":".throw","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Throws"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"An error if any value throws an error during encoding."}],"type":"paragraph"}],"name":"Throws"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder/encode(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder\/encode(_:)","type":"topic","kind":"symbol","role":"symbol","title":"encode(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}],"abstract":[{"type":"text","text":"Encodes the given top-level value and returns its JSON representation."}],"url":"\/documentation\/hummingbirdfoundation\/jsonencoder\/encode(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"type":"topic","title":"HummingbirdFoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","kind":"symbol","url":"\/documentation\/hummingbirdfoundation","role":"collection","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONEncoder":{"type":"topic","title":"JSONEncoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONEncoder","navigatorTitle":[{"kind":"identifier","text":"JSONEncoder"}],"kind":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsonencoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"JSONEncoder"}],"role":"symbol","abstract":[{"code":"JSONEncoder","type":"codeVoice"},{"text":" facilitates the encoding of ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":" values into JSON.","type":"text"}]}}}