{"kind":"symbol","topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/base64","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/custom(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/deferredToData"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum"},"abstract":[{"text":"The strategy to use for decoding ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" values.","type":"text"}],"metadata":{"roleHeading":"Enumeration","role":"symbol","title":"JSONDecoder.DataDecodingStrategy","externalID":"s:10Foundation11JSONDecoderC20DataDecodingStrategyO","modules":[{"name":"HummingbirdFoundation"}],"symbolKind":"enum","navigatorTitle":[{"text":"DataDecodingStrategy","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DataDecodingStrategy","kind":"identifier"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DataDecodingStrategy"}],"platforms":["Linux"],"languages":["swift"]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum/custom(_:)":{"type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/custom(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/custom(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"custom","kind":"identifier"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"JSONDecoder.DataDecodingStrategy.custom(_:)","abstract":[{"type":"text","text":"Decode the "},{"code":"Data","type":"codeVoice"},{"text":" as a custom value decoded by the given closure.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum/base64":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"base64","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/base64","title":"JSONDecoder.DataDecodingStrategy.base64","abstract":[{"text":"Decode the ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" from a Base64-encoded string. This is the default strategy.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/base64","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"url":"\/documentation\/hummingbirdfoundation","kind":"symbol","title":"HummingbirdFoundation","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"url":"\/documentation\/hummingbirdfoundation\/jsondecoder","kind":"symbol","title":"JSONDecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"JSONDecoder"}],"navigatorTitle":[{"kind":"identifier","text":"JSONDecoder"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","abstract":[{"code":"JSONDecoder","type":"codeVoice"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" types."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum","title":"JSONDecoder.DataDecodingStrategy","navigatorTitle":[{"kind":"identifier","text":"DataDecodingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use for decoding "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" values."}],"role":"symbol","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataDecodingStrategy"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/DataDecodingStrategy-swift.enum/deferredToData":{"url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/datadecodingstrategy-swift.enum\/deferredtodata","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/DataDecodingStrategy-swift.enum\/deferredToData","role":"symbol","title":"JSONDecoder.DataDecodingStrategy.deferredToData","abstract":[{"type":"text","text":"Defer to "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" for decoding."}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deferredToData"}],"kind":"symbol"}}}