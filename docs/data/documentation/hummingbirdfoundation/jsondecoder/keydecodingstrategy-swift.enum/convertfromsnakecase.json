{"abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}],"sections":[],"metadata":{"modules":[{"name":"HummingbirdFoundation"}],"externalID":"s:10Foundation11JSONDecoderC19KeyDecodingStrategyO20convertFromSnakeCaseyA2EmF","symbolKind":"case","role":"symbol","title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","roleHeading":"Case","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"convertFromSnakeCase","kind":"identifier"}]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The conversion to upper case uses "},{"code":"Locale.system","type":"codeVoice"},{"type":"text","text":", also known as the ICU “root” locale. This means the result is consistent regardless of the current user’s locale and language preferences."}],"type":"paragraph"},{"inlineContent":[{"text":"Converting from snake case to camel case:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Capitalizes the word starting after each "},{"type":"codeVoice","code":"_"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Removes all "},{"type":"codeVoice","code":"_"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Preserves starting and ending ","type":"text"},{"code":"_","type":"codeVoice"},{"text":" (as these are often used to indicate private variables or other metadata).","type":"text"},{"text":" ","type":"text"},{"text":"For example, ","type":"text"},{"code":"one_two_three","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"oneTwoThree","type":"codeVoice"},{"text":". ","type":"text"},{"code":"_one_two_three_","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"_oneTwoThree_","type":"codeVoice"},{"text":".","type":"text"}]}]}],"type":"orderedList"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using a key decoding strategy has a nominal performance cost, as each string key has to be inspected for the "},{"type":"codeVoice","code":"_"},{"type":"text","text":" character."}]}],"style":"note","name":"Note"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/KeyDecodingStrategy-swift.enum":{"navigatorTitle":[{"text":"KeyDecodingStrategy","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KeyDecodingStrategy","kind":"identifier"}],"title":"JSONDecoder.KeyDecodingStrategy","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum","abstract":[{"type":"text","text":"The strategy to use for automatically changing the value of keys before decoding."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"type":"topic","title":"HummingbirdFoundation","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","kind":"symbol","url":"\/documentation\/hummingbirdfoundation","role":"collection","abstract":[{"text":"Hummingbird features that require Foundation.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder/KeyDecodingStrategy-swift.enum/convertFromSnakeCase":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convertFromSnakeCase","kind":"identifier"}],"title":"JSONDecoder.KeyDecodingStrategy.convertFromSnakeCase","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder\/KeyDecodingStrategy-swift.enum\/convertFromSnakeCase","url":"\/documentation\/hummingbirdfoundation\/jsondecoder\/keydecodingstrategy-swift.enum\/convertfromsnakecase","type":"topic","abstract":[{"type":"text","text":"Convert from “snake_case_keys” to “camelCaseKeys” before attempting to match a key with the one specified by each type."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/JSONDecoder":{"navigatorTitle":[{"text":"JSONDecoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/JSONDecoder","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JSONDecoder","kind":"identifier"}],"title":"JSONDecoder","url":"\/documentation\/hummingbirdfoundation\/jsondecoder","abstract":[{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" facilitates the decoding of JSON into semantic "},{"code":"Decodable","type":"codeVoice"},{"text":" types.","type":"text"}],"kind":"symbol"}}}