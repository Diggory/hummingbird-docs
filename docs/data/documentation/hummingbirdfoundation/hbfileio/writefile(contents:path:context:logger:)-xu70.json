{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileIO\/writeFile(contents:path:context:logger:)-xu70"},"abstract":[{"text":"Write contents of request body to file","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdfoundation\/hbfileio\/writefile(contents:path:context:logger:)-xu70"]}],"metadata":{"platforms":[{"introducedAt":"13.0","name":"iOS","beta":false,"deprecated":false,"unavailable":false},{"introducedAt":"10.15","name":"macOS","beta":false,"deprecated":false,"unavailable":false},{"introducedAt":"13.0","name":"tvOS","beta":false,"deprecated":false,"unavailable":false},{"introducedAt":"6.0","name":"watchOS","beta":false,"deprecated":false,"unavailable":false}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"contents","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequestBody","preciseIdentifier":"s:15HummingbirdCore13HBRequestBodyO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequestContext","preciseIdentifier":"s:11Hummingbird16HBRequestContextP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"writeFile(contents:path:context:logger:)","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"HummingbirdFoundation"}],"externalID":"s:21HummingbirdFoundation8HBFileIOV9writeFile8contents4path7context6loggery0A4Core13HBRequestBodyO_SS0A00L7Context_p7Logging6LoggerVtYaKF","role":"symbol","extendedModule":"HummingbirdFoundation"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"contents","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","text":"HBRequestBody","preciseIdentifier":"s:15HummingbirdCore13HBRequestBodyO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestContext","text":"HBRequestContext","preciseIdentifier":"s:11Hummingbird16HBRequestContextP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logger","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Logger","preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"contents","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Request body to write."}]}]},{"name":"path","content":[{"inlineContent":[{"text":"Path to write to","type":"text"}],"type":"paragraph"}]},{"name":"eventLoop","content":[{"type":"paragraph","inlineContent":[{"text":"EventLoop everything runs on","type":"text"}]}]},{"name":"logger","content":[{"inlineContent":[{"text":"Logger","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"This can be used to save arbitrary ByteBuffers by passing in ","type":"text"},{"code":".byteBuffer(ByteBuffer)","type":"codeVoice"},{"text":" as contents","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileIO"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBFileIO/writeFile(contents:path:context:logger:)-xu70":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileIO\/writeFile(contents:path:context:logger:)-xu70","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeFile"},{"kind":"text","text":"("},{"kind":"externalParam","text":"contents"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRequestBody","preciseIdentifier":"s:15HummingbirdCore13HBRequestBodyO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRequestContext","preciseIdentifier":"s:11Hummingbird16HBRequestContextP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV","text":"Logger"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Write contents of request body to file"}],"title":"writeFile(contents:path:context:logger:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbfileio\/writefile(contents:path:context:logger:)-xu70"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation":{"url":"\/documentation\/hummingbirdfoundation","kind":"symbol","title":"HummingbirdFoundation","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation","abstract":[{"type":"text","text":"Hummingbird features that require Foundation."}],"role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestContext":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestContext","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestContext"}],"abstract":[{"text":"Context that created HBRequest.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestContext"}],"title":"HBRequestContext","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBFileIO":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileIO","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBFileIO"}],"abstract":[{"text":"Manages File reading and writing.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBFileIO"}],"title":"HBFileIO","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbfileio"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"url":"\/documentation\/hummingbird\/hbrequestbody","kind":"symbol","title":"HBRequestBody","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBody"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestBody"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","abstract":[{"type":"text","text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer"}],"role":"symbol"}}}