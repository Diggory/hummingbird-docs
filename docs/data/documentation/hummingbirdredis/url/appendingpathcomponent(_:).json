{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/appendingPathComponent(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Returns a URL constructed by appending the given path component to self.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"appendingPathComponent"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"}],"title":"appendingPathComponent(_:)","role":"symbol","modules":[{"name":"HummingbirdRedis"}],"symbolKind":"method","externalID":"s:10Foundation3URLV22appendingPathComponentyACSSF","roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"appendingPathComponent","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"pathComponent","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"pathComponent","content":[{"inlineContent":[{"text":"The path component to add.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This function performs a file system operation to determine if the path component is a directory. If so, it will append a trailing "},{"type":"codeVoice","code":"\/"},{"type":"text","text":". If you know in advance that the path component is a directory or not, then use "},{"type":"codeVoice","code":"func appendingPathComponent(_:isDirectory:)"},{"type":"text","text":"."}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/url\/appendingpathcomponent(_:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URL"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"URL"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","abstract":[{"type":"text","text":"A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data."}],"title":"URL","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdredis\/url"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL/appendingPathComponent(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"appendingPathComponent"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation3URLV","text":"URL","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/appendingPathComponent(_:)","title":"appendingPathComponent(_:)","url":"\/documentation\/hummingbirdredis\/url\/appendingpathcomponent(_:)","abstract":[{"type":"text","text":"Returns a URL constructed by appending the given path component to self."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","role":"collection","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"topic","url":"\/documentation\/hummingbirdredis","kind":"symbol"}}}