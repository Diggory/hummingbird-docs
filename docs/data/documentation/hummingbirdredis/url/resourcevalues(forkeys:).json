{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resourceValues"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forKeys"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"URLResourceKey","preciseIdentifier":"c:@T@NSURLResourceKey"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"URLResourceValues","preciseIdentifier":"s:10Foundation17URLResourceValuesV"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method first checks if the URL object already caches the resource value. If so, it returns the cached resource value to the caller. If not, then this method synchronously obtains the resource value from the backing store, adds the resource value to the URL object’s cache, and returns the resource value to the caller. The type of the resource value varies by resource property (see resource key definitions). If this method does not throw and the resulting value in the "},{"type":"codeVoice","code":"URLResourceValues"},{"type":"text","text":" is populated with nil, it means the resource property is not available for the specified resource and no errors occurred when determining the resource property was not available. This method is currently applicable only to URLs for file system resources."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When this function is used from the main thread, resource values cached by the URL (except those added as temporary properties) are removed the next time the main thread’s run loop runs. "},{"type":"codeVoice","code":"func removeCachedResourceValue(forKey:)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"func removeAllCachedResourceValues()"},{"type":"text","text":" also may be used to remove cached resource values."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Only the values for the keys specified in "},{"type":"codeVoice","code":"keys"},{"type":"text","text":" will be populated."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdredis\/url\/resourcevalues(forkeys:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/resourceValues(forKeys:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Return a collection of resource values identified by the given resource keys."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resourceValues"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forKeys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"URLResourceKey","preciseIdentifier":"c:@T@NSURLResourceKey"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"URLResourceValues","preciseIdentifier":"s:10Foundation17URLResourceValuesV"}],"title":"resourceValues(forKeys:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:10Foundation3URLV14resourceValues7forKeysAA011URLResourceD0VShySo16NSURLResourceKeyaG_tKF","modules":[{"name":"HummingbirdRedis"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL":{"role":"symbol","title":"URL","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URL"}],"abstract":[{"type":"text","text":"A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URL"}],"url":"\/documentation\/hummingbirdredis\/url"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL/resourceValues(forKeys:)":{"role":"symbol","title":"resourceValues(forKeys:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resourceValues"},{"kind":"text","text":"("},{"kind":"externalParam","text":"forKeys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"URLResourceKey","preciseIdentifier":"c:@T@NSURLResourceKey"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"URLResourceValues","preciseIdentifier":"s:10Foundation17URLResourceValuesV"}],"abstract":[{"type":"text","text":"Return a collection of resource values identified by the given resource keys."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/resourceValues(forKeys:)","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdredis\/url\/resourcevalues(forkeys:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","title":"HummingbirdRedis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdredis"}}}