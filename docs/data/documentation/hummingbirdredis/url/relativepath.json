{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/relativePath"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"If the URL conforms to RFC 1808 (the most common form of URL), returns the relative path of the URL; otherwise it returns nil."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"relativePath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"The relative path, or an empty string if the URL has an empty path.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This is the same as path if baseURL is nil."},{"type":"text","text":" "},{"type":"text","text":"If the URL contains a parameter string, it is appended to the path with a "},{"code":";","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This function will resolve against the base "},{"type":"codeVoice","code":"URL"},{"type":"text","text":"."}]}],"name":"Note","type":"aside","style":"note"}]}],"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/url\/relativepath"]}],"metadata":{"roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"relativePath","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"externalID":"s:10Foundation3URLV12relativePathSSvp","symbolKind":"property","role":"symbol","modules":[{"name":"HummingbirdRedis"}],"title":"relativePath"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL":{"type":"topic","title":"URL","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","navigatorTitle":[{"text":"URL","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdredis\/url","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URL","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"type":"topic","title":"HummingbirdRedis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","url":"\/documentation\/hummingbirdredis","role":"collection","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL/relativePath":{"url":"\/documentation\/hummingbirdredis\/url\/relativepath","title":"relativePath","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"relativePath","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/relativePath","role":"symbol","kind":"symbol","abstract":[{"text":"If the URL conforms to RFC 1808 (the most common form of URL), returns the relative path of the URL; otherwise it returns nil.","type":"text"}]}}}