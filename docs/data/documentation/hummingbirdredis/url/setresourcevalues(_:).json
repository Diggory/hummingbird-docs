{"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResourceValues"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"values"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation17URLResourceValuesV","kind":"typeIdentifier","text":"URLResourceValues"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This method writes the new resource values out to the backing store. Attempts to set a read-only resource property or to set a resource property not supported by the resource are ignored and are not considered errors. This method is currently applicable only to URLs for file system resources.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"code":"URLResourceValues","type":"codeVoice"},{"text":" keeps track of which of its properties have been set. Those values are the ones used by this function to determine which properties to write.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL"]]},"sections":[],"abstract":[{"text":"Sets the resource value identified by a given resource key.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/setResourceValues(_:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"HummingbirdRedis"}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResourceValues"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation17URLResourceValuesV","text":"URLResourceValues"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"externalID":"s:10Foundation3URLV17setResourceValuesyyAA011URLResourceE0VKF","title":"setResourceValues(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis\/url\/setresourcevalues(_:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"type":"topic","title":"HummingbirdRedis","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","url":"\/documentation\/hummingbirdredis","role":"collection","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL/setResourceValues(_:)":{"abstract":[{"text":"Sets the resource value identified by a given resource key.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/setResourceValues(_:)","url":"\/documentation\/hummingbirdredis\/url\/setresourcevalues(_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResourceValues"},{"kind":"text","text":"("},{"preciseIdentifier":"s:10Foundation17URLResourceValuesV","kind":"typeIdentifier","text":"URLResourceValues"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"setResourceValues(_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL":{"type":"topic","title":"URL","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","navigatorTitle":[{"text":"URL","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdredis\/url","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"URL","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data."}]}}}