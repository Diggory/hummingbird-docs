{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResourceValues"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"values"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URLResourceValues","preciseIdentifier":"s:10Foundation17URLResourceValuesV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method writes the new resource values out to the backing store. Attempts to set a read-only resource property or to set a resource property not supported by the resource are ignored and are not considered errors. This method is currently applicable only to URLs for file system resources."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"URLResourceValues"},{"type":"text","text":" keeps track of which of its properties have been set. Those values are the ones used by this function to determine which properties to write."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdredis\/url\/setresourcevalues(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/setResourceValues(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Sets the resource value identified by a given resource key."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResourceValues"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URLResourceValues","preciseIdentifier":"s:10Foundation17URLResourceValuesV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"setResourceValues(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:10Foundation3URLV17setResourceValuesyyAA011URLResourceE0VKF","modules":[{"name":"HummingbirdRedis"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL/setResourceValues(_:)":{"role":"symbol","title":"setResourceValues(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResourceValues"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URLResourceValues","preciseIdentifier":"s:10Foundation17URLResourceValuesV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Sets the resource value identified by a given resource key."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/setResourceValues(_:)","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdredis\/url\/setresourcevalues(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","title":"HummingbirdRedis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdredis"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL":{"role":"symbol","title":"URL","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URL"}],"abstract":[{"type":"text","text":"A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URL"}],"url":"\/documentation\/hummingbirdredis\/url"}}}