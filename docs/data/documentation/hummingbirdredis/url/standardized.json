{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"standardized"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","preciseIdentifier":"s:10Foundation3URLV","text":"URL"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdredis\/url\/standardized"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/standardized","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" with any instances of “..” or “.” removed from its path."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"standardized"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"}],"title":"standardized","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:10Foundation3URLV12standardizedACvp","modules":[{"name":"HummingbirdRedis"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL":{"role":"symbol","title":"URL","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URL"}],"abstract":[{"type":"text","text":"A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URL"}],"url":"\/documentation\/hummingbirdredis\/url"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL/standardized":{"role":"symbol","title":"standardized","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"standardized"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"}],"abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" with any instances of “..” or “.” removed from its path."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL\/standardized","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdredis\/url\/standardized"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"role":"collection","title":"HummingbirdRedis","abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdredis"}}}