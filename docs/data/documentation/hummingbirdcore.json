{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"topicSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress"]},{"title":"Request","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput"]},{"title":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback"]},{"title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"]},{"title":"Protocols","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap"]},{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable"]}],"metadata":{"symbolKind":"module","role":"collection","externalID":"HummingbirdCore","roleHeading":"Framework","title":"HummingbirdCore","modules":[{"name":"HummingbirdCore"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based HTTP server. When starting the server you provide it with a struct that conforms to "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" to define how the server should respond to requests. For example the following is a responder that always returns a response containing the word “Hello” in the body."}]},{"syntax":"swift","type":"codeListing","code":["struct HelloResponder: HBHTTPResponder {","    func respond(to request: HBHTTPRequest, context: ChannelHandlerContext, onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You then initialise a "},{"type":"codeVoice","code":"HBHTTPServer"},{"type":"text","text":", call "},{"type":"codeVoice","code":"start"},{"type":"text","text":" on it and then "},{"type":"codeVoice","code":"wait"},{"type":"text","text":"."}]},{"syntax":"swift","type":"codeListing","code":["let eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount)","let server = HBHTTPServer(","    group: eventLoopGroup, ","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()","\/\/ Wait until server closes which never happens as server channel is never closed","try server.wait()"]},{"type":"heading","text":"Swift service lifecycle","anchor":"Swift-service-lifecycle","level":2},{"type":"paragraph","inlineContent":[{"text":"If you are using HummingbirdCore outside of Hummingbird ideally you would use it along with the swift-server library ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"text":". This gives you a framework for clean initialization and shutdown of your server. The following sets up a Lifecycle that initializes the HTTP server and stops it when the application shuts down.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["import Lifecycle","import LifecycleNIOCompat","","let lifecycle = ServiceLifecycle()","lifecycle.register(","    label: \"HTTP Server\",","    start: .eventLoopFuture { self.server.start(responder: MyResponder()) },","    shutdown: .eventLoopFuture(self.server.stop)",")","lifecycle.start { error in","    if let error = error {","        print(\"ERROR: \\(error)\")","    }","}","lifecycle.wait()"]}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"url":"\/documentation\/hummingbirdhttp2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","type":"topic","title":"HummingbirdHTTP2","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBSendable":{"deprecated":true,"abstract":[],"kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbsendable","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBSendable"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSendable"}],"title":"HBSendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBodyStreamer":{"navigatorTitle":[{"text":"HBResponseBodyStreamer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseBodyStreamer"}],"title":"HBResponseBodyStreamer","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbresponsebodystreamer","type":"topic","abstract":[{"type":"text","text":"Object supplying ByteBuffers for a response body"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"title":"HummingbirdCore","url":"\/documentation\/hummingbirdcore","kind":"symbol","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamCallback":{"abstract":[{"type":"text","text":"Function returning streamed byte buffer output"}],"title":"HBStreamCallback","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"HBStreamCallback","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback","url":"\/documentation\/hummingbirdcore\/hbstreamcallback","role":"symbol","navigatorTitle":[{"text":"HBStreamCallback","kind":"identifier"}],"kind":"symbol"},"https://github.com/swift-server/swift-service-lifecycle":{"url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link","titleInlineContent":[{"text":"swift-service-lifecycle","type":"text"}],"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","title":"swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBody":{"url":"\/documentation\/hummingbird\/hbresponsebody","type":"topic","title":"HBResponseBody","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}],"navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}],"abstract":[{"text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError":{"role":"symbol","navigatorTitle":[{"text":"HBHTTPError","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBHTTPError","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","title":"HBHTTPError","url":"\/documentation\/hummingbird\/hbhttperror"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPRequest":{"title":"HBHTTPRequest","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPRequest"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPRequest"}],"url":"\/documentation\/hummingbirdcore\/hbhttprequest","role":"symbol","abstract":[{"text":"HTTP request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","abstract":[{"text":"HTTP server class","type":"text"}],"navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"title":"HBHTTPServer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpserver","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"title":"HBHTTPResponder","kind":"symbol","navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbhttpresponder","role":"symbol","abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","abstract":[{"text":"Address to bind server to","type":"text"}],"navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"title":"HBBindAddress","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBBindAddress","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/hbbindaddress","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponse":{"title":"HBHTTPResponse","url":"\/documentation\/hummingbirdcore\/hbhttpresponse","kind":"symbol","abstract":[{"text":"HTTP response","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponse","kind":"identifier"}],"navigatorTitle":[{"text":"HBHTTPResponse","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPResponseError":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/hbhttpresponseerror","abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponseError"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponseError"}],"title":"HBHTTPResponseError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"kind":"symbol","abstract":[{"text":"Setup child channel for HTTP1","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/http1channelinitializer","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","type":"topic","title":"HTTP1ChannelInitializer","navigatorTitle":[{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1ChannelInitializer","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer":{"abstract":[{"text":"Request body streamer. ","type":"text"},{"code":"HBHTTPDecodeHandler","type":"codeVoice"},{"text":" feeds this with ByteBuffers while the Router consumes them","type":"text"}],"navigatorTitle":[{"text":"HBByteBufferStreamer","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer","title":"HBByteBufferStreamer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBByteBufferStreamer","kind":"identifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"title":"HBRequestBody","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBody"}],"url":"\/documentation\/hummingbird\/hbrequestbody","role":"symbol","abstract":[{"text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerProtocol"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","title":"HBStreamerProtocol","url":"\/documentation\/hummingbird\/hbstreamerprotocol","abstract":[{"type":"text","text":"Protocol for objects providing a stream of ByteBuffers"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBStreamerProtocol"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","navigatorTitle":[{"text":"HBChannelInitializer","kind":"identifier"}],"abstract":[{"text":"HTTPServer child channel initializer protocol","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBChannelInitializer","url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBChannelInitializer","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"type":"topic","title":"HummingbirdTLS","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"role":"collection","kind":"symbol","url":"\/documentation\/hummingbirdtls"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBootstrap":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerBootstrap","kind":"identifier"}],"abstract":[{"text":"Protocol for bootstrap.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap","navigatorTitle":[{"text":"HTTPServerBootstrap","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/httpserverbootstrap","type":"topic","title":"HTTPServerBootstrap","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerOutput":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput","navigatorTitle":[{"kind":"identifier","text":"HBStreamerOutput"}],"abstract":[{"text":"Values returned when we consume the contents of the streamer","type":"text"}],"role":"symbol","title":"HBStreamerOutput","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerOutput"}],"url":"\/documentation\/hummingbird\/hbstreameroutput"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBodyStreamerSequence":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRequestBodyStreamerSequence","kind":"identifier"}],"abstract":[{"text":"AsyncSequence providing ByteBuffers from a request body stream","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestBodyStreamerSequence","kind":"identifier"}],"type":"topic","title":"HBRequestBodyStreamerSequence","url":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence"}}}