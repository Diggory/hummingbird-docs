{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HummingbirdCore contains a Swift NIO based HTTP server. When starting the server you provide it with a struct that conforms to "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" to define how the server should respond to requests. For example the following is a responder that always returns a response containing the word “Hello” in the body."}]},{"type":"codeListing","syntax":"swift","code":["struct HelloResponder: HBHTTPResponder {","    func respond(to request: HBHTTPRequest, context: ChannelHandlerContext, onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You then initialise a "},{"type":"codeVoice","code":"HBHTTPServer"},{"type":"text","text":", call "},{"type":"codeVoice","code":"start"},{"type":"text","text":" on it and then "},{"type":"codeVoice","code":"wait"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount)","let server = HBHTTPServer(","    group: eventLoopGroup, ","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()","\/\/ Wait until server closes which never happens as server channel is never closed","try server.wait()"]},{"anchor":"Swift-service-lifecycle","level":2,"type":"heading","text":"Swift service lifecycle"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are using HummingbirdCore outside of Hummingbird ideally you would use it along with the swift-server library "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"type":"text","text":". This gives you a framework for clean initialization and shutdown of your server. The following sets up a Lifecycle that initializes the HTTP server and stops it when the application shuts down."}]},{"type":"codeListing","syntax":"swift","code":["import Lifecycle","import LifecycleNIOCompat","","let lifecycle = ServiceLifecycle()","lifecycle.register(","    label: \"HTTP Server\",","    start: .eventLoopFuture { self.server.start(responder: MyResponder()) },","    shutdown: .eventLoopFuture(self.server.stop)",")","lifecycle.start { error in","    if let error = error {","        print(\"ERROR: \\(error)\")","    }","}","lifecycle.wait()"]}]}],"variants":[{"paths":["\/documentation\/hummingbirdcore"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"HummingbirdCore","title":"HummingbirdCore","symbolKind":"module","role":"collection","modules":[{"name":"HummingbirdCore"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TSTLSOptions"]},{"title":"Request","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput"]},{"title":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback"]},{"title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"]},{"title":"Type Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","title":"HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBodyStreamer":{"role":"symbol","title":"HBResponseBodyStreamer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseBodyStreamer"}],"abstract":[{"type":"text","text":"Object supplying ByteBuffers for a response body"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBResponseBodyStreamer"}],"url":"\/documentation\/hummingbird\/hbresponsebodystreamer"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerOutput":{"role":"symbol","title":"HBStreamerOutput","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerOutput"}],"abstract":[{"type":"text","text":"Values returned when we consume the contents of the streamer"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBStreamerOutput"}],"url":"\/documentation\/hummingbird\/hbstreameroutput"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"role":"symbol","title":"HTTP1ChannelInitializer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"abstract":[{"type":"text","text":"Setup child channel for HTTP1"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"url":"\/documentation\/hummingbirdcore\/http1channelinitializer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponse":{"role":"symbol","title":"HBHTTPResponse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponse"}],"abstract":[{"type":"text","text":"HTTP response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponse"}],"url":"\/documentation\/hummingbirdcore\/hbhttpresponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"role":"collection","title":"HummingbirdTLS","abstract":[{"type":"text","text":"Add TLS support to Hummingbird server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdtls"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"role":"symbol","title":"HBHTTPServer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}],"abstract":[{"type":"text","text":"HTTP server class"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}],"url":"\/documentation\/hummingbirdcore\/hbhttpserver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer":{"role":"symbol","title":"HBByteBufferStreamer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBByteBufferStreamer"}],"abstract":[{"type":"text","text":"Request body streamer. "},{"type":"codeVoice","code":"HBHTTPDecodeHandler"},{"type":"text","text":" feeds this with ByteBuffers while the Router consumes them"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBByteBufferStreamer"}],"url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"role":"symbol","title":"HBBindAddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBindAddress"}],"abstract":[{"type":"text","text":"Address to bind server to"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBBindAddress"}],"url":"\/documentation\/hummingbird\/hbbindaddress"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TSTLSOptions":{"role":"symbol","title":"TSTLSOptions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TSTLSOptions"}],"abstract":[{"type":"text","text":"Wrapper for NIO transport services TLS options"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TSTLSOptions","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TSTLSOptions"}],"url":"\/documentation\/hummingbird\/tstlsoptions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","title":"HummingbirdHTTP2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdhttp2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBSendable":{"role":"symbol","title":"HBSendable","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSendable"}],"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBSendable"}],"url":"\/documentation\/hummingbirdcore\/hbsendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPRequest":{"role":"symbol","title":"HBHTTPRequest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPRequest"}],"abstract":[{"type":"text","text":"HTTP request"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBHTTPRequest"}],"url":"\/documentation\/hummingbirdcore\/hbhttprequest"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPResponseError":{"role":"symbol","title":"HBHTTPResponseError","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponseError"}],"abstract":[{"type":"text","text":"An error that is capable of generating an HTTP response"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponseError"}],"url":"\/documentation\/hummingbird\/hbhttpresponseerror"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"role":"symbol","title":"HBChannelInitializer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBChannelInitializer"}],"abstract":[{"type":"text","text":"HTTPServer child channel initializer protocol"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBChannelInitializer"}],"url":"\/documentation\/hummingbirdcore\/hbchannelinitializer"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"role":"symbol","title":"HBRequestBody","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBody"}],"abstract":[{"type":"text","text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRequestBody"}],"url":"\/documentation\/hummingbird\/hbrequestbody"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBody":{"role":"symbol","title":"HBResponseBody","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseBody"}],"abstract":[{"type":"text","text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBResponseBody"}],"url":"\/documentation\/hummingbird\/hbresponsebody"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerProtocol":{"role":"symbol","title":"HBStreamerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamerProtocol"}],"abstract":[{"type":"text","text":"Protocol for objects providing a stream of ByteBuffers"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBStreamerProtocol"}],"url":"\/documentation\/hummingbird\/hbstreamerprotocol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBodyStreamerSequence":{"role":"symbol","title":"HBRequestBodyStreamerSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBodyStreamerSequence"}],"abstract":[{"type":"text","text":"AsyncSequence providing ByteBuffers from a request body stream"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBRequestBodyStreamerSequence"}],"url":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError":{"role":"symbol","title":"HBHTTPError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPError"}],"abstract":[{"type":"text","text":"Default HTTP error. Provides an HTTP status and a message is so desired"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBHTTPError"}],"url":"\/documentation\/hummingbird\/hbhttperror"},"https://github.com/swift-server/swift-service-lifecycle":{"title":"swift-service-lifecycle","titleInlineContent":[{"type":"text","text":"swift-service-lifecycle"}],"type":"link","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamCallback":{"role":"symbol","title":"HBStreamCallback","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBStreamCallback"}],"abstract":[{"type":"text","text":"Function returning streamed byte buffer output"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBStreamCallback"}],"url":"\/documentation\/hummingbirdcore\/hbstreamcallback"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"role":"symbol","title":"HBHTTPResponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"abstract":[{"type":"text","text":"Protocol for objects generating a "},{"type":"codeVoice","code":"HBHTTPResponse"},{"type":"text","text":" from a "},{"type":"codeVoice","code":"HBHTTPRequest"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}],"url":"\/documentation\/hummingbirdcore\/hbhttpresponder"}}}