{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress"]},{"title":"Request","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput"]},{"title":"Response","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback"]},{"title":"Errors","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"]},{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap"],"generated":true},{"title":"Type Aliases","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable"],"generated":true}],"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"HummingbirdCore contains a Swift NIO based HTTP server. When starting the server you provide it with a struct that conforms to ","type":"text"},{"code":"HBHTTPResponder","type":"codeVoice"},{"text":" to define how the server should respond to requests. For example the following is a responder that always returns a response containing the word “Hello” in the body.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["struct HelloResponder: HBHTTPResponder {","    func respond(to request: HBHTTPRequest, context: ChannelHandlerContext, onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"]},{"inlineContent":[{"type":"text","text":"You then initialise a "},{"type":"codeVoice","code":"HBHTTPServer"},{"type":"text","text":", call "},{"type":"codeVoice","code":"start"},{"type":"text","text":" on it and then "},{"type":"codeVoice","code":"wait"},{"type":"text","text":"."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount)","let server = HBHTTPServer(","    group: eventLoopGroup, ","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()","\/\/ Wait until server closes which never happens as server channel is never closed","try server.wait()"]},{"level":2,"anchor":"Swift-service-lifecycle","type":"heading","text":"Swift service lifecycle"},{"inlineContent":[{"text":"If you are using HummingbirdCore outside of Hummingbird ideally you would use it along with the swift-server library ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle"},{"text":". This gives you a framework for clean initialization and shutdown of your server. The following sets up a Lifecycle that initializes the HTTP server and stops it when the application shuts down.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import Lifecycle","import LifecycleNIOCompat","","let lifecycle = ServiceLifecycle()","lifecycle.register(","    label: \"HTTP Server\",","    start: .eventLoopFuture { self.server.start(responder: MyResponder()) },","    shutdown: .eventLoopFuture(self.server.stop)",")","lifecycle.start { error in","    if let error = error {","        print(\"ERROR: \\(error)\")","    }","}","lifecycle.wait()"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS"]}],"sections":[],"metadata":{"externalID":"HummingbirdCore","role":"collection","symbolKind":"module","roleHeading":"Framework","modules":[{"name":"HummingbirdCore"}],"title":"HummingbirdCore"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[[]]},"abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerOutput":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamerOutput","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerOutput","kind":"symbol","abstract":[{"text":"Values returned when we consume the contents of the streamer","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/hbstreameroutput","role":"symbol","navigatorTitle":[{"text":"HBStreamerOutput","kind":"identifier"}],"title":"HBStreamerOutput"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBody":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBody","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBody","kind":"symbol","abstract":[{"text":"Response body. Can be a single ByteBuffer, a stream of ByteBuffers or empty","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/hbresponsebody","role":"symbol","navigatorTitle":[{"text":"HBResponseBody","kind":"identifier"}],"title":"HBResponseBody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"title":"HTTP1ChannelInitializer","navigatorTitle":[{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/http1channelinitializer","abstract":[{"type":"text","text":"Setup child channel for HTTP1"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPError":{"url":"\/documentation\/hummingbird\/hbhttperror","kind":"symbol","role":"symbol","title":"HBHTTPError","navigatorTitle":[{"kind":"identifier","text":"HBHTTPError"}],"type":"topic","abstract":[{"text":"Default HTTP error. Provides an HTTP status and a message is so desired","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPError"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPError"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBSendable":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSendable"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbsendable","navigatorTitle":[{"kind":"identifier","text":"HBSendable"}],"deprecated":true,"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBSendable","abstract":[],"title":"HBSendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBStreamerProtocol":{"type":"topic","title":"HBStreamerProtocol","url":"\/documentation\/hummingbird\/hbstreamerprotocol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBStreamerProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBStreamerProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"HBStreamerProtocol","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Protocol for objects providing a stream of ByteBuffers","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}],"title":"HummingbirdCore","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBByteBufferStreamer":{"title":"HBByteBufferStreamer","navigatorTitle":[{"text":"HBByteBufferStreamer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBByteBufferStreamer","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBByteBufferStreamer","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbbytebufferstreamer","abstract":[{"type":"text","text":"Request body streamer. "},{"type":"codeVoice","code":"HBHTTPDecodeHandler"},{"type":"text","text":" feeds this with ByteBuffers while the Router consumes them"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdHTTP2":{"role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdHTTP2","abstract":[{"type":"text","text":"Add HTTP2 support to Hummingbird server"}],"title":"HummingbirdHTTP2","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdhttp2"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseBodyStreamer":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseBodyStreamer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseBodyStreamer","kind":"symbol","abstract":[{"text":"Object supplying ByteBuffers for a response body","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/hbresponsebodystreamer","role":"symbol","navigatorTitle":[{"text":"HBResponseBodyStreamer","kind":"identifier"}],"title":"HBResponseBodyStreamer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponse":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponse","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponse","kind":"symbol","abstract":[{"text":"HTTP response","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponse","role":"symbol","navigatorTitle":[{"text":"HBHTTPResponse","kind":"identifier"}],"title":"HBHTTPResponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"abstract":[{"type":"text","text":"HTTPServer child channel initializer protocol"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBChannelInitializer"}],"kind":"symbol","title":"HBChannelInitializer","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBChannelInitializer"}],"url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer"},"https://github.com/swift-server/swift-service-lifecycle":{"identifier":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","url":"https:\/\/github.com\/swift-server\/swift-service-lifecycle","type":"link","titleInlineContent":[{"text":"swift-service-lifecycle","type":"text"}],"title":"swift-service-lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTPServerBootstrap":{"title":"HTTPServerBootstrap","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTPServerBootstrap","navigatorTitle":[{"kind":"identifier","text":"HTTPServerBootstrap"}],"abstract":[{"text":"Protocol for bootstrap.","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerBootstrap"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdcore\/httpserverbootstrap"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"title":"HBBindAddress","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","navigatorTitle":[{"kind":"identifier","text":"HBBindAddress"}],"abstract":[{"text":"Address to bind server to","type":"text"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBindAddress"}],"role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/hbbindaddress"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"abstract":[{"type":"text","text":"HTTP server class"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPServer","kind":"identifier"}],"title":"HBHTTPServer","navigatorTitle":[{"text":"HBHTTPServer","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbhttpserver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBStreamCallback":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBStreamCallback","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBStreamCallback","kind":"symbol","abstract":[{"text":"Function returning streamed byte buffer output","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdcore\/hbstreamcallback","role":"symbol","navigatorTitle":[{"text":"HBStreamCallback","kind":"identifier"}],"title":"HBStreamCallback"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"title":"HBHTTPResponder","navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponder","abstract":[{"type":"text","text":"Protocol for objects generating a "},{"type":"codeVoice","code":"HBHTTPResponse"},{"type":"text","text":" from a "},{"type":"codeVoice","code":"HBHTTPRequest"},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdTLS":{"role":"collection","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdTLS","title":"HummingbirdTLS","abstract":[{"text":"Add TLS support to Hummingbird server","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdtls"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestBody":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestBody"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequestBody"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestBody","abstract":[{"type":"text","text":"Request Body. Either a ByteBuffer or a ByteBuffer streamer"}],"title":"HBRequestBody","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbrequestbody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPRequest":{"title":"HBHTTPRequest","navigatorTitle":[{"text":"HBHTTPRequest","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPRequest","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPRequest","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttprequest","abstract":[{"type":"text","text":"HTTP request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBHTTPResponseError":{"abstract":[{"text":"An error that is capable of generating an HTTP response","type":"text"}],"type":"topic","navigatorTitle":[{"text":"HBHTTPResponseError","kind":"identifier"}],"kind":"symbol","title":"HBHTTPResponseError","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponseError","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbhttpresponseerror","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBHTTPResponseError"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBRequestBodyStreamerSequence":{"abstract":[{"text":"AsyncSequence providing ByteBuffers from a request body stream","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBRequestBodyStreamerSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBRequestBodyStreamerSequence"}],"title":"HBRequestBodyStreamerSequence","navigatorTitle":[{"kind":"identifier","text":"HBRequestBodyStreamerSequence"}],"url":"\/documentation\/hummingbirdcore\/hbrequestbodystreamersequence"}}}