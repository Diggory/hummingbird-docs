{"schemaVersion":{"minor":3,"major":0,"patch":0},"relationshipsSections":[{"title":"Conforming Types","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication\/HTTPResponder"],"type":"conformingTypes"}],"variants":[{"paths":["\/documentation\/hummingbirdcore\/hbhttpresponder"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Server","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress"]}],"metadata":{"role":"symbol","externalID":"s:15HummingbirdCore15HBHTTPResponderP","symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}],"roleHeading":"Protocol","title":"HBHTTPResponder","modules":[{"name":"HummingbirdCore"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"This is the core interface to the HummingbirdCore library. You need to provide an object that conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" when you call "},{"type":"codeVoice","code":"HTTPServer.start"},{"type":"text","text":". This object is used to define how"},{"type":"text","text":" "},{"type":"text","text":"you convert requests to the server into responses."}],"type":"paragraph"},{"inlineContent":[{"text":"This is an example ","type":"text"},{"code":"HBHTTPResponder","type":"codeVoice"},{"text":" that replies with a response with body “Hello”. Once you","type":"text"},{"text":" ","type":"text"},{"text":"have your response you need to call ","type":"text"},{"code":"onComplete","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["struct HelloResponder: HBHTTPResponder {","    func respond(","        to request: HBHTTPRequest,","        context: ChannelHandlerContext,","        onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void","    ) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"]},{"inlineContent":[{"type":"text","text":"The following will start up a server using the above "},{"code":"HelloResponder","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let server = HBHTTPServer(","    group: eventLoopGroup,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"sections":[],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","url":"\/documentation\/hummingbirdcore\/hbchannelinitializer","navigatorTitle":[{"kind":"identifier","text":"HBChannelInitializer"}],"abstract":[{"type":"text","text":"HTTPServer child channel initializer protocol"}],"title":"HBChannelInitializer","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBChannelInitializer"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"type":"topic","url":"\/documentation\/hummingbirdcore\/http1channelinitializer","navigatorTitle":[{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"abstract":[{"text":"Setup child channel for HTTP1","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP1ChannelInitializer","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"HTTP1ChannelInitializer","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerRemoved(context:)-65gds":{"role":"symbol","abstract":[{"type":"text","text":"Called when HTTP server handler is removed from channel"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","defaultImplementations":1,"title":"handlerRemoved(context:)","required":true,"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-65gds"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"url":"\/documentation\/hummingbirdcore\/hbhttpresponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"kind":"symbol","title":"HBHTTPResponder","abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"code":"HBHTTPResponse","type":"codeVoice"},{"text":" from a ","type":"text"},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","type":"topic","navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","title":"HBBindAddress","type":"topic","url":"\/documentation\/hummingbird\/hbbindaddress","abstract":[{"type":"text","text":"Address to bind server to"}],"navigatorTitle":[{"kind":"identifier","text":"HBBindAddress"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBBindAddress"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBApplication/HTTPResponder":{"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBApplication\/HTTPResponder","abstract":[{"type":"text","text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore"}],"title":"HBApplication.HTTPResponder","url":"\/documentation\/hummingbird\/hbapplication\/httpresponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/respond(to:context:onComplete:)":{"type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/respond(to:context:oncomplete:)","kind":"symbol","abstract":[{"text":"Passes request to be responded to and function to call when response is ready. It is required your implementation","type":"text"},{"text":" ","type":"text"},{"text":"calls ","type":"text"},{"code":"onComplete","type":"codeVoice"},{"text":" otherwise the server will never receive a response","type":"text"}],"role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)","title":"respond(to:context:onComplete:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore13HBHTTPRequestV","text":"HBHTTPRequest"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onComplete"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore14HBHTTPResponseV","text":"HBHTTPResponse"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerAdded(context:)-8f1ye":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-8f1ye","abstract":[{"text":"Called when HTTP server handler is added to channel","type":"text"}],"required":true,"defaultImplementations":1,"kind":"symbol","title":"handlerAdded(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerAdded","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/logger-9ouqb":{"title":"logger","type":"topic","abstract":[{"text":"Logger used by responder","type":"text"}],"required":true,"defaultImplementations":1,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-9ouqb"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","title":"HBHTTPServer","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpserver","abstract":[{"type":"text","text":"HTTP server class"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"role":"collection","abstract":[{"text":"Swift NIO based HTTP server.","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdcore","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","title":"HummingbirdCore"}}}