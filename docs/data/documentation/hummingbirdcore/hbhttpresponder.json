{"metadata":{"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"HBHTTPResponder"}],"externalID":"s:15HummingbirdCore15HBHTTPResponderP","modules":[{"name":"HummingbirdCore"}],"symbolKind":"protocol","role":"symbol","title":"HBHTTPResponder","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}]},"kind":"symbol","topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)"]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcore\/hbhttpresponder"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress"],"title":"Server","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","interfaceLanguage":"swift"},"abstract":[{"text":"Protocol for objects generating a ","type":"text"},{"type":"codeVoice","code":"HBHTTPResponse"},{"text":" from a ","type":"text"},{"type":"codeVoice","code":"HBHTTPRequest"},{"text":".","type":"text"}],"relationshipsSections":[{"kind":"relationships","title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication\/HTTPResponder"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPResponder"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the core interface to the HummingbirdCore library. You need to provide an object that conforms"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" when you call "},{"type":"codeVoice","code":"HTTPServer.start"},{"type":"text","text":". This object is used to define how"},{"type":"text","text":" "},{"type":"text","text":"you convert requests to the server into responses."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is an example "},{"type":"codeVoice","code":"HBHTTPResponder"},{"type":"text","text":" that replies with a response with body “Hello”. Once you"},{"type":"text","text":" "},{"type":"text","text":"have your response you need to call "},{"type":"codeVoice","code":"onComplete"},{"type":"text","text":"."}]},{"code":["struct HelloResponder: HBHTTPResponder {","    func respond(","        to request: HBHTTPRequest,","        context: ChannelHandlerContext,","        onComplete: @escaping (Result<HBHTTPResponse, Error>) -> Void","    ) {","        let responseHead = HTTPResponseHead(version: .init(major: 1, minor: 1), status: .ok)","        let responseBody = context.channel.allocator.buffer(string: \"Hello\")","        let response = HBHTTPResponse(head: responseHead, body: .byteBuffer(responseBody))","        onComplete(.success(response))","    }","}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"text":"The following will start up a server using the above ","type":"text"},{"code":"HelloResponder","type":"codeVoice"},{"text":".","type":"text"}]},{"code":["let server = HBHTTPServer(","    group: eventLoopGroup,","    configuration: .init(address: .hostname(\"127.0.0.1\", port: 8080))",")","try server.start(responder: HelloResponder()).wait()"],"type":"codeListing","syntax":null}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBHTTPResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/hbhttpresponder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder","title":"HBHTTPResponder","kind":"symbol","navigatorTitle":[{"text":"HBHTTPResponder","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for objects generating a "},{"type":"codeVoice","code":"HBHTTPResponse"},{"type":"text","text":" from a "},{"code":"HBHTTPRequest","type":"codeVoice"},{"text":".","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/logger-9ouqb":{"title":"logger","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/logger-9ouqb","required":true,"role":"symbol","defaultImplementations":1,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/logger-9ouqb","abstract":[{"type":"text","text":"Logger used by responder"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerRemoved(context:)-65gds":{"required":true,"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerRemoved"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"defaultImplementations":1,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerRemoved(context:)-65gds","title":"handlerRemoved(context:)","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handlerremoved(context:)-65gds","abstract":[{"type":"text","text":"Called when HTTP server handler is removed from channel"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBBindAddress":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBBindAddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"HBBindAddress","kind":"identifier"}],"navigatorTitle":[{"text":"HBBindAddress","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBBindAddress","abstract":[{"text":"Address to bind server to","type":"text"}],"url":"\/documentation\/hummingbird\/hbbindaddress"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/respond(to:context:onComplete:)":{"kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/respond(to:context:oncomplete:)","abstract":[{"type":"text","text":"Passes request to be responded to and function to call when response is ready. It is required your implementation"},{"type":"text","text":" "},{"type":"text","text":"calls "},{"code":"onComplete","type":"codeVoice"},{"text":" otherwise the server will never receive a response","type":"text"}],"role":"symbol","title":"respond(to:context:onComplete:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/respond(to:context:onComplete:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBHTTPRequest","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore13HBHTTPRequestV"},{"text":", ","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onComplete"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdCore14HBHTTPResponseV","kind":"typeIdentifier","text":"HBHTTPResponse"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPResponder/handlerAdded(context:)-8f1ye":{"required":true,"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"defaultImplementations":1,"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPResponder\/handlerAdded(context:)-8f1ye","title":"handlerAdded(context:)","url":"\/documentation\/hummingbirdcore\/hbhttpresponder\/handleradded(context:)-8f1ye","abstract":[{"type":"text","text":"Called when HTTP server handler is added to channel"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBHTTPServer":{"url":"\/documentation\/hummingbirdcore\/hbhttpserver","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBHTTPServer"}],"type":"topic","kind":"symbol","title":"HBHTTPServer","abstract":[{"type":"text","text":"HTTP server class"}],"navigatorTitle":[{"kind":"identifier","text":"HBHTTPServer"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBHTTPServer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HBChannelInitializer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HBChannelInitializer","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBChannelInitializer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HBChannelInitializer"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBChannelInitializer","abstract":[{"type":"text","text":"HTTPServer child channel initializer protocol"}],"url":"\/documentation\/hummingbirdcore\/hbchannelinitializer"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBApplication/HTTPResponder":{"navigatorTitle":[{"kind":"identifier","text":"HTTPResponder"}],"title":"HBApplication.HTTPResponder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBApplication\/HTTPResponder","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponder"}],"url":"\/documentation\/hummingbirdauth\/hbapplication\/httpresponder","abstract":[{"type":"text","text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore":{"type":"topic","title":"HummingbirdCore","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore","kind":"symbol","url":"\/documentation\/hummingbirdcore","role":"collection","abstract":[{"type":"text","text":"Swift NIO based HTTP server."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/HTTP1ChannelInitializer":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/HTTP1ChannelInitializer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"navigatorTitle":[{"kind":"identifier","text":"HTTP1ChannelInitializer"}],"type":"topic","role":"symbol","kind":"symbol","title":"HTTP1ChannelInitializer","abstract":[{"type":"text","text":"Setup child channel for HTTP1"}],"url":"\/documentation\/hummingbirdcore\/http1channelinitializer"}}}