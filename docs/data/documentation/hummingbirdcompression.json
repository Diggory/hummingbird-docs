{"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/HTTPDecompressionLimit"],"title":"Structures","generated":true}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/hummingbirdcompression"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Adds request decompression and response compression to Hummingbird","type":"text"}],"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Add support for compressing HTTP response data. Adding response compression means when a request comes in with header ","type":"text"},{"code":"accept-encoding","type":"codeVoice"},{"text":" set to ","type":"text"},{"code":"gzip","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"deflate","type":"codeVoice"},{"text":" the server will compression the response body.","type":"text"}]},{"type":"codeListing","code":["let app = HBApplication()","\/\/ run response compression on application thread pool when buffer is ","\/\/ larger than 32768 bytes otherwise run it on the eventloop","app.addResponseCompression(execute: .onThreadPool(threshold: 32768))"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Add support for decompressing HTTP request data. Adding request decompression means when a request comes in with header ","type":"text"},{"code":"content-encoding","type":"codeVoice"},{"text":" set to ","type":"text"},{"code":"gzip","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"deflate"},{"text":" the server will attempt to decompress the request body.","type":"text"}]},{"type":"codeListing","code":["\/\/ run request decompression on eventloop with no limit to the size","\/\/ of data that can be decompressed","app.addRequestDecompression(execute: .onEventLoop, limit: .none)"],"syntax":"swift"}],"kind":"content"}],"metadata":{"externalID":"HummingbirdCompression","title":"HummingbirdCompression","modules":[{"name":"HummingbirdCompression"}],"role":"collection","roleHeading":"Framework","symbolKind":"module"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/HTTPDecompressionLimit":{"role":"symbol","navigatorTitle":[{"text":"HTTPDecompressionLimit","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Limits for when decompressing HTTP request data","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPDecompressionLimit","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/HTTPDecompressionLimit","title":"HTTPDecompressionLimit","url":"\/documentation\/hummingbirdcompression\/httpdecompressionlimit"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"role":"collection","kind":"symbol","abstract":[{"text":"Adds request decompression and response compression to Hummingbird","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","title":"HummingbirdCompression","url":"\/documentation\/hummingbirdcompression"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"}}}