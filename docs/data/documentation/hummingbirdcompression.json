{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Add support for compressing HTTP response data. Adding response compression means when a request comes in with header "},{"type":"codeVoice","code":"accept-encoding"},{"type":"text","text":" set to "},{"type":"codeVoice","code":"gzip"},{"type":"text","text":" or "},{"type":"codeVoice","code":"deflate"},{"type":"text","text":" the server will compression the response body."}],"type":"paragraph"},{"code":["let app = HBApplication()","\/\/ run response compression on application thread pool when buffer is ","\/\/ larger than 32768 bytes otherwise run it on the eventloop","app.addResponseCompression(execute: .onThreadPool(threshold: 32768))"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Add support for decompressing HTTP request data. Adding request decompression means when a request comes in with header ","type":"text"},{"type":"codeVoice","code":"content-encoding"},{"text":" set to ","type":"text"},{"type":"codeVoice","code":"gzip"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"deflate"},{"text":" the server will attempt to decompress the request body.","type":"text"}],"type":"paragraph"},{"code":["\/\/ run request decompression on eventloop with no limit to the size","\/\/ of data that can be decompressed","app.addRequestDecompression(execute: .onEventLoop, limit: .none)"],"type":"codeListing","syntax":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdcompression"]}],"abstract":[{"text":"Adds request decompression and response compression to Hummingbird","type":"text"}],"sections":[],"metadata":{"role":"collection","roleHeading":"Framework","title":"HummingbirdCompression","externalID":"HummingbirdCompression","modules":[{"name":"HummingbirdCompression"}],"symbolKind":"module"},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/HTTPDecompressionLimit"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression/HTTPDecompressionLimit":{"url":"\/documentation\/hummingbirdcompression\/httpdecompressionlimit","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPDecompressionLimit","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HTTPDecompressionLimit","kind":"identifier"}],"abstract":[{"text":"Limits for when decompressing HTTP request data","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression\/HTTPDecompressionLimit","title":"HTTPDecompressionLimit"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCompression":{"url":"\/documentation\/hummingbirdcompression","role":"collection","kind":"symbol","abstract":[{"text":"Adds request decompression and response compression to Hummingbird","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCompression","title":"HummingbirdCompression"}}}