{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"eventLoopGroup","content":[{"inlineContent":[{"text":"EventLoop to run access to queue","type":"text"}],"type":"paragraph"}]}]}],"abstract":[{"type":"text","text":"Initialise In memory job queue"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/init(eventloop:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue\/init(eventLoop:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","roleHeading":"Initializer","externalID":"s:15HummingbirdJobs16HBMemoryJobQueueC9eventLoopAC7NIOCore05EventG0_p_tcfc","modules":[{"name":"HummingbirdJobs"}],"symbolKind":"init","title":"init(eventLoop:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":")"}]},"sections":[],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue/init(eventLoop:)":{"type":"topic","url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue\/init(eventloop:)","abstract":[{"text":"Initialise In memory job queue","type":"text"}],"title":"init(eventLoop:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"eventLoop","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue\/init(eventLoop:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs/HBMemoryJobQueue":{"title":"HBMemoryJobQueue","navigatorTitle":[{"kind":"identifier","text":"HBMemoryJobQueue"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBMemoryJobQueue"}],"url":"\/documentation\/hummingbirdjobs\/hbmemoryjobqueue","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs\/HBMemoryJobQueue","role":"symbol","abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores jobs in a circular buffer"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdJobs":{"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}],"title":"HummingbirdJobs","role":"collection","url":"\/documentation\/hummingbirdjobs","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdJobs"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"kind":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","url":"\/documentation\/hummingbird\/eventloop","type":"topic","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"code":"Channel","type":"codeVoice"},{"text":"s until itâ€™s closed.","type":"text"}]}}}