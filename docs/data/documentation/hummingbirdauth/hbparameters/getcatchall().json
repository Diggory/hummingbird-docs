{"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbparameters\/getcatchall()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters\/getCatchAll()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"]"}],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","metadata":{"externalID":"s:11Hummingbird12HBParametersV11getCatchAllSaySsGyF","title":"getCatchAll()","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"]"}],"modules":[{"name":"HummingbirdAuth"}],"roleHeading":"Instance Method","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBParameters":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBParameters"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParameters"}],"title":"HBParameters","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters","url":"\/documentation\/hummingbirdauth\/hbparameters","type":"topic","abstract":[{"type":"text","text":"Store for parameters key, value pairs extracted from URI"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBParameters/getCatchAll()":{"abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBParameters\/getCatchAll()","title":"getCatchAll()","type":"topic","url":"\/documentation\/hummingbirdauth\/hbparameters\/getcatchall()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]}}}