{"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/Se"],"kind":"relationships","type":"inheritsFrom"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBRouteHandler","preciseIdentifier":"s:11Hummingbird14HBRouteHandlerP","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler"},{"text":", ","kind":"text"},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An example"}]},{"code":["struct CreateUser: HBRequestDecodable {","    let username: String","    let password: String","    func handle(request: HBRequest) -> EventLoopFuture<HTTPResponseStatus> {","        return addUserToDatabase(","            name: self.username,","            password: self.password","        ).map { _ in .ok }","}","application.router.put(\"user\", use: CreateUser.self)"],"type":"codeListing","syntax":null}],"kind":"content"}],"metadata":{"roleHeading":"Protocol","modules":[{"name":"HummingbirdAuth"}],"title":"HBRequestDecodable","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"symbolKind":"protocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}],"externalID":"s:11Hummingbird18HBRequestDecodableP"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbrequestdecodable"]}],"abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/Se"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBRouterGroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"url":"\/documentation\/hummingbirdauth\/hbroutergroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncRouteHandler":{"url":"\/documentation\/hummingbirdauth\/hbasyncroutehandler","abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncRouteHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"HBAsyncRouteHandler","kind":"identifier"}],"navigatorTitle":[{"text":"HBAsyncRouteHandler","kind":"identifier"}],"type":"topic","title":"HBAsyncRouteHandler","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRequestDecodable":{"url":"\/documentation\/hummingbirdauth\/hbrequestdecodable","abstract":[{"type":"codeVoice","code":"HBRouteHandler"},{"type":"text","text":" which uses "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" to initialize it"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRequestDecodable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequestDecodable"}],"navigatorTitle":[{"kind":"identifier","text":"HBRequestDecodable"}],"type":"topic","title":"HBRequestDecodable","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncCallbackResponder":{"url":"\/documentation\/hummingbirdauth\/hbasynccallbackresponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncCallbackResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"type":"topic","title":"HBAsyncCallbackResponder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouteHandler":{"abstract":[{"text":"Object for handling requests.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"url":"\/documentation\/hummingbirdauth\/hbroutehandler","title":"HBRouteHandler","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterBuilder":{"url":"\/documentation\/hummingbirdauth\/hbrouterbuilder","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"type":"topic","kind":"symbol","title":"HBRouterBuilder","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBResponder":{"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBResponder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"title":"HBResponder","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbresponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBCallbackResponder":{"url":"\/documentation\/hummingbirdauth\/hbcallbackresponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCallbackResponder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"type":"topic","title":"HBCallbackResponder","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethods":{"abstract":[{"type":"text","text":"Conform to "},{"code":"HBRouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post â€¦) methods"}],"title":"HBRouterMethods","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"role":"symbol","url":"\/documentation\/hummingbirdauth\/hbroutermethods","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethods"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBRouterMethodOptions":{"type":"topic","title":"HBRouterMethodOptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBRouterMethodOptions","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbroutermethodoptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Options available to routes"}]}}}