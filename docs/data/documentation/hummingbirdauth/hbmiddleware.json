{"schemaVersion":{"patch":0,"minor":3,"major":0},"relationshipsSections":[{"title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncSessionAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator"],"type":"inheritedBy","kind":"relationships"},{"title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMetricsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"],"type":"conformingTypes","kind":"relationships"}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddleware\/apply(to:next:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddleware","kind":"identifier"}],"title":"HBMiddleware","externalID":"s:11Hummingbird12HBMiddlewareP","navigatorTitle":[{"text":"HBMiddleware","kind":"identifier"}],"modules":[{"name":"HummingbirdAuth"}],"roleHeading":"Protocol","symbolKind":"protocol","role":"symbol"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddleware"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"Middleware is added to the application by calling ","type":"text"},{"code":"app.middleware.add(MyMiddleware()","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Middleware allows you to process a request before it reaches your request handler and then process the response","type":"text"},{"text":" ","type":"text"},{"text":"returned by that handler.","type":"text"}],"type":"paragraph"},{"code":["func apply(to request: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse> {","    let request = processRequest(request)","    return next.respond(to: request).map { response in","        return processResponse(response)","    }","}"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"Middleware also allows you to shortcut the whole process and not pass on the request to the handler","type":"text"}],"type":"paragraph"},{"code":["func apply(to request: HBRequest, next: HBResponder) -> EventLoopFuture<HBResponse> {","    if request.method == .OPTIONS {","        return request.success(HBResponse(status: .noContent))","    } else {","        return next.respond(to: request)","    }","}"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddleware","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdauth\/hbmiddleware"]}],"seeAlsoSections":[{"title":"Middleware","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddlewareGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCORSMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBLogRequestsMiddleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMetricsMiddleware"]}],"sections":[],"abstract":[{"text":"Applied to ","type":"text"},{"code":"HBRequest","type":"codeVoice"},{"text":" before it is dealt with by the router. Middleware passes the processed request onto the next responder","type":"text"},{"text":" ","type":"text"},{"text":"(either the next middleware or the router) by calling ","type":"text"},{"code":"next.apply(to: request)","type":"codeVoice"},{"text":". If you want to shortcut the request you","type":"text"},{"text":" ","type":"text"},{"text":"can return a response immediately","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator":{"navigatorTitle":[{"kind":"identifier","text":"HBAuthenticator"}],"title":"HBAuthenticator","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAuthenticator"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticator","abstract":[{"type":"text","text":"Middleware to check if a request is authenticated and then augment the request with"},{"type":"text","text":" "},{"type":"text","text":"authentication data."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBFileMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBFileMiddleware","abstract":[{"type":"text","text":"Middleware for serving static files."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBFileMiddleware","kind":"identifier"}],"title":"HBFileMiddleware","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdfoundation\/hbfilemiddleware","navigatorTitle":[{"text":"HBFileMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSessionAuthenticator":{"url":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","navigatorTitle":[{"kind":"identifier","text":"HBSessionAuthenticator"}],"role":"symbol","kind":"symbol","title":"HBSessionAuthenticator","abstract":[{"type":"text","text":"Session authenticator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBSessionAuthenticator"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncMiddleware":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncMiddleware","title":"HBAsyncMiddleware","abstract":[{"type":"text","text":"Middleware using async\/await"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HBAsyncMiddleware","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBAsyncMiddleware","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbasyncmiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBCORSMiddleware":{"url":"\/documentation\/hummingbirdauth\/hbcorsmiddleware","navigatorTitle":[{"text":"HBCORSMiddleware","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"HBCORSMiddleware","abstract":[{"text":"Middleware implementing Cross-Origin Resource Sharing (CORS) headers.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBCORSMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCORSMiddleware","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncAuthenticator":{"type":"topic","title":"HBAsyncAuthenticator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","navigatorTitle":[{"text":"HBAsyncAuthenticator","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbasyncauthenticator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncAuthenticator","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Async version of Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"text":"authentication data.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Middleware returning 404 for unauthenticated requests"}],"kind":"symbol","title":"IsAuthenticatedMiddleware","navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBLogRequestsMiddleware":{"navigatorTitle":[{"kind":"identifier","text":"HBLogRequestsMiddleware"}],"title":"HBLogRequestsMiddleware","url":"\/documentation\/hummingbirdauth\/hblogrequestsmiddleware","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"HBLogRequestsMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBLogRequestsMiddleware","type":"topic","abstract":[{"type":"text","text":"Middleware outputting to log for every call to server"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMiddleware":{"title":"HBMiddleware","navigatorTitle":[{"kind":"identifier","text":"HBMiddleware"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddleware"}],"url":"\/documentation\/hummingbirdauth\/hbmiddleware","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddleware","role":"symbol","abstract":[{"type":"text","text":"Applied to "},{"code":"HBRequest","type":"codeVoice"},{"text":" before it is dealt with by the router. Middleware passes the processed request onto the next responder","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(either the next middleware or the router) by calling "},{"code":"next.apply(to: request)","type":"codeVoice"},{"type":"text","text":". If you want to shortcut the request you"},{"text":" ","type":"text"},{"text":"can return a response immediately","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMiddleware/apply(to:next:)":{"role":"symbol","required":true,"defaultImplementations":3,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"next"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird11HBResponderP","kind":"typeIdentifier","text":"HBResponder"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:11Hummingbird10HBResponseV","kind":"typeIdentifier","text":"HBResponse"},{"kind":"text","text":">"}],"title":"apply(to:next:)","kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbmiddleware\/apply(to:next:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddleware\/apply(to:next:)","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMetricsMiddleware":{"type":"topic","url":"\/documentation\/hummingbirdauth\/hbmetricsmiddleware","abstract":[{"type":"text","text":"Middleware recording metrics for each request"}],"title":"HBMetricsMiddleware","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBMetricsMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBMetricsMiddleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMetricsMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncSessionAuthenticator":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncSessionAuthenticator","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBAsyncSessionAuthenticator"}],"navigatorTitle":[{"kind":"identifier","text":"HBAsyncSessionAuthenticator"}],"type":"topic","role":"symbol","kind":"symbol","title":"HBAsyncSessionAuthenticator","abstract":[{"type":"text","text":"Async version of session authenticator."}],"url":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBMiddlewareGroup":{"type":"topic","title":"HBMiddlewareGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBMiddlewareGroup","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbmiddlewaregroup","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HBMiddlewareGroup"}],"role":"symbol","abstract":[{"type":"text","text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one"}]}}}