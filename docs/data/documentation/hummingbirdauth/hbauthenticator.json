{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator"},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:)-5hn4s"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","text":"HBMiddleware","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"text":"Authenticators should conform to protocol ","type":"text"},{"type":"codeVoice","code":"HBAuthenticator"},{"text":". This requires you implement the function","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"authenticate(request: HBRequest) -> EventLoopFuture<Value?>"},{"text":" where ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" is an","type":"text"},{"text":" ","type":"text"},{"text":"object conforming to the protocol ","type":"text"},{"type":"codeVoice","code":"HBAuthenticatable"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"A simple username, password authenticator could be implemented as follows. If the authenticator is successful","type":"text"},{"text":" ","type":"text"},{"text":"it returns a ","type":"text"},{"code":"User","type":"codeVoice"},{"text":" struct, otherwise it returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["struct BasicAuthenticator: HBAuthenticator {","    func authenticate(request: HBRequest) -> EventLoopFuture<User?> {","        \/\/ Basic authentication info in the \"Authorization\" header, is accessible","        \/\/ via request.auth.basic","        guard let basic = request.auth.basic else { return request.success(nil) }","        \/\/ check if user exists in the database and then verify the entered password","        \/\/ against the one stored in the database. If it is correct then login in user","        return database.getUserWithUsername(basic.username).map { user -> User? in","            \/\/ did we find a user","            guard let user = user else { return nil }","            \/\/ verify password against password hash stored in database. If valid","            \/\/ return the user. HummingbirdAuth provides an implementation of Bcrypt","            if Bcrypt.verify(basic.password, hash: user.passwordHash) {","                return user","            }","            return nil","        }","        \/\/ hop back to request eventloop","        .hop(to: request.eventLoop)","    }","}"],"syntax":"swift"}]}],"variants":[{"paths":["\/documentation\/hummingbirdauth\/hbauthenticator"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"title":"Authenticators","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware"]}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware"]},{"kind":"relationships","type":"inheritedBy","title":"Inherited By","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncSessionAuthenticator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator"]}],"metadata":{"role":"symbol","navigatorTitle":[{"text":"HBAuthenticator","kind":"identifier"}],"title":"HBAuthenticator","externalID":"s:15HummingbirdAuth15HBAuthenticatorP","modules":[{"name":"HummingbirdAuth"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"}],"symbolKind":"protocol","roleHeading":"Protocol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth"]]},"kind":"symbol","abstract":[{"text":"Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"authentication data."}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/authenticate(request:)-5hn4s":{"defaultImplementations":2,"abstract":[{"type":"text","text":"Called by middleware to see if request is authenticated."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"authenticate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:15HummingbirdAuth15HBAuthenticatorP5ValueQa","kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?>"}],"type":"topic","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/authenticate(request:)-5hn4s","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/authenticate(request:)-5hn4s","title":"authenticate(request:)","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncSessionAuthenticator":{"url":"\/documentation\/hummingbirdauth\/hbasyncsessionauthenticator","kind":"symbol","title":"HBAsyncSessionAuthenticator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncSessionAuthenticator"}],"navigatorTitle":[{"kind":"identifier","text":"HBAsyncSessionAuthenticator"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncSessionAuthenticator","abstract":[{"type":"text","text":"Async version of session authenticator."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBSessionAuthenticator":{"title":"HBSessionAuthenticator","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBSessionAuthenticator","navigatorTitle":[{"text":"HBSessionAuthenticator","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Session authenticator"}],"url":"\/documentation\/hummingbirdauth\/hbsessionauthenticator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBSessionAuthenticator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/IsAuthenticatedMiddleware":{"abstract":[{"type":"text","text":"Middleware returning 404 for unauthenticated requests"}],"role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdauth\/isauthenticatedmiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/IsAuthenticatedMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IsAuthenticatedMiddleware","kind":"identifier"}],"title":"IsAuthenticatedMiddleware","navigatorTitle":[{"text":"IsAuthenticatedMiddleware","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticatable":{"navigatorTitle":[{"text":"HBAuthenticatable","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for objects that can be returned by an "},{"code":"HBAuthenticator","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticatable","kind":"symbol","title":"HBAuthenticatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticatable","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticatable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAsyncAuthenticator":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAsyncAuthenticator","title":"HBAsyncAuthenticator","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdauth\/hbasyncauthenticator","abstract":[{"text":"Async version of Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"type":"text","text":" "},{"text":"authentication data.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"HBAsyncAuthenticator"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBAsyncAuthenticator","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth","abstract":[{"type":"text","text":"Authentication framework and extensions for Hummingbird."}],"title":"HummingbirdAuth","kind":"symbol","role":"collection","url":"\/documentation\/hummingbirdauth"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator/Value":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator\/Value","title":"Value","required":true,"kind":"symbol","url":"\/documentation\/hummingbirdauth\/hbauthenticator\/value","role":"symbol","abstract":[{"text":"type to be authenticated","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"HBAuthenticatable","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth17HBAuthenticatableP"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HBAuthenticator":{"abstract":[{"text":"Middleware to check if a request is authenticated and then augment the request with","type":"text"},{"text":" ","type":"text"},{"text":"authentication data.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HBAuthenticator","kind":"identifier"}],"type":"topic","title":"HBAuthenticator","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HBAuthenticator","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAuthenticator","kind":"identifier"}],"url":"\/documentation\/hummingbirdauth\/hbauthenticator"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddleware":{"title":"HBMiddleware","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbmiddleware","navigatorTitle":[{"text":"HBMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}]}}}