{"variants":[{"paths":["\/documentation\/hummingbirdauth\/httpheaderspatch\/replaceoradd(name:value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"replaceOrAdd(name:value:)","modules":[{"name":"HummingbirdAuth"}],"roleHeading":"Instance Method","role":"symbol","externalID":"s:11Hummingbird16HTTPHeadersPatchV12replaceOrAdd4name5valueySS_SStF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceOrAdd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch\/replaceOrAdd(name:value:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceOrAdd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The header field value to add for the given name."}]}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HTTPHeadersPatch/replaceOrAdd(name:value:)":{"title":"replaceOrAdd(name:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceOrAdd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch\/replaceOrAdd(name:value:)","url":"\/documentation\/hummingbirdauth\/httpheaderspatch\/replaceoradd(name:value:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/HTTPHeadersPatch":{"url":"\/documentation\/hummingbirdauth\/httpheaderspatch","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPHeadersPatch"}],"type":"topic","kind":"symbol","title":"HTTPHeadersPatch","abstract":[{"type":"text","text":"Used to Patch HTTPHeaders. Remembers if a header was added in with "},{"code":"add","type":"codeVoice"},{"type":"text","text":" or "},{"code":"replaceOrAdd","type":"codeVoice"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPHeadersPatch"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/HTTPHeadersPatch"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]}}}