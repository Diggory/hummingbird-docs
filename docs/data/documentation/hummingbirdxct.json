{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","interfaceLanguage":"swift"},"metadata":{"externalID":"HummingbirdXCT","modules":[{"name":"HummingbirdXCT"}],"roleHeading":"Framework","title":"HummingbirdXCT","role":"collection","symbolKind":"module"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Provides methods for easy setup of unit tests using XCTest framework."}],"type":"paragraph"},{"text":"Usage","anchor":"Usage","level":3,"type":"heading"},{"inlineContent":[{"type":"text","text":"Setup your server and add features you want to test."}],"type":"paragraph"},{"code":["let app = HBApplication(testing: .embedded)","app.router.get(\"test\") { _ in","    return \"testing\"","}","try app.XCTStart()","defer { app.XCTStop() }"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"And then test those features work as expected."}],"type":"paragraph"},{"code":["app.XCTExecute(uri: \"test\", method: .GET) { response in","    XCTAssertEqual(response.status, .ok)","    XCTAssertEqual(String(buffer: body), \"testing\")","}"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/hummingbirdxct"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup"],"title":"Test Setup"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCoreXCT\/HBXCTClient"],"title":"Classes"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"],"title":"Structures"}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[[]]},"sections":[],"abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCT":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCT","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HBXCT","kind":"identifier"}],"url":"\/documentation\/hummingbirdxct\/hbxct","kind":"symbol","role":"symbol","title":"HBXCT","abstract":[{"text":"Protocol for XCT framework.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"title":"HummingbirdXCT","role":"collection","url":"\/documentation\/hummingbirdxct","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTResponse","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HBXCTResponse","kind":"identifier"}],"url":"\/documentation\/hummingbirdxct\/hbxctresponse","kind":"symbol","role":"symbol","title":"HBXCTResponse","abstract":[{"text":"Response structure returned by XCT testing framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XCTTestingSetup"}],"title":"XCTTestingSetup","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTTestingSetup"}],"abstract":[{"text":"Type of test framework","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCoreXCT/HBXCTClient":{"abstract":[{"type":"text","text":"Bare bones HTTP client that connects to one Server."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClient","kind":"identifier"}],"navigatorTitle":[{"text":"HBXCTClient","kind":"identifier"}],"title":"HBXCTClient","role":"symbol","url":"\/documentation\/hummingbirdcorexct\/hbxctclient","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCoreXCT\/HBXCTClient","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"}}}