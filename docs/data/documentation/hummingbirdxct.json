{"kind":"symbol","metadata":{"externalID":"HummingbirdXCT","title":"HummingbirdXCT","modules":[{"name":"HummingbirdXCT"}],"role":"collection","symbolKind":"module","roleHeading":"Framework"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"Provides methods for easy setup of unit tests using XCTest framework.","type":"text"}],"type":"paragraph"},{"level":3,"anchor":"Usage","type":"heading","text":"Usage"},{"inlineContent":[{"text":"Setup your server and add features you want to test.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let app = HBApplication(testing: .embedded)","app.router.get(\"test\") { _ in","    return \"testing\"","}","try app.XCTStart()","defer { app.XCTStop() }"]},{"inlineContent":[{"type":"text","text":"And then test those features work as expected."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["app.XCTExecute(uri: \"test\", method: .GET) { response in","    XCTAssertEqual(response.status, .ok)","    XCTAssertEqual(String(buffer: body), \"testing\")","}"]}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdxct"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Test Setup","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup"]},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCoreXCT\/HBXCTClient"],"title":"Classes"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT"],"title":"Protocols"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTError","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse"],"title":"Structures"}],"abstract":[{"type":"text","text":"Test framework for Hummingbird"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/XCTTestingSetup":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTTestingSetup","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/XCTTestingSetup","title":"XCTTestingSetup","url":"\/documentation\/hummingbirdxct\/xcttestingsetup","abstract":[{"text":"Type of test framework","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"XCTTestingSetup","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCoreXCT/HBXCTClient":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCoreXCT\/HBXCTClient","title":"HBXCTClient","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTClient","kind":"identifier"}],"url":"\/documentation\/hummingbirdcorexct\/hbxctclient","role":"symbol","abstract":[{"type":"text","text":"Bare bones HTTP client that connects to one Server."}],"navigatorTitle":[{"text":"HBXCTClient","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTResponse":{"role":"symbol","navigatorTitle":[{"text":"HBXCTResponse","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Response structure returned by XCT testing framework","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCTResponse","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTResponse","title":"HBXCTResponse","url":"\/documentation\/hummingbirdxct\/hbxctresponse"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCT":{"title":"HBXCT","url":"\/documentation\/hummingbirdxct\/hbxct","kind":"symbol","abstract":[{"text":"Protocol for XCT framework.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCT","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBXCT","kind":"identifier"}],"navigatorTitle":[{"text":"HBXCT","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT":{"role":"collection","kind":"symbol","abstract":[{"text":"Test framework for Hummingbird","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT","title":"HummingbirdXCT","url":"\/documentation\/hummingbirdxct"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdXCT/HBXCTError":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdXCT\/HBXCTError","url":"\/documentation\/hummingbirdxct\/hbxcterror","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBXCTError"}],"title":"HBXCTError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBXCTError"}],"abstract":[{"text":"Errors thrown by XCT framework.","type":"text"}],"type":"topic"}}}