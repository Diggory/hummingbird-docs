{"sections":[],"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder"],"kind":"relationships","title":"Conforms To"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder\/init(callback:)"],"generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder\/respond(to:)"],"generated":true,"title":"Instance Methods"}],"variants":[{"paths":["\/documentation\/hummingbird\/hbasynccallbackresponder"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncCallbackResponder"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"kind":"symbol","metadata":{"symbolKind":"struct","navigatorTitle":[{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"platforms":[{"deprecated":false,"name":"iOS","unavailable":false,"introducedAt":"13.0","beta":false},{"deprecated":false,"name":"macOS","unavailable":false,"introducedAt":"10.15","beta":false},{"deprecated":false,"name":"tvOS","unavailable":false,"introducedAt":"13.0","beta":false},{"deprecated":false,"name":"watchOS","unavailable":false,"introducedAt":"6.0","beta":false}],"role":"symbol","externalID":"s:11Hummingbird24HBAsyncCallbackResponderV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"HummingbirdLambda"}],"title":"HBAsyncCallbackResponder"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder"],"generated":true,"title":"Router"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","title":"HBRouterBuilder","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"HBResponder"},{"text":" that will follow these rules.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbrouterbuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"url":"\/documentation\/hummingbird\/hbroutergroup","role":"symbol","type":"topic","abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"title":"HBRouterGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","kind":"symbol","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncRouteHandler":{"abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HBAsyncRouteHandler"}],"kind":"symbol","title":"HBAsyncRouteHandler","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncRouteHandler"}],"url":"\/documentation\/hummingbird\/hbasyncroutehandler","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","title":"HBRouterMethods","abstract":[{"text":"Conform to ","type":"text"},{"type":"codeVoice","code":"HBRouterMethods"},{"text":" to add standard router verb (get, post â€¦) methods","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"url":"\/documentation\/hummingbird\/hbroutermethods"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","kind":"symbol","abstract":[{"text":"Object for handling requests.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/hbroutehandler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"title":"HBRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"title":"HBResponder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","role":"symbol","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"url":"\/documentation\/hummingbird\/hbresponder","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncCallbackResponder/respond(to:)":{"abstract":[{"text":"Return EventLoopFuture that will be fulfilled with response to the request supplied","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder\/respond(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"respond","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10HBResponseV","text":"HBResponse"},{"kind":"text","text":">"}],"title":"respond(to:)","url":"\/documentation\/hummingbird\/hbasynccallbackresponder\/respond(to:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncCallbackResponder":{"abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"title":"HBAsyncCallbackResponder","navigatorTitle":[{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbasynccallbackresponder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","kind":"symbol","type":"topic","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbcallbackresponder","title":"HBCallbackResponder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncCallbackResponder/init(callback:)":{"abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBResponse","preciseIdentifier":"s:11Hummingbird10HBResponseV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(callback:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder\/init(callback:)","url":"\/documentation\/hummingbird\/hbasynccallbackresponder\/init(callback:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestDecodable":{"abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"type":"text","text":" which uses "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to initialize it"}],"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}],"title":"HBRequestDecodable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecodable","url":"\/documentation\/hummingbird\/hbrequestdecodable","kind":"symbol","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRouterMethodOptions","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","abstract":[{"type":"text","text":"Options available to routes"}],"title":"HBRouterMethodOptions","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbroutermethodoptions"}}}