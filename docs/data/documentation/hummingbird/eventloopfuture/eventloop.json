{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture\/eventLoop"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"externalID":"s:7NIOCore15EventLoopFutureC05eventC0AA0bC0_pvp","symbolKind":"property","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"role":"symbol","roleHeading":"Instance Property","title":"eventLoop"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]}],"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/eventloopfuture\/eventloop"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"The ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" which is tied to the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" and is used to notify all registered callbacks.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture/eventLoop":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture\/eventLoop","kind":"symbol","type":"topic","abstract":[{"text":"The ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" which is tied to the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" and is used to notify all registered callbacks.","type":"text"}],"title":"eventLoop","url":"\/documentation\/hummingbird\/eventloopfuture\/eventloop","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoop"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"type":"topic","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"role":"symbol","title":"EventLoopFuture","url":"\/documentation\/hummingbird\/eventloopfuture","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"kind":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","url":"\/documentation\/hummingbird\/eventloop","type":"topic","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"code":"Channel","type":"codeVoice"},{"text":"s until itâ€™s closed.","type":"text"}]}}}