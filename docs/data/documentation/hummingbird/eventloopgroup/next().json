{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The algorithm that is used to select the next "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" is specific to each "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". A common choice"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"emphasis","inlineContent":[{"text":"round robin","type":"text"}]},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Please note that you should only be using "},{"type":"codeVoice","code":"next()"},{"type":"text","text":" if you want to load balance over all "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s of the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". If the actual "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" does not matter much, "},{"type":"codeVoice","code":"any()"},{"type":"text","text":" should be preferred because it can"},{"type":"text","text":" "},{"type":"text","text":"try to return you the "},{"inlineContent":[{"type":"text","text":"current"}],"type":"emphasis"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" which usually is faster because the number of thread switches can"},{"type":"text","text":" "},{"type":"text","text":"be reduced."}],"type":"paragraph"},{"inlineContent":[{"text":"The rule of thumb is: If you are trying to do ","type":"text"},{"inlineContent":[{"type":"text","text":"load balancing"}],"type":"emphasis"},{"text":", use ","type":"text"},{"code":"next()","type":"codeVoice"},{"text":". If you just want to create a new","type":"text"},{"text":" ","type":"text"},{"text":"future or kick off some operation, use ","type":"text"},{"code":"any()","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/eventloopgroup\/next()"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"role":"symbol","symbolKind":"method","required":true,"roleHeading":"Instance Method","title":"next()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"modules":[{"name":"Hummingbird"}],"externalID":"s:7NIOCore14EventLoopGroupP4nextAA0bC0_pyF"},"abstract":[{"type":"text","text":"Returns the next "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" to use, this is useful for load balancing."}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"title":"EventLoopGroup","url":"\/documentation\/hummingbird\/eventloopgroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","type":"topic","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoop"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until itâ€™s closed."}],"title":"EventLoop","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/eventloop"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/next()":{"url":"\/documentation\/hummingbird\/eventloopgroup\/next()","title":"next()","required":true,"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}],"abstract":[{"text":"Returns the next ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" to use, this is useful for load balancing.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","kind":"symbol"}}}