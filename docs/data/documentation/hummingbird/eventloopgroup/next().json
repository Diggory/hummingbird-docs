{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The algorithm that is used to select the next "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" is specific to each "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". A common choice"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"round robin"}]},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Please note that you should only be using "},{"type":"codeVoice","code":"next()"},{"type":"text","text":" if you want to load balance over all "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s of the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". If the actual "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" does not matter much, "},{"type":"codeVoice","code":"any()"},{"type":"text","text":" should be preferred because it can"},{"type":"text","text":" "},{"type":"text","text":"try to return you the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"current"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" which usually is faster because the number of thread switches can"},{"type":"text","text":" "},{"type":"text","text":"be reduced."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The rule of thumb is: If you are trying to do "},{"type":"emphasis","inlineContent":[{"type":"text","text":"load balancing"}]},{"type":"text","text":", use "},{"type":"codeVoice","code":"next()"},{"type":"text","text":". If you just want to create a new"},{"type":"text","text":" "},{"type":"text","text":"future or kick off some operation, use "},{"type":"codeVoice","code":"any()"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/eventloopgroup\/next()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns the next "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" to use, this is useful for load balancing."}],"kind":"symbol","metadata":{"role":"symbol","title":"next()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"symbolKind":"method","externalID":"s:7NIOCore14EventLoopGroupP4nextAA0bC0_pyF","required":true,"modules":[{"name":"Hummingbird"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"role":"symbol","title":"EventLoop","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until itâ€™s closed."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoop"}],"url":"\/documentation\/hummingbird\/eventloop"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/next()":{"role":"symbol","title":"next()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"abstract":[{"type":"text","text":"Returns the next "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" to use, this is useful for load balancing."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/hummingbird\/eventloopgroup\/next()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"role":"symbol","title":"EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"url":"\/documentation\/hummingbird\/eventloopgroup"}}}