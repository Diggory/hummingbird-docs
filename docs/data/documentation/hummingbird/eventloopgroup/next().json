{"metadata":{"title":"next()","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7NIOCore14EventLoopGroupP4nextAA0bC0_pyF","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"}],"role":"symbol","required":true},"kind":"symbol","abstract":[{"type":"text","text":"Returns the next "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" to use, this is useful for load balancing."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The algorithm that is used to select the next ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" is specific to each ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":". A common choice","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is "},{"type":"emphasis","inlineContent":[{"text":"round robin","type":"text"}]},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"Please note that you should only be using ","type":"text"},{"code":"next()","type":"codeVoice"},{"text":" if you want to load balance over all ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s of the","type":"text"},{"text":" ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":". If the actual ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" does not matter much, ","type":"text"},{"code":"any()","type":"codeVoice"},{"text":" should be preferred because it can","type":"text"},{"text":" ","type":"text"},{"text":"try to return you the ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"current","type":"text"}]},{"text":" ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" which usually is faster because the number of thread switches can","type":"text"},{"text":" ","type":"text"},{"text":"be reduced.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The rule of thumb is: If you are trying to do "},{"type":"emphasis","inlineContent":[{"type":"text","text":"load balancing"}]},{"type":"text","text":", use "},{"type":"codeVoice","code":"next()"},{"type":"text","text":". If you just want to create a new"},{"type":"text","text":" "},{"type":"text","text":"future or kick off some operation, use "},{"type":"codeVoice","code":"any()"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/eventloopgroup\/next()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/next()":{"title":"next()","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier","text":"EventLoop"}],"required":true,"url":"\/documentation\/hummingbird\/eventloopgroup\/next()","abstract":[{"text":"Returns the next ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" to use, this is useful for load balancing.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"url":"\/documentation\/hummingbird\/eventloopgroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol","title":"EventLoopGroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"kind":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","url":"\/documentation\/hummingbird\/eventloop","type":"topic","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"code":"Channel","type":"codeVoice"},{"text":"s until itâ€™s closed.","type":"text"}]}}}