{"abstract":[{"type":"text","text":"Returns the next "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" to use, this is useful for load balancing."}],"metadata":{"modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"externalID":"s:7NIOCore14EventLoopGroupP4nextAA0bC0_pyF","required":true,"symbolKind":"method","role":"symbol","title":"next()"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/eventloopgroup\/next()"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The algorithm that is used to select the next "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" is specific to each "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". A common choice"},{"type":"text","text":" "},{"type":"text","text":"is "},{"type":"emphasis","inlineContent":[{"text":"round robin","type":"text"}]},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Please note that you should only be using "},{"type":"codeVoice","code":"next()"},{"type":"text","text":" if you want to load balance over all "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s of the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". If the actual "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" does not matter much, "},{"type":"codeVoice","code":"any()"},{"type":"text","text":" should be preferred because it can"},{"type":"text","text":" "},{"type":"text","text":"try to return you the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"current"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" which usually is faster because the number of thread switches can"},{"type":"text","text":" "},{"type":"text","text":"be reduced."}],"type":"paragraph"},{"inlineContent":[{"text":"The rule of thumb is: If you are trying to do ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"load balancing"}]},{"text":", use ","type":"text"},{"code":"next()","type":"codeVoice"},{"text":". If you just want to create a new","type":"text"},{"text":" ","type":"text"},{"text":"future or kick off some operation, use ","type":"text"},{"code":"any()","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","kind":"symbol","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until itâ€™s closed.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","title":"EventLoop","url":"\/documentation\/hummingbird\/eventloop"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/next()":{"url":"\/documentation\/hummingbird\/eventloopgroup\/next()","abstract":[{"type":"text","text":"Returns the next "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" to use, this is useful for load balancing."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","title":"next()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}],"role":"symbol","required":true,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"url":"\/documentation\/hummingbird\/eventloopgroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","title":"EventLoopGroup","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"}}}