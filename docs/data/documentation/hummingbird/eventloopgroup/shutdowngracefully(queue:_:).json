{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/shutdownGracefully(queue:_:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","role":"symbol","title":"shutdownGracefully(queue:_:)","externalID":"s:7NIOCore14EventLoopGroupP18shutdownGracefully5queue_y8Dispatch0H5QueueC_ys5Error_pSgctF","modules":[{"name":"Hummingbird"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownGracefully","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"required":true},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/eventloopgroup\/shutdowngracefully(queue:_:)"]}],"abstract":[{"type":"text","text":"Shuts down the eventloop gracefully. This function is clearly an outlier in that it uses a completion"},{"type":"text","text":" "},{"text":"callback instead of an EventLoopFuture. The reason for that is that NIO’s EventLoopFutures will call back on an event loop.","type":"text"},{"text":" ","type":"text"},{"text":"The virtue of this function is to shut the event loop down. To work around that we call back on a DispatchQueue","type":"text"},{"text":" ","type":"text"},{"text":"instead.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@preconcurrency"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic","url":"\/documentation\/hummingbird\/eventloopgroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","title":"EventLoopGroup","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EventLoopGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/shutdownGracefully(queue:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"text":"(","kind":"text"},{"text":"queue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"shutdownGracefully(queue:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/shutdownGracefully(queue:_:)","url":"\/documentation\/hummingbird\/eventloopgroup\/shutdowngracefully(queue:_:)","required":true,"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Shuts down the eventloop gracefully. This function is clearly an outlier in that it uses a completion"},{"text":" ","type":"text"},{"text":"callback instead of an EventLoopFuture. The reason for that is that NIO’s EventLoopFutures will call back on an event loop.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The virtue of this function is to shut the event loop down. To work around that we call back on a DispatchQueue"},{"type":"text","text":" "},{"type":"text","text":"instead."}],"type":"topic"}}}