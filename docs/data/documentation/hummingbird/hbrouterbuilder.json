{"sections":[],"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/middlewares"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/add(_:method:responder:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/buildRouter()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/on(_:method:options:use:)-3277t","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/on(_:method:options:use:)-4t19t"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/HBRouterMethods-Implementations"],"title":"Default Implementations"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"code":"HBRouterBuilder","type":"codeVoice"},{"text":" requires an implementation of  the ","type":"text"},{"code":"on(path:method:use)","type":"codeVoice"},{"text":" functions but because it","type":"text"},{"text":" ","type":"text"},{"text":"also conforms to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" it is also possible to call the method specific functions ","type":"text"},{"code":"get","type":"codeVoice"},{"text":", ","type":"text"},{"code":"put","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"code":"head","type":"codeVoice"},{"text":", ","type":"text"},{"code":"post","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"patch","type":"codeVoice"},{"text":".  The route handler closures all return objects conforming to","type":"text"},{"text":" ","type":"text"},{"code":"HBResponseGenerator","type":"codeVoice"},{"text":".  This allows us to support routes which return a multitude of types eg","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["app.router.get(\"string\") { _ -> String in","    return \"string\"","}","app.router.post(\"status\") { _ -> HTTPResponseStatus in","    return .ok","}","app.router.data(\"data\") { request -> ByteBuffer in","    return request.allocator.buffer(string: \"buffer\")","}"]},{"inlineContent":[{"text":"Routes can also return ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":"’s. So you can support returning values from","type":"text"},{"text":" ","type":"text"},{"text":"asynchronous processes.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The default "},{"type":"codeVoice","code":"Router"},{"type":"text","text":" setup in "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":" is the "},{"type":"codeVoice","code":"TrieRouter"},{"type":"text","text":" . This uses a"},{"type":"text","text":" "},{"type":"text","text":"trie to partition all the routes for faster access. It also supports wildcards and parameter extraction"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["app.router.get(\"user\/*\", use: anyUser)","app.router.get(\"user\/:id\", use: userWithId)"]},{"inlineContent":[{"type":"text","text":"Both of these match routes which start with “\/user” and the next path segment being anything."},{"type":"text","text":" "},{"type":"text","text":"The second version extracts the path segment out and adds it to "},{"type":"codeVoice","code":"HBRequest.parameters"},{"type":"text","text":" with the"},{"type":"text","text":" "},{"type":"text","text":"key “id”."}],"type":"paragraph"}],"kind":"content"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder"],"title":"Router"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"externalID":"s:11Hummingbird15HBRouterBuilderC","symbolKind":"class","modules":[{"name":"HummingbirdAuth"}],"role":"symbol","roleHeading":"Class","title":"HBRouterBuilder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods"],"title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbrouterbuilder"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncCallbackResponder":{"type":"topic","title":"HBAsyncCallbackResponder","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncCallbackResponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"url":"\/documentation\/hummingbird\/hbasynccallbackresponder","role":"symbol","navigatorTitle":[{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncCallbackResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/on(_:method:options:use:)-4t19t":{"abstract":[{"text":"Add path for closure returning type conforming to ResponseFutureEncodable","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPMethod","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","title":"on(_:method:options:use:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/on(_:method:options:use:)-4t19t","type":"topic","url":"\/documentation\/hummingbird\/hbrouterbuilder\/on(_:method:options:use:)-4t19t"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethods":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethods","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"title":"HBRouterMethods","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbroutermethods","abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"HBRouterMethods"},{"text":" to add standard router verb (get, post …) methods","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder":{"navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"url":"\/documentation\/hummingbird\/hbrouterbuilder","title":"HBRouterBuilder","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"type":"codeVoice","code":"HBResponder"},{"type":"text","text":" that will follow these rules."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/middlewares":{"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"middlewares"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBMiddlewareGroup","preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC"}],"title":"middlewares","url":"\/documentation\/hummingbird\/hbrouterbuilder\/middlewares","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/middlewares","role":"symbol","kind":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBAsyncRouteHandler":{"type":"topic","kind":"symbol","url":"\/documentation\/hummingbird\/hbasyncroutehandler","navigatorTitle":[{"kind":"identifier","text":"HBAsyncRouteHandler"}],"abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBAsyncRouteHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncRouteHandler"}],"title":"HBAsyncRouteHandler"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponder":{"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponder","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"role":"symbol","title":"HBResponder","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbresponder","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/buildRouter()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/buildRouter()","url":"\/documentation\/hummingbird\/hbrouterbuilder\/buildrouter()","role":"symbol","type":"topic","abstract":[{"type":"text","text":"build router"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildRouter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP","text":"HBResponder"}],"title":"buildRouter()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/init()":{"kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","url":"\/documentation\/hummingbird\/hbrouterbuilder\/init()","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/init()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterGroup":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterGroup","url":"\/documentation\/hummingbird\/hbroutergroup","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"title":"HBRouterGroup","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"kind":"article","url":"\/documentation\/index","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/on(_:method:options:use:)-3277t":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPMethod","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"on(_:method:options:use:)","url":"\/documentation\/hummingbird\/hbrouterbuilder\/on(_:method:options:use:)-3277t","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/on(_:method:options:use:)-3277t","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Add path for closure returning type conforming to ResponseFutureEncodable"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/add(_:method:responder:)":{"type":"topic","abstract":[{"text":"Add route to router","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPMethod","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO"},{"text":", ","kind":"text"},{"text":"responder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/add(_:method:responder:)","title":"add(_:method:responder:)","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbird\/hbrouterbuilder\/add(_:method:responder:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBCallbackResponder":{"type":"topic","title":"HBCallbackResponder","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBCallbackResponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"url":"\/documentation\/hummingbird\/hbcallbackresponder","role":"symbol","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","url":"\/documentation\/hummingbird\/router","kind":"article","role":"collectionGroup","title":"Router","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouteHandler":{"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouteHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouteHandler","kind":"identifier"}],"title":"HBRouteHandler","url":"\/documentation\/hummingbird\/hbroutehandler","role":"symbol","navigatorTitle":[{"text":"HBRouteHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"Object for handling requests."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/group(_:)":{"url":"\/documentation\/hummingbird\/hbrouterbuilder\/group(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"group","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"HBRouterGroup","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/group(_:)","title":"group(_:)","type":"topic","abstract":[{"type":"text","text":"return new "},{"type":"codeVoice","code":"RouterGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"url":"\/documentation\/hummingbird\/hbroutermethodoptions","title":"HBRouterMethodOptions","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Options available to routes"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequestDecodable":{"type":"topic","title":"HBRequestDecodable","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequestDecodable","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" to initialize it"}],"url":"\/documentation\/hummingbird\/hbrequestdecodable","role":"symbol","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/HBRouterMethods-Implementations":{"url":"\/documentation\/hummingbird\/hbrouterbuilder\/hbroutermethods-implementations","title":"HBRouterMethods Implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/HBRouterMethods-Implementations"}}}