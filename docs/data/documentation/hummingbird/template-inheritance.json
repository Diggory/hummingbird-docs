{"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature. Template inheritance allows you to override elements of an included partial. It allows you to create a base page template and override elements of it with your page content. A partial that includes overriding elements is indicated with a "},{"type":"codeVoice","code":"{{<partial}}"},{"type":"text","text":". Note this is different from the normal partial reference which uses "},{"type":"codeVoice","code":">"},{"type":"text","text":". This is a section tag so needs a ending tag as well. Inside the section the tagged sections to override are added using the syntax "},{"type":"codeVoice","code":"{{$tag}}contents{{\/tag}}"},{"type":"text","text":". If your template and partial were as follows"}]},{"syntax":null,"type":"codeListing","code":["{{! mypage.mustache }}","{{<base}}","{{$head}}<title>My page title<\/title>{{\/head}}","{{$body}}Hello world{{\/body}}","{{\/base}}"]},{"syntax":null,"type":"codeListing","code":["{{! base.mustache }}","<html>","<head>","{{$head}}{{\/head}}","<\/head>","<body>","{{$body}}Default text{{\/body}}","<\/body>","<\/html>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You would get the following output when rendering "},{"code":"mypage.mustache","type":"codeVoice"},{"type":"text","text":"."}]},{"syntax":null,"type":"codeListing","code":["<html>","<head>","<title>My page title<\/title>","<\/head>","<body>","Hello world","<\/body>"]},{"type":"paragraph","inlineContent":[{"text":"Note the ","type":"text"},{"type":"codeVoice","code":"{{$head}}"},{"text":" section in ","type":"text"},{"type":"codeVoice","code":"base.mustache"},{"text":" is replaced with the ","type":"text"},{"type":"codeVoice","code":"{{$head}}"},{"text":" section included inside the ","type":"text"},{"type":"codeVoice","code":"{{<base}}"},{"text":" partial reference from ","type":"text"},{"type":"codeVoice","code":"mypage.mustache"},{"text":". The same occurs with the ","type":"text"},{"type":"codeVoice","code":"{{$body}}"},{"text":" section. In that case though a default value is supplied for the situation where a ","type":"text"},{"type":"codeVoice","code":"{{$body}}"},{"text":" section is not supplied.","type":"text"}]}],"kind":"content"}],"seeAlsoSections":[{"title":"Additional Features","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","interfaceLanguage":"swift"},"abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"kind":"article","sections":[],"metadata":{"role":"article","title":"Template Inheritance","roleHeading":"Article","modules":[{"name":"HummingbirdMustache"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"url":"\/documentation\/hummingbirdmustache","role":"collection","kind":"symbol","title":"HummingbirdMustache","abstract":[{"type":"text","text":"Mustache template engine."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","type":"topic","role":"article","kind":"article","title":"Pragmas\/Configuration variables","abstract":[{"type":"text","text":"Setting template render configuration settings."}],"url":"\/documentation\/hummingbird\/pragmas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"kind":"article","url":"\/documentation\/hummingbird\/transforms","role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","title":"Transforms","abstract":[{"text":"Transforming objects during render","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","type":"topic","role":"article","kind":"article","title":"Lambdas","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"url":"\/documentation\/hummingbird\/lambdas"}}}