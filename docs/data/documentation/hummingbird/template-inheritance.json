{"abstract":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature.","type":"text"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature. Template inheritance allows you to override elements of an included partial. It allows you to create a base page template and override elements of it with your page content. A partial that includes overriding elements is indicated with a ","type":"text"},{"code":"{{<partial}}","type":"codeVoice"},{"type":"text","text":". Note this is different from the normal partial reference which uses "},{"type":"codeVoice","code":">"},{"type":"text","text":". This is a section tag so needs a ending tag as well. Inside the section the tagged sections to override are added using the syntax "},{"type":"codeVoice","code":"{{$tag}}contents{{\/tag}}"},{"type":"text","text":". If your template and partial were as follows"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["{{! mypage.mustache }}","{{<base}}","{{$head}}<title>My page title<\/title>{{\/head}}","{{$body}}Hello world{{\/body}}","{{\/base}}"]},{"type":"codeListing","syntax":null,"code":["{{! base.mustache }}","<html>","<head>","{{$head}}{{\/head}}","<\/head>","<body>","{{$body}}Default text{{\/body}}","<\/body>","<\/html>"]},{"inlineContent":[{"text":"You would get the following output when rendering ","type":"text"},{"type":"codeVoice","code":"mypage.mustache"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["<html>","<head>","<title>My page title<\/title>","<\/head>","<body>","Hello world","<\/body>"]},{"inlineContent":[{"type":"text","text":"Note the "},{"type":"codeVoice","code":"{{$head}}"},{"type":"text","text":" section in "},{"type":"codeVoice","code":"base.mustache"},{"type":"text","text":" is replaced with the "},{"type":"codeVoice","code":"{{$head}}"},{"type":"text","text":" section included inside the "},{"type":"codeVoice","code":"{{<base}}"},{"type":"text","text":" partial reference from "},{"type":"codeVoice","code":"mypage.mustache"},{"type":"text","text":". The same occurs with the "},{"type":"codeVoice","code":"{{$body}}"},{"type":"text","text":" section. In that case though a default value is supplied for the situation where a "},{"type":"codeVoice","code":"{{$body}}"},{"type":"text","text":" section is not supplied."}],"type":"paragraph"}],"kind":"content"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","interfaceLanguage":"swift"},"metadata":{"role":"article","title":"Template Inheritance","roleHeading":"Article","modules":[{"name":"HummingbirdMustache"}]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"title":"Additional Features"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"url":"\/documentation\/hummingbird\/lambdas","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"title":"Lambdas","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Pragmas":{"url":"\/documentation\/hummingbird\/pragmas","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","abstract":[{"type":"text","text":"Setting template render configuration settings."}],"title":"Pragmas\/Configuration variables","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"url":"\/documentation\/hummingbird\/transforms","kind":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","abstract":[{"type":"text","text":"Transforming objects during render"}],"title":"Transforms","role":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"title":"HummingbirdMustache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","kind":"symbol","url":"\/documentation\/hummingbirdmustache","role":"collection","abstract":[{"type":"text","text":"Mustache template engine."}],"type":"topic"}}}