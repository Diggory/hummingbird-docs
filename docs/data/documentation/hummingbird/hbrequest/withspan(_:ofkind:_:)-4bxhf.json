{"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Execute the given operation within a newly created ","type":"text"},{"code":"Span","type":"codeVoice"}],"metadata":{"roleHeading":"Instance Method","role":"symbol","title":"withSpan(_:ofKind:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SpanKind","preciseIdentifier":"s:7Tracing8SpanKindO","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Span","preciseIdentifier":"s:7Tracing4SpanP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"extendedModule":"Hummingbird","modules":[{"name":"HummingbirdLambda","relatedModules":["Hummingbird"]}],"platforms":[{"introducedAt":"13.0","beta":false,"name":"iOS","deprecated":false,"unavailable":false},{"introducedAt":"10.15","beta":false,"name":"macOS","deprecated":false,"unavailable":false},{"introducedAt":"13.0","beta":false,"name":"tvOS","deprecated":false,"unavailable":false},{"introducedAt":"6.0","beta":false,"name":"watchOS","deprecated":false,"unavailable":false}],"externalID":"s:11Hummingbird9HBRequestV8withSpan_6ofKind_xSS_7Tracing0dF0OxAC_AF0D0_ptKXEtKlF","symbolKind":"method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withSpan","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operationName","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ofKind","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"kind","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"SpanKind","preciseIdentifier":"s:7Tracing8SpanKindO","kind":"typeIdentifier"},{"text":" = .internal, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"operation","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"HBRequest","preciseIdentifier":"s:11Hummingbird9HBRequestV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Span","preciseIdentifier":"s:7Tracing4SpanP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Return","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"operationName","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The name of the operation being traced. This may be a handler function, database call, …"}]}]},{"name":"kind","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SpanKind","type":"codeVoice"},{"type":"text","text":" of the "},{"code":"Span","type":"codeVoice"},{"type":"text","text":" to be created. Defaults to "},{"code":"SpanKind\/internal","type":"codeVoice"},{"type":"text","text":"."}]}]},{"name":"operation","content":[{"inlineContent":[{"text":"operation to wrap in a span start\/end and execute immediately","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"the value returned by "},{"code":"operation","type":"codeVoice"}]}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Calls operation with edited request that includes the serviceContext from span, and the span Be sure to use the","type":"text"},{"text":" ","type":"text"},{"code":"HBRequest","type":"codeVoice"},{"text":" passed to the closure as that includes the serviceContext","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This function should be used when we aren’t inside an async function and serviceContext cannot be propagated"},{"type":"text","text":" "},{"type":"text","text":"via Task local variables. The equivalent async version of this is"},{"type":"text","text":" "},{"code":"InstrumentationSystem.tracer.withSpan(_:ofKind:_)","type":"codeVoice"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"DO NOT "},{"code":"end()","type":"codeVoice"},{"type":"text","text":" the passed in span manually. It will be ended automatically when the "},{"code":"operation","type":"codeVoice"},{"type":"text","text":" returns."}]},{"name":"Throws","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"the error the "},{"type":"codeVoice","code":"operation"},{"type":"text","text":" has thrown (if any)"}],"type":"paragraph"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest"]]},"variants":[{"paths":["\/documentation\/hummingbird\/hbrequest\/withspan(_:ofkind:_:)-4bxhf"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRequest","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"title":"HBRequest","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbrequest"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/withSpan(_:ofKind:_:)-4bxhf":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withSpan"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ofKind"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Tracing8SpanKindO","text":"SpanKind"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Tracing4SpanP","text":"Span"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Return"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/withSpan(_:ofKind:_:)-4bxhf","kind":"symbol","abstract":[{"text":"Execute the given operation within a newly created ","type":"text"},{"code":"Span","type":"codeVoice"}],"type":"topic","url":"\/documentation\/hummingbird\/hbrequest\/withspan(_:ofkind:_:)-4bxhf","role":"symbol","title":"withSpan(_:ofKind:_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"}}}