{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"Allow you to patch the response generated by your route handler via the ","type":"text"},{"type":"codeVoice","code":"HBRequest"},{"text":" supplied. If your handler is only","type":"text"},{"text":" ","type":"text"},{"text":"returning the payload you can edit the status and headers via ","type":"text"},{"type":"codeVoice","code":"request.response"},{"text":" eg.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["func myHandler(_ request: HBRequest) -> String {","    request.response.status = .accepted","    return \"hello\"","}"],"type":"codeListing"}]}],"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/hbrequest\/responsepatch"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"ResponsePatch"}],"title":"HBRequest.ResponsePatch","extendedModule":"Hummingbird","symbolKind":"class","externalID":"s:11Hummingbird9HBRequestV13ResponsePatchC","roleHeading":"Class","role":"symbol","modules":[{"name":"HummingbirdAuth"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}]},"kind":"symbol","abstract":[{"text":"Patches Response via ","type":"text"},{"code":"HBResponse.apply(patch:)","type":"codeVoice"}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch\/headers","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch\/status"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequest\/ResponsePatch\/setCookie(_:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/ResponsePatch/headers":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch\/headers","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"headers","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird16HTTPHeadersPatchV","text":"HTTPHeadersPatch","kind":"typeIdentifier"}],"type":"topic","title":"headers","url":"\/documentation\/hummingbird\/hbrequest\/responsepatch\/headers","abstract":[{"type":"text","text":"headers to add to response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdFoundation/HBRequest/ResponsePatch/setCookie(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setCookie"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"HBCookie","preciseIdentifier":"s:21HummingbirdFoundation8HBCookieV"},{"kind":"text","text":")"}],"title":"setCookie(_:)","url":"\/documentation\/hummingbirdfoundation\/hbrequest\/responsepatch\/setcookie(_:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdFoundation\/HBRequest\/ResponsePatch\/setCookie(_:)","abstract":[{"type":"text","text":"Set cookie on reponse patch"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/ResponsePatch/status":{"title":"status","kind":"symbol","url":"\/documentation\/hummingbird\/hbrequest\/responsepatch\/status","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch\/status","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"status","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO","text":"HTTPResponseStatus","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"text":"patch status of reponse","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRequest"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequest"}],"title":"HBRequest","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"url":"\/documentation\/hummingbird\/hbrequest","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/ResponsePatch":{"url":"\/documentation\/hummingbird\/hbrequest\/responsepatch","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/ResponsePatch","title":"HBRequest.ResponsePatch","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponsePatch","kind":"identifier"}],"navigatorTitle":[{"text":"ResponsePatch","kind":"identifier"}],"abstract":[{"text":"Patches Response via ","type":"text"},{"type":"codeVoice","code":"HBResponse.apply(patch:)"}]}}}