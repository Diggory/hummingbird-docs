{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbrequest\/servicecontext"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/serviceContext","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"ServiceContext attached to request. Used to propagate serviceContext to child functions"}],"metadata":{"platforms":[{"unavailable":false,"deprecated":false,"introducedAt":"13.0","beta":false,"name":"iOS"},{"unavailable":false,"deprecated":false,"introducedAt":"10.15","beta":false,"name":"macOS"},{"unavailable":false,"deprecated":false,"introducedAt":"13.0","beta":false,"name":"tvOS"},{"unavailable":false,"deprecated":false,"introducedAt":"6.0","beta":false,"name":"watchOS"}],"role":"symbol","title":"serviceContext","externalID":"s:11Hummingbird9HBRequestV14serviceContext07ServiceD6Module0eD0Vvp","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"serviceContext","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20ServiceContextModule0aB0V","text":"ServiceContext"}],"symbolKind":"property","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdLambda"}],"extendedModule":"Hummingbird","roleHeading":"Instance Property"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"serviceContext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ServiceContext","preciseIdentifier":"s:20ServiceContextModule0aB0V"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Attaching serviceContext to the request should be used when we arenâ€™t inside an async"},{"type":"text","text":" "},{"type":"text","text":"function and serviceContext cannot be propagated via Task local variables. Otherwise"},{"type":"text","text":" "},{"type":"text","text":"serviceContext should be propagated using Task local variables using "},{"type":"codeVoice","code":"ServiceContext.$current.withValue(_)"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRequest","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"title":"HBRequest","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbrequest"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest/serviceContext":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"serviceContext"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20ServiceContextModule0aB0V","text":"ServiceContext"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest\/serviceContext","kind":"symbol","abstract":[{"text":"ServiceContext attached to request. Used to propagate serviceContext to child functions","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/hbrequest\/servicecontext","role":"symbol","title":"serviceContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"}}}