{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/eventloopgroup"]}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/7NIOCore25NIOPreconcurrencySendableP","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"],"title":"NIOCore Symbols"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"},{"kind":"text","text":" : AnyObject, "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore25NIOPreconcurrencySendableP","text":"NIOPreconcurrencySendable"}]}]}],"metadata":{"symbolKind":"protocol","title":"EventLoopGroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","roleHeading":"Protocol","externalID":"s:7NIOCore14EventLoopGroupP","modules":[{"name":"Hummingbird"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/any()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/makeIterator()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/shutdownGracefully(queue:_:)"],"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Provides an endless stream of ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":"s to use.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","url":"\/documentation\/hummingbird\/bytebufferallocator","kind":"symbol","role":"symbol","title":"ByteBufferAllocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libc’s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"realloc"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"free"},{"text":".","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/next()":{"kind":"symbol","title":"next()","role":"symbol","url":"\/documentation\/hummingbird\/eventloopgroup\/next()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","abstract":[{"text":"Returns the next ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" to use, this is useful for load balancing."}],"required":true,"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"url":"\/documentation\/hummingbird\/eventloopfuture","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","title":"EventLoopFuture","type":"topic"},"doc://com.opticalaberration.hummingbird/7NIOCore25NIOPreconcurrencySendableP":{"title":"NIOCore.NIOPreconcurrencySendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore25NIOPreconcurrencySendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"title":"EventLoop","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"role":"symbol","url":"\/documentation\/hummingbird\/eventloop","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","kind":"symbol","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoop"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/makeIterator()":{"url":"\/documentation\/hummingbird\/eventloopgroup\/makeiterator()","title":"makeIterator()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeIterator"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore17EventLoopIteratorV","kind":"typeIdentifier","text":"EventLoopIterator"}],"type":"topic","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/makeIterator()","role":"symbol","abstract":[{"text":"Returns an ","type":"text"},{"code":"EventLoopIterator","type":"codeVoice"},{"text":" over the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s in this ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TimeAmount":{"kind":"symbol","title":"TimeAmount","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount","url":"\/documentation\/hummingbird\/timeamount","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Represents a time "},{"type":"emphasis","inlineContent":[{"type":"text","text":"interval"}]},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimeAmount","kind":"identifier"}],"navigatorTitle":[{"text":"TimeAmount","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress":{"abstract":[{"text":"Represent a socket address to which we may want to connect or bind.","type":"text"}],"title":"SocketAddress","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SocketAddress","kind":"identifier"}],"url":"\/documentation\/hummingbird\/socketaddress","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"SocketAddress","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic","url":"\/documentation\/hummingbird\/eventloopgroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","title":"EventLoopGroup","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EventLoopGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/shutdownGracefully(queue:_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"text":"(","kind":"text"},{"text":"queue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"shutdownGracefully(queue:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/shutdownGracefully(queue:_:)","url":"\/documentation\/hummingbird\/eventloopgroup\/shutdowngracefully(queue:_:)","required":true,"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Shuts down the eventloop gracefully. This function is clearly an outlier in that it uses a completion"},{"text":" ","type":"text"},{"text":"callback instead of an EventLoopFuture. The reason for that is that NIO’s EventLoopFutures will call back on an event loop.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The virtue of this function is to shut the event loop down. To work around that we call back on a DispatchQueue"},{"type":"text","text":" "},{"type":"text","text":"instead."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"title":"ByteBuffer","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"url":"\/documentation\/hummingbird\/bytebuffer","kind":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/any()":{"abstract":[{"text":"Returns any ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":", a common choice is the current "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}],"type":"topic","title":"any()","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/any()","kind":"symbol","url":"\/documentation\/hummingbird\/eventloopgroup\/any()","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"any"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"}]}}}