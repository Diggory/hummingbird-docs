{"variants":[{"paths":["\/documentation\/hummingbird\/eventloopgroup"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"],"title":"NIOCore Symbols","generated":true}],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/any()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/makeIterator()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/shutdownGracefully(queue:_:)"],"title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/7NIOCore25NIOPreconcurrencySendableP","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop"],"title":"Inherited By","type":"inheritedBy","kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"},{"kind":"text","text":" : AnyObject, "},{"kind":"typeIdentifier","text":"NIOPreconcurrencySendable","preciseIdentifier":"s:7NIOCore25NIOPreconcurrencySendableP"}],"languages":["swift"],"platforms":["Linux"]}]}],"abstract":[{"text":"Provides an endless stream of ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":"s to use.","type":"text"}],"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroup","kind":"identifier"}],"roleHeading":"Protocol","navigatorTitle":[{"text":"EventLoopGroup","kind":"identifier"}],"externalID":"s:7NIOCore14EventLoopGroupP","modules":[{"name":"Hummingbird"}],"symbolKind":"protocol","title":"EventLoopGroup","role":"symbol"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TimeAmount":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TimeAmount"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount","abstract":[{"text":"Represents a time ","type":"text"},{"inlineContent":[{"type":"text","text":"interval"}],"type":"emphasis"},{"text":".","type":"text"}],"role":"symbol","title":"TimeAmount","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimeAmount","kind":"identifier"}],"url":"\/documentation\/hummingbird\/timeamount"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress":{"url":"\/documentation\/hummingbird\/socketaddress","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","abstract":[{"type":"text","text":"Represent a socket address to which we may want to connect or bind."}],"navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}],"title":"SocketAddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"url":"\/documentation\/hummingbird\/eventloopgroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","title":"EventLoopGroup","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/makeIterator()":{"type":"topic","title":"makeIterator()","required":true,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopIterator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore17EventLoopIteratorV"}],"url":"\/documentation\/hummingbird\/eventloopgroup\/makeiterator()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/makeIterator()","role":"symbol","abstract":[{"text":"Returns an ","type":"text"},{"type":"codeVoice","code":"EventLoopIterator"},{"type":"text","text":" over the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s in this "},{"type":"codeVoice","code":"EventLoopGroup"},{"text":".","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/next()":{"url":"\/documentation\/hummingbird\/eventloopgroup\/next()","abstract":[{"type":"text","text":"Returns the next "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" to use, this is useful for load balancing."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","title":"next()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"next"},{"kind":"text","text":"() -> "},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}],"role":"symbol","required":true,"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"url":"\/documentation\/hummingbird\/eventloopfuture","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"title":"ByteBufferAllocator","url":"\/documentation\/hummingbird\/bytebufferallocator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/shutdownGracefully(queue:_:)":{"type":"topic","title":"shutdownGracefully(queue:_:)","required":true,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownGracefully","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbird\/eventloopgroup\/shutdowngracefully(queue:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/shutdownGracefully(queue:_:)","role":"symbol","abstract":[{"text":"Shuts down the eventloop gracefully. This function is clearly an outlier in that it uses a completion","type":"text"},{"text":" ","type":"text"},{"text":"callback instead of an EventLoopFuture. The reason for that is that NIO’s EventLoopFutures will call back on an event loop.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The virtue of this function is to shut the event loop down. To work around that we call back on a DispatchQueue"},{"type":"text","text":" "},{"type":"text","text":"instead."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"title":"ByteBuffer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","url":"\/documentation\/hummingbird\/bytebuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","kind":"symbol","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","title":"EventLoop","url":"\/documentation\/hummingbird\/eventloop"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/any()":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns any "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":", a common choice is the current "},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"}],"title":"any()","url":"\/documentation\/hummingbird\/eventloopgroup\/any()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/any()","required":true},"doc://com.opticalaberration.hummingbird/7NIOCore25NIOPreconcurrencySendableP":{"type":"unresolvable","title":"NIOCore.NIOPreconcurrencySendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore25NIOPreconcurrencySendableP"}}}