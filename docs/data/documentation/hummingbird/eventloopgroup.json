{"abstract":[{"text":"Provides an endless stream of ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s to use.","type":"text"}],"variants":[{"paths":["\/documentation\/hummingbird\/eventloopgroup"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom"},{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop"],"title":"Inherited By","type":"inheritedBy"}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/any()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/makeIterator()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/shutdownGracefully(queue:_:)"],"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"},{"kind":"text","text":" : AnyObject, "},{"kind":"typeIdentifier","text":"_NIOPreconcurrencySendable"}],"languages":["swift"]}]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"],"title":"NIOCore Symbols"}],"metadata":{"symbolKind":"protocol","title":"EventLoopGroup","role":"symbol","modules":[{"name":"Hummingbird"}],"roleHeading":"Protocol","externalID":"s:7NIOCore14EventLoopGroupP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","title":"EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"url":"\/documentation\/hummingbird\/eventloopfuture"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/shutdownGracefully(queue:_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"title":"shutdownGracefully(queue:_:)","kind":"symbol","required":true,"abstract":[{"text":"Shuts down the eventloop gracefully. This function is clearly an outlier in that it uses a completion","type":"text"},{"text":" ","type":"text"},{"text":"callback instead of an EventLoopFuture. The reason for that is that NIO’s EventLoopFutures will call back on an event loop.","type":"text"},{"text":" ","type":"text"},{"text":"The virtue of this function is to shut the event loop down. To work around that we call back on a DispatchQueue","type":"text"},{"text":" ","type":"text"},{"text":"instead.","type":"text"}],"url":"\/documentation\/hummingbird\/eventloopgroup\/shutdowngracefully(queue:_:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/shutdownGracefully(queue:_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"role":"symbol","url":"\/documentation\/hummingbird\/bytebuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/makeIterator()":{"url":"\/documentation\/hummingbird\/eventloopgroup\/makeiterator()","title":"makeIterator()","required":true,"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeIterator","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopIterator","preciseIdentifier":"s:7NIOCore17EventLoopIteratorV","kind":"typeIdentifier"}],"abstract":[{"text":"Returns an ","type":"text"},{"code":"EventLoopIterator","type":"codeVoice"},{"text":" over the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s in this ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/makeIterator()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"title":"EventLoopGroup","url":"\/documentation\/hummingbird\/eventloopgroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","type":"topic","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TimeAmount":{"url":"\/documentation\/hummingbird\/timeamount","kind":"symbol","role":"symbol","title":"TimeAmount","navigatorTitle":[{"kind":"identifier","text":"TimeAmount"}],"type":"topic","abstract":[{"type":"text","text":"Represents a time "},{"inlineContent":[{"type":"text","text":"interval"}],"type":"emphasis"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeAmount"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/next()":{"url":"\/documentation\/hummingbird\/eventloopgroup\/next()","title":"next()","required":true,"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"next","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}],"abstract":[{"text":"Returns the next ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" to use, this is useful for load balancing.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/next()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoop"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"title":"EventLoop","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/eventloop"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress":{"title":"SocketAddress","navigatorTitle":[{"text":"SocketAddress","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SocketAddress","kind":"identifier"}],"abstract":[{"type":"text","text":"Represent a socket address to which we may want to connect or bind."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/socketaddress","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup/any()":{"url":"\/documentation\/hummingbird\/eventloopgroup\/any()","title":"any()","required":true,"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"any","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP","kind":"typeIdentifier"}],"abstract":[{"text":"Returns any ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" from the ","type":"text"},{"code":"EventLoopGroup","type":"codeVoice"},{"text":", a common choice is the current ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup\/any()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"malloc"},{"type":"text","text":", "},{"type":"codeVoice","code":"realloc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"url":"\/documentation\/hummingbird\/bytebufferallocator","title":"ByteBufferAllocator","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"}}}