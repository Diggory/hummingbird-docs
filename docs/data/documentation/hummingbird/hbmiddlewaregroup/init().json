{"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Initialize "},{"type":"codeVoice","code":"HBMiddlewareGroup"}],"variants":[{"paths":["\/documentation\/hummingbird\/hbmiddlewaregroup\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"init()","modules":[{"name":"HummingbirdLambda"}],"externalID":"s:11Hummingbird17HBMiddlewareGroupCACycfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","roleHeading":"Initializer","symbolKind":"init"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Set middleware array to be empty","type":"text"}],"type":"paragraph"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup\/init()"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup":{"role":"symbol","url":"\/documentation\/hummingbird\/hbmiddlewaregroup","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"type":"topic","kind":"symbol","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"title":"HBMiddlewareGroup","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBMiddlewareGroup/init()":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"title":"init()","abstract":[{"type":"text","text":"Initialize "},{"code":"HBMiddlewareGroup","type":"codeVoice"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBMiddlewareGroup\/init()","url":"\/documentation\/hummingbird\/hbmiddlewaregroup\/init()"}}}