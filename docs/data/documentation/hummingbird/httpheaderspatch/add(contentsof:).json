{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contentsOf"},{"kind":"text","text":" "},{"kind":"internalParam","text":"other"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird16HTTPHeadersPatchV3add10contentsOfyx_tSTRzSS_SSt7ElementRtzlF1SL_xmfp","kind":"typeIdentifier","text":"S"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:ST","kind":"typeIdentifier","text":"Sequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == ("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"parameters":[{"name":"contentsOf","content":[{"inlineContent":[{"type":"text","text":"The sequence of header name\/value pairs. For maximum compatibility"},{"type":"text","text":" "},{"type":"text","text":"the header should be an ASCII string. For future-proofing with HTTP\/2 lowercase header"},{"type":"text","text":" "},{"type":"text","text":"names are strongly recommended."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is strictly additive: if there are other entries with the same header","type":"text"},{"text":" ","type":"text"},{"text":"name already in the block, this will add new entries.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch\/add(contentsOf:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch"]]},"sections":[],"abstract":[{"type":"text","text":"Add a sequence of header name\/value pairs to the block."}],"variants":[{"paths":["\/documentation\/hummingbird\/httpheaderspatch\/add(contentsof:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:11Hummingbird16HTTPHeadersPatchV3add10contentsOfyx_tSTRzSS_SSt7ElementRtzlF","title":"add(contentsOf:)","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"contentsOf","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","preciseIdentifier":"s:11Hummingbird16HTTPHeadersPatchV3add10contentsOfyx_tSTRzSS_SSt7ElementRtzlF1SL_xmfp","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method"},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeadersPatch/add(contentsOf:)":{"kind":"symbol","role":"symbol","title":"add(contentsOf:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch\/add(contentsOf:)","url":"\/documentation\/hummingbird\/httpheaderspatch\/add(contentsof:)","abstract":[{"text":"Add a sequence of header name\/value pairs to the block.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"contentsOf","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","preciseIdentifier":"s:11Hummingbird16HTTPHeadersPatchV3add10contentsOfyx_tSTRzSS_SSt7ElementRtzlF1SL_xmfp","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeadersPatch":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPHeadersPatch"}],"type":"topic","url":"\/documentation\/hummingbird\/httpheaderspatch","abstract":[{"type":"text","text":"Used to Patch HTTPHeaders. Remembers if a header was added in with "},{"code":"add","type":"codeVoice"},{"type":"text","text":" or "},{"code":"replaceOrAdd","type":"codeVoice"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeadersPatch","title":"HTTPHeadersPatch","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPHeadersPatch"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"}}}