{"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeWithUnsafeMutableBytes"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minimumWritableBytes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sw","text":"UnsafeMutableRawBufferPointer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"externalID":"s:7NIOCore10ByteBufferV27writeWithUnsafeMutableBytes015minimumWritableH0_S2i_SiSwKXEtKF","role":"symbol","title":"writeWithUnsafeMutableBytes(minimumWritableBytes:_:)","symbolKind":"method"},"sections":[],"variants":[{"paths":["\/documentation\/hummingbird\/bytebuffer\/writewithunsafemutablebytes(minimumwritablebytes:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer\/writeWithUnsafeMutableBytes(minimumWritableBytes:_:)"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeWithUnsafeMutableBytes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minimumWritableBytes","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"body","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier","preciseIdentifier":"s:Sw"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"minimumWritableBytes","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The number of writable bytes to reserve capacity for before vending the "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" pointer to "},{"type":"codeVoice","code":"body"},{"type":"text","text":"."}]}]},{"name":"body","content":[{"type":"paragraph","inlineContent":[{"text":"The closure that will accept the yielded bytes and return the number of bytes written.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"The number of bytes written."}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"style":"warning","content":[{"inlineContent":[{"type":"text","text":"Do not escape the pointer from the closure for later use."}],"type":"paragraph"}],"name":"Warning","type":"aside"}]}],"abstract":[{"text":"This vends a pointer of the ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" at the ","type":"text"},{"code":"writerIndex","type":"codeVoice"},{"text":" after ensuring that the buffer has at least ","type":"text"},{"code":"minimumWritableBytes","type":"codeVoice"},{"text":" of writable bytes available.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer/writeWithUnsafeMutableBytes(minimumWritableBytes:_:)":{"url":"\/documentation\/hummingbird\/bytebuffer\/writewithunsafemutablebytes(minimumwritablebytes:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer\/writeWithUnsafeMutableBytes(minimumWritableBytes:_:)","role":"symbol","title":"writeWithUnsafeMutableBytes(minimumWritableBytes:_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeWithUnsafeMutableBytes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minimumWritableBytes","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:Sw","text":"UnsafeMutableRawBufferPointer","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"This vends a pointer of the ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" at the ","type":"text"},{"type":"codeVoice","code":"writerIndex"},{"text":" after ensuring that the buffer has at least ","type":"text"},{"type":"codeVoice","code":"minimumWritableBytes"},{"text":" of writable bytes available.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"role":"symbol","url":"\/documentation\/hummingbird\/bytebuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"}}}