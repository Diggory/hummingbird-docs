{"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer\/withVeryUnsafeBytes(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This vends a pointer to the storage of the "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":". It’s marked as "},{"type":"emphasis","inlineContent":[{"text":"very unsafe","type":"text"}]},{"type":"text","text":" because it might contain"},{"type":"text","text":" "},{"type":"text","text":"uninitialised memory and it’s undefined behaviour to read it. In most cases you should use "},{"code":"withUnsafeReadableBytes","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/hummingbird\/bytebuffer\/withveryunsafebytes(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"withVeryUnsafeBytes(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withVeryUnsafeBytes"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","preciseIdentifier":"s:SW","text":"UnsafeRawBufferPointer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}],"role":"symbol","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","symbolKind":"method","externalID":"s:7NIOCore10ByteBufferV19withVeryUnsafeBytesyxxSWKXEKlF"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer"]]},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withVeryUnsafeBytes"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"UnsafeRawBufferPointer","preciseIdentifier":"s:SW"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"}]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"content":[{"type":"paragraph","inlineContent":[{"text":"Do not escape the pointer from the closure for later use.","type":"text"}]}],"type":"aside","style":"warning","name":"Warning"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer/withVeryUnsafeBytes(_:)":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer\/withVeryUnsafeBytes(_:)","abstract":[{"type":"text","text":"This vends a pointer to the storage of the "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":". It’s marked as "},{"type":"emphasis","inlineContent":[{"type":"text","text":"very unsafe"}]},{"type":"text","text":" because it might contain"},{"type":"text","text":" "},{"text":"uninitialised memory and it’s undefined behaviour to read it. In most cases you should use ","type":"text"},{"code":"withUnsafeReadableBytes","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","title":"withVeryUnsafeBytes(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withVeryUnsafeBytes","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"UnsafeRawBufferPointer","preciseIdentifier":"s:SW","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbird\/bytebuffer\/withveryunsafebytes(_:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"title":"ByteBuffer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","url":"\/documentation\/hummingbird\/bytebuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"role":"symbol","type":"topic"}}}