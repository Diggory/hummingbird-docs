{"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbird\/bytebuffer\/getslice(at:length:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"getSlice(at:length:)","modules":[{"name":"Hummingbird"}],"externalID":"s:7NIOCore10ByteBufferV8getSlice2at6lengthACSgSi_SitF","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getSlice","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?","kind":"text"}]},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getSlice","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"index","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"index","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The index the requested slice starts at."}]}]},{"name":"length","content":[{"inlineContent":[{"text":"The length of the requested slice.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" containing the selected bytes as readable bytes or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the selected bytes were"},{"type":"text","text":" "},{"type":"text","text":"not readable in the initial "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The selected bytes must be readable or else "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" will be returned."}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer\/getSlice(at:length:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Returns a slice of size "},{"code":"length","type":"codeVoice"},{"type":"text","text":" bytes, starting at "},{"code":"index","type":"codeVoice"},{"type":"text","text":". The "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" this is invoked on and the"},{"type":"text","text":" "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" returned will share the same underlying storage. However, the byte at "},{"code":"index","type":"codeVoice"},{"type":"text","text":" in this "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"will correspond to index "},{"code":"0","type":"codeVoice"},{"type":"text","text":" in the returned "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The "},{"code":"readerIndex","type":"codeVoice"},{"type":"text","text":" of the returned "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" will be "},{"code":"0","type":"codeVoice"},{"type":"text","text":", the "},{"code":"writerIndex","type":"codeVoice"},{"type":"text","text":" will be "},{"code":"length","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer/getSlice(at:length:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getSlice","kind":"identifier"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"length","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?","kind":"text"}],"title":"getSlice(at:length:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer\/getSlice(at:length:)","url":"\/documentation\/hummingbird\/bytebuffer\/getslice(at:length:)","type":"topic","abstract":[{"type":"text","text":"Returns a slice of size "},{"code":"length","type":"codeVoice"},{"type":"text","text":" bytes, starting at "},{"code":"index","type":"codeVoice"},{"type":"text","text":". The "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" this is invoked on and the"},{"type":"text","text":" "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" returned will share the same underlying storage. However, the byte at "},{"code":"index","type":"codeVoice"},{"text":" in this ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" ","type":"text"},{"text":"will correspond to index ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" in the returned ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"The ","type":"text"},{"code":"readerIndex","type":"codeVoice"},{"text":" of the returned ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" will be ","type":"text"},{"code":"0","type":"codeVoice"},{"text":", the ","type":"text"},{"code":"writerIndex","type":"codeVoice"},{"text":" will be ","type":"text"},{"code":"length","type":"codeVoice"},{"text":".","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","url":"\/documentation\/hummingbird\/bytebuffer","type":"topic","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}]}}}