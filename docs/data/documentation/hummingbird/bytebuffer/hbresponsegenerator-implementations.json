{"sections":[],"metadata":{"modules":[{"name":"Hummingbird"}],"role":"collectionGroup","title":"HBResponseGenerator Implementations"},"kind":"article","topicSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer\/response(from:)"],"title":"Instance Methods"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer\/HBResponseGenerator-Implementations","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer/response(from:)":{"type":"topic","kind":"symbol","title":"response(from:)","url":"\/documentation\/hummingbird\/bytebuffer\/response(from:)","abstract":[{"type":"text","text":"Generate response holding bytebuffer"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer\/response(from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"response"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:11Hummingbird10HBResponseV","kind":"typeIdentifier","text":"HBResponse"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"role":"symbol","url":"\/documentation\/hummingbird\/bytebuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"}}}