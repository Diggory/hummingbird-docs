{"abstract":[{"type":"text","text":"don’t collate the request body, expect handler to stream it"}],"sections":[],"kind":"symbol","metadata":{"roleHeading":"Type Property","symbolKind":"property","role":"symbol","title":"streamBody","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"streamBody"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier","text":"HBRouterMethodOptions"}],"modules":[{"name":"HummingbirdLambda"}],"externalID":"s:11Hummingbird21HBRouterMethodOptionsV10streamBodyACvpZ"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbroutermethodoptions\/streambody"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"streamBody"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRouterMethodOptions","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"}],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions\/streamBody","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRouterMethodOptions","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","abstract":[{"type":"text","text":"Options available to routes"}],"title":"HBRouterMethodOptions","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbroutermethodoptions"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions/streamBody":{"url":"\/documentation\/hummingbird\/hbroutermethodoptions\/streambody","title":"streamBody","abstract":[{"text":"don’t collate the request body, expect handler to stream it","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions\/streamBody","type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"streamBody"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"}}}