{"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop"},"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/7NIOCore25NIOPreconcurrencySendableP","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships"}],"kind":"symbol","seeAlsoSections":[{"title":"NIOCore Symbols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/eventloop"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usually multiple "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s share the same "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" for processing IO \/ tasks and so share the same processing "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"For a better understanding of how such an "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" works internally the following pseudo code may be helpful:"}]},{"code":["while eventLoop.isOpen {","    \/\/\/ Block until there is something to process for 1...n Channels","    let readyChannels = blockUntilIoOrTasksAreReady()","    \/\/\/ Loop through all the Channels","    for channel in readyChannels {","        \/\/\/ Process IO and \/ or tasks for the Channel.","        \/\/\/ This may include things like:","        \/\/\/    - accept new connection","        \/\/\/    - connect to a remote host","        \/\/\/    - read from socket","        \/\/\/    - write to socket","        \/\/\/    - tasks that were submitted via EventLoop methods","        \/\/\/ and others.","        processIoAndTasks(channel)","    }","}"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because an "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" may be shared between multiple "},{"code":"Channel","type":"codeVoice"},{"text":"s it’s important to ","type":"text"},{"inlineContent":[{"text":"NOT","type":"text"}],"type":"emphasis"},{"text":" block while processing IO \/ tasks. This also includes long running computations which will have the same","type":"text"},{"text":" ","type":"text"},{"text":"effect as blocking in this case.","type":"text"}]}],"kind":"content"}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/inEventLoop"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/execute(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/makeSucceededVoidFuture()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionInEventLoop(file:line:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionNotInEventLoop(file:line:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(deadline:_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(in:_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/submit(_:)"]}],"metadata":{"roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","symbolKind":"protocol","externalID":"s:7NIOCore9EventLoopP","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}]},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"url":"\/documentation\/hummingbird\/eventloopfuture","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress":{"url":"\/documentation\/hummingbird\/socketaddress","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","abstract":[{"type":"text","text":"Represent a socket address to which we may want to connect or bind."}],"navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}],"title":"SocketAddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/submit(_:)":{"abstract":[{"type":"text","text":"Submit a given task to be executed by the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":". Once the execution is complete the returned "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" is notified."}],"kind":"symbol","title":"submit(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/submit(_:)","type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/eventloop\/submit(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"submit","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","kind":"symbol","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","title":"EventLoop","url":"\/documentation\/hummingbird\/eventloop"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/preconditionNotInEventLoop(file:line:)":{"abstract":[{"type":"text","text":"Asserts that the current thread is "},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" the one tied to this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, the process will be abnormally terminated as per the semantics of "},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionNotInEventLoop(file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preconditionNotInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"preconditionNotInEventLoop(file:line:)","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/eventloop\/preconditionnotineventloop(file:line:)","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TimeAmount":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TimeAmount"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount","abstract":[{"text":"Represents a time ","type":"text"},{"inlineContent":[{"type":"text","text":"interval"}],"type":"emphasis"},{"text":".","type":"text"}],"role":"symbol","title":"TimeAmount","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimeAmount","kind":"identifier"}],"url":"\/documentation\/hummingbird\/timeamount"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/makeSucceededVoidFuture()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededVoidFuture","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/makeSucceededVoidFuture()","title":"makeSucceededVoidFuture()","kind":"symbol","required":true,"role":"symbol","url":"\/documentation\/hummingbird\/eventloop\/makesucceededvoidfuture()","abstract":[{"text":"Return a succeeded ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" future.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/inEventLoop":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inEventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/inEventLoop","title":"inEventLoop","kind":"symbol","required":true,"role":"symbol","url":"\/documentation\/hummingbird\/eventloop\/ineventloop","abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the current ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":" is the same as the ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":" that is tied to this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":". ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" otherwise.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"title":"ByteBuffer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","url":"\/documentation\/hummingbird\/bytebuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/scheduleTask(in:_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9ScheduledV","text":"Scheduled","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(in:_:)","title":"scheduleTask(in:_:)","kind":"symbol","required":true,"role":"symbol","url":"\/documentation\/hummingbird\/eventloop\/scheduletask(in:_:)","abstract":[{"text":"Schedule a ","type":"text"},{"type":"codeVoice","code":"task"},{"text":" that is executed by this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" after the given amount of time.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/preconditionInEventLoop(file:line:)":{"abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, the process will be abnormally terminated as per the semantics of ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/eventloop\/preconditionineventloop(file:line:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionInEventLoop(file:line:)","type":"topic","required":true,"title":"preconditionInEventLoop(file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preconditionInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/execute(_:)":{"required":true,"abstract":[{"type":"text","text":"Submit a given task to be executed by the "},{"code":"EventLoop","type":"codeVoice"}],"role":"symbol","title":"execute(_:)","type":"topic","url":"\/documentation\/hummingbird\/eventloop\/execute(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/execute(_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"title":"ByteBufferAllocator","url":"\/documentation\/hummingbird\/bytebufferallocator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/scheduleTask(deadline:_:)":{"required":true,"abstract":[{"type":"text","text":"Schedule a "},{"code":"task","type":"codeVoice"},{"type":"text","text":" that is executed by this "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" at the given time."}],"role":"symbol","title":"scheduleTask(deadline:_:)","type":"topic","url":"\/documentation\/hummingbird\/eventloop\/scheduletask(deadline:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"deadline","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore11NIODeadlineV","text":"NIODeadline","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9ScheduledV","text":"Scheduled","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(deadline:_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"url":"\/documentation\/hummingbird\/eventloopgroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","title":"EventLoopGroup","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/7NIOCore25NIOPreconcurrencySendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore25NIOPreconcurrencySendableP","title":"NIOCore.NIOPreconcurrencySendable"}}}