{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop"},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"seeAlsoSections":[{"title":"NIOCore Symbols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"],"generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Protocol","externalID":"s:7NIOCore9EventLoopP","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"role":"symbol","title":"EventLoop","modules":[{"name":"Hummingbird"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/executor","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/inEventLoop"],"generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/enqueue(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/execute(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/makeSucceededVoidFuture()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionInEventLoop(file:line:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionNotInEventLoop(file:line:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(deadline:_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(in:_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/submit(_:)"],"generated":true}],"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","kind":"typeIdentifier","text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"Usually multiple ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s share the same ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" for processing IO \/ tasks and so share the same processing ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"For a better understanding of how such an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" works internally the following pseudo code may be helpful:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["while eventLoop.isOpen {","    \/\/\/ Block until there is something to process for 1...n Channels","    let readyChannels = blockUntilIoOrTasksAreReady()","    \/\/\/ Loop through all the Channels","    for channel in readyChannels {","        \/\/\/ Process IO and \/ or tasks for the Channel.","        \/\/\/ This may include things like:","        \/\/\/    - accept new connection","        \/\/\/    - connect to a remote host","        \/\/\/    - read from socket","        \/\/\/    - write to socket","        \/\/\/    - tasks that were submitted via EventLoop methods","        \/\/\/ and others.","        processIoAndTasks(channel)","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Because an "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" may be shared between multiple "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s it’s important to "},{"type":"emphasis","inlineContent":[{"type":"text","text":"NOT"}]},{"type":"text","text":" block while processing IO \/ tasks. This also includes long running computations which will have the same"},{"type":"text","text":" "},{"type":"text","text":"effect as blocking in this case."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/eventloop"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/preconditionNotInEventLoop(file:line:)":{"type":"topic","url":"\/documentation\/hummingbird\/eventloop\/preconditionnotineventloop(file:line:)","abstract":[{"type":"text","text":"Asserts that the current thread is "},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"type":"text","text":" the one tied to this "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, the process will be abnormally terminated as per the semantics of "},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preconditionNotInEventLoop"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionNotInEventLoop(file:line:)","title":"preconditionNotInEventLoop(file:line:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"role":"symbol","url":"\/documentation\/hummingbird\/bytebuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/makeSucceededVoidFuture()":{"kind":"symbol","role":"symbol","title":"makeSucceededVoidFuture()","abstract":[{"text":"Return a succeeded ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" future.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/makeSucceededVoidFuture()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededVoidFuture","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"required":true,"url":"\/documentation\/hummingbird\/eventloop\/makesucceededvoidfuture()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/execute(_:)":{"role":"symbol","url":"\/documentation\/hummingbird\/eventloop\/execute(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/execute(_:)","abstract":[{"text":"Submit a given task to be executed by the ","type":"text"},{"type":"codeVoice","code":"EventLoop"}],"type":"topic","title":"execute(_:)","required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoop"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"title":"EventLoop","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/eventloop"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/executor":{"abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"SerialExecutor"},{"type":"text","text":" corresponding to this "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop"},{"type":"text","text":"."}],"title":"executor","required":true,"url":"\/documentation\/hummingbird\/eventloop\/executor","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/executor","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"executor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SerialExecutor","preciseIdentifier":"s:Scf"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"malloc"},{"type":"text","text":", "},{"type":"codeVoice","code":"realloc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"url":"\/documentation\/hummingbird\/bytebufferallocator","title":"ByteBufferAllocator","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"title":"EventLoopGroup","url":"\/documentation\/hummingbird\/eventloopgroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","type":"topic","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/scheduleTask(deadline:_:)":{"abstract":[{"type":"text","text":"Schedule a "},{"code":"task","type":"codeVoice"},{"type":"text","text":" that is executed by this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" at the given time."}],"type":"topic","required":true,"kind":"symbol","title":"scheduleTask(deadline:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scheduleTask"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"deadline"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore11NIODeadlineV","text":"NIODeadline"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9ScheduledV","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/hummingbird\/eventloop\/scheduletask(deadline:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(deadline:_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/submit(_:)":{"url":"\/documentation\/hummingbird\/eventloop\/submit(_:)","type":"topic","title":"submit(_:)","required":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"submit","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/submit(_:)","role":"symbol","abstract":[{"type":"text","text":"Submit a given task to be executed by the "},{"code":"EventLoop","type":"codeVoice"},{"text":". Once the execution is complete the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" is notified.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/inEventLoop":{"title":"inEventLoop","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/inEventLoop","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inEventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","required":true,"abstract":[{"text":"Returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the current ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":" is the same as the ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":" that is tied to this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":". ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/eventloop\/ineventloop"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TimeAmount":{"url":"\/documentation\/hummingbird\/timeamount","kind":"symbol","role":"symbol","title":"TimeAmount","navigatorTitle":[{"kind":"identifier","text":"TimeAmount"}],"type":"topic","abstract":[{"type":"text","text":"Represents a time "},{"inlineContent":[{"type":"text","text":"interval"}],"type":"emphasis"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeAmount"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/enqueue(_:)":{"title":"enqueue(_:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/enqueue(_:)","required":true,"role":"symbol","abstract":[{"text":"Submit a job to be executed by the ","type":"text"},{"code":"EventLoop","type":"codeVoice"}],"url":"\/documentation\/hummingbird\/eventloop\/enqueue(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"enqueue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"consuming","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ExecutorJob","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency11ExecutorJobV"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/scheduleTask(in:_:)":{"role":"symbol","url":"\/documentation\/hummingbird\/eventloop\/scheduletask(in:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(in:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore9ScheduledV","kind":"typeIdentifier","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"scheduleTask(in:_:)","type":"topic","required":true,"kind":"symbol","abstract":[{"type":"text","text":"Schedule a "},{"type":"codeVoice","code":"task"},{"text":" that is executed by this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" after the given amount of time.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress":{"title":"SocketAddress","navigatorTitle":[{"text":"SocketAddress","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"SocketAddress","kind":"identifier"}],"abstract":[{"type":"text","text":"Represent a socket address to which we may want to connect or bind."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbird\/socketaddress","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/preconditionInEventLoop(file:line:)":{"title":"preconditionInEventLoop(file:line:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionInEventLoop(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preconditionInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","required":true,"abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, the process will be abnormally terminated as per the semantics of ","type":"text"},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"text":".","type":"text"}],"type":"topic","url":"\/documentation\/hummingbird\/eventloop\/preconditionineventloop(file:line:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"role":"symbol","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","title":"EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"url":"\/documentation\/hummingbird\/eventloopfuture"}}}