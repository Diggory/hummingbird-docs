{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/eventloop"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/7NIOCore25NIOPreconcurrencySendableP","doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/inEventLoop"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/execute(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/makeSucceededVoidFuture()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionInEventLoop(file:line:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionNotInEventLoop(file:line:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(deadline:_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(in:_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/submit(_:)"],"title":"Instance Methods"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usually multiple "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"s share the same "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" for processing IO \/ tasks and so share the same processing "},{"code":"NIOThread","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"For a better understanding of how such an "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":" works internally the following pseudo code may be helpful:"}]},{"type":"codeListing","code":["while eventLoop.isOpen {","    \/\/\/ Block until there is something to process for 1...n Channels","    let readyChannels = blockUntilIoOrTasksAreReady()","    \/\/\/ Loop through all the Channels","    for channel in readyChannels {","        \/\/\/ Process IO and \/ or tasks for the Channel.","        \/\/\/ This may include things like:","        \/\/\/    - accept new connection","        \/\/\/    - connect to a remote host","        \/\/\/    - read from socket","        \/\/\/    - write to socket","        \/\/\/    - tasks that were submitted via EventLoop methods","        \/\/\/ and others.","        processIoAndTasks(channel)","    }","}"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"Because an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" may be shared between multiple ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s it’s important to ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"NOT"}]},{"text":" block while processing IO \/ tasks. This also includes long running computations which will have the same","type":"text"},{"text":" ","type":"text"},{"text":"effect as blocking in this case.","type":"text"}]}],"kind":"content"}],"metadata":{"role":"symbol","modules":[{"name":"Hummingbird"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"EventLoop"}],"externalID":"s:7NIOCore9EventLoopP","title":"EventLoop","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}]},"abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"],"title":"NIOCore Symbols","generated":true}],"kind":"symbol","identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","interfaceLanguage":"swift"},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/scheduleTask(in:_:)":{"required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scheduleTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9ScheduledV","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(in:_:)","abstract":[{"text":"Schedule a ","type":"text"},{"code":"task","type":"codeVoice"},{"type":"text","text":" that is executed by this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" after the given amount of time."}],"role":"symbol","url":"\/documentation\/hummingbird\/eventloop\/scheduletask(in:_:)","type":"topic","title":"scheduleTask(in:_:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/makeSucceededVoidFuture()":{"role":"symbol","url":"\/documentation\/hummingbird\/eventloop\/makesucceededvoidfuture()","abstract":[{"text":"Return a succeeded ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" future.","type":"text"}],"required":true,"type":"topic","title":"makeSucceededVoidFuture()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededVoidFuture","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/makeSucceededVoidFuture()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/inEventLoop":{"abstract":[{"text":"Returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the current ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":" is the same as the ","type":"text"},{"type":"codeVoice","code":"NIOThread"},{"text":" that is tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":". ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" otherwise.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"inEventLoop","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"required":true,"type":"topic","url":"\/documentation\/hummingbird\/eventloop\/ineventloop","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/inEventLoop","kind":"symbol","role":"symbol","title":"inEventLoop"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/preconditionNotInEventLoop(file:line:)":{"role":"symbol","abstract":[{"text":"Asserts that the current thread is ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"text":" the one tied to this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Otherwise, the process will be abnormally terminated as per the semantics of "},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"type":"text","text":"."}],"required":true,"url":"\/documentation\/hummingbird\/eventloop\/preconditionnotineventloop(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preconditionNotInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionNotInEventLoop(file:line:)","type":"topic","title":"preconditionNotInEventLoop(file:line:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"ByteBufferAllocator","abstract":[{"type":"text","text":"The preferred allocator for "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"code":"malloc","type":"codeVoice"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/bytebufferallocator"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/scheduleTask(deadline:_:)":{"kind":"symbol","title":"scheduleTask(deadline:_:)","role":"symbol","required":true,"abstract":[{"type":"text","text":"Schedule a "},{"type":"codeVoice","code":"task"},{"type":"text","text":" that is executed by this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" at the given time."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"deadline","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIODeadline","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore11NIODeadlineV"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9ScheduledV","kind":"typeIdentifier","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/hummingbird\/eventloop\/scheduletask(deadline:_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/scheduleTask(deadline:_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress":{"navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}],"title":"SocketAddress","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}],"url":"\/documentation\/hummingbird\/socketaddress","abstract":[{"text":"Represent a socket address to which we may want to connect or bind.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/preconditionInEventLoop(file:line:)":{"type":"topic","title":"preconditionInEventLoop(file:line:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/preconditionInEventLoop(file:line:)","kind":"symbol","url":"\/documentation\/hummingbird\/eventloop\/preconditionineventloop(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preconditionInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, the process will be abnormally terminated as per the semantics of ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":".","type":"text"}],"required":true},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/execute(_:)":{"role":"symbol","title":"execute(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/execute(_:)","url":"\/documentation\/hummingbird\/eventloop\/execute(_:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"kind":"text","text":"(() -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Submit a given task to be executed by the "},{"type":"codeVoice","code":"EventLoop"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/submit(_:)":{"type":"topic","title":"submit(_:)","abstract":[{"type":"text","text":"Submit a given task to be executed by the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":". Once the execution is complete the returned "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" is notified."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"submit"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/hummingbird\/eventloop\/submit(_:)","required":true,"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/submit(_:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"url":"\/documentation\/hummingbird\/eventloopgroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol","title":"EventLoopGroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","url":"\/documentation\/hummingbird\/bytebuffer","type":"topic","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TimeAmount":{"type":"topic","title":"TimeAmount","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount","navigatorTitle":[{"text":"TimeAmount","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/timeamount","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimeAmount","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Represents a time "},{"type":"emphasis","inlineContent":[{"text":"interval","type":"text"}]},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"kind":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","url":"\/documentation\/hummingbird\/eventloop","type":"topic","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"type":"topic","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"role":"symbol","title":"EventLoopFuture","url":"\/documentation\/hummingbird\/eventloopfuture","kind":"symbol"},"doc://com.opticalaberration.hummingbird/7NIOCore25NIOPreconcurrencySendableP":{"type":"unresolvable","title":"NIOCore.NIOPreconcurrencySendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/7NIOCore25NIOPreconcurrencySendableP"}}}