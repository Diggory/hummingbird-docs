{"variants":[{"paths":["\/documentation\/hummingbird\/socketaddress\/port"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress\/port"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"port","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]}],"abstract":[{"type":"text","text":"Get and set the port associated with the address, if defined."},{"type":"text","text":" "},{"type":"text","text":"When setting to "},{"type":"codeVoice","code":"nil"},{"text":" the port will default to ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" for compatible sockets. The rationale for this is that both ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"0","type":"codeVoice"},{"text":" can","type":"text"},{"text":" ","type":"text"},{"text":"be interpreted as “no preference”.","type":"text"},{"text":" ","type":"text"},{"text":"Setting a non-nil value for a unix domain socket is invalid and will result in a fatal error.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress"]]},"kind":"symbol","metadata":{"externalID":"s:7NIOCore13SocketAddressO4portSiSgvp","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"port","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","roleHeading":"Instance Property","title":"port","symbolKind":"property","modules":[{"name":"Hummingbird"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress":{"url":"\/documentation\/hummingbird\/socketaddress","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","abstract":[{"type":"text","text":"Represent a socket address to which we may want to connect or bind."}],"navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}],"title":"SocketAddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress/port":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress\/port","abstract":[{"type":"text","text":"Get and set the port associated with the address, if defined."},{"type":"text","text":" "},{"type":"text","text":"When setting to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" the port will default to "},{"type":"codeVoice","code":"0"},{"type":"text","text":" for compatible sockets. The rationale for this is that both "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" and "},{"type":"codeVoice","code":"0"},{"type":"text","text":" can"},{"type":"text","text":" "},{"type":"text","text":"be interpreted as “no preference”."},{"type":"text","text":" "},{"type":"text","text":"Setting a non-nil value for a unix domain socket is invalid and will result in a fatal error."}],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"port","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"port","url":"\/documentation\/hummingbird\/socketaddress\/port"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"}}}