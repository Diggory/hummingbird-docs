{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","interfaceLanguage":"swift"},"sections":[],"metadata":{"externalID":"s:7NIOCore19ByteBufferAllocatorV","roleHeading":"Structure","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"title":"ByteBufferAllocator","modules":[{"name":"Hummingbird"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator\/buffer(capacity:)"]}],"kind":"symbol","abstract":[{"type":"text","text":"The preferred allocator for "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"code":"malloc","type":"codeVoice"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"code":"free","type":"codeVoice"},{"type":"text","text":"."}],"seeAlsoSections":[{"generated":true,"title":"NIOCore Symbols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" is thread-safe."}]}],"style":"note"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"paths":["\/documentation\/hummingbird\/bytebufferallocator"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator/init()":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator\/init()","url":"\/documentation\/hummingbird\/bytebufferallocator\/init()","kind":"symbol","abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocator"},{"text":". In the future the allocator might use for example allocation pools and","type":"text"},{"text":" ","type":"text"},{"text":"therefore it’s recommended to reuse ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocators"},{"text":" where possible instead of creating fresh ones in","type":"text"},{"text":" ","type":"text"},{"text":"many places.","type":"text"}],"title":"init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress":{"url":"\/documentation\/hummingbird\/socketaddress","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","abstract":[{"type":"text","text":"Represent a socket address to which we may want to connect or bind."}],"navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}],"title":"SocketAddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}],"kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"title":"ByteBuffer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","url":"\/documentation\/hummingbird\/bytebuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"title":"EventLoopFuture","abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"url":"\/documentation\/hummingbird\/eventloopfuture","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"url":"\/documentation\/hummingbird\/eventloopgroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","title":"EventLoopGroup","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TimeAmount":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TimeAmount"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount","abstract":[{"text":"Represents a time ","type":"text"},{"inlineContent":[{"type":"text","text":"interval"}],"type":"emphasis"},{"text":".","type":"text"}],"role":"symbol","title":"TimeAmount","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimeAmount","kind":"identifier"}],"url":"\/documentation\/hummingbird\/timeamount"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"title":"ByteBufferAllocator","url":"\/documentation\/hummingbird\/bytebufferallocator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"code":"realloc","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"free","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator/buffer(capacity:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator\/buffer(capacity:)","role":"symbol","title":"buffer(capacity:)","url":"\/documentation\/hummingbird\/bytebufferallocator\/buffer(capacity:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buffer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"capacity","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"}],"abstract":[{"text":"Request a freshly allocated ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" of size ","type":"text"},{"code":"capacity","type":"codeVoice"},{"text":" or larger.","type":"text"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","kind":"symbol","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","title":"EventLoop","url":"\/documentation\/hummingbird\/eventloop"}}}