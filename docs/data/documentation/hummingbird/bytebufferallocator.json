{"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"]}],"kind":"symbol","metadata":{"title":"ByteBufferAllocator","navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"externalID":"s:7NIOCore19ByteBufferAllocatorV","role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"Hummingbird"}]},"seeAlsoSections":[{"generated":true,"title":"NIOCore Symbols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"malloc"},{"type":"text","text":", "},{"type":"codeVoice","code":"realloc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/hummingbird\/bytebufferallocator"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator\/buffer(capacity:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" is thread-safe."}]}],"style":"note","name":"Note","type":"aside"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBufferAllocator","kind":"identifier"}],"navigatorTitle":[{"text":"ByteBufferAllocator","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","title":"ByteBufferAllocator","abstract":[{"type":"text","text":"The preferred allocator for "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"code":"malloc","type":"codeVoice"},{"type":"text","text":", "},{"code":"realloc","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"text":".","type":"text"}],"url":"\/documentation\/hummingbird\/bytebufferallocator"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/TimeAmount":{"type":"topic","title":"TimeAmount","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/TimeAmount","navigatorTitle":[{"text":"TimeAmount","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbird\/timeamount","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimeAmount","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Represents a time "},{"type":"emphasis","inlineContent":[{"text":"interval","type":"text"}]},{"type":"text","text":"."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","url":"\/documentation\/hummingbird\/bytebuffer","type":"topic","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"kind":"symbol","navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","url":"\/documentation\/hummingbird\/eventloop","type":"topic","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"kind":"symbol","title":"Hummingbird","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","url":"\/documentation\/hummingbird","type":"topic","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator/init()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","title":"init()","url":"\/documentation\/hummingbird\/bytebufferallocator\/init()","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Create a fresh "},{"code":"ByteBufferAllocator","type":"codeVoice"},{"type":"text","text":". In the future the allocator might use for example allocation pools and"},{"type":"text","text":" "},{"type":"text","text":"therefore it’s recommended to reuse "},{"type":"codeVoice","code":"ByteBufferAllocators"},{"text":" where possible instead of creating fresh ones in","type":"text"},{"text":" ","type":"text"},{"text":"many places.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/SocketAddress":{"navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}],"title":"SocketAddress","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/SocketAddress","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}],"url":"\/documentation\/hummingbird\/socketaddress","abstract":[{"text":"Represent a socket address to which we may want to connect or bind.","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator/buffer(capacity:)":{"abstract":[{"type":"text","text":"Request a freshly allocated "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" of size "},{"type":"codeVoice","code":"capacity"},{"type":"text","text":" or larger."}],"title":"buffer(capacity:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator\/buffer(capacity:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"capacity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"url":"\/documentation\/hummingbird\/bytebufferallocator\/buffer(capacity:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopGroup":{"url":"\/documentation\/hummingbird\/eventloopgroup","navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"role":"symbol","kind":"symbol","title":"EventLoopGroup","abstract":[{"type":"text","text":"Provides an endless stream of "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s to use."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"type":"topic","navigatorTitle":[{"text":"EventLoopFuture","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFuture","kind":"identifier"}],"role":"symbol","title":"EventLoopFuture","url":"\/documentation\/hummingbird\/eventloopfuture","kind":"symbol"}}}