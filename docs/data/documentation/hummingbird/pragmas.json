{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Pragmas","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Setting template render configuration settings."}],"sections":[],"metadata":{"modules":[{"name":"HummingbirdMustache"}],"role":"article","roleHeading":"Article","title":"Pragmas\/Configuration variables"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms"],"generated":true,"title":"Additional Features"}],"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The syntax ","type":"text"},{"code":"{{% var: value}}","type":"codeVoice"},{"type":"text","text":" can be used to set template rendering configuration variables specific to Hummingbird Mustache. The only variable you can set at the moment is "},{"code":"CONTENT_TYPE","type":"codeVoice"},{"type":"text","text":". This can be set to either to "},{"code":"HTML","type":"codeVoice"},{"type":"text","text":" or "},{"code":"TEXT","type":"codeVoice"},{"type":"text","text":" and defines how variables are escaped. A content type of "},{"code":"TEXT","type":"codeVoice"},{"type":"text","text":" means no variables are escaped and a content type of "},{"code":"HTML","type":"codeVoice"},{"type":"text","text":" will do HTML escaping of the rendered text. The content type defaults to "},{"code":"HTML","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"Given input object “<>”, template ","type":"text"},{"type":"codeVoice","code":"{{%CONTENT_TYPE: HTML}}{{.}}"},{"text":" will render as ","type":"text"},{"type":"codeVoice","code":"&lt;&gt;"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"{{%CONTENT_TYPE: TEXT}}{{.}}"},{"text":" will render as ","type":"text"},{"type":"codeVoice","code":"<>"},{"text":".","type":"text"}]}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Lambdas":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Lambdas","type":"topic","role":"article","kind":"article","title":"Lambdas","abstract":[{"type":"text","text":"Hummingbird Mustache Lambda implementation"}],"url":"\/documentation\/hummingbird\/lambdas"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Transforms":{"kind":"article","url":"\/documentation\/hummingbird\/transforms","role":"article","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Transforms","title":"Transforms","abstract":[{"text":"Transforming objects during render","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Template-Inheritance":{"url":"\/documentation\/hummingbird\/template-inheritance","role":"article","kind":"article","title":"Template Inheritance","abstract":[{"type":"text","text":"Template inheritance is not part of the Mustache spec yet but it is a commonly implemented feature."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Template-Inheritance","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdMustache":{"url":"\/documentation\/hummingbirdmustache","role":"collection","kind":"symbol","title":"HummingbirdMustache","abstract":[{"type":"text","text":"Mustache template engine."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdMustache","type":"topic"}}}