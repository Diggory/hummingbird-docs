{"abstract":[{"text":"Add path for closure returning type conforming to ResponseFutureEncodable","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/HBRouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/HBRouterMethods-Implementations"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/HBRouterMethods-Implementations"]]},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/on(_:method:options:use:)-5n2kl","interfaceLanguage":"swift"},"metadata":{"externalID":"s:11Hummingbird15HBRouterBuilderC2on_6method7options3useACXDSS_8NIOHTTP110HTTPMethodOAA0B13MethodOptionsVxAA9HBRequestVYaKctAA19HBResponseGeneratorRzlF","title":"on(_:method:options:use:)","platforms":[{"name":"iOS","unavailable":false,"deprecated":false,"beta":false,"introducedAt":"13.0"},{"deprecated":false,"beta":false,"introducedAt":"10.15","name":"macOS","unavailable":false},{"deprecated":false,"beta":false,"introducedAt":"13.0","name":"tvOS","unavailable":false},{"deprecated":false,"beta":false,"introducedAt":"6.0","name":"watchOS","unavailable":false}],"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"HummingbirdLambda","relatedModules":["Hummingbird"]}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","extendedModule":"Hummingbird"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPMethod","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"kind":"text","text":" = [], "},{"kind":"externalParam","text":"use"},{"kind":"text","text":" "},{"kind":"internalParam","text":"closure"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP","text":"HBResponseGenerator"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/hbrouterbuilder\/on(_:method:options:use:)-5n2kl"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/on(_:method:options:use:)-5n2kl":{"abstract":[{"text":"Add path for closure returning type conforming to ResponseFutureEncodable","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/on(_:method:options:use:)-5n2kl","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"on(_:method:options:use:)","url":"\/documentation\/hummingbird\/hbrouterbuilder\/on(_:method:options:use:)-5n2kl"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRequest":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRequest","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBRequest","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRequest","abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"title":"HBRequest","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbrequest"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterMethodOptions":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBRouterMethodOptions","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterMethodOptions","abstract":[{"type":"text","text":"Options available to routes"}],"title":"HBRouterMethodOptions","kind":"symbol","type":"topic","url":"\/documentation\/hummingbird\/hbroutermethodoptions"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBResponseGenerator":{"url":"\/documentation\/hummingbird\/hbresponsegenerator","role":"symbol","type":"topic","abstract":[{"text":"Object that can generate a ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponseGenerator","kind":"identifier"}],"title":"HBResponseGenerator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBResponseGenerator","kind":"symbol","navigatorTitle":[{"text":"HBResponseGenerator","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPMethod":{"role":"symbol","navigatorTitle":[{"text":"HTTPMethod","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPMethod","title":"HTTPMethod","abstract":[],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPMethod","kind":"identifier"}],"url":"\/documentation\/hummingbird\/httpmethod"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"url":"\/documentation\/hummingbird\/router","role":"collectionGroup","type":"topic","abstract":[{"text":"The router directs requests to their handlers based on the contents of their path.","type":"text"}],"title":"Router","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/index":{"url":"\/documentation\/index","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder","title":"HBRouterBuilder","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"type":"codeVoice","code":"HBResponder"},{"text":" that will follow these rules.","type":"text"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"url":"\/documentation\/hummingbird\/hbrouterbuilder"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HBRouterBuilder/HBRouterMethods-Implementations":{"abstract":[],"kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HBRouterBuilder\/HBRouterMethods-Implementations","title":"HBRouterMethods Implementations","url":"\/documentation\/hummingbird\/hbrouterbuilder\/hbroutermethods-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"}}}