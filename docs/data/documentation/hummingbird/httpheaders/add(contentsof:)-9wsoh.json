{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders\/add(contentsOf:)-9wsoh"},"metadata":{"externalID":"s:8NIOHTTP111HTTPHeadersV3add10contentsOfyx_tSTRzSS_SSt7ElementRtzlF","symbolKind":"method","modules":[{"name":"Hummingbird"}],"title":"add(contentsOf:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"contentsOf"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":")"}],"role":"symbol","roleHeading":"Instance Method"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Add a sequence of header name\/value pairs to the block.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/httpheaders\/add(contentsof:)-9wsoh"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"contentsOf","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"other","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:ST","text":"Sequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == (","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The sequence of header name\/value pairs. For maximum compatibility","type":"text"},{"text":" ","type":"text"},{"text":"the header should be an ASCII string. For future-proofing with HTTP\/2 lowercase header","type":"text"},{"text":" ","type":"text"},{"text":"names are strongly recommended.","type":"text"}]}],"name":"contentsOf"}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This method is strictly additive: if there are other entries with the same header","type":"text"},{"text":" ","type":"text"},{"text":"name already in the block, this will add new entries.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeaders":{"abstract":[{"type":"text","text":"A representation of a block of HTTP header fields."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPHeaders"}],"url":"\/documentation\/hummingbird\/httpheaders","title":"HTTPHeaders","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPHeaders"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeaders/add(contentsOf:)-9wsoh":{"abstract":[{"type":"text","text":"Add a sequence of header name\/value pairs to the block."}],"url":"\/documentation\/hummingbird\/httpheaders\/add(contentsof:)-9wsoh","title":"add(contentsOf:)","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders\/add(contentsOf:)-9wsoh","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"add","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"contentsOf","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"}}}