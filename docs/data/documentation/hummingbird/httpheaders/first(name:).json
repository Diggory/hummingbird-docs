{"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"Hummingbird"}],"title":"first(name:)","externalID":"s:8NIOHTTP111HTTPHeadersV5first4nameSSSgSS_tF","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?"}]},"abstract":[{"text":"Retrieves the first value for a given header field name from the block.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders"]]},"variants":[{"paths":["\/documentation\/hummingbird\/httpheaders\/first(name:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders\/first(name:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"first"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The header field name whose first value should be retrieved."}]}],"name":"name"}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"text":"The first value for the header field name.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This method uses case-insensitive comparisons for the header field name. It","type":"text"},{"text":" ","type":"text"},{"text":"does not return the first value from a maximally-decomposed list of the header fields,","type":"text"},{"text":" ","type":"text"},{"text":"but instead returns the first value from the original representation: that means","type":"text"},{"text":" ","type":"text"},{"text":"that a comma-separated header field list may contain more than one entry, some of","type":"text"},{"text":" ","type":"text"},{"text":"which contain commas and some do not. If you want a representation of the header fields","type":"text"},{"text":" ","type":"text"},{"text":"suitable for performing computation on, consider ","type":"text"},{"code":"subscript(canonicalForm:)","type":"codeVoice"},{"text":".","type":"text"}]}]}],"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeaders/first(name:)":{"title":"first(name:)","type":"topic","abstract":[{"text":"Retrieves the first value for a given header field name from the block.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"url":"\/documentation\/hummingbird\/httpheaders\/first(name:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders\/first(name:)","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeaders":{"abstract":[{"type":"text","text":"A representation of a block of HTTP header fields."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPHeaders"}],"url":"\/documentation\/hummingbird\/httpheaders","title":"HTTPHeaders","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPHeaders"}]}}}