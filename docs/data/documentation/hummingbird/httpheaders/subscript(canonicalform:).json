{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/httpheaders\/subscript(canonicalform:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:8NIOHTTP111HTTPHeadersV13canonicalFormSaySsGSS_tcip","symbolKind":"subscript","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"canonicalForm"},{"kind":"text","text":" _: "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> ["},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"]"}],"role":"symbol","title":"subscript(canonicalForm:)","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Subscript"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders\/subscript(canonicalForm:)"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders"]]},"abstract":[{"text":"Retrieves the header values for the given header field in “canonical form”: that is,","type":"text"},{"text":" ","type":"text"},{"text":"splitting them on commas as extensively as possible such that multiple values received on the","type":"text"},{"text":" ","type":"text"},{"text":"one line are returned as separate entries. Also respects the fact that Set-Cookie should not","type":"text"},{"text":" ","type":"text"},{"text":"be split in this way.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"text":"canonicalForm","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"name","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":"] { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The header field name whose values are to be retrieved.","type":"text"}]}],"name":"name"}]},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"A list of the values for that header field name.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeaders":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders","url":"\/documentation\/hummingbird\/httpheaders","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"HTTPHeaders","kind":"identifier"}],"title":"HTTPHeaders","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeaders","kind":"identifier"}],"abstract":[{"text":"A representation of a block of HTTP header fields.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPHeaders/subscript(canonicalForm:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPHeaders\/subscript(canonicalForm:)","kind":"symbol","type":"topic","title":"subscript(canonicalForm:)","url":"\/documentation\/hummingbird\/httpheaders\/subscript(canonicalform:)","fragments":[{"text":"subscript","kind":"keyword"},{"text":"(","kind":"text"},{"text":"canonicalForm","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"text":"Retrieves the header values for the given header field in “canonical form”: that is,","type":"text"},{"text":" ","type":"text"},{"text":"splitting them on commas as extensively as possible such that multiple values received on the","type":"text"},{"text":" ","type":"text"},{"text":"one line are returned as separate entries. Also respects the fact that Set-Cookie should not","type":"text"},{"text":" ","type":"text"},{"text":"be split in this way.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"}}}