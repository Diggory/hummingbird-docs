{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/makeSucceededVoidFuture()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/eventloop\/makesucceededvoidfuture()"]}],"abstract":[{"type":"text","text":"Return a succeeded "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" future."}],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","required":true,"modules":[{"name":"Hummingbird"}],"title":"makeSucceededVoidFuture()","externalID":"s:7NIOCore9EventLoopP23makeSucceededVoidFutureAA0bcG0CyytGyF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeSucceededVoidFuture"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeSucceededVoidFuture"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Semantically, this function is equivalent to calling ","type":"text"},{"code":"makeSucceededFuture(())","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Contrary to ","type":"text"},{"code":"makeSucceededFuture","type":"codeVoice"},{"text":", ","type":"text"},{"code":"makeSucceededVoidFuture","type":"codeVoice"},{"text":" is a customization point for ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s which","type":"text"},{"text":" ","type":"text"},{"text":"allows ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":"s to cache a pre-succeeded ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" future to prevent superfluous allocations.","type":"text"}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoopFuture":{"abstract":[{"text":"Holder for a result that will be provided later.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"url":"\/documentation\/hummingbird\/eventloopfuture","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","title":"EventLoopFuture","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop":{"title":"EventLoop","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"role":"symbol","url":"\/documentation\/hummingbird\/eventloop","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop","kind":"symbol","abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until itâ€™s closed."}],"navigatorTitle":[{"kind":"identifier","text":"EventLoop"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EventLoop/makeSucceededVoidFuture()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeSucceededVoidFuture"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/hummingbird\/eventloop\/makesucceededvoidfuture()","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EventLoop\/makeSucceededVoidFuture()","kind":"symbol","title":"makeSucceededVoidFuture()","abstract":[{"text":"Return a succeeded ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" future.","type":"text"}],"role":"symbol"}}}