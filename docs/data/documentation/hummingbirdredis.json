{"abstract":[{"type":"text","text":"Add Redis support to Hummingbird server with RediStack."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdredis"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"First you need to create a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup"},{"type":"text","text":" for your "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":". This creates a connection pool for each "},{"type":"codeVoice","code":"EventLoop"},{"text":" in your ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":". When you want to send a command you ask the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","isActive":true},{"text":" for the connection pool for the ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":" you are running on and then call your command.","type":"text"}],"type":"paragraph"},{"code":["\/\/ Initialize a Redis Connection Pool for each EventLoop","let redisConnectionPoolGroup = try RedisConnectionPoolGroup(","    configuration: .init(hostname: Self.redisHostname, port: 6379),","    eventLoopGroup: app.eventLoopGroup,","    logger: app.logger",")","\/\/ Get Redis connection","let redis = redisConnectionPoolGroup.pool(for: eventLoop)","try await redis.set(\"Test\", to: \"hello\").get()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Alternatively you can access a Redis connection pool via ","type":"text"},{"type":"codeVoice","code":"HBRequest"},{"text":" if you add the connection pool group to your ","type":"text"},{"type":"codeVoice","code":"HBApplication"},{"text":".","type":"text"}],"type":"paragraph"},{"code":["try app.addRedis(","    configuration: .init(hostname: Self.redisHostname, port: 6379)",")","\/\/ Add route that returns contents of Redis INFO command","app.router.get(\"redis\") { req in","    req.redis.send(command: \"INFO\").map(\\.description)","}"],"syntax":"swift","type":"codeListing"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","interfaceLanguage":"swift"},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupArray"],"generated":true},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupIdentifier","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL"],"generated":true}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"metadata":{"title":"HummingbirdRedis","roleHeading":"Framework","externalID":"HummingbirdRedis","symbolKind":"module","modules":[{"name":"HummingbirdRedis"}],"role":"collection"},"hierarchy":{"paths":[[]]},"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisConfiguration":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRedisConfiguration","kind":"identifier"}],"navigatorTitle":[{"text":"HBRedisConfiguration","kind":"identifier"}],"type":"topic","abstract":[],"title":"HBRedisConfiguration","url":"\/documentation\/hummingbirdredis\/hbredisconfiguration","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisConfiguration"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis":{"title":"HummingbirdRedis","role":"collection","abstract":[{"text":"Add Redis support to Hummingbird server with RediStack.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis","type":"topic","url":"\/documentation\/hummingbirdredis","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/HBRedisPersistDriver":{"url":"\/documentation\/hummingbirdredis\/hbredispersistdriver","kind":"symbol","role":"symbol","title":"HBRedisPersistDriver","navigatorTitle":[{"kind":"identifier","text":"HBRedisPersistDriver"}],"type":"topic","abstract":[{"type":"text","text":"Redis driver for persist system for storing persistent cross request key\/value pairs"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRedisPersistDriver"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/HBRedisPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroupArray":{"url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgrouparray","kind":"symbol","abstract":[],"title":"RedisConnectionPoolGroupArray","navigatorTitle":[{"kind":"identifier","text":"RedisConnectionPoolGroupArray"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RedisConnectionPoolGroupArray"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupArray"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/URL":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URL"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"URL"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/URL","abstract":[{"type":"text","text":"A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data."}],"title":"URL","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdredis\/url"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroup":{"title":"RedisConnectionPoolGroup","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolGroup","kind":"identifier"}],"abstract":[{"text":"Store Redis connection pool array for an EventLoopGroup.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroup","type":"topic","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroup","navigatorTitle":[{"text":"RedisConnectionPoolGroup","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRedis/RedisConnectionPoolGroupIdentifier":{"title":"RedisConnectionPoolGroupIdentifier","navigatorTitle":[{"text":"RedisConnectionPoolGroupIdentifier","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRedis\/RedisConnectionPoolGroupIdentifier","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RedisConnectionPoolGroupIdentifier","kind":"identifier"}],"role":"symbol","url":"\/documentation\/hummingbirdredis\/redisconnectionpoolgroupidentifier","abstract":[]}}}