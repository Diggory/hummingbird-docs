{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/headers","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/status"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/setCookie(_:)"],"title":"Instance Methods"}],"kind":"symbol","metadata":{"roleHeading":"Class","externalID":"s:11Hummingbird9HBRequestV13ResponsePatchC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponsePatch","kind":"identifier"}],"extendedModule":"Hummingbird","role":"symbol","navigatorTitle":[{"text":"ResponsePatch","kind":"identifier"}],"modules":[{"name":"Hummingbird"}],"symbolKind":"class","title":"HBRequest.ResponsePatch"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch"},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponsePatch"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Allow you to patch the response generated by your route handler via the ","type":"text"},{"code":"HBRequest","type":"codeVoice"},{"text":" supplied. If your handler is only","type":"text"},{"text":" ","type":"text"},{"text":"returning the payload you can edit the status and headers via ","type":"text"},{"code":"request.response","type":"codeVoice"},{"text":" eg.","type":"text"}]},{"type":"codeListing","code":["func myHandler(_ request: HBRequest) -> String {","    request.response.status = .accepted","    return \"hello\"","}"],"syntax":null}]}],"abstract":[{"text":"Patches Response via ","type":"text"},{"code":"HBResponse.apply(patch:)","type":"codeVoice"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/status":{"abstract":[{"text":"patch status of reponse","type":"text"}],"kind":"symbol","type":"topic","title":"status","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/status","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"status","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP118HTTPResponseStatusO","text":"HTTPResponseStatus","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/status"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/headers":{"title":"headers","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/headers","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/headers","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"headers","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird16HTTPHeadersPatchV","text":"HTTPHeadersPatch","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"headers to add to response"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch/setCookie(_:)":{"title":"setCookie(_:)","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch\/setCookie(_:)","role":"symbol","abstract":[{"type":"text","text":"Set cookie on reponse patch"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch\/setcookie(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setCookie","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:21HummingbirdFoundation8HBCookieV","text":"HBCookie","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest/ResponsePatch":{"type":"topic","navigatorTitle":[{"text":"ResponsePatch","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrequest\/responsepatch","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest\/ResponsePatch","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponsePatch","kind":"identifier"}],"title":"HBRequest.ResponsePatch","abstract":[{"text":"Patches Response via ","type":"text"},{"code":"HBResponse.apply(patch:)","type":"codeVoice"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequest":{"abstract":[{"type":"text","text":"Holds all the values required to process a request"}],"title":"HBRequest","role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequest","navigatorTitle":[{"kind":"identifier","text":"HBRequest"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRequest"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbrequest"}}}