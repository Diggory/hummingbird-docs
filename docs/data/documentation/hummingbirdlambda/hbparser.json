{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser"},"kind":"symbol","relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","doc:\/\/com.opticalaberration.hummingbird\/ST"],"kind":"relationships","title":"Conforms To"}],"sections":[],"metadata":{"role":"symbol","title":"HBParser","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"symbolKind":"struct","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird8HBParserV","navigatorTitle":[{"kind":"identifier","text":"HBParser"}]},"abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache"],"title":"Miscellaneous"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:validateUTF8:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/count","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/string"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance(by:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/character()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/current()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToStart()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/percentDecode()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/reachedEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3ddyp","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3jot2","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-46502","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(count:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4fsmu","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4qwvq","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9o9x7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9xtym","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(untilString:throwOnOverflow:skipToEnd:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2mu8n","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2tzbd","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2zxuj","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-4p0fs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/readUntilTheEnd()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat(by:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/split(separator:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance(by:)"]},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Error"],"title":"Enumerations"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Sequence-Implementations"],"title":"Default Implementations"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbparser"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/retreat(by:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat(by:)","title":"retreat(by:)","kind":"symbol","abstract":[{"text":"Move back so many characters","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retreat","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/retreat(by:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-3ddyp":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3ddyp","title":"read(_:)","kind":"symbol","abstract":[{"text":"Read the current character and return if it is as intended. If character test returns true then move forward 1","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Unicode","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-3ddyp"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/Error":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Error","kind":"identifier"}],"title":"HBParser.Error","navigatorTitle":[{"text":"Error","kind":"identifier"}],"abstract":[],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Error","url":"\/documentation\/hummingbirdlambda\/hbparser\/error"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-9o9x7":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9o9x7","title":"read(until:throwOnOverflow:)","kind":"symbol","abstract":[{"text":"Read from buffer until we hit a character. Position after this is of the character we were checking for","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-9o9x7"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser":{"url":"\/documentation\/hummingbirdlambda\/hbparser","kind":"symbol","title":"HBParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParser"}],"navigatorTitle":[{"kind":"identifier","text":"HBParser"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","abstract":[{"type":"text","text":"Reader object for parsing String buffers"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(count:)":{"title":"read(count:)","role":"symbol","abstract":[{"type":"text","text":"Read next so many characters from buffer"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(count:)","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(count:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBEnvironment":{"url":"\/documentation\/hummingbirdlambda\/hbenvironment","kind":"symbol","title":"HBEnvironment","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBEnvironment"}],"navigatorTitle":[{"kind":"identifier","text":"HBEnvironment"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBEnvironment","abstract":[{"type":"text","text":"Access environment variables"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache":{"url":"\/documentation\/hummingbirdlambda\/hbdatecache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache","navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}],"abstract":[{"type":"text","text":"Current date cache."}],"kind":"symbol","type":"topic","title":"HBDateCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBDateCache","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(untilString:throwOnOverflow:skipToEnd:)":{"title":"read(untilString:throwOnOverflow:skipToEnd:)","role":"symbol","abstract":[{"type":"text","text":"Read from buffer until we hit a string. By default the position after this is of the beginning of the string we were checking for"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"text":"untilString","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"skipToEnd","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(untilString:throwOnOverflow:skipToEnd:)","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(untilstring:throwonoverflow:skiptoend:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/unsafeAdvance(by:)":{"title":"unsafeAdvance(by:)","abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbparser\/unsafeadvance(by:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance(by:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unsafeAdvance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/percentDecode()":{"title":"percentDecode()","abstract":[{"text":"percent decode UTF8","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/percentdecode()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/percentDecode()","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"percentDecode","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-4p0fs":{"title":"read(while:)","abstract":[{"text":"Read while character at current position is the one supplied","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-4p0fs","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-4p0fs","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/advance()":{"title":"advance()","abstract":[{"text":"Move forward one character","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/advance()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance()","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"advance","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/reachedEnd()":{"title":"reachedEnd()","abstract":[{"text":"Return whether we have reached the end of the buffer","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/reachedend()","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/reachedEnd()","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reachedEnd","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FlatDictionary":{"url":"\/documentation\/hummingbirdlambda\/flatdictionary","kind":"symbol","title":"FlatDictionary","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/current()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"current","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"current()","url":"\/documentation\/hummingbirdlambda\/hbparser\/current()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/current()","abstract":[{"text":"Return the character at the current position","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/unsafeAdvance()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unsafeAdvance","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","kind":"symbol","title":"unsafeAdvance()","url":"\/documentation\/hummingbirdlambda\/hbparser\/unsafeadvance()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/unsafeAdvance()","abstract":[]},"doc://com.opticalaberration.hummingbird/ST":{"type":"unresolvable","title":"Swift.Sequence","identifier":"doc:\/\/com.opticalaberration.hummingbird\/ST"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/split(separator:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"split","kind":"identifier"},{"text":"(","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","kind":"symbol","title":"split(separator:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/split(separator:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/split(separator:)","abstract":[{"text":"Split parser into sections separated by character","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2tzbd":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"read(while:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2tzbd","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2tzbd","abstract":[{"text":"Read while character returns true for supplied KeyPath","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/retreat()":{"title":"retreat()","abstract":[{"type":"text","text":"Move backwards one character"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/retreat()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retreat","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/retreat()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/readUntilTheEnd()":{"title":"readUntilTheEnd()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readUntilTheEnd"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/readUntilTheEnd()","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Read from buffer from current position until the end of the buffer"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/readuntiltheend()","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/count":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"count","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/count","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/count","title":"count","type":"topic","abstract":[{"type":"text","text":"Return contents of parser as a string"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2zxuj":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2zxuj","kind":"symbol","abstract":[{"type":"text","text":"Read while character at current position is in supplied set"}],"title":"read(while:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2zxuj","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-4fsmu":{"title":"read(until:throwOnOverflow:)","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-4fsmu","abstract":[{"type":"text","text":"Read from buffer until we hit a character in supplied set. Position after this is of the character we were checking for"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO","text":"Unicode"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"throwOnOverflow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4fsmu","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(while:)-2mu8n":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO","text":"Unicode"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(while:)-2mu8n","kind":"symbol","abstract":[{"type":"text","text":"Read while character returns true for supplied closure"}],"title":"read(while:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(while:)-2mu8n","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/moveToEnd()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"moveToEnd"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToEnd()","kind":"symbol","abstract":[{"type":"text","text":"Move parser to end of string"}],"title":"moveToEnd()","url":"\/documentation\/hummingbirdlambda\/hbparser\/movetoend()","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/character()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/character()","type":"topic","title":"character()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"character","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/character()","kind":"symbol","abstract":[{"text":"Return current character","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-4qwvq":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO","text":"Unicode"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4qwvq","kind":"symbol","abstract":[{"type":"text","text":"Read from buffer until we hit a character that returns true for supplied closure. Position after this is of the character we were checking for"}],"title":"read(until:throwOnOverflow:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-4qwvq","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/string":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"abstract":[{"text":"Return contents of parser as a string","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/string","type":"topic","title":"string","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/string","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/init(_:)":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:)","abstract":[],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-46502":{"kind":"symbol","type":"topic","title":"read(_:)","role":"symbol","abstract":[{"text":"Compare characters at current position against provided string. If the characters are the same as string provided advance past string","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-46502","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-46502","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-9xtym":{"abstract":[{"text":"Read from buffer until we hit a character where supplied KeyPath is true. Position after this is of the character we were checking for","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-9xtym","title":"read(until:throwOnOverflow:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-9xtym","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(_:)-3jot2":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(_:)-3jot2","role":"symbol","abstract":[{"type":"text","text":"Read the current character and check if it is in a set of characters If character test returns true then move forward 1"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","title":"read(_:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(_:)-3jot2"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/init(_:validateUTF8:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/init(_:validateUTF8:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Bytes","preciseIdentifier":"s:11Hummingbird8HBParserV_12validateUTF8ACSgx_SbtcSlRzs5UInt8V7ElementRtzlufc5BytesL_xmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"validateUTF8"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a Parser object"}],"title":"init(_:validateUTF8:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/init(_:validateutf8:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/advance(by:)":{"kind":"symbol","title":"advance(by:)","role":"symbol","abstract":[{"text":"Move forward so many character","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"advance"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/advance(by:)","url":"\/documentation\/hummingbirdlambda\/hbparser\/advance(by:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/moveToStart()":{"abstract":[{"type":"text","text":"Move parser to beginning of string"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/moveToStart()","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/movetostart()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"moveToStart","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"moveToStart()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/Sequence-Implementations":{"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/Sequence-Implementations","title":"Sequence Implementations","kind":"article","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbparser\/sequence-implementations","role":"collectionGroup"}}}