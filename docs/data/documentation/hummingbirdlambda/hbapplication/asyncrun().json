{"metadata":{"roleHeading":"Instance Method","title":"asyncRun()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncRun"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","platforms":[{"deprecated":false,"unavailable":false,"name":"iOS","beta":false,"introducedAt":"13.0"},{"deprecated":false,"unavailable":false,"introducedAt":"10.15","beta":false,"name":"macOS"},{"deprecated":false,"unavailable":false,"introducedAt":"13.0","beta":false,"name":"tvOS"},{"name":"watchOS","beta":false,"unavailable":false,"introducedAt":"6.0","deprecated":false}],"symbolKind":"method","modules":[{"name":"HummingbirdAuth"}],"externalID":"s:11Hummingbird13HBApplicationC8asyncRunyyYaKF"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Version of ","type":"text"},{"code":"run","type":"codeVoice"},{"text":" that can be called from asynchronous context","type":"text"}]}],"kind":"content"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncRun()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncRun"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","title":"asyncRun()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()","abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"title":"HBApplication","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"}}}