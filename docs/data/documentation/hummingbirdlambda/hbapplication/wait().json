{"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This function can only be called from a non async context as it stalls","type":"text"},{"text":" ","type":"text"},{"text":"the current thread waiting for the application to finish","type":"text"}]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Wait until server has stopped running"}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/wait()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"metadata":{"title":"wait()","modules":[{"name":"HummingbirdAuth"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:11Hummingbird13HBApplicationC4waityyF","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"()"}]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"title":"HBApplication","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/wait()":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"()"}],"abstract":[{"text":"Wait until server has stopped running","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/wait()","title":"wait()","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"}}}