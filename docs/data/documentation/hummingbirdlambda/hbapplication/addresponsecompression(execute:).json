{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addResponseCompression"},{"kind":"text","text":"("},{"kind":"externalParam","text":"execute"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE08ResponseC19ExecutionPreferenceO","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference","kind":"typeIdentifier","text":"ResponseCompressionExecutionPreference"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbapplication\/addresponsecompression(execute:)"]}],"abstract":[{"text":"Add Channel Handler for compressing responses where accept-encoding header indicates the client will accept compressed data","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)"},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"]]},"metadata":{"title":"addResponseCompression(execute:)","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird13HBApplicationC0A11CompressionE011addResponseC07executeyAcDE0eC19ExecutionPreferenceO_tF","symbolKind":"method","roleHeading":"Instance Method","extendedModule":"Hummingbird","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addResponseCompression","kind":"identifier"},{"text":"(","kind":"text"},{"text":"execute","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE08ResponseC19ExecutionPreferenceO"},{"text":")","kind":"text"}],"role":"symbol"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addResponseCompression(execute:)":{"kind":"symbol","abstract":[{"text":"Add Channel Handler for compressing responses where accept-encoding header indicates the client will accept compressed data","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","title":"addResponseCompression(execute:)","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addresponsecompression(execute:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addResponseCompression"},{"kind":"text","text":"("},{"kind":"externalParam","text":"execute"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE08ResponseC19ExecutionPreferenceO","text":"ResponseCompressionExecutionPreference"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference","url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference","type":"topic","kind":"symbol","abstract":[{"text":"Indicate where the response compression tasks should be executed","type":"text"}],"title":"HBApplication.ResponseCompressionExecutionPreference","navigatorTitle":[{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"title":"HBApplication","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication","kind":"symbol","role":"symbol"}}}