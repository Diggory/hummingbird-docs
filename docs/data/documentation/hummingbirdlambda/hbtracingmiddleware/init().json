{"metadata":{"roleHeading":"Initializer","modules":[{"name":"HummingbirdAuth"}],"externalID":"s:11Hummingbird19HBTracingMiddlewareVACycfc","platforms":[{"name":"iOS","deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false},{"name":"macOS","deprecated":false,"beta":false,"introducedAt":"10.15","unavailable":false},{"name":"tvOS","deprecated":false,"beta":false,"introducedAt":"13.0","unavailable":false},{"unavailable":false,"name":"watchOS","deprecated":false,"introducedAt":"6.0","beta":false}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"init","title":"init()"},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbtracingmiddleware\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware"]]},"abstract":[{"text":"Intialize a new HBTracingMiddleware.","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware\/init()","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBTracingMiddleware":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBTracingMiddleware"}],"navigatorTitle":[{"kind":"identifier","text":"HBTracingMiddleware"}],"url":"\/documentation\/hummingbirdlambda\/hbtracingmiddleware","abstract":[{"type":"text","text":"Middleware creating Distributed Tracing spans for each request."}],"kind":"symbol","title":"HBTracingMiddleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBTracingMiddleware/init()":{"url":"\/documentation\/hummingbirdlambda\/hbtracingmiddleware\/init()","kind":"symbol","abstract":[{"type":"text","text":"Intialize a new HBTracingMiddleware."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBTracingMiddleware\/init()","role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/LoggingMetricsAndTracing":{"abstract":[{"text":"Considered the three pillars of observability, logging, metrics and tracing provide different ways of viewing how your application is working.","type":"text"}],"url":"\/documentation\/hummingbird\/loggingmetricsandtracing","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/LoggingMetricsAndTracing","role":"collectionGroup","title":"Logging, Metrics and Tracing","type":"topic","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/index":{"title":"Hummingbird","url":"\/documentation\/index","kind":"article","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","type":"topic","role":"collection"}}}