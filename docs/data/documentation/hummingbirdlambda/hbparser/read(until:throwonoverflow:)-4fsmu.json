{"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4fsmu"},"sections":[],"metadata":{"roleHeading":"Instance Method","extendedModule":"Hummingbird","externalID":"s:11Hummingbird8HBParserV4read5until15throwOnOverflowACShys7UnicodeO6ScalarVG_SbtKF","title":"read(until:throwOnOverflow:)","symbolKind":"method","modules":[{"relatedModules":["Hummingbird"],"name":"HummingbirdAuth"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sh","text":"Set","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO","text":"Unicode","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","text":"Scalar","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird8HBParserV","text":"HBParser","kind":"typeIdentifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-4fsmu"]}],"kind":"symbol","abstract":[{"text":"Read from buffer until we hit a character in supplied set. Position after this is of the character we were checking for","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"until","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"characterSet","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Set","preciseIdentifier":"s:Sh","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Unicode","preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Scalar","preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"throwOnOverflow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":" = true) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"HBParser","preciseIdentifier":"s:11Hummingbird8HBParserV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","kind":"typeIdentifier"}]}]},{"kind":"parameters","parameters":[{"name":"characterSet","content":[{"inlineContent":[{"text":"Unicode.Scalar set to check against","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"String read from buffer"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"content":[{"inlineContent":[{"text":".overflow","type":"text"}],"type":"paragraph"}],"name":"Throws","type":"aside","style":"note"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser/read(until:throwOnOverflow:)-4fsmu":{"abstract":[{"text":"Read from buffer until we hit a character in supplied set. Position after this is of the character we were checking for","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparser\/read(until:throwonoverflow:)-4fsmu","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"until"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sh","kind":"typeIdentifier","text":"Set"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s7UnicodeO","kind":"typeIdentifier","text":"Unicode"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s7UnicodeO6ScalarV","kind":"typeIdentifier","text":"Scalar"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"throwOnOverflow"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird8HBParserV","kind":"typeIdentifier","text":"HBParser"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser\/read(until:throwOnOverflow:)-4fsmu","title":"read(until:throwOnOverflow:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParser":{"url":"\/documentation\/hummingbirdlambda\/hbparser","abstract":[{"text":"Reader object for parsing String buffers","type":"text"}],"type":"topic","navigatorTitle":[{"text":"HBParser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBParser","kind":"identifier"}],"title":"HBParser","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParser","role":"symbol"}}}