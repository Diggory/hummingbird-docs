{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Out","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"extendedModule":"AWSLambdaRuntimeCore","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Out"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"."}]},"modules":[{"name":"HummingbirdLambda"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:20AWSLambdaRuntimeCore22EventLoopLambdaHandlerP0aB0SE3OutRpzrlE6encode9allocator5value7NIOCore10ByteBufferVSgAJ0mN9AllocatorV_AFtKF::SYNTHESIZED::s:17HummingbirdLambda15HBLambdaHandlerV","title":"encode(allocator:value:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/EventLoopLambdaHandler-Implementations"]]},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hblambdahandler\/encode(allocator:value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Out"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":"?"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"EventLoopLambdaHandler.encode(allocator:value:)"},{"type":"text","text":"."}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/encode(allocator:value:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler/encode(allocator:value:)":{"abstract":[],"url":"\/documentation\/hummingbirdlambda\/hblambdahandler\/encode(allocator:value:)","kind":"symbol","title":"encode(allocator:value:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Out","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/encode(allocator:value:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Out","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Encodable","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","url":"\/documentation\/hummingbirdlambda\/hblambdahandler","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambdaHandler"}],"navigatorTitle":[{"text":"HBLambdaHandler","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Specialization of EventLoopLambdaHandler which runs an HBLambda"}],"title":"HBLambdaHandler","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","url":"\/documentation\/hummingbird\/bytebufferallocator","kind":"symbol","role":"symbol","title":"ByteBufferAllocator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"abstract":[{"text":"The preferred allocator for ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" values. The allocation strategy is opaque but is currently libcâ€™s","type":"text"},{"text":" ","type":"text"},{"code":"malloc","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"realloc"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"free"},{"text":".","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"title":"ByteBuffer","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"url":"\/documentation\/hummingbird\/bytebuffer","kind":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler/EventLoopLambdaHandler-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/EventLoopLambdaHandler-Implementations","url":"\/documentation\/hummingbirdlambda\/hblambdahandler\/eventlooplambdahandler-implementations","role":"collectionGroup","type":"topic","abstract":[],"title":"EventLoopLambdaHandler Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","title":"HummingbirdLambda","type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","kind":"symbol"}}}