{"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"EventLoopLambdaHandler.encode(allocator:value:)"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/encode(allocator:value:)"},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hblambdahandler\/encode(allocator:value:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/EventLoopLambdaHandler-Implementations"]]},"metadata":{"modules":[{"relatedModules":["AWSLambdaRuntimeCore"],"name":"HummingbirdLambda"}],"extendedModule":"AWSLambdaRuntimeCore","roleHeading":"Instance Method","role":"symbol","externalID":"s:20AWSLambdaRuntimeCore22EventLoopLambdaHandlerP0aB0SE3OutRpzrlE6encode9allocator5value7NIOCore10ByteBufferVSgAJ0mN9AllocatorV_AFtKF::SYNTHESIZED::s:17HummingbirdLambda15HBLambdaHandlerV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Out"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":"?"}],"symbolKind":"method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Out","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Encodable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"encode(allocator:value:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Out","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler/EventLoopLambdaHandler-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/EventLoopLambdaHandler-Implementations","url":"\/documentation\/hummingbirdlambda\/hblambdahandler\/eventlooplambdahandler-implementations","type":"topic","abstract":[],"title":"EventLoopLambdaHandler Implementations","role":"collectionGroup","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler/encode(allocator:value:)":{"role":"symbol","abstract":[],"url":"\/documentation\/hummingbirdlambda\/hblambdahandler\/encode(allocator:value:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Out"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"."}]},"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/encode(allocator:value:)","type":"topic","title":"encode(allocator:value:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allocator"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","kind":"typeIdentifier","text":"ByteBufferAllocator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Out"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":"?"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBufferAllocator":{"abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libcâ€™s"},{"type":"text","text":" "},{"type":"codeVoice","code":"malloc"},{"type":"text","text":", "},{"type":"codeVoice","code":"realloc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBufferAllocator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"url":"\/documentation\/hummingbird\/bytebufferallocator","title":"ByteBufferAllocator","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hblambdahandler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambdaHandler"}],"navigatorTitle":[{"kind":"identifier","text":"HBLambdaHandler"}],"title":"HBLambdaHandler","abstract":[{"text":"Specialization of EventLoopLambdaHandler which runs an HBLambda","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"role":"symbol","url":"\/documentation\/hummingbird\/bytebuffer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}],"title":"ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","kind":"symbol","type":"topic"}}}