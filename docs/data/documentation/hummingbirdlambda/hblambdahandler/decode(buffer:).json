{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/decode(buffer:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"buffer","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"In","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"In"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"decode(buffer:)","externalID":"s:20AWSLambdaRuntimeCore22EventLoopLambdaHandlerP0aB0Se2InRpzrlE6decode6bufferAF7NIOCore10ByteBufferV_tKF::SYNTHESIZED::s:17HummingbirdLambda15HBLambdaHandlerV","extendedModule":"AWSLambdaRuntimeCore","modules":[{"name":"HummingbirdLambda"}],"symbolKind":"method","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/EventLoopLambdaHandler-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"EventLoopLambdaHandler.decode(buffer:)"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hblambdahandler\/decode(buffer:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"In"}],"languages":["swift"]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler/EventLoopLambdaHandler-Implementations":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/EventLoopLambdaHandler-Implementations","url":"\/documentation\/hummingbirdlambda\/hblambdahandler\/eventlooplambdahandler-implementations","role":"collectionGroup","type":"topic","abstract":[],"title":"EventLoopLambdaHandler Implementations","kind":"article"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","title":"HummingbirdLambda","type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","url":"\/documentation\/hummingbirdlambda\/hblambdahandler","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambdaHandler"}],"navigatorTitle":[{"text":"HBLambdaHandler","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Specialization of EventLoopLambdaHandler which runs an HBLambda"}],"title":"HBLambdaHandler","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ByteBuffer":{"title":"ByteBuffer","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ByteBuffer","kind":"identifier"}],"url":"\/documentation\/hummingbird\/bytebuffer","kind":"symbol","navigatorTitle":[{"text":"ByteBuffer","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or","type":"text"},{"text":" ","type":"text"},{"text":"more bytes (octets).","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler/decode(buffer:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler\/decode(buffer:)","url":"\/documentation\/hummingbirdlambda\/hblambdahandler\/decode(buffer:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"In"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decode"},{"kind":"text","text":"("},{"text":"buffer","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"In","kind":"typeIdentifier"}],"type":"topic","abstract":[],"title":"decode(buffer:)","kind":"symbol"}}}