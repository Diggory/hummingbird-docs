{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"middleware"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","text":"HBMiddleware"},{"kind":"text","text":")"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"roleHeading":"Instance Method","externalID":"s:11Hummingbird17HBMiddlewareGroupC3addyyAA0B0_pF","title":"add(_:)","modules":[{"name":"Hummingbird"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HBMiddleware","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP"},{"text":")","kind":"text"}],"role":"symbol","symbolKind":"method"},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/add(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Add middleware to group","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/add(_:)"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddleware":{"title":"HBMiddleware","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbmiddleware","navigatorTitle":[{"text":"HBMiddleware","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddleware","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBMiddleware","kind":"identifier"}],"abstract":[{"type":"text","text":"Processing requests and responses outside of request handlers."}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup/add(_:)":{"abstract":[{"text":"Add middleware to group","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"HBMiddleware","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/add(_:)","kind":"symbol","title":"add(_:)","url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/add(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","title":"HBMiddlewareGroup","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup","kind":"symbol"}}}