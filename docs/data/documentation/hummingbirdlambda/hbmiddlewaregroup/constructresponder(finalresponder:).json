{"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Instance Method","title":"constructResponder(finalResponder:)","symbolKind":"method","modules":[{"name":"Hummingbird"}],"externalID":"s:11Hummingbird17HBMiddlewareGroupC18constructResponder05finalE0AA11HBResponder_pAaF_p_tF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"constructResponder","kind":"identifier"},{"text":"(","kind":"text"},{"text":"finalResponder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"},{"text":") -> ","kind":"text"},{"text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/constructResponder(finalResponder:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"constructResponder","kind":"identifier"},{"text":"(","kind":"text"},{"text":"finalResponder","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","text":"HBResponder","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The responder the last middleware calls","type":"text"}]}],"name":"finalResponder"}]},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"Responder chain","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/constructresponder(finalresponder:)"]}],"abstract":[{"type":"text","text":"Construct responder chain from this middleware group"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponder":{"title":"HBResponder","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"url":"\/documentation\/hummingbirdlambda\/hbresponder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup/constructResponder(finalResponder:)":{"abstract":[{"type":"text","text":"Construct responder chain from this middleware group"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup\/constructResponder(finalResponder:)","url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup\/constructresponder(finalresponder:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"kind":"text","text":"("},{"kind":"externalParam","text":"finalResponder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"HBResponder","preciseIdentifier":"s:11Hummingbird11HBResponderP"}],"title":"constructResponder(finalResponder:)","kind":"symbol","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBMiddlewareGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBMiddlewareGroup","title":"HBMiddlewareGroup","abstract":[{"text":"Group of middleware that can be used to create a responder chain. Each middleware calls the next one","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HBMiddlewareGroup"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBMiddlewareGroup"}],"url":"\/documentation\/hummingbirdlambda\/hbmiddlewaregroup","kind":"symbol"}}}