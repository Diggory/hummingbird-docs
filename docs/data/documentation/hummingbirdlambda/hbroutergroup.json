{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The code below creates an ","type":"text"},{"type":"codeVoice","code":"HBRouterGroup"},{"text":"with path “todos” and adds GET and PUT routes on “todos” and adds GET, PUT and","type":"text"},{"text":" ","type":"text"},{"text":"DELETE routes on “todos\/:id” where id is the identifier for the todo","type":"text"}]},{"code":["app.router",".group(\"todos\")",".get(use: todoController.list)",".put(use: todoController.create)",".get(\":id\", use: todoController.get)",".put(\":id\", use: todoController.update)",".delete(\":id\", use: todoController.delete)"],"type":"codeListing","syntax":null}],"kind":"content"}],"metadata":{"roleHeading":"Structure","modules":[{"name":"Hummingbird"}],"symbolKind":"struct","externalID":"s:11Hummingbird13HBRouterGroupV","navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"role":"symbol","title":"HBRouterGroup"},"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods"],"kind":"relationships","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbroutergroup"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup\/group(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup\/on(_:method:options:use:)-3r0lk","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup\/on(_:method:options:use:)-xc8l"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup\/HBRouterMethods-Implementations"]}],"abstract":[{"text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a","type":"text"},{"text":" ","type":"text"},{"text":"suffix to the endpoint path","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","seeAlsoSections":[{"title":"Router","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncCallbackResponder"],"generated":true}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup/add(middleware:)":{"url":"\/documentation\/hummingbirdlambda\/hbroutergroup\/add(middleware:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup\/add(middleware:)","role":"symbol","title":"add(middleware:)","abstract":[{"type":"text","text":"Add middleware to RouterEndpoint"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middleware"},{"kind":"text","text":": "},{"text":"HBMiddleware","preciseIdentifier":"s:11Hummingbird12HBMiddlewareP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"HBRouterGroup","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV","kind":"typeIdentifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","kind":"article","role":"collection","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"title":"Router","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterBuilder":{"title":"HBRouterBuilder","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbrouterbuilder","navigatorTitle":[{"text":"HBRouterBuilder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"HBRouterBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"Create rules for routing requests and then create "},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestDecodable":{"abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"type":"topic","title":"HBRequestDecodable","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbrequestdecodable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup/group(_:)":{"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbroutergroup\/group(_:)","abstract":[{"type":"text","text":"Return a group inside the current group"}],"kind":"symbol","title":"group(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"group"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV","text":"HBRouterGroup"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup\/group(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","kind":"symbol","title":"HBRouterMethodOptions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","abstract":[{"type":"text","text":"Options available to routes"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncRouteHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler","title":"HBAsyncRouteHandler","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbasyncroutehandler","abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"navigatorTitle":[{"kind":"identifier","text":"HBAsyncRouteHandler"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncRouteHandler"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCallbackResponder":{"abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBCallbackResponder","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HBCallbackResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbcallbackresponder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","type":"topic","kind":"symbol","title":"HBCallbackResponder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncCallbackResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncCallbackResponder","title":"HBAsyncCallbackResponder","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbasynccallbackresponder","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"navigatorTitle":[{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup/HBRouterMethods-Implementations":{"url":"\/documentation\/hummingbirdlambda\/hbroutergroup\/hbroutermethods-implementations","kind":"article","title":"HBRouterMethods Implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup\/HBRouterMethods-Implementations","abstract":[],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup/on(_:method:options:use:)-3r0lk":{"abstract":[{"text":"Add path for closure returning type conforming to ResponseFutureEncodable","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbroutergroup\/on(_:method:options:use:)-3r0lk","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup\/on(_:method:options:use:)-3r0lk","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"use","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBRouterGroupV2on_6method7options3useACSS_8NIOHTTP110HTTPMethodOAA0B13MethodOptionsV7NIOCore15EventLoopFutureCyxGAA9HBRequestVctAA19HBResponseGeneratorRzlF6OutputL_xmfp","text":"Output","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBRouterGroupV","text":"HBRouterGroup","kind":"typeIdentifier"}],"title":"on(_:method:options:use:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"role":"symbol","title":"HBRouterMethods","abstract":[{"text":"Conform to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouteHandler":{"url":"\/documentation\/hummingbirdlambda\/hbroutehandler","kind":"symbol","title":"HBRouteHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","abstract":[{"type":"text","text":"Object for handling requests."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup/on(_:method:options:use:)-xc8l":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup\/on(_:method:options:use:)-xc8l","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"text":"<","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPMethod","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Output","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV2on_6method7options3useACSS_8NIOHTTP110HTTPMethodOAA0B13MethodOptionsVxAA9HBRequestVKctAA19HBResponseGeneratorRzlF6OutputL_xmfp","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"HBRouterGroup","preciseIdentifier":"s:11Hummingbird13HBRouterGroupV","kind":"typeIdentifier"}],"title":"on(_:method:options:use:)","url":"\/documentation\/hummingbirdlambda\/hbroutergroup\/on(_:method:options:use:)-xc8l","abstract":[{"text":"Add path for closure returning type conforming to ResponseFutureEncodable","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponder":{"title":"HBResponder","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","navigatorTitle":[{"text":"HBResponder","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Protocol for object that produces a response given a request"}],"url":"\/documentation\/hummingbirdlambda\/hbresponder","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponder"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup":{"url":"\/documentation\/hummingbirdlambda\/hbroutergroup","kind":"symbol","title":"HBRouterGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterGroup"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterGroup"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"role":"symbol"}}}