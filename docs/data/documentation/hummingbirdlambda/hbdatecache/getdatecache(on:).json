{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDateCache"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"HBDateCache","preciseIdentifier":"s:11Hummingbird11HBDateCacheC"}],"modules":[{"name":"Hummingbird"}],"title":"getDateCache(on:)","role":"symbol","externalID":"s:11Hummingbird11HBDateCacheC07getDateC02onAC7NIOCore9EventLoop_p_tFZ","roleHeading":"Type Method","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbdatecache\/getdatecache(on:)"]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache"]]},"abstract":[{"type":"text","text":"return date cache for this thread. If one doesn’t exist create one scheduled on EventLoop"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache\/getDateCache(on:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDateCache"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBDateCacheC","text":"HBDateCache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache"}]}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache":{"url":"\/documentation\/hummingbirdlambda\/hbdatecache","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache","navigatorTitle":[{"text":"HBDateCache","kind":"identifier"}],"abstract":[{"type":"text","text":"Current date cache."}],"kind":"symbol","type":"topic","title":"HBDateCache","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBDateCache","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBDateCache/getDateCache(on:)":{"title":"getDateCache(on:)","abstract":[{"text":"return date cache for this thread. If one doesn’t exist create one scheduled on EventLoop","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDateCache"},{"kind":"text","text":"("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBDateCacheC","text":"HBDateCache"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBDateCache\/getDateCache(on:)","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbdatecache\/getdatecache(on:)"}}}