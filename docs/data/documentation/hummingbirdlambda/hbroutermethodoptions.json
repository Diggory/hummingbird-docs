{"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/init(rawValue:)"],"title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/rawValue"],"title":"Instance Properties"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/editResponse","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/streamBody"],"title":"Type Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/Equatable-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/OptionSet-Implementations","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/SetAlgebra-Implementations"],"title":"Default Implementations","generated":true}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecodable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncCallbackResponder"],"title":"Router","generated":true}],"sections":[],"abstract":[{"text":"Options available to routes","type":"text"}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbroutermethodoptions"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/SQ","doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","doc:\/\/com.opticalaberration.hummingbird\/SY","doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}]}],"kind":"declarations"}],"kind":"symbol","metadata":{"navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"HummingbirdAuth"}],"role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"title":"HBRouterMethodOptions","externalID":"s:11Hummingbird21HBRouterMethodOptionsV"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/s9OptionSetP":{"title":"Swift.OptionSet","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s9OptionSetP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s25ExpressibleByArrayLiteralP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouteHandler":{"title":"HBRouteHandler","url":"\/documentation\/hummingbirdlambda\/hbroutehandler","kind":"symbol","abstract":[{"type":"text","text":"Object for handling requests."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/rawValue":{"abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"title":"rawValue","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/rawValue","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/rawvalue","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterBuilder":{"title":"HBRouterBuilder","url":"\/documentation\/hummingbirdlambda\/hbrouterbuilder","kind":"symbol","abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"HBResponder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterBuilder","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterBuilder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SQ","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRequestDecodable":{"title":"HBRequestDecodable","url":"\/documentation\/hummingbirdlambda\/hbrequestdecodable","kind":"symbol","abstract":[{"code":"HBRouteHandler","type":"codeVoice"},{"text":" which uses ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" to initialize it","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRequestDecodable","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRequestDecodable","kind":"identifier"}],"navigatorTitle":[{"text":"HBRequestDecodable","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponder":{"title":"HBResponder","url":"\/documentation\/hummingbirdlambda\/hbresponder","kind":"symbol","abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponder","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBResponder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/editResponse":{"abstract":[{"type":"text","text":"allow handler to edit response via "},{"type":"codeVoice","code":"request.response"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/editResponse","title":"editResponse","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"editResponse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"}],"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/editresponse","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"title":"HBRouterMethodOptions","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","kind":"symbol","abstract":[{"text":"Options available to routes","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethodOptions","kind":"identifier"}],"navigatorTitle":[{"text":"HBRouterMethodOptions","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/Equatable-Implementations":{"abstract":[],"title":"Equatable Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/equatable-implementations","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/init(rawValue:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/init(rawvalue:)","title":"init(rawValue:)","abstract":[],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/init(rawValue:)","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncCallbackResponder":{"title":"HBAsyncCallbackResponder","url":"\/documentation\/hummingbirdlambda\/hbasynccallbackresponder","kind":"symbol","abstract":[{"text":"Responder that calls supplied closure","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncCallbackResponder","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"navigatorTitle":[{"text":"HBAsyncCallbackResponder","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods":{"title":"HBRouterMethods","url":"\/documentation\/hummingbirdlambda\/hbroutermethods","kind":"symbol","abstract":[{"type":"text","text":"Conform to "},{"type":"codeVoice","code":"HBRouterMethods"},{"type":"text","text":" to add standard router verb (get, post …) methods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethods"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterMethods"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/streamBody":{"title":"streamBody","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/streambody","abstract":[{"text":"don’t collate the request body, expect handler to stream it","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"streamBody","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/streamBody"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterGroup":{"title":"HBRouterGroup","url":"\/documentation\/hummingbirdlambda\/hbroutergroup","kind":"symbol","abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"type":"text","text":"suffix to the endpoint path"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterGroup","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterGroup","kind":"identifier"}],"navigatorTitle":[{"text":"HBRouterGroup","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/s10SetAlgebraP":{"title":"Swift.SetAlgebra","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s10SetAlgebraP","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/OptionSet-Implementations":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/OptionSet-Implementations","title":"OptionSet Implementations","kind":"article","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/optionset-implementations","role":"collectionGroup","abstract":[]},"doc://com.opticalaberration.hummingbird/SY":{"title":"Swift.RawRepresentable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/SY","type":"unresolvable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncRouteHandler":{"title":"HBAsyncRouteHandler","url":"\/documentation\/hummingbirdlambda\/hbasyncroutehandler","kind":"symbol","abstract":[{"type":"text","text":"Route Handler using async\/await methods"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncRouteHandler","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBAsyncRouteHandler"}],"navigatorTitle":[{"kind":"identifier","text":"HBAsyncRouteHandler"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBCallbackResponder":{"title":"HBCallbackResponder","url":"\/documentation\/hummingbirdlambda\/hbcallbackresponder","kind":"symbol","abstract":[{"type":"text","text":"Responder that calls supplied closure"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBCallbackResponder","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBCallbackResponder"}],"navigatorTitle":[{"kind":"identifier","text":"HBCallbackResponder"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions\/setalgebra-implementations","kind":"article","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions\/SetAlgebra-Implementations","type":"topic","role":"collectionGroup"}}}