{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary\/lazy"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Sequence.lazy"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary\/Sequence-Implementations"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lazy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12LazySequenceV","text":"LazySequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lazy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12LazySequenceV","text":"LazySequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Swift","modules":[{"name":"Hummingbird","relatedModules":["Swift"]}],"role":"symbol","externalID":"s:STsE4lazys12LazySequenceVyxGvp::SYNTHESIZED::s:11Hummingbird14FlatDictionaryV","roleHeading":"Instance Property","title":"lazy","symbolKind":"property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/flatdictionary\/lazy"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FlatDictionary":{"url":"\/documentation\/hummingbirdlambda\/flatdictionary","kind":"symbol","title":"FlatDictionary","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"FlatDictionary","kind":"identifier"}],"navigatorTitle":[{"text":"FlatDictionary","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary","abstract":[{"type":"text","text":"Provides Dictionary like indexing, but uses a flat array of key"},{"type":"text","text":" "},{"type":"text","text":"value pairs, plus an array of hash keys for lookup for storage."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FlatDictionary/Sequence-Implementations":{"url":"\/documentation\/hummingbirdlambda\/flatdictionary\/sequence-implementations","kind":"article","title":"Sequence Implementations","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary\/Sequence-Implementations","abstract":[],"role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/FlatDictionary/lazy":{"title":"lazy","role":"symbol","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/flatdictionary\/lazy","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lazy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12LazySequenceV","text":"LazySequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/FlatDictionary\/lazy","abstract":[]}}}