{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"If you have only one instance of a type to attach you can extend it to conform to ","type":"text"},{"type":"codeVoice","code":"StorageKey"}],"type":"paragraph"},{"type":"codeListing","code":["struct Object {","    var extensions: Extensions<Object>","}","","extension Object {","    var extra: Extra? {","        get { return extensions.get(\\.extra) }","        set { extensions.set(\\.extra, value: newValue) }","    }","}"],"syntax":null}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible"],"generated":true,"title":"Extending the Application"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/init()"],"title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/exists(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-63nyk","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-7gsg7","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:error:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/set(_:value:shutdownCallback:)"],"title":"Instance Methods"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"abstract":[{"text":"Extend objects with additional member variables","type":"text"}],"sections":[],"metadata":{"roleHeading":"Structure","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"}],"title":"HBExtensions","externalID":"s:11Hummingbird12HBExtensionsV","role":"symbol","modules":[{"name":"HummingbirdAuth"}],"navigatorTitle":[{"text":"HBExtensions","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbextensions"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/exists(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"exists"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"Return if extension has been set","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbextensions\/exists(_:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/exists(_:)","role":"symbol","title":"exists(_:)","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/init()":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/init()","title":"init()","url":"\/documentation\/hummingbirdlambda\/hbextensions\/init()","abstract":[{"text":"Initialize extensions","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:)-63nyk":{"kind":"symbol","role":"symbol","title":"get(_:)","abstract":[{"type":"text","text":"Get optional extension from a "},{"code":"KeyPath","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-63nyk","url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:)-63nyk","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Type"},{"kind":"text","text":">("},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"ParentObject"},{"kind":"text","text":", "},{"text":"Type","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/set(_:value:shutdownCallback:)":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbextensions\/set(_:value:shutdowncallback:)","kind":"symbol","abstract":[{"text":"Set extension for a ","type":"text"},{"type":"codeVoice","code":"KeyPath"}],"title":"set(_:value:shutdownCallback:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/set(_:value:shutdownCallback:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"shutdownCallback","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensible":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible","title":"HBExtensible","url":"\/documentation\/hummingbirdlambda\/hbextensible","abstract":[{"text":"Protocol for extensible classes","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions":{"title":"HBExtensions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensions","kind":"identifier"}],"navigatorTitle":[{"text":"HBExtensions","kind":"identifier"}],"abstract":[{"text":"Extend objects with additional member variables","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbextensions","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:)-7gsg7":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:)-7gsg7","title":"get(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Type"},{"kind":"text","text":"?>) -> "},{"text":"Type","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:)-7gsg7","role":"symbol","abstract":[{"text":"Get optional extension from a ","type":"text"},{"code":"KeyPath","type":"codeVoice"},{"text":" that returns an optional","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensions/get(_:error:)":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensions\/get(_:error:)","title":"get(_:error:)","url":"\/documentation\/hummingbirdlambda\/hbextensions\/get(_:error:)","abstract":[{"text":"Get extension from a ","type":"text"},{"code":"KeyPath","type":"codeVoice"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Type","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"ParentObject","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Type","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":"?) -> ","kind":"text"},{"text":"Type","kind":"typeIdentifier"}]}}}