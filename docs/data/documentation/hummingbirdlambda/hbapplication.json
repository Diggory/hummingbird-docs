{"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler"],"title":"Classes"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct"],"title":"Structures"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)"],"title":"Initializers"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct"],"title":"Instance Properties"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference"],"title":"Enumerations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"metadata":{"role":"symbol","externalID":"s:11Hummingbird13HBApplicationC","symbolKind":"class","roleHeading":"Class","modules":[{"name":"Hummingbird"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"title":"HBApplication"},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider"],"title":"Application","generated":true}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an HBApplication, setup your application middleware, encoders, routes etc and then call "},{"type":"codeVoice","code":"start"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"start the server and "},{"type":"codeVoice","code":"wait"},{"type":"text","text":" to wait until the server is stopped."}]},{"syntax":null,"type":"codeListing","code":["let app = HBApplication()","app.middleware.add(MyMiddleware())","app.get(\"hello\") { _ in","    return \"hello\"","}","app.start()","app.wait()"]},{"type":"paragraph","inlineContent":[{"text":"Editing the application setup after calling ","type":"text"},{"type":"codeVoice","code":"start"},{"text":" will produce undefined behaviour.","type":"text"}]}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/hbapplication"]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/eventLoopGroup":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eventLoopGroup","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore14EventLoopGroupP","kind":"typeIdentifier","text":"EventLoopGroup"}],"abstract":[{"type":"text","text":"event loop group used by application"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroup","title":"eventLoopGroup","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/sessionStorage":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sessionStorage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Persist","preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","url":"\/documentation\/hummingbirdlambda\/hbapplication\/sessionstorage","abstract":[{"type":"text","text":"Accessor for session storage"}],"title":"sessionStorage","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/jobs":{"abstract":[{"text":"Job queue handler","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"jobs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JobQueueHandler","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A4JobsE15JobQueueHandlerC"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","title":"jobs","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Configuration-swift.struct":{"title":"HBApplication.Configuration","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.struct","navigatorTitle":[{"text":"Configuration","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Configuration","kind":"identifier"}],"abstract":[{"type":"text","text":"Application configuration"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncWait()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","title":"asyncWait()","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"abstract":[{"text":"Wait until server has stopped running","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRequestDecompression(execute:limit:)":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addrequestdecompression(execute:limit:)","role":"symbol","title":"addRequestDecompression(execute:limit:)","type":"topic","kind":"symbol","abstract":[{"text":"Add Channel Handler for decompressing request that have Content-Encoding header set to gzip or deflate","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addRequestDecompression","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"execute"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"RequestCompressionExecutionPreference","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE07RequestC19ExecutionPreferenceO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"text":"HTTPDecompressionLimit","preciseIdentifier":"s:22HummingbirdCompression22HTTPDecompressionLimitV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addPersist(using:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"addPersist","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBPersistDriverFactory","preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Add persist framework to "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":"."}],"title":"addPersist(using:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addpersist(using:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/logger":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger","title":"logger","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/logger","abstract":[{"text":"Logger. Required to be a var by hummingbird-lambda","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(testing:configuration:timeout:)":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"testing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"XCTTestingSetup","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","text":"TimeAmount","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"text":"Creates a version of ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":" that can be used for testing code","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)","title":"init(testing:configuration:timeout:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(testing:configuration:timeout:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(sessionID:)":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(sessionid:)","kind":"symbol","title":"addSessions(sessionID:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addSessions"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sessionID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV","text":"SessionManager"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea","text":"SessionIDStorage"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","abstract":[{"type":"text","text":"Add session management to "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":" using default persist memory driver"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redisConnectionPools":{"type":"topic","role":"symbol","title":"redisConnectionPools","url":"\/documentation\/hummingbirdlambda\/hbapplication\/redisconnectionpools","kind":"symbol","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"redisConnectionPools","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RedisConnectionPoolGroupArray","preciseIdentifier":"s:16HummingbirdRedis0B24ConnectionPoolGroupArrayC","kind":"typeIdentifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/shutdownApplication()":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/shutdownapplication()","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shutdownApplication"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"}],"title":"shutdownApplication()","abstract":[{"type":"text","text":"shutdown eventloop, threadpool and any extensions attached to the Application"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/constructResponder()":{"kind":"symbol","title":"constructResponder()","abstract":[{"type":"text","text":"Construct the RequestResponder from the middleware group and router"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP","text":"HBResponder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/constructresponder()","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensible":{"title":"HBExtensible","type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible","navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Protocol for extensible classes","type":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbextensible","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/start()":{"type":"topic","kind":"symbol","abstract":[{"text":"Start application","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"role":"symbol","title":"start()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/start()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"navigatorTitle":[{"kind":"identifier","text":"HBApplication"}],"title":"HBApplication","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/decoder":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBRequestDecoder","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","url":"\/documentation\/hummingbirdlambda\/hbapplication\/decoder","title":"decoder","abstract":[{"text":"decoder used by router","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addFluent()":{"title":"addFluent()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addFluent"},{"kind":"text","text":"()"}],"abstract":[{"text":"Create Fluent management object.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addfluent()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)","title":"db(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"db","kind":"identifier"},{"text":"(","kind":"text"},{"text":"DatabaseID","preciseIdentifier":"s:9FluentKit10DatabaseIDV","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Database","preciseIdentifier":"s:9FluentKit8DatabaseP","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Get database with ID"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/db(_:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/configuration-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configuration","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Configuration","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV"}],"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.property","kind":"symbol","title":"configuration","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","abstract":[{"text":"Configuration","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"redis"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV","text":"RedisConnectionPoolGroup"}],"role":"symbol","title":"redis","kind":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/RequestCompressionExecutionPreference":{"kind":"symbol","title":"HBApplication.RequestCompressionExecutionPreference","type":"topic","abstract":[{"type":"text","text":"Indicate where the response compression tasks should be executed"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestCompressionExecutionPreference"}],"navigatorTitle":[{"kind":"identifier","text":"RequestCompressionExecutionPreference"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/requestcompressionexecutionpreference"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/ServiceLifecycleProvider":{"abstract":[{"text":"Define where we get the ServiceLifecycle from.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ServiceLifecycleProvider"}],"type":"topic","title":"ServiceLifecycleProvider","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ServiceLifecycleProvider"}],"url":"\/documentation\/hummingbirdlambda\/servicelifecycleprovider"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addResponseCompression(execute:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addResponseCompression","kind":"identifier"},{"text":"(","kind":"text"},{"text":"execute","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE08ResponseC19ExecutionPreferenceO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addresponsecompression(execute:)","title":"addResponseCompression(execute:)","abstract":[{"text":"Add Channel Handler for compressing responses where accept-encoding header indicates the client will accept compressed data","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/xct":{"role":"symbol","abstract":[],"title":"xct","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xct","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"xct"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBXCT","preciseIdentifier":"s:14HummingbirdXCT5HBXCTP"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/server":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"server","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBHTTPServer","preciseIdentifier":"s:15HummingbirdCore12HBHTTPServerC","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","url":"\/documentation\/hummingbirdlambda\/hbapplication\/server","title":"server","abstract":[{"text":"http server","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncRun()":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asyncRun","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","type":"topic","title":"asyncRun()","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/EventLoopGroupProvider":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"EventLoopGroupProvider","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroupprovider","role":"symbol","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","abstract":[{"type":"text","text":"Indicates where we should get our EventLoopGroup from"}],"title":"HBApplication.EventLoopGroupProvider"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/lifecycle":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lifecycle","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9Lifecycle07ServiceA0V","text":"ServiceLifecycle","kind":"typeIdentifier"}],"abstract":[{"text":"server lifecycle, controls initialization and shutdown of application","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","title":"lifecycle","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/lifecycle","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStop()":{"abstract":[{"type":"text","text":"Stop tests"}],"kind":"symbol","type":"topic","title":"XCTStop()","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTStop","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstop()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTExecute(uri:method:headers:body:testCallback:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XCTExecute","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Return","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"uri"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"body","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"testCallback","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:14HummingbirdXCT13HBXCTResponseV","text":"HBXCTResponse","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp","text":"Return","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp","text":"Return","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)","role":"symbol","abstract":[{"text":"Send request and call test callback on the response returned","type":"text"}],"title":"XCTExecute(uri:method:headers:body:testCallback:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctexecute(uri:method:headers:body:testcallback:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/run()":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/run()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"run"},{"kind":"text","text":"() "},{"text":"throws","kind":"keyword"}],"role":"symbol","title":"run()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-9vwer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eventLoopGroupProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC22EventLoopGroupProviderV","text":"EventLoopGroupProvider","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"serviceLifecycleProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO","text":"ServiceLifecycleProvider"},{"kind":"text","text":")"}],"title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","abstract":[{"type":"text","text":"Initialize new Application"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/stop()":{"title":"stop()","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/stop()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Shutdown application"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/router":{"title":"router","abstract":[{"text":"routes requests to requestResponders based on URI","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"router"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterBuilderC","text":"HBRouterBuilder"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/wait()":{"type":"topic","title":"wait()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/wait()","abstract":[{"type":"text","text":"Wait until server has stopped running"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ws":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","url":"\/documentation\/hummingbirdlambda\/hbapplication\/ws","type":"topic","title":"ws","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"WebSocket interface"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"ws"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBWebSocketBuilder","preciseIdentifier":"s:20HummingbirdWebSocket05HBWebC7BuilderV"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(using:sessionID:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addSessions"},{"kind":"text","text":"("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBPersistDriverFactory","preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"sessionID"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SessionManager","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SessionIDStorage","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea"},{"kind":"text","text":")"}],"title":"addSessions(using:sessionID:)","type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","abstract":[{"text":"Add session management to ","type":"text"},{"type":"codeVoice","code":"HBApplication"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(using:sessionid:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8":{"type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"HBApplication","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eventLoopGroupProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOEventLoopGroupProvider","preciseIdentifier":"s:7NIOCore25NIOEventLoopGroupProviderO"},{"kind":"text","text":", "},{"text":"serviceLifecycleProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ServiceLifecycleProvider","preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-8fsw8","kind":"symbol","deprecated":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStart()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTStart"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","title":"XCTStart()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstart()","kind":"symbol","abstract":[{"text":"Start tests","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/JobQueueHandler":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobqueuehandler","navigatorTitle":[{"text":"JobQueueHandler","kind":"identifier"}],"title":"HBApplication.JobQueueHandler","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueueHandler","kind":"identifier"}],"abstract":[{"text":"Object internal to ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"type":"text","text":" that handles its array of JobQueues."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(id:configuration:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRedis"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","text":"RedisConnectionPoolGroupIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBRedisConfiguration","preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"type":"text","text":"Add Redis to HBApplication"}],"title":"addRedis(id:configuration:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(id:configuration:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/HTTPResponder":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","title":"HBApplication.HTTPResponder","abstract":[{"type":"text","text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore"}],"role":"symbol","navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/httpresponder","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/threadPool":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/threadpool","kind":"symbol","abstract":[{"type":"text","text":"thread pool used by application"}],"title":"threadPool","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"threadPool"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC","kind":"typeIdentifier","text":"NIOThreadPool"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis(id:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"redis","kind":"identifier"},{"text":"(","kind":"text"},{"text":"id","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"RedisConnectionPoolGroupIdentifier","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV"},{"text":") -> ","kind":"text"},{"text":"RedisConnectionPoolGroup","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV"},{"text":"?","kind":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)","title":"redis(id:)","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis(id:)","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/fluent":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/fluent","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fluent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBFluent","preciseIdentifier":"s:17HummingbirdFluent8HBFluentV"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","title":"fluent","abstract":[{"text":"Fluent interface object","type":"text"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Persist-swift.struct":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.struct","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct","navigatorTitle":[{"kind":"identifier","text":"Persist"}],"abstract":[{"text":"Framework for storing persistent key\/value pairs between mulitple requests","type":"text"}],"kind":"symbol","type":"topic","title":"HBApplication.Persist","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Persist"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference":{"title":"HBApplication.ResponseCompressionExecutionPreference","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference","navigatorTitle":[{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"abstract":[{"type":"text","text":"Indicate where the response compression tasks should be executed"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/middleware":{"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","title":"middleware","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"middleware"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBMiddlewareGroup","preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/middleware","abstract":[{"text":"middleware applied to requests","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/persist-swift.property":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"persist","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Persist","preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","title":"persist","abstract":[{"type":"text","text":"Accessor for persist framework"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.property","role":"symbol","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/encoder":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encoder","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBResponseEncoder","preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder","abstract":[{"text":"Encoder used by router","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/encoder","role":"symbol","title":"encoder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"db"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9FluentKit8DatabaseP","text":"Database"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","title":"db","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db","abstract":[{"type":"text","text":"Get default database"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addJobs(using:numWorkers:)":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addjobs(using:numworkers:)","type":"topic","abstract":[{"text":"Initialisation for Job queue system","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addJobs","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBJobQueueFactory","preciseIdentifier":"s:15HummingbirdJobs17HBJobQueueFactoryV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"numWorkers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"addJobs(using:numWorkers:)","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/extensions":{"abstract":[{"type":"text","text":"Application extensions"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","title":"extensions","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"extensions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HBExtensions","preciseIdentifier":"s:11Hummingbird12HBExtensionsV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"HBApplication","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"kind":"text","text":">"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/extensions","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(configuration:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRedis"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV","text":"HBRedisConfiguration","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Add Redis to HBApplication","type":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(configuration:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","title":"addRedis(configuration:)","role":"symbol"}}}