{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler"],"title":"Classes","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct"],"title":"Structures","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)"],"title":"Initializers","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct"],"title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()"],"title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference"],"title":"Enumerations","generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBApplication"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"Create an HBApplication, setup your application middleware, encoders, routes etc and then call "},{"code":"start","type":"codeVoice"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"start the server and "},{"code":"wait","type":"codeVoice"},{"type":"text","text":" to wait until the server is stopped."}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let app = HBApplication()","app.middleware.add(MyMiddleware())","app.get(\"hello\") { _ in","    return \"hello\"","}","app.start()","app.wait()"]},{"inlineContent":[{"type":"text","text":"Editing the application setup after calling "},{"type":"codeVoice","code":"start"},{"type":"text","text":" will produce undefined behaviour."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"roleHeading":"Class","title":"HBApplication","role":"symbol","modules":[{"name":"HummingbirdAuth"}],"externalID":"s:11Hummingbird13HBApplicationC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"symbolKind":"class","navigatorTitle":[{"text":"HBApplication","kind":"identifier"}]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider"],"title":"Application","generated":true}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication"},"abstract":[{"type":"text","text":"Application class. Brings together all the components of Hummingbird together"}],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbapplication"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/extensions":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"extensions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird12HBExtensionsV","text":"HBExtensions"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication"},{"kind":"text","text":">"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/extensions","abstract":[{"text":"Application extensions","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/extensions","title":"extensions"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8":{"abstract":[],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-8fsw8","title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","deprecated":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-8fsw8","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"convenience"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBApplication","preciseIdentifier":"s:11Hummingbird13HBApplicationC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eventLoopGroupProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore25NIOEventLoopGroupProviderO","text":"NIOEventLoopGroupProvider","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"serviceLifecycleProvider","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO","text":"ServiceLifecycleProvider","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/router":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"router"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterBuilderC","text":"HBRouterBuilder"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/router","abstract":[{"text":"routes requests to requestResponders based on URI","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/router","title":"router"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addJobs(using:numWorkers:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addJobs"},{"kind":"text","text":"("},{"kind":"externalParam","text":"using"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdJobs17HBJobQueueFactoryV","text":"HBJobQueueFactory"},{"kind":"text","text":", "},{"kind":"externalParam","text":"numWorkers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addjobs(using:numworkers:)","abstract":[{"text":"Initialisation for Job queue system","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addJobs(using:numWorkers:)","title":"addJobs(using:numWorkers:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncRun()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncRun"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncRun()","title":"asyncRun()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncrun()","abstract":[{"type":"text","text":"Start application and wait for it to stop"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redisConnectionPools":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"redisConnectionPools"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B24ConnectionPoolGroupArrayC","text":"RedisConnectionPoolGroupArray"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/redisconnectionpools","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redisConnectionPools","title":"redisConnectionPools"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/start()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/start()","title":"start()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Start application"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/start()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/logger":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/logger","url":"\/documentation\/hummingbirdlambda\/hbapplication\/logger","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"}],"role":"symbol","title":"logger","abstract":[{"text":"Logger. Required to be a var by hummingbird-lambda","type":"text"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis(id:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"redis"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","text":"RedisConnectionPoolGroupIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV","text":"RedisConnectionPoolGroup"},{"kind":"text","text":"?"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis(id:)","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis(id:)","title":"redis(id:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/HTTPResponder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"abstract":[{"type":"text","text":"HTTP responder class for Hummingbird. This is the interface between Hummingbird and HummingbirdCore"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/httpresponder","navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/HTTPResponder","role":"symbol","title":"HBApplication.HTTPResponder","type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTExecute(uri:method:headers:body:testCallback:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTExecute"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Return"},{"kind":"text","text":">("},{"kind":"externalParam","text":"uri"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders"},{"kind":"text","text":", "},{"kind":"externalParam","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"testCallback"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:14HummingbirdXCT13HBXCTResponseV","kind":"typeIdentifier","text":"HBXCTResponse"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp","kind":"typeIdentifier","text":"Return"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC0A3XCTE10XCTExecute3uri6method7headers4body12testCallbackxSS_8NIOHTTP110HTTPMethodOAK11HTTPHeadersV7NIOCore10ByteBufferVSgxAD13HBXCTResponseVKctKlF6ReturnL_xmfp","kind":"typeIdentifier","text":"Return"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctexecute(uri:method:headers:body:testcallback:)","abstract":[{"text":"Send request and call test callback on the response returned","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTExecute(uri:method:headers:body:testCallback:)","title":"XCTExecute(uri:method:headers:body:testCallback:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/fluent":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/fluent","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fluent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdFluent8HBFluentV","text":"HBFluent"}],"kind":"symbol","abstract":[{"type":"text","text":"Fluent interface object"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/fluent","type":"topic","title":"fluent"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addPersist(using:)":{"abstract":[{"text":"Add persist framework to ","type":"text"},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":"."}],"type":"topic","title":"addPersist(using:)","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addpersist(using:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addPersist"},{"kind":"text","text":"("},{"kind":"externalParam","text":"using"},{"text":": ","kind":"text"},{"text":"HBPersistDriverFactory","preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addPersist(using:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/asyncWait()":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/asyncWait()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncWait"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"kind":"symbol","abstract":[{"text":"Wait until server has stopped running","type":"text"}],"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/asyncwait()","type":"topic","title":"asyncWait()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/server":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"server"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore12HBHTTPServerC","text":"HBHTTPServer"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/server","abstract":[{"text":"http server","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/server","title":"server"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(testing:configuration:timeout:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(testing:configuration:timeout:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(testing:configuration:timeout:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"testing"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT15XCTTestingSetupO","text":"XCTTestingSetup"},{"kind":"text","text":", "},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBApplication","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"text":".","kind":"text"},{"text":"Configuration","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":")","kind":"text"}],"type":"topic","title":"init(testing:configuration:timeout:)","role":"symbol","abstract":[{"text":"Creates a version of ","type":"text"},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":" that can be used for testing code"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/stop()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"kind":"text","text":"()"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/stop()","abstract":[{"text":"Shutdown application","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/stop()","title":"stop()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStop()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTStop"},{"kind":"text","text":"()"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstop()","abstract":[{"text":"Stop tests","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStop()","title":"XCTStop()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/lifecycle":{"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/lifecycle","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lifecycle","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ServiceLifecycle","kind":"typeIdentifier","preciseIdentifier":"s:9Lifecycle07ServiceA0V"}],"abstract":[{"text":"server lifecycle, controls initialization and shutdown of application","type":"text"}],"title":"lifecycle","url":"\/documentation\/hummingbirdlambda\/hbapplication\/lifecycle"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/wait()":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/wait()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"()"}],"abstract":[{"text":"Wait until server has stopped running","type":"text"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/wait()","title":"wait()","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/XCTStart()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTStart"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/xctstart()","abstract":[{"text":"Start tests","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/XCTStart()","title":"XCTStart()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/constructResponder()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constructResponder"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11HBResponderP","text":"HBResponder"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/constructresponder()","abstract":[{"text":"Construct the RequestResponder from the middleware group and router","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/constructResponder()","title":"constructResponder()"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRequestDecompression(execute:limit:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRequestDecompression"},{"kind":"text","text":"("},{"kind":"externalParam","text":"execute"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE07RequestC19ExecutionPreferenceO","text":"RequestCompressionExecutionPreference"},{"kind":"text","text":", "},{"kind":"externalParam","text":"limit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:22HummingbirdCompression22HTTPDecompressionLimitV","text":"HTTPDecompressionLimit"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addrequestdecompression(execute:limit:)","abstract":[{"text":"Add Channel Handler for decompressing request that have Content-Encoding header set to gzip or deflate","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRequestDecompression(execute:limit:)","title":"addRequestDecompression(execute:limit:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/shutdownApplication()":{"abstract":[{"type":"text","text":"shutdown eventloop, threadpool and any extensions attached to the Application"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/shutdownApplication()","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/shutdownapplication()","title":"shutdownApplication()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownApplication"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ResponseCompressionExecutionPreference":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ResponseCompressionExecutionPreference","url":"\/documentation\/hummingbirdlambda\/hbapplication\/responsecompressionexecutionpreference","type":"topic","kind":"symbol","abstract":[{"text":"Indicate where the response compression tasks should be executed","type":"text"}],"title":"HBApplication.ResponseCompressionExecutionPreference","navigatorTitle":[{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"ResponseCompressionExecutionPreference","kind":"identifier"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/threadPool":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/threadpool","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"threadPool"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC","text":"NIOThreadPool"}],"title":"threadPool","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/threadPool","role":"symbol","abstract":[{"type":"text","text":"thread pool used by application"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/decoder":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/decoder","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird16HBRequestDecoderP","text":"HBRequestDecoder"}],"title":"decoder","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/decoder","role":"symbol","abstract":[{"type":"text","text":"decoder used by router"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Persist-swift.struct":{"type":"topic","title":"HBApplication.Persist","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Persist-swift.struct","navigatorTitle":[{"text":"Persist","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Persist","kind":"identifier"}],"abstract":[{"type":"text","text":"Framework for storing persistent key\/value pairs between mulitple requests"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.struct"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/JobQueueHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/JobQueueHandler","title":"HBApplication.JobQueueHandler","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobqueuehandler","kind":"symbol","navigatorTitle":[{"text":"JobQueueHandler","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JobQueueHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"Object internal to "},{"type":"codeVoice","code":"HBApplication"},{"text":" that handles its array of JobQueues.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/configuration-swift.property":{"type":"topic","abstract":[{"type":"text","text":"Configuration"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.property","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/configuration-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration","kind":"typeIdentifier"}],"title":"configuration","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addFluent()":{"title":"addFluent()","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addFluent()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addfluent()","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addFluent","kind":"identifier"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"type":"text","text":"Create Fluent management object."}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/sessionStorage":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/sessionstorage","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sessionStorage"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV","text":"Persist"}],"title":"sessionStorage","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/sessionStorage","role":"symbol","abstract":[{"type":"text","text":"Accessor for session storage"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/EventLoopGroupProvider":{"kind":"symbol","navigatorTitle":[{"text":"EventLoopGroupProvider","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopGroupProvider","kind":"identifier"}],"title":"HBApplication.EventLoopGroupProvider","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/EventLoopGroupProvider","url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroupprovider","abstract":[{"type":"text","text":"Indicates where we should get our EventLoopGroup from"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(sessionID:)":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addSessions","kind":"identifier"},{"text":"(","kind":"text"},{"text":"sessionID","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV","text":"SessionManager","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea","text":"SessionIDStorage","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Add session management to "},{"type":"codeVoice","code":"HBApplication"},{"type":"text","text":" using default persist memory driver"}],"title":"addSessions(sessionID:)","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(sessionid:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(sessionID:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(id:configuration:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(id:configuration:)","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(id:configuration:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRedis"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16HummingbirdRedis0B29ConnectionPoolGroupIdentifierV","kind":"typeIdentifier","text":"RedisConnectionPoolGroupIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV","kind":"typeIdentifier","text":"HBRedisConfiguration"},{"kind":"text","text":")"}],"kind":"symbol","title":"addRedis(id:configuration:)","role":"symbol","abstract":[{"text":"Add Redis to HBApplication","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/middleware":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/middleware","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"middleware"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird17HBMiddlewareGroupC","kind":"typeIdentifier","text":"HBMiddlewareGroup"}],"title":"middleware","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/middleware","role":"symbol","abstract":[{"text":"middleware applied to requests","type":"text"}],"type":"topic","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db":{"kind":"symbol","abstract":[{"text":"Get default database","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db","title":"db","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"db"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:9FluentKit8DatabaseP","text":"Database"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/ws":{"kind":"symbol","abstract":[{"text":"WebSocket interface","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/ws","title":"ws","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/ws","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ws"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20HummingbirdWebSocket05HBWebC7BuilderV","text":"HBWebSocketBuilder"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/redis":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/redis","title":"redis","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"redis","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RedisConnectionPoolGroup","preciseIdentifier":"s:16HummingbirdRedis0B19ConnectionPoolGroupV","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/redis","role":"symbol","abstract":[]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addResponseCompression(execute:)":{"kind":"symbol","abstract":[{"text":"Add Channel Handler for compressing responses where accept-encoding header indicates the client will accept compressed data","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addResponseCompression(execute:)","title":"addResponseCompression(execute:)","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/addresponsecompression(execute:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"addResponseCompression"},{"kind":"text","text":"("},{"kind":"externalParam","text":"execute"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A11CompressionE08ResponseC19ExecutionPreferenceO","text":"ResponseCompressionExecutionPreference"},{"kind":"text","text":")"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/RequestCompressionExecutionPreference":{"kind":"symbol","abstract":[{"type":"text","text":"Indicate where the response compression tasks should be executed"}],"type":"topic","title":"HBApplication.RequestCompressionExecutionPreference","url":"\/documentation\/hummingbirdlambda\/hbapplication\/requestcompressionexecutionpreference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/RequestCompressionExecutionPreference","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestCompressionExecutionPreference"}],"navigatorTitle":[{"kind":"identifier","text":"RequestCompressionExecutionPreference"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/db(_:)":{"title":"db(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"db","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DatabaseID","preciseIdentifier":"s:9FluentKit10DatabaseIDV"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Database","preciseIdentifier":"s:9FluentKit8DatabaseP"}],"abstract":[{"text":"Get database with ID","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbapplication\/db(_:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/db(_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/ServiceLifecycleProvider":{"role":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/servicelifecycleprovider","abstract":[{"text":"Define where we get the ServiceLifecycle from.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"ServiceLifecycleProvider","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/ServiceLifecycleProvider","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServiceLifecycleProvider","kind":"identifier"}],"title":"ServiceLifecycleProvider"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/encoder":{"title":"encoder","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"encoder","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird17HBResponseEncoderP","text":"HBResponseEncoder","kind":"typeIdentifier"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/encoder","abstract":[{"type":"text","text":"Encoder used by router"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/encoder","role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/jobs":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/jobs","title":"jobs","abstract":[{"text":"Job queue handler","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/jobs","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"jobs","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"JobQueueHandler","preciseIdentifier":"s:11Hummingbird13HBApplicationC0A4JobsE15JobQueueHandlerC"}],"kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/persist-swift.property":{"type":"topic","title":"persist","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/persist-swift.property","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"persist","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBApplication","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC"},{"text":".","kind":"text"},{"text":"Persist","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC7PersistV"}],"abstract":[{"type":"text","text":"Accessor for persist framework"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/persist-swift.property"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/xct":{"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/xct","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"xct","kind":"identifier"},{"text":": ","kind":"text"},{"text":"HBXCT","kind":"typeIdentifier","preciseIdentifier":"s:14HummingbirdXCT5HBXCTP"}],"abstract":[],"title":"xct","url":"\/documentation\/hummingbirdlambda\/hbapplication\/xct"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBExtensible":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBExtensible","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBExtensible","title":"HBExtensible","url":"\/documentation\/hummingbirdlambda\/hbextensible","abstract":[{"text":"Protocol for extensible classes","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"HBExtensible","kind":"identifier"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/init(configuration:eventloopgroupprovider:servicelifecycleprovider:)-9vwer","kind":"symbol","type":"topic","title":"init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC13ConfigurationV","text":"Configuration"},{"kind":"text","text":", "},{"kind":"externalParam","text":"eventLoopGroupProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC","text":"HBApplication"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird13HBApplicationC22EventLoopGroupProviderV","text":"EventLoopGroupProvider"},{"kind":"text","text":", "},{"kind":"externalParam","text":"serviceLifecycleProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird24ServiceLifecycleProviderO","text":"ServiceLifecycleProvider"},{"kind":"text","text":")"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/init(configuration:eventLoopGroupProvider:serviceLifecycleProvider:)-9vwer","role":"symbol","abstract":[{"type":"text","text":"Initialize new Application"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/Configuration-swift.struct":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/Configuration-swift.struct","abstract":[{"text":"Application configuration","type":"text"}],"navigatorTitle":[{"text":"Configuration","kind":"identifier"}],"title":"HBApplication.Configuration","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Configuration","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication\/configuration-swift.struct","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/run()":{"abstract":[{"text":"Start application and wait for it to stop","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/run()","url":"\/documentation\/hummingbirdlambda\/hbapplication\/run()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"run","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","title":"run()","kind":"symbol","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addRedis(configuration:)":{"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addredis(configuration:)","title":"addRedis(configuration:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addRedis(configuration:)","abstract":[{"text":"Add Redis to HBApplication","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addRedis"},{"kind":"text","text":"("},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBRedisConfiguration","kind":"typeIdentifier","preciseIdentifier":"s:16HummingbirdRedis20HBRedisConfigurationV"},{"text":")","kind":"text"}],"type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/addSessions(using:sessionID:)":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/addSessions(using:sessionID:)","title":"addSessions(using:sessionID:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addSessions","kind":"identifier"},{"text":"(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HBPersistDriverFactory","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird22HBPersistDriverFactoryV"},{"text":", ","kind":"text"},{"text":"sessionID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SessionManager","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdAuth14SessionManagerV0C9IDStoragea","text":"SessionIDStorage"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/addsessions(using:sessionid:)","role":"symbol","abstract":[{"text":"Add session management to ","type":"text"},{"code":"HBApplication","type":"codeVoice"},{"text":".","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication/eventLoopGroup":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication\/eventLoopGroup","title":"eventLoopGroup","role":"symbol","abstract":[{"type":"text","text":"event loop group used by application"}],"url":"\/documentation\/hummingbirdlambda\/hbapplication\/eventloopgroup","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoopGroup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBApplication":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBApplication","abstract":[{"text":"Application class. Brings together all the components of Hummingbird together","type":"text"}],"navigatorTitle":[{"text":"HBApplication","kind":"identifier"}],"title":"HBApplication","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBApplication","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbirdlambda\/hbapplication","kind":"symbol","role":"symbol"}}}