{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"externalID":"s:11Hummingbird12HBParametersV11getCatchAllSaySsGyF","title":"getCatchAll()","roleHeading":"Instance Method","modules":[{"name":"Hummingbird"}],"role":"symbol","symbolKind":"method"},"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbparameters\/getcatchall()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getCatchAll","kind":"identifier"},{"text":"() -> [","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":"]","kind":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParameters"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParameters\/getCatchAll()"},"sections":[],"abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParameters":{"url":"\/documentation\/hummingbirdlambda\/hbparameters","kind":"symbol","title":"HBParameters","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBParameters"}],"navigatorTitle":[{"kind":"identifier","text":"HBParameters"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParameters","abstract":[{"type":"text","text":"Store for parameters key, value pairs extracted from URI"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBParameters/getCatchAll()":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBParameters\/getCatchAll()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCatchAll"},{"kind":"text","text":"() -> ["},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Return path elements caught by recursive capture"}],"title":"getCatchAll()","kind":"symbol","role":"symbol","url":"\/documentation\/hummingbirdlambda\/hbparameters\/getcatchall()"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"}}}