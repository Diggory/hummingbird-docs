{"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["Linux"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncConnection\/close()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbasyncconnection\/close()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"metadata":{"role":"symbol","title":"close()","platforms":[{"name":"iOS","deprecated":false,"introducedAt":"13.0","beta":false,"unavailable":false},{"name":"macOS","deprecated":false,"introducedAt":"10.15","beta":false,"unavailable":false},{"name":"tvOS","deprecated":false,"introducedAt":"13.0","beta":false,"unavailable":false},{"name":"watchOS","deprecated":false,"introducedAt":"6.0","beta":false,"unavailable":false}],"required":true,"symbolKind":"method","externalID":"s:11Hummingbird17HBAsyncConnectionP5closeyyYaKF","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncConnection"]]},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncConnection":{"title":"HBAsyncConnection","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/hummingbirdlambda\/hbasyncconnection","navigatorTitle":[{"text":"HBAsyncConnection","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncConnection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBAsyncConnection","kind":"identifier"}],"abstract":[{"type":"text","text":"Connection that supports async close"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBAsyncConnection/close()":{"url":"\/documentation\/hummingbirdlambda\/hbasyncconnection\/close()","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBAsyncConnection\/close()","abstract":[],"kind":"symbol","type":"topic","required":true,"title":"close()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol"}}}