{"sections":[],"abstract":[{"text":"Add path for ","type":"text"},{"type":"codeVoice","code":"HBRouteHandler"},{"text":" that returns a value conforming to ","type":"text"},{"type":"codeVoice","code":"HBResponseGenerator"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-q9gs"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-3uco"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-4r81r"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-6fajk"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-3uco"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-4r81r"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-6fajk"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-3uco"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-4r81r"],["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-6fajk"]]},"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"Hummingbird"}],"extendedModule":"Hummingbird","title":"on(_:method:options:use:)","roleHeading":"Instance Method","externalID":"s:11Hummingbird15HBRouterMethodsPAAE2on_6method7options3usexSS_8NIOHTTP110HTTPMethodOAA0B13MethodOptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_7_OutputQyd__Rsd_0_r0_lF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"on","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"_Output"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","kind":"typeIdentifier","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE2on_6method7options3usexSS_8NIOHTTP110HTTPMethodOAA0B13MethodOptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_7_OutputQyd__Rsd_0_r0_lF0M0L_qd__mfp","kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"_Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"HTTPMethod","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","kind":"typeIdentifier","text":"HBRouterMethodOptions","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV"},{"kind":"text","text":" = [], "},{"kind":"externalParam","text":"use"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handlerType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Handler","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE2on_6method7options3usexSS_8NIOHTTP110HTTPMethodOAA0B13MethodOptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_7_OutputQyd__Rsd_0_r0_lF0M0L_qd__mfp"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","kind":"typeIdentifier","text":"HBRouteHandler","preciseIdentifier":"s:11Hummingbird14HBRouteHandlerP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"_Output"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","kind":"typeIdentifier","text":"HBResponseGenerator","preciseIdentifier":"s:11Hummingbird19HBResponseGeneratorP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"_Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"_Output"}],"languages":["swift"],"platforms":["Linux"]}]}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/hbroutermethods\/on(_:method:options:use:)-q9gs"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/on(_:method:options:use:)-4r81r":{"required":true,"kind":"symbol","role":"symbol","title":"on(_:method:options:use:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-4r81r","url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/on(_:method:options:use:)-4r81r","abstract":[{"type":"text","text":"Add path for closure returning type conforming to ResponseFutureEncodable"}],"defaultImplementations":2,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","kind":"typeIdentifier","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP2on_6method7options3usexSS_8NIOHTTP110HTTPMethodOAA0B13MethodOptionsVqd__AA9HBRequestVKctAA19HBResponseGeneratorRd__lF6OutputL_qd__mfp","kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","kind":"article","role":"collection","url":"\/documentation\/index"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouteHandler":{"url":"\/documentation\/hummingbirdlambda\/hbroutehandler","kind":"symbol","title":"HBRouteHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouteHandler"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouteHandler"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouteHandler","abstract":[{"type":"text","text":"Object for handling requests."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBResponseGenerator":{"url":"\/documentation\/hummingbirdlambda\/hbresponsegenerator","kind":"symbol","title":"HBResponseGenerator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBResponseGenerator"}],"navigatorTitle":[{"kind":"identifier","text":"HBResponseGenerator"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBResponseGenerator","abstract":[{"type":"text","text":"Object that can generate a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":"."}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/on(_:method:options:use:)-q9gs":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/on(_:method:options:use:)-q9gs","abstract":[{"text":"Add path for ","type":"text"},{"code":"HBRouteHandler","type":"codeVoice"},{"text":" that returns a value conforming to ","type":"text"},{"code":"HBResponseGenerator","type":"codeVoice"}],"kind":"symbol","role":"symbol","title":"on(_:method:options:use:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-q9gs","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Handler"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"_Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird15HBRouterMethodsPAAE2on_6method7options3usexSS_8NIOHTTP110HTTPMethodOAA0B13MethodOptionsVqd__mtAA14HBRouteHandlerRd__AA19HBResponseGeneratorRd_0_7_OutputQyd__Rsd_0_r0_lF0M0L_qd__mfp","kind":"typeIdentifier","text":"Handler"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethodOptions":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethodoptions","kind":"symbol","title":"HBRouterMethodOptions","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBRouterMethodOptions"}],"navigatorTitle":[{"kind":"identifier","text":"HBRouterMethodOptions"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethodOptions","abstract":[{"type":"text","text":"Options available to routes"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/on(_:method:options:use:)-6fajk":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/on(_:method:options:use:)-6fajk","abstract":[{"text":"Add path for closure returning type conforming to ResponseFutureEncodable","type":"text"}],"kind":"symbol","required":true,"defaultImplementations":2,"role":"symbol","title":"on(_:method:options:use:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-6fajk","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","kind":"typeIdentifier","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","kind":"typeIdentifier","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:11Hummingbird9HBRequestV","kind":"typeIdentifier","text":"HBRequest"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP2on_6method7options3usexSS_8NIOHTTP110HTTPMethodOAA0B13MethodOptionsV7NIOCore15EventLoopFutureCyqd__GAA9HBRequestVctAA19HBResponseGeneratorRd__lF6OutputL_qd__mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","abstract":[{"type":"text","text":"The router directs requests to their handlers based on the contents of their path."}],"title":"Router","kind":"article","role":"collectionGroup","url":"\/documentation\/hummingbird\/router"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods":{"url":"\/documentation\/hummingbirdlambda\/hbroutermethods","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods","navigatorTitle":[{"text":"HBRouterMethods","kind":"identifier"}],"role":"symbol","title":"HBRouterMethods","abstract":[{"text":"Conform to ","type":"text"},{"code":"HBRouterMethods","type":"codeVoice"},{"text":" to add standard router verb (get, post …) methods","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBRouterMethods","kind":"identifier"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBRouterMethods/on(_:method:options:use:)-3uco":{"defaultImplementations":2,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBRouterMethods\/on(_:method:options:use:)-3uco","url":"\/documentation\/hummingbirdlambda\/hbroutermethods\/on(_:method:options:use:)-3uco","role":"symbol","required":true,"title":"on(_:method:options:use:)","type":"topic","abstract":[{"text":"Add path for async closure","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"on"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"method"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP110HTTPMethodO","text":"HTTPMethod"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird21HBRouterMethodOptionsV","text":"HBRouterMethodOptions"},{"kind":"text","text":", "},{"kind":"externalParam","text":"use"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird9HBRequestV","text":"HBRequest"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird15HBRouterMethodsP2on_6method7options3usexSS_8NIOHTTP110HTTPMethodOAA0B13MethodOptionsVqd__AA9HBRequestVYaKctAA19HBResponseGeneratorRd__lF6OutputL_qd__mfp","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]}}}