{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"parameters":[{"name":"name","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The header field name. For maximum compatibility this should be an"},{"type":"text","text":" "},{"type":"text","text":"ASCII string. For future-proofing with HTTP\/2 lowercase header names are strongly"},{"type":"text","text":" "},{"type":"text","text":"recommended."}]}]},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The header field value to add for the given name.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This method is strictly additive: if there are other values for the given header name"},{"type":"text","text":" "},{"type":"text","text":"already in the block, this will add a new entry."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/add(name:value:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","title":"add(name:value:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")","kind":"text"}],"role":"symbol","symbolKind":"method","modules":[{"name":"HummingbirdAuth"}],"externalID":"s:11Hummingbird16HTTPHeadersPatchV3add4name5valueySS_SStF"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda\/httpheaderspatch\/add(name:value:)"]}],"sections":[],"abstract":[{"text":"Add a header name\/value pair to the block.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch":{"type":"topic","abstract":[{"type":"text","text":"Used to Patch HTTPHeaders. Remembers if a header was added in with "},{"code":"add","type":"codeVoice"},{"type":"text","text":" or "},{"code":"replaceOrAdd","type":"codeVoice"}],"url":"\/documentation\/hummingbirdlambda\/httpheaderspatch","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPHeadersPatch"}],"title":"HTTPHeadersPatch","navigatorTitle":[{"kind":"identifier","text":"HTTPHeadersPatch"}],"kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch/add(name:value:)":{"title":"add(name:value:)","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/add(name:value:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"url":"\/documentation\/hummingbirdlambda\/httpheaderspatch\/add(name:value:)","role":"symbol","abstract":[{"text":"Add a header name\/value pair to the block.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","url":"\/documentation\/hummingbird","kind":"symbol","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection"}}}