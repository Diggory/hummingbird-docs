{"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/init(dictionaryLiteral:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/hummingbirdlambda\/httpheaderspatch\/init(dictionaryliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dictionaryLiteral"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":")...)","kind":"text"}],"roleHeading":"Initializer","symbolKind":"init","externalID":"s:11Hummingbird16HTTPHeadersPatchV17dictionaryLiteralACSS_SStd_tcfc","modules":[{"name":"Hummingbird"}],"role":"symbol","title":"init(dictionaryLiteral:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"dictionaryLiteral","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"elements","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")...)"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"parameters"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"elements: name, value pairs provided by a dictionary literal."}],"type":"paragraph"}]}]}]}]}],"kind":"content"}],"abstract":[{"text":"Construct a ","type":"text"},{"type":"codeVoice","code":"HTTPHeaders"},{"text":" structure.","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch/init(dictionaryLiteral:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dictionaryLiteral","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")...)","kind":"text"}],"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/httpheaderspatch\/init(dictionaryliteral:)","type":"topic","title":"init(dictionaryLiteral:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch\/init(dictionaryLiteral:)","abstract":[{"type":"text","text":"Construct a "},{"type":"codeVoice","code":"HTTPHeaders"},{"text":" structure.","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HTTPHeadersPatch":{"url":"\/documentation\/hummingbirdlambda\/httpheaderspatch","kind":"symbol","title":"HTTPHeadersPatch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPHeadersPatch","kind":"identifier"}],"navigatorTitle":[{"text":"HTTPHeadersPatch","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HTTPHeadersPatch","abstract":[{"type":"text","text":"Used to Patch HTTPHeaders. Remembers if a header was added in with "},{"code":"add","type":"codeVoice"},{"type":"text","text":" or "},{"code":"replaceOrAdd","type":"codeVoice"}],"role":"symbol"}}}