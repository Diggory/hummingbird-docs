{"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Usage","level":2,"anchor":"Usage","type":"heading"},{"inlineContent":[{"text":"Create struct conforming to ","type":"text"},{"type":"codeVoice","code":"HBLambda"},{"text":". Setup your application in the ","type":"text"},{"type":"codeVoice","code":"init"},{"text":" function: add your middleware, add route handlers etc","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct MyHandler: HBLambda {","    \/\/ define input and output","    typealias In = APIGateway.Request","    typealias Out = APIGateway.Response","    ","    init(_ app: HBApplication) {","        app.middleware.add(HBLogRequestsMiddleware(.debug))","        app.router.get(\"hello\") { _ in","            return \"Hello\"","        }","    }","}","","Lambda.run { context in","    return HBLambdaHandler<MyHandler>(context: context)","}"],"type":"codeListing"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"In","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" types define your input and output objects. If you are using an ","type":"text"},{"code":"APIGateway","type":"codeVoice"},{"text":" REST interface to invoke your Lambda then set these to ","type":"text"},{"code":"APIGateway.Request","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"APIGateway.Response","type":"codeVoice"},{"text":" respectively. If you are using an ","type":"text"},{"code":"APIGateway","type":"codeVoice"},{"text":" HTML interface then set these to ","type":"text"},{"code":"APIGateway.V2.Request","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"APIGateway.V2.Response","type":"codeVoice"},{"text":". If you are using any other ","type":"text"},{"code":"In","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" types you will need to implement the ","type":"text"},{"code":"request(context:application:from:)","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"output(from:)","type":"codeVoice"},{"text":" methods yourself.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda"]}],"metadata":{"symbolKind":"module","externalID":"HummingbirdLambda","modules":[{"name":"HummingbirdLambda"}],"role":"collection","roleHeading":"Framework","title":"HummingbirdLambda"},"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda"],"generated":true,"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler"],"generated":true,"title":"Structures"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"url":"\/documentation\/hummingbird","role":"collection","type":"topic","abstract":[{"text":"Lightweight, flexible server framework written in Swift.","type":"text"}],"title":"Hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","url":"\/documentation\/hummingbirdlambda","title":"HummingbirdLambda","abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hblambdahandler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambdaHandler"}],"navigatorTitle":[{"kind":"identifier","text":"HBLambdaHandler"}],"title":"HBLambdaHandler","abstract":[{"text":"Specialization of EventLoopLambdaHandler which runs an HBLambda","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","kind":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"role":"symbol","url":"\/documentation\/hummingbirdlambda\/hblambda","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambda"}],"navigatorTitle":[{"kind":"identifier","text":"HBLambda"}],"title":"HBLambda","abstract":[{"text":"Protocol for Hummingbird Lambdas. Define the ","type":"text"},{"type":"codeVoice","code":"In"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Out"},{"text":" types, how you convert from ","type":"text"},{"type":"codeVoice","code":"In"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"HBRequest"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"HBResponse"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"Out"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","kind":"symbol","type":"topic"}}}