{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"},"abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"kind":"symbol","metadata":{"externalID":"HummingbirdLambda","title":"HummingbirdLambda","symbolKind":"module","role":"collection","roleHeading":"Framework","modules":[{"name":"HummingbirdLambda"}]},"topicSections":[{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler"]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"primaryContentSections":[{"content":[{"anchor":"Usage","type":"heading","level":2,"text":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create struct conforming to "},{"type":"codeVoice","code":"HBLambda"},{"type":"text","text":". Setup your application in the "},{"type":"codeVoice","code":"init"},{"type":"text","text":" function: add your middleware, add route handlers etc"}]},{"code":["struct MyHandler: HBLambda {","    \/\/ define input and output","    typealias In = APIGateway.Request","    typealias Out = APIGateway.Response","    ","    init(_ app: HBApplication) {","        app.middleware.add(HBLogRequestsMiddleware(.debug))","        app.router.get(\"hello\") { _ in","            return \"Hello\"","        }","    }","}","","Lambda.run { context in","    return HBLambdaHandler<MyHandler>(context: context)","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"In"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Out"},{"text":" types define your input and output objects. If you are using an ","type":"text"},{"type":"codeVoice","code":"APIGateway"},{"text":" REST interface to invoke your Lambda then set these to ","type":"text"},{"type":"codeVoice","code":"APIGateway.Request"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"APIGateway.Response"},{"text":" respectively. If you are using an ","type":"text"},{"type":"codeVoice","code":"APIGateway"},{"text":" HTML interface then set these to ","type":"text"},{"type":"codeVoice","code":"APIGateway.V2.Request"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"APIGateway.V2.Response"},{"text":". If you are using any other ","type":"text"},{"type":"codeVoice","code":"In"},{"text":"\/","type":"text"},{"type":"codeVoice","code":"Out"},{"text":" types you will need to implement the ","type":"text"},{"type":"codeVoice","code":"request(context:application:from:)"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"output(from:)"},{"text":" methods yourself.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/hummingbirdlambda"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[[]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","abstract":[{"type":"text","text":"Specialization of EventLoopLambdaHandler which runs an HBLambda"}],"kind":"symbol","navigatorTitle":[{"text":"HBLambdaHandler","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"HBLambdaHandler","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/hblambdahandler","title":"HBLambdaHandler","type":"topic","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","title":"Hummingbird","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas. Define the "},{"code":"In","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Out","type":"codeVoice"},{"type":"text","text":" types, how you convert from "},{"code":"In","type":"codeVoice"},{"type":"text","text":" to "},{"code":"HBRequest","type":"codeVoice"},{"type":"text","text":" and "},{"code":"HBResponse","type":"codeVoice"},{"type":"text","text":" to "},{"code":"Out","type":"codeVoice"}],"role":"symbol","title":"HBLambda","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HBLambda","kind":"identifier"}],"navigatorTitle":[{"text":"HBLambda","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","url":"\/documentation\/hummingbirdlambda\/hblambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda"}],"role":"collection","title":"HummingbirdLambda","kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","url":"\/documentation\/hummingbirdlambda"}}}