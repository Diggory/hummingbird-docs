{"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"hierarchy":{"paths":[[]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbirdlambda"]}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"anchor":"Usage","type":"heading","level":2,"text":"Usage"},{"inlineContent":[{"type":"text","text":"Create struct conforming to "},{"type":"codeVoice","code":"HBLambda"},{"type":"text","text":". Setup your application in the "},{"type":"codeVoice","code":"init"},{"type":"text","text":" function: add your middleware, add route handlers etc"}],"type":"paragraph"},{"code":["struct MyHandler: HBLambda {","    \/\/ define input and output","    typealias In = APIGateway.Request","    typealias Out = APIGateway.Response","    ","    init(_ app: HBApplication) {","        app.middleware.add(HBLogRequestsMiddleware(.debug))","        app.router.get(\"hello\") { _ in","            return \"Hello\"","        }","    }","}","","Lambda.run { context in","    return HBLambdaHandler<MyHandler>(context: context)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"In"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Out"},{"text":" types define your input and output objects. If you are using an ","type":"text"},{"code":"APIGateway","type":"codeVoice"},{"text":" REST interface to invoke your Lambda then set these to ","type":"text"},{"code":"APIGateway.Request","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"APIGateway.Response","type":"codeVoice"},{"text":" respectively. If you are using an ","type":"text"},{"code":"APIGateway","type":"codeVoice"},{"text":" HTML interface then set these to ","type":"text"},{"code":"APIGateway.V2.Request","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"APIGateway.V2.Response","type":"codeVoice"},{"text":". If you are using any other ","type":"text"},{"code":"In","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"Out","type":"codeVoice"},{"text":" types you will need to implement the ","type":"text"},{"code":"request(context:application:from:)","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"output(from:)","type":"codeVoice"},{"text":" methods yourself.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","interfaceLanguage":"swift"},"metadata":{"externalID":"HummingbirdLambda","symbolKind":"module","modules":[{"name":"HummingbirdLambda"}],"role":"collection","roleHeading":"Framework","title":"HummingbirdLambda"},"topicSections":[{"title":"Protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda"]},{"title":"Structures","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler"]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","url":"\/documentation\/hummingbirdlambda\/hblambdahandler","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambdaHandler"}],"navigatorTitle":[{"text":"HBLambdaHandler","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Specialization of EventLoopLambdaHandler which runs an HBLambda"}],"title":"HBLambdaHandler","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"title":"Hummingbird","abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"type":"topic","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"role":"symbol","title":"HBLambda","navigatorTitle":[{"text":"HBLambda","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambda","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas. Define the "},{"code":"In","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Out"},{"text":" types, how you convert from ","type":"text"},{"type":"codeVoice","code":"In"},{"text":" to ","type":"text"},{"code":"HBRequest","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"HBResponse","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"Out","type":"codeVoice"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","url":"\/documentation\/hummingbirdlambda\/hblambda","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"role":"collection","title":"HummingbirdLambda","type":"topic","abstract":[{"type":"text","text":"Run Hummingbird inside an AWS Lambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","url":"\/documentation\/hummingbirdlambda","kind":"symbol"}}}