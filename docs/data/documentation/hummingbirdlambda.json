{"hierarchy":{"paths":[[]]},"abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"],"title":"Related Documentation"}],"primaryContentSections":[{"content":[{"anchor":"Usage","text":"Usage","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Create struct conforming to "},{"code":"HBLambda","type":"codeVoice"},{"text":". Setup your application in the ","type":"text"},{"code":"init","type":"codeVoice"},{"text":" function: add your middleware, add route handlers etc","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["struct MyHandler: HBLambda {","    \/\/ define input and output","    typealias In = APIGateway.Request","    typealias Out = APIGateway.Response","    ","    init(_ app: HBApplication) {","        app.middleware.add(HBLogRequestsMiddleware(.debug))","        app.router.get(\"hello\") { _ in","            return \"Hello\"","        }","    }","}","","Lambda.run { context in","    return HBLambdaHandler<MyHandler>(context: context)","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"In"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Out"},{"type":"text","text":" types define your input and output objects. If you are using an "},{"type":"codeVoice","code":"APIGateway"},{"type":"text","text":" REST interface to invoke your Lambda then set these to "},{"type":"codeVoice","code":"APIGateway.Request"},{"type":"text","text":" and "},{"type":"codeVoice","code":"APIGateway.Response"},{"type":"text","text":" respectively. If you are using an "},{"type":"codeVoice","code":"APIGateway"},{"type":"text","text":" HTML interface then set these to "},{"type":"codeVoice","code":"APIGateway.V2.Request"},{"type":"text","text":" and "},{"type":"codeVoice","code":"APIGateway.V2.Response"},{"type":"text","text":". If you are using any other "},{"type":"codeVoice","code":"In"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"Out"},{"type":"text","text":" types you will need to implement the "},{"type":"codeVoice","code":"request(context:application:from:)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"output(from:)"},{"type":"text","text":" methods yourself."}],"type":"paragraph"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda"],"title":"Protocols"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler"],"title":"Structures"}],"metadata":{"role":"collection","roleHeading":"Framework","externalID":"HummingbirdLambda","symbolKind":"module","title":"HummingbirdLambda","modules":[{"name":"HummingbirdLambda"}]},"variants":[{"paths":["\/documentation\/hummingbirdlambda"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"abstract":[{"text":"Run Hummingbird inside an AWS Lambda","type":"text"}],"kind":"symbol","type":"topic","title":"HummingbirdLambda","role":"collection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","url":"\/documentation\/hummingbirdlambda"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambda":{"url":"\/documentation\/hummingbirdlambda\/hblambda","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambda","navigatorTitle":[{"kind":"identifier","text":"HBLambda"}],"abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas. Define the "},{"type":"codeVoice","code":"In"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Out"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"In"},{"type":"text","text":" to "},{"type":"codeVoice","code":"HBRequest"},{"type":"text","text":" and "},{"type":"codeVoice","code":"HBResponse"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Out"}],"kind":"symbol","type":"topic","title":"HBLambda","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HBLambda"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/HBLambdaHandler":{"title":"HBLambdaHandler","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HBLambdaHandler","kind":"identifier"}],"navigatorTitle":[{"text":"HBLambdaHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"Specialization of EventLoopLambdaHandler which runs an HBLambda"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/HBLambdaHandler","url":"\/documentation\/hummingbirdlambda\/hblambdahandler","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"type":"text","text":"Lightweight, flexible server framework written in Swift."}],"title":"Hummingbird","role":"collection","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","kind":"symbol","url":"\/documentation\/hummingbird"}}}